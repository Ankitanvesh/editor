{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/language/html/workerManager.js","webpack:///./node_modules/monaco-editor/esm/vs/language/html/languageFeatures.js","webpack:///./node_modules/monaco-editor/esm/vs/language/html/htmlMode.js","webpack:///./node_modules/monaco-editor/esm/vs/language/css/workerManager.js","webpack:///./node_modules/monaco-editor/esm/vs/language/css/languageFeatures.js","webpack:///./node_modules/monaco-editor/esm/vs/language/css/cssMode.js","webpack:///./node_modules/monaco-editor/esm/vs/language/typescript/tokenization.js","webpack:///./node_modules/monaco-editor/esm/vs/language/typescript/workerManager.js","webpack:///./node_modules/monaco-editor/esm/vs/language/typescript/languageFeatures.js","webpack:///./node_modules/monaco-editor/esm/vs/language/typescript/tsMode.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/yaml/yaml.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/solidity/solidity.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/scss/scss.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/rust/rust.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/redis/redis.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/razor/razor.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/r/r.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/python/python.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/php/php.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/pgsql/pgsql.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/objective-c/objective-c.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/markdown/markdown.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/less/less.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/java/java.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/handlebars/handlebars.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/go/go.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/fsharp/fsharp.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/coffee/coffee.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/bat/bat.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/format.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/parser.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/css/css.js"],"names":["Promise","monaco","WorkerManager","defaults","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","createData","languageSettings","options","languageId","label","getProxy","getLanguageServiceWorker","p","completeCallback","errorCallback","r","resources","_i","arguments","length","then","client","_","withSyncedResources","c","e","Range","Uri","DiagnostcsAdapter","_languageId","_disposables","_listener","Object","create","onModelAdd","model","handle","modeId","getModeId","uri","toString","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","key","getModels","forEach","d","resource","worker","doValidation","diagnostics","markers","map","code","diag","String","severity","lsSeverity","main","Error","MarkerSeverity","Warning","Information","Info","Hint","toSeverity","startLineNumber","range","start","line","startColumn","character","endLineNumber","end","endColumn","message","source","getModel","undefined","err","console","error","fromPosition","position","column","lineNumber","fromRange","getStartPosition","getEndPosition","toRange","toCompletionItemKind","kind","mItemKind","languages","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","toTextEdit","textEdit","text","newText","languageFeatures_CompletionAdapter","CompletionAdapter","defineProperty","get","enumerable","configurable","provideCompletionItems","token","getWordUntilPosition","wireCancellationToken","doComplete","info","items","entry","item","insertText","sortText","filterText","documentation","detail","insertTextFormat","value","isIncomplete","DocumentHighlightAdapter","provideDocumentHighlights","findDocumentHighlights","mKind","DocumentHighlightKind","Read","Write","toHighlighKind","DocumentLinkAdapter","provideLinks","findDocumentLinks","url","target","fromFormattingOptions","tabSize","insertSpaces","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","edits","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","promise","cancel","onCancellationRequested","setupMode","disposables","uris","apply","registerCompletionItemProvider","registerDocumentHighlightProvider","registerLinkProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","__webpack_require__","__webpack_exports__","diagnosticsOptions","done","toMarkdownString","thing","replace","language","HoverAdapter","provideHover","doHover","contents","Array","isArray","toMarkedStringArray","entries","toDocumentHighlightKind","toLocation","location","parse","DefinitionAdapter","provideDefinition","findDefinition","definition","ReferenceAdapter","provideReferences","context","findReferences","RenameAdapter","provideRenameEdits","newName","doRename","edit","changes","resourceEdits","_a","toWorkspaceEdit","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","name","containerName","SymbolKind","Namespace","Package","Constant","Number","Boolean","toSymbolKind","first","more","concat","registerHoverProvider","registerDefinitionProvider","registerReferenceProvider","registerDocumentSymbolProvider","registerRenameProvider","Language","createTokenizationSupport","classifier","typescriptServices","bracketTypeTable","TypeScript","tsBracketTypeTable","jsBracketTypeTable","tokenTypeTable","tsTokenTypeTable","jsTokenTypeTable","getInitialState","State","None","tokenize","state","ret","tokens","endState","appendFn","startIndex","type","scopes","isTypeScript","deltaOffset","indexOf","checkSheBang","result","getClassificationsForLine","eolState","offset","finalLexState","inJsDocComment","InMultiLineCommentTrivia","test","classification","Punctuation","ch","charCodeAt","Comment","substr","clone","equals","other","Identifier","Operator","NumberLiteral","RegExpLiteral","StringLiteral","_modeId","maxIdleTime","getWorkerMaxIdleTime","timePassedSinceLastUsed","compilerOptions","getCompilerOptions","extraLibs","getExtraLibs","getEagerModelSync","filter","extendStatics","__extends","setPrototypeOf","__proto__","b","hasOwnProperty","__","constructor","languageFeatures_Promise","Adapter","_positionToOffset","getOffsetAt","_offsetToPosition","getPositionAt","_textSpanToRange","span","p1","p2","languageFeatures_DiagnostcsAdapter","_super","_selector","call","changeSubscription","promises","getDiagnosticsOptions","noSyntaxValidation","noSemanticValidation","getSyntacticDiagnostics","getSemanticDiagnostics","join","reduce","_convertDiagnostics","_b","messageText","languageFeatures_SuggestAdapter","SuggestAdapter","getCompletionsAtPosition","convertKind","resolveCompletionItem","myItem","getCompletionEntryDetails","details","displayParts","Kind","primitiveType","keyword","variable","localVariable","memberVariable","memberGetAccessor","memberSetAccessor","function","memberFunction","constructSignature","callSignature","indexSignature","enum","module","class","interface","warning","languageFeatures_SignatureHelpAdapter","SignatureHelpAdapter","signatureHelpTriggerCharacters","provideSignatureHelp","getSignatureHelpItems","activeSignature","selectedItemIndex","activeParameter","argumentIndex","signatures","signature","parameters","prefixDisplayParts","i","a","parameter","separatorDisplayParts","suffixDisplayParts","languageFeatures_QuickInfoAdapter","QuickInfoAdapter","getQuickInfoAtPosition","tags","tag","match","textSpan","OccurrencesAdapter","getOccurrencesAtPosition","isWriteAccess","getDefinitionAtPosition","entries_1","fileName","getReferencesAtPosition","entries_2","OutlineAdapter","getNavigationBarItems","convert","bucket","containerLabel","outlineTypeTable","spans","childItems","child","unknown","script","localFunction","constructorImplementation","typeParameter","alias","const","let","javaScriptWorker","typeScriptWorker","languageFeatures_FormatHelper","FormatHelper","_convertOptions","ConvertTabsToSpaces","TabSize","IndentSize","IndentStyle","Smart","NewLineCharacter","InsertSpaceAfterCommaDelimiter","InsertSpaceAfterSemicolonInForStatements","InsertSpaceBeforeAndAfterBinaryOperators","InsertSpaceAfterKeywordsInControlFlowStatements","InsertSpaceAfterFunctionKeywordForAnonymousFunctions","InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis","InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets","InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces","PlaceOpenBraceOnNewLineForControlBlocks","PlaceOpenBraceOnNewLineForFunctions","_convertTextChanges","change","FormatAdapter","getFormattingEditsForRange","FormatOnTypeAdapter","provideOnTypeFormattingEdits","getFormattingEditsAfterKeystroke","setupTypeScript","setupJavaScript","EcmaScript5","getJavaScriptWorker","resolve","reject","getTypeScriptWorker","registerSignatureHelpProvider","registerOnTypeFormattingEditProvider","setLanguageConfiguration","richEditConfiguration","setTokensProvider","wordPattern","comments","lineComment","blockComment","brackets","onEnterRules","beforeText","afterText","action","indentAction","IndentAction","IndentOutdent","appendText","removeText","autoClosingPairs","open","close","notIn","folding","RegExp","conf","surroundingPairs","offSide","tokenPostfix","keywords","numberInteger","numberFloat","numberOctal","numberHex","numberInfinity","numberNaN","numberDate","escapes","tokenizer","root","include","cases","@keywords","@default","object","array","string","$#==$S2","next","multiString","multiStringContinued","$1==$S2","whitespace","comment","flowCollections","flowScalars","blockStyle","flowNumber","tagHandle","anchor","defaultToken","ignoreCase","qualifiedName","cdata","identifier","attributes","accessmodifiers","symbols","operatorstart","operatorend","operators","symbol","commentdocbody","commentbody","attribute","@attributes","literal","stringlit","interpolatedexpression","[A-Z][a-zA-Z0-9$]*","escapedkeyword","invokedmethod","$2","integersuffix","floatsuffix","@operators","doccomment","ws","selector","selectorbody","selectorname","selectorattribute","term","rulevalue","switchTo","nestedproperty","warndebug","import","variabledeclaration","urldeclaration","parenthizedterm","declarationbody","extendbody","variablereference","variableinterpolation","numbers","units","functiondeclaration","mixindeclaration","parameterdeclaration","includedeclaration","keyframedeclaration","keyframebody","controlstatement","controlstatementdeclaration","functionbody","functioninvocation","functionarguments","strings","stringenddoublequote","stringendquote","typeKeywords","constants","supportConstants","supportMacros","delimiters","intSuffixes","floatSuffixes","@typeKeywords","@supportConstants","@supportMacros","@constants","bracket","builtinFunctions","builtinVariables","pseudoColumns","@builtinVariables","@builtinFunctions","@pseudoColumns","stringDouble","_monaco","self","EMPTY_ELEMENTS","Indent","doctype","otherTag","nextEmbedded","scriptAfterType","scriptAfterTypeEquals","scriptWithCustomType","scriptEmbedded","style","styleAfterType","styleAfterTypeEquals","styleWithCustomType","styleEmbedded","razorInSimpleState","razorInEmbeddedState","razorBlockCommentTopLevel","razorBlockComment","razorRootTopLevel","razorRoot","razorCommon","@razorKeywords","razorKeywords","roxygen","special","@roxygen","@eos","stringBody","@special","dblStringBody","endDocString","endDblDocString","helpKeywords","$S2==\"","herestring","phpInSimpleState","phpInEmbeddedState","phpRoot","@phpKeywords","@phpCompileTimeConstants","@phpPreDefinedVariables","phpComment","phpLineComment","phpDoubleQuoteString","phpSingleQuoteString","phpKeywords","phpCompileTimeConstants","phpPreDefinedVariables","complexIdentifiers","quotedIdentifier","decpart","decimal","(\\d)*","$0","ATTRIB_NAME","control","noncontrol","jsescapes","empty","codeblock","codeblockgh","linecontent","html","@empty","$S2==style","$S2==script","$S3","embeddedStyle","embeddedScript","identifierPlus","nestedJSBegin","nestedJSEnd","stringsEndDoubleQuote","stringsEndQuote","atRules","digits","octaldigits","binarydigits","hexdigits","javadoc","handlebarsInSimpleState","handlebarsInEmbeddedState","handlebarsRoot","rawstring","litstring","regEx","$S2==interpolatedstring","hereregexp","Position","Location","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","is","candidate","Is","defined","number","one","two","three","four","title","command","args","insert","del","textDocument","VersionedTextDocumentIdentifier","TextDocumentIdentifier","TextDocumentItem","MarkupKind","InsertTextFormat","CompletionItem","CompletionList","MarkedString","ParameterInformation","SignatureInformation","DocumentHighlight","SymbolInformation","CodeActionContext","CodeLens","FormattingOptions","TextEditChangeImpl","delete","add","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","_workspaceEdit","documentChanges","textDocumentEdit","textEditChange","keys","getTextEditChange","version","PlainText","Markdown","Folder","EnumMember","Struct","Event","TypeParameter","fromPlainText","plainText","Key","Null","typedArray","data","boolean","DocumentLink","TextDocument","TextDocumentSaveReason","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","left","slice","right","leftIdx","rightIdx","lastModifiedOffset","startOffset","endOffset","substring","Manual","AfterDelay","FocusOut","_uri","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","charAt","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","check","every","createScanner","ignoreTrivia","pos","len","tokenOffset","scanError","scanHexDigits","count","exact","scanNext","isWhiteSpace","fromCharCode","isLineBreak","ch_1","scanString","commentClosed","isDigit","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","documentText","initialIndentLevel","formatText","formatTextStart","rangeStart","rangeEnd","isEOL","nChars","computeIndentLevel","indentValue","eol","getEOL","lineBreak","indentLevel","repeat","scanner","hasError","newLineAndIndent","editOperations","addEdit","firstToken","firstTokenStart","firstTokenEnd","secondToken","replaceContent","s","visit","visitor","_scanner","toNoArgVisit","visitFunction","toOneArgVisit","arg","onObjectBegin","onObjectProperty","onObjectEnd","onArrayBegin","onArrayEnd","onLiteralValue","onSeparator","onComment","onError","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","parseString","isValue","parseValue","needsComma","parseArray","parseObject","JSON","parseLiteral","main_createScanner","main_parse","errors","currentProperty","currentParent","previousParents","onValue","pop","main_format"],"mappings":"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A2C3d,MAAA,cAC3CmW,WAAA,oBAIA,gCAEA,eAEA,yBACA,0CAEA,0BACA,0BAEA,iEACA,+DACA,iEAEA,yCAA6C,iBAE7C,6CACA,+CACA,kDACA,oCACA,yCACA,yBACA,oBAGAyH,eACA,8CACA,2BACA,iCACA,uCACA,sCACA,mCACA,iCACA,+BACA,+BACA,kCACA,mCACA,kCACA,sCACA,wCACA,mCACA,kCACA,wCACA,+BACA,8BACA,sCACA,yCACA,wBACA,kBAEA/H,QAAA,qJC9QA3S,EAAAhI,EAAAiI,EAAA,6BAAAM,IAKA,IAAAwR,GACAnB,UACAC,YAAA,KAEAE,WACA,IAAW,MACX,UACA,UAEAU,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETK,mBACSN,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,OAGTpR,GACA2T,aAAA,GACAhC,aAAA,KACAyI,SACA,SACA,UACA,QACA,UACA,YACA,WACA,WACA,YACA,QACA,WACA,SACA,YACA,UACA,kBACA,aACA,uBACA,WACA,eACA,gBACA,iBACA,UACA,WACA,UACA,qBACA,cACA,qBACA,UACA,YACA,UACA,QACA,QACA,cACA,WACA,YACA,QACA,UACA,SACA,UAEA3C,WACA,OACA,QACA,OACA,KACA,MACA,OACA,cACA,WACA,cACA,iBACA,IACA,IACA,UACA,UACA,YACA,aACA,KACA,oBAEA7F,UACA,QACA,OACA,SACA,KACA,OACA,MACA,KACA,SACA,QACA,QACA,WACA,YACA,UACA,SACA,WACA,UACA,OACA,UACA,SACA,UACA,SACA,aACA,SACA,UACA,UACA,SACA,SACA,UAEAyI,SACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QAEA7J,WACSW,KAAA,IAASC,MAAA,IAAY7U,MAAA,oBACrB4U,KAAA,IAAAC,MAAA,IAAA7U,MAAA,sBACA4U,KAAA,IAAAC,MAAA,IAAA7U,MAAA,0BAET8V,WACAC,OACaC,QAAA,aACAA,QAAA,aACb,aAAiB,cACJA,QAAA,eACb,gCACA,sBACA,gBACA,QAAkB,cAClB,uBACA,eACAC,OACAC,YAAA,UACAyF,aAAA,WACAxF,WAAA,iBAKA0H,UACA,QACA5H,OACA8H,WAAA,MACAC,QAAiChe,MAAA,cAAAwW,KAAA,QACjCL,WAAA,kBAGA,OACAF,OACA+H,QAAiChe,MAAA,cAAAwW,KAAA,QACjCL,WAAA,kBAGA,MAAoBnW,MAAA,cAAAwW,KAAA,UAGpByD,UACA,mCACA,2CAGAnC,YACA,UAAoB,aACpB,UAAqB,aACrB,yBACA,oBACA,kBACA,kBACA,oBACA,kBACA,kBACA,gCAGAgD,UACA,oCACA,uCAEAmD,aACA,OACAhI,OACAiI,WAAA,SACA/H,WAAA,kBAGA,gCACA,eAEAgI,gBACA,OACAlI,OACAiI,WAAA,SACA/H,WAAA,kBAGA,gCACA,6FCtNAjT,EAAAhI,EAAAiI,EAAA,6BAAAM,IAKA,IAAAwR,GACAnB,UACAC,YAAA,IACAC,cAAA,cAEAC,WACA,IAAW,MACX,UACA,UAEAU,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,IAAAC,OAAA,YACAF,KAAA,IAAAC,MAAA,IAAAC,OAAA,sBAETI,mBACSN,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETE,SACAI,SAAA,EACA5Z,SACAiB,MAAA,IAAAwY,OAAA,mBACAnY,IAAA,IAAAmY,OAAA,yBAIAvR,GACA2T,aAAA,GACAhC,aAAA,UACAC,UACA,MACA,KACA,SACA,QACA,QACA,WACA,MACA,MACA,OACA,OACA,SACA,OACA,UACA,MACA,OACA,SACA,KACA,SACA,KACA,KACA,SACA,OACA,MACA,KACA,OACA,QACA,QACA,SACA,OACA,MACA,QACA,OACA,QACA,MACA,QACA,OACA,UACA,MACA,MACA,MACA,MACA,QACA,aACA,MACA,OACA,SACA,YACA,WACA,MACA,cACA,MACA,SACA,UACA,UACA,UACA,OACA,MACA,SACA,YACA,OACA,WACA,OACA,SACA,SACA,YACA,UACA,UACA,UACA,OACA,OACA,KACA,QACA,SACA,aACA,aACA,OACA,MACA,SACA,OACA,MACA,MACA,aACA,MACA,OACA,SACA,MACA,OACA,MACA,MACA,QACA,WACA,WACA,QACA,YACA,SACA,SACA,OACA,WACA,QACA,MACA,UACA,QACA,SACA,eACA,MACA,MACA,QACA,QACA,OACA,SACA,UACA,OACA,SACA,MACA,OACA,QACA,WACA,cACA,cACA,YACA,YACA,WACA,UACA,iBACA,WACA,cAEApB,WACSW,KAAA,IAASC,MAAA,IAAY7U,MAAA,oBACrB4U,KAAA,IAAAC,MAAA,IAAA7U,MAAA,sBACA4U,KAAA,IAAAC,MAAA,IAAA7U,MAAA,0BAET8V,WACAC,OACaC,QAAA,gBACAA,QAAA,aACAA,QAAA,aACb,QAAkB,cAClB,aAAiB,cACjB,uBACA,eACAC,OACAC,YAAA,UACAC,WAAA,iBAKAS,aACA,gBACA,sBACA,mCACA,oCACA,uCAEAwH,eACA,iBACA,6BACA,iBAEAC,kBACA,iBACA,6BACA,iBAGApE,UACA,kDACA,qDAGAa,UACA,iCACA,oCACA,iCACA,uCAEAmD,aACA,iBACA,gCACA,sBACA,mBACA,2BAEAE,gBACA,iBACA,gCACA,sBACA,mBACA,yGCtOAjb,EAAAhI,EAAAiI,EAAA,6BAAAM,IAKA,IAAAwR,GAEApB,YAAA,oFACAC,UACAC,YAAA,IACAC,cAAA,YAEAC,WACA,IAAW,MACX,UACA,UAEAU,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,IAAAC,OAAA,YACAF,KAAA,IAAAC,MAAA,IAAAC,OAAA,sBAETI,mBACSN,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,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oD9e,MAAA,2BACpDmW,WAAA,mBAIA,OAAiB,0BACjB,iCACA,qCAEA,eAEA,sCACA,yCAEA,qCAEA,2CACA,2CAEA,2CAA6C,kBAE7C,8CACA,gDACA,mDACA,qCACA,0CACA,0BACA,oBAEA4I,aACA,8BACA,wBACA,oBAEAC,iBACA,OAAqBhf,MAAA,WAAAwW,KAAA,UACrB,4BACA,gCACA,wBACA,oBAEAyI,uBACA,yBACA,iCACA,oCACA,0BAEAC,uBACA,yBACA,iCACA,oCACA,2BAGAC,aACA,sCACA,sDACA,4CACA,mDACA,yDACA,2CACA,uDACA,gEACA,kEACA,uCACA,mCACA,kDACA,gDACA,eAEAC,yBACA,YACA,UACA,WACA,WACA,gBACA,aACA,eACA,aAEAC,wBACA,WACA,WACA,QACA,SACA,UACA,YACA,YACA,QACA,WACA,gBACA,sBACA,wBACA,QACA,SAEAxJ,QAAA,qJCpRA3S,EAAAhI,EAAAiI,EAAA,6BAAAM,IAKA,IAAAwR,GACAnB,UACAC,YAAA,KACAC,cAAA,YAEAC,WACA,IAAW,MACX,UACA,UAEAU,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETK,mBACSN,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,OAGTpR,GACA2T,aAAA,GACAhC,aAAA,OACAiC,YAAA,EACApD,WACSW,KAAA,IAAAC,MAAA,IAAA7U,MAAA,qBACA4U,KAAA,IAAAC,MAAA,IAAA7U,MAAA,0BAETqV,UACA,kHACA,qHACA,qHACA,mHACA,oHACA,wGACA,sHACA,gHACA,+GACA,gHACA,kHACA,mHACA,oHACA,+GACA,oHACA,2GACA,kHACA,iHACA,qHACA,wHACA,gHACA,qHACA,sHACA,gHACA,oHACA,8GACA,+GACA,8GACA,gHACA,yGACA,kHACA,6GACA,8GACA,kHACA,iHACA,kHACA,gHACA,wGACA,oHACA,iHACA,6GACA,oHACA,qGACA,8GACA,oHACA,iHACA,iHACA,sHACA,qHACA,gHACA,oHACA,qHACA,gHACA,kHACA,+GACA,yGACA,+GACA,iHACA,uHACA,iHACA,8GACA,oHACA,wHACA,oHACA,qHACA,oHACA,mHACA,+GACA,kHACA,6GACA,sHACA,uEAEAyC,WACA,8GAEA+D,kBACA,kHACA,6HACA,2HACA,2HACA,yHACA,yHACA,gIACA,iIACA,iIACA,mIACA,yHACA,uIACA,sIACA,iIACA,qIACA,4HACA,yHACA,8HACA,+HACA,sIACA,+IACA,mIACA,+HACA,oJACA,sIACA,qIACA,mJACA,iJACA,oJACA,sIACA,iJACA,oJACA,kJACA,kJACA,kKACA,wJACA,qJACA,0IACA,6IACA,2IACA,uIACA,oJACA,8IACA,+IACA,wIACA,mIACA,6IACA,0IACA,oJACA,oJACA,4IACA,+JACA,kJACA,0JACA,gFAEAC,oBACAC,iBACAjG,WACAC,OACaC,QAAA,cACAA,QAAA,gBACAA,QAAA,mBACAA,QAAA,aACAA,QAAA,aACAA,QAAA,wBACAA,QAAA,YACb,QAAgB,cAChB,qBACA,YACAC,OACAC,YAAA,UACA2C,aAAA,WACAmD,oBAAA,aACAC,oBAAA,aACA9F,WAAA,iBAGA,gCAEAS,aACA,gBAEA9C,WACA,oBACA,QAAsB9T,MAAA,gBAAAwW,KAAA,cAEtBK,UACA,qBAIA,QAAsB7W,MAAA,gBAAAwW,KAAA,UACtB,gBAEAuF,gBACA,wBACA9F,OACAiG,iBAAA,aACA/F,WAAA,iBAIA8D,UACA,+BACA,iCACA,qDAEAa,UACA,KAAmB9a,MAAA,SAAAwW,KAAA,aAEnBF,SACA,mBACA,gBACA,KAAmBtW,MAAA,SAAAwW,KAAA,UAEnB8I,qBACA,KAAmBtf,MAAA,mBAAAwW,KAAA,uBAEnB+I,mBACA,uBACA,oBACA,KAAmBvf,MAAA,mBAAAwW,KAAA,UAEnBvO,wFChPA/E,EAAAhI,EAAAiI,EAAA,6BAAAM,IAKA,IAAAwR,GACAnB,UACAC,YAAA,KACAC,cAAA,YAEAC,WACA,IAAW,MACX,UACA,UAEAU,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETK,mBACSN,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,OAGTpR,GACA2T,aAAA,GACAhC,aAAA,eACAC,UACA,UACA,WACA,UACA,QACA,SACA,MACA,SACA,UACA,SACA,SACA,SACA,QACA,WACA,UACA,OACA,kBACA,aACA,WACA,WACA,aACA,YACA,YACA,UACA,YACA,cACA,aACA,SACA,OACA,OACA,QACA,SACA,QACA,OACA,OACA,QACA,QACA,OACA,WACA,UACA,KACA,SACA,OACA,OACA,SACA,QACA,QACA,QACA,MACA,OACA,KACA,KACA,MACA,KACA,QACA,MACA,OACA,MACA,YACA,OACA,SACA,MACA,UACA,SACA,YACA,YACA,WACA,WACA,SACA,MACA,OACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,UACA,OACA,OACA,QACA,WACA,WACA,OACA,SAEAmK,QAAA,YACAC,QAAA,aACA3J,WACAC,OACaC,QAAA,cACAA,QAAA,gBACAA,QAAA,aACAA,QAAA,aACb,QAAkB,cAClB,eAAiB,cACjB,iBACAC,OACAC,YAAA,UACAC,WAAA,iBAGA,gEAEAS,aACA,gBAEA9C,WACA,gCACA,wBAEA+C,UACA,4BACA,gBAEAoD,UACA,mDACA,qDACAhE,OACAyJ,SAAA,SACAC,GAAA,mBAKA7E,UACA,iCACA,oCACA,iCACA,uCAEAmD,aACA,iBACA,gCACA,sBACA,mBACA,2BAEAE,gBACA,iBACA,gCACA,sBACA,mBACA,yGCjLAjb,EAAAhI,EAAAiI,EAAA,6BAAAM,IAKA,IASAmc,EAAA,sBAKA,IAAA3K,GACAnB,UACAE,cAAA,qBAEAC,WACA,IAAW,MACX,UACA,UAEAU,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A,OACA,MACA,OACA,OACA,QACA,QACA,SACA,SACA,SACA,OACA,QACA,QACA,QACA,UACA,UACA,YACA,aACA,OACA,OACA,OACA,MACA,UACA,SACA,OAEAyC,WACA,+CACA,0DACA,wEACA,mBAA6B,IAAK,QAAU,SAG5CH,QAAA,wBACA9B,QAAA,wEAEAC,WACAC,OAEA,gBACAE,OACAC,aAAsClW,MAAA,cACtCmW,WAAA,iBAIaH,QAAA,gBAEb,4BAEA,uBAEA,aAAiB,cACjB,iCACA,YACAC,OACA4C,aAAA,YACA1C,WAAA,OAIA,0CACA,4CACA,+CACA,iCACA,sCACA,sBACA,gBAEA,QAAgB,cAEhB,qCACA,yBACA,4BAEA,sBACA,yDACA,uBAEAS,aACA,kBACA,6CACA,8BACA,sBAEAC,UACA,sBAGA,0BACA,oBAGAiC,aACA,0BAEA,+BACA,8BACA,wBAEAxC,SACA,qBACA,6BACA,gCACA,sBAEAmL,YACA,mBACA,oGCtKAve,EAAAhI,EAAAiI,EAAA,6BAAAM,IAKA,IAAAwR,GACAnB,UACAC,YAAA,KACAC,cAAA,YAEAC,WACA,IAAW,MACX,UACA,UAEAU,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETK,mBACSN,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETE,SACAxZ,SACAiB,MAAA,IAAAwY,OAAA,0DACAnY,IAAA,IAAAmY,OAAA,mEAIAvR,GACA2T,aAAA,GACAhC,aAAA,MACAC,UACA,+BACA,8BACA,8BACA,mCACA,6BACA,kCACA,6BACA,uCACA,iCACA,mCACA,uCACA,uCACA,sCACA,0CACA,yCACA,iCACA,0CACA,2CACA,wCACA,+BACA,4BACA,kCACA,+BAGAsC,QAAA,4BACA9B,QAAA,wEACA8C,cAAA,iBACAC,YAAA,UAEA9C,WACAC,OAEA,gBACAE,OACAC,aAAsClW,MAAA,cACtCm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","file":"0.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `HTMLWorker` instance\n                moduleId: 'vs/language/html/htmlWorker',\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.options,\n                    languageId: this._defaults.languageId\n                },\n                label: this._defaults.languageId\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnostcsAdapter = /** @class */ (function () {\n    function DiagnostcsAdapter(_languageId, _worker) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        this._disposables.push({\n            dispose: function () {\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnostcsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnostcsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                monaco.editor.setModelMarkers(monaco.editor.getModel(resource), languageId, markers);\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnostcsAdapter;\n}());\nexport { DiagnostcsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: fromPosition(range.getStartPosition()), end: fromPosition(range.getEndPosition()) };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nfunction toCompletionItem(entry) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: entry.documentation,\n        detail: entry.detail,\n        kind: toCompletionItemKind(entry.kind),\n        textEdit: toTextEdit(entry.textEdit),\n        data: entry.data\n    };\n}\nfunction fromMarkdownString(entry) {\n    return {\n        kind: (typeof entry === 'string' ? ls.MarkupKind.PlainText : ls.MarkupKind.Markdown),\n        value: (typeof entry === 'string' ? entry : entry.value)\n    };\n}\nfunction fromCompletionItem(entry) {\n    var item = {\n        label: entry.label,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: fromMarkdownString(entry.documentation),\n        detail: entry.detail,\n        kind: fromCompletionItemKind(entry.kind),\n        data: entry.data\n    };\n    if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n        item.insertText = entry.insertText.value;\n        item.insertTextFormat = ls.InsertTextFormat.Snippet;\n    }\n    else {\n        item.insertText = entry.insertText;\n    }\n    if (entry.range) {\n        item.textEdit = ls.TextEdit.replace(fromRange(entry.range), item.insertText);\n    }\n    return item;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return ['.', ':', '<', '\"', '=', '/'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nfunction toHighlighKind(kind) {\n    var mKind = monaco.languages.DocumentHighlightKind;\n    switch (kind) {\n        case ls.DocumentHighlightKind.Read: return mKind.Read;\n        case ls.DocumentHighlightKind.Write: return mKind.Write;\n        case ls.DocumentHighlightKind.Text: return mKind.Text;\n    }\n    return mKind.Text;\n}\nvar DocumentHighlightAdapter = /** @class */ (function () {\n    function DocumentHighlightAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentHighlights(resource.toString(), fromPosition(position)); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                kind: toHighlighKind(item.kind)\n            }); });\n        }));\n    };\n    return DocumentHighlightAdapter;\n}());\nexport { DocumentHighlightAdapter };\nvar DocumentLinkAdapter = /** @class */ (function () {\n    function DocumentLinkAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentLinkAdapter.prototype.provideLinks = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentLinks(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                url: item.target\n            }); });\n        }));\n    };\n    return DocumentLinkAdapter;\n}());\nexport { DocumentLinkAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    if (promise.cancel) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n    }\n    return promise;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nexport function setupMode(defaults) {\n    var disposables = [];\n    var client = new WorkerManager(defaults);\n    disposables.push(client);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    // all modes\n    disposables.push(monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker)));\n    disposables.push(monaco.languages.registerLinkProvider(languageId, new languageFeatures.DocumentLinkAdapter(worker)));\n    // only html\n    if (languageId === 'html') {\n        disposables.push(monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker)));\n        disposables.push(monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker)));\n        disposables.push(new languageFeatures.DiagnostcsAdapter(languageId, worker));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `CSSWorker` instance\n                moduleId: 'vs/language/css/cssWorker',\n                label: this._defaults.languageId,\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.diagnosticsOptions,\n                    languageId: this._defaults.languageId\n                }\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnostcsAdapter = /** @class */ (function () {\n    function DiagnostcsAdapter(_languageId, _worker) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(onModelRemoved));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        this._disposables.push({\n            dispose: function () {\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnostcsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnostcsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString());\n        }).then(function (diagnostics) {\n            var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n            var model = monaco.editor.getModel(resource);\n            if (model.getModeId() === languageId) {\n                monaco.editor.setModelMarkers(model, languageId, markers);\n            }\n        }).done(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnostcsAdapter;\n}());\nexport { DiagnostcsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: fromPosition(range.getStartPosition()), end: fromPosition(range.getEndPosition()) };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return [' ', ':'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- hover ------\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        }));\n    };\n    return HoverAdapter;\n}());\nexport { HoverAdapter };\n// --- document highlights ------\nfunction toDocumentHighlightKind(kind) {\n    switch (kind) {\n        case ls.DocumentHighlightKind.Read: return monaco.languages.DocumentHighlightKind.Read;\n        case ls.DocumentHighlightKind.Write: return monaco.languages.DocumentHighlightKind.Write;\n        case ls.DocumentHighlightKind.Text: return monaco.languages.DocumentHighlightKind.Text;\n    }\n    return monaco.languages.DocumentHighlightKind.Text;\n}\nvar DocumentHighlightAdapter = /** @class */ (function () {\n    function DocumentHighlightAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.findDocumentHighlights(resource.toString(), fromPosition(position));\n        }).then(function (entries) {\n            if (!entries) {\n                return;\n            }\n            return entries.map(function (entry) {\n                return {\n                    range: toRange(entry.range),\n                    kind: toDocumentHighlightKind(entry.kind)\n                };\n            });\n        }));\n    };\n    return DocumentHighlightAdapter;\n}());\nexport { DocumentHighlightAdapter };\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\nvar DefinitionAdapter = /** @class */ (function () {\n    function DefinitionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DefinitionAdapter.prototype.provideDefinition = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.findDefinition(resource.toString(), fromPosition(position));\n        }).then(function (definition) {\n            if (!definition) {\n                return;\n            }\n            return [toLocation(definition)];\n        }));\n    };\n    return DefinitionAdapter;\n}());\nexport { DefinitionAdapter };\n// --- references ------\nvar ReferenceAdapter = /** @class */ (function () {\n    function ReferenceAdapter(_worker) {\n        this._worker = _worker;\n    }\n    ReferenceAdapter.prototype.provideReferences = function (model, position, context, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.findReferences(resource.toString(), fromPosition(position));\n        }).then(function (entries) {\n            if (!entries) {\n                return;\n            }\n            return entries.map(toLocation);\n        }));\n    };\n    return ReferenceAdapter;\n}());\nexport { ReferenceAdapter };\n// --- rename ------\nfunction toWorkspaceEdit(edit) {\n    if (!edit || !edit.changes) {\n        return void 0;\n    }\n    var resourceEdits = [];\n    for (var uri in edit.changes) {\n        var edits = [];\n        for (var _i = 0, _a = edit.changes[uri]; _i < _a.length; _i++) {\n            var e = _a[_i];\n            edits.push({\n                range: toRange(e.range),\n                text: e.newText\n            });\n        }\n        resourceEdits.push({ resource: Uri.parse(uri), edits: edits });\n    }\n    return {\n        edits: resourceEdits\n    };\n}\nvar RenameAdapter = /** @class */ (function () {\n    function RenameAdapter(_worker) {\n        this._worker = _worker;\n    }\n    RenameAdapter.prototype.provideRenameEdits = function (model, position, newName, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doRename(resource.toString(), fromPosition(position), newName);\n        }).then(function (edit) {\n            return toWorkspaceEdit(edit);\n        }));\n    };\n    return RenameAdapter;\n}());\nexport { RenameAdapter };\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                location: toLocation(item.location)\n            }); });\n        }));\n    };\n    return DocumentSymbolAdapter;\n}());\nexport { DocumentSymbolAdapter };\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    token.onCancellationRequested(function () { return promise.cancel(); });\n    return promise;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nexport function setupMode(defaults) {\n    var disposables = [];\n    var client = new WorkerManager(defaults);\n    disposables.push(client);\n    var worker = function (first) {\n        var more = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            more[_i - 1] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, [first].concat(more));\n    };\n    var languageId = defaults.languageId;\n    disposables.push(monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker)));\n    disposables.push(monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker)));\n    disposables.push(monaco.languages.registerDefinitionProvider(languageId, new languageFeatures.DefinitionAdapter(worker)));\n    disposables.push(monaco.languages.registerReferenceProvider(languageId, new languageFeatures.ReferenceAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker)));\n    disposables.push(monaco.languages.registerRenameProvider(languageId, new languageFeatures.RenameAdapter(worker)));\n    disposables.push(new languageFeatures.DiagnostcsAdapter(languageId, worker));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ts from './lib/typescriptServices.js';\nexport var Language;\n(function (Language) {\n    Language[Language[\"TypeScript\"] = 0] = \"TypeScript\";\n    Language[Language[\"EcmaScript5\"] = 1] = \"EcmaScript5\";\n})(Language || (Language = {}));\nexport function createTokenizationSupport(language) {\n    var classifier = ts.createClassifier(), bracketTypeTable = language === Language.TypeScript ? tsBracketTypeTable : jsBracketTypeTable, tokenTypeTable = language === Language.TypeScript ? tsTokenTypeTable : jsTokenTypeTable;\n    return {\n        getInitialState: function () { return new State(language, ts.EndOfLineState.None, false); },\n        tokenize: function (line, state) { return tokenize(bracketTypeTable, tokenTypeTable, classifier, state, line); }\n    };\n}\nvar State = /** @class */ (function () {\n    function State(language, eolState, inJsDocComment) {\n        this.language = language;\n        this.eolState = eolState;\n        this.inJsDocComment = inJsDocComment;\n    }\n    State.prototype.clone = function () {\n        return new State(this.language, this.eolState, this.inJsDocComment);\n    };\n    State.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        }\n        if (!other || !(other instanceof State)) {\n            return false;\n        }\n        if (this.eolState !== other.eolState) {\n            return false;\n        }\n        if (this.inJsDocComment !== other.inJsDocComment) {\n            return false;\n        }\n        return true;\n    };\n    return State;\n}());\nfunction tokenize(bracketTypeTable, tokenTypeTable, classifier, state, text) {\n    // Create result early and fill in tokens\n    var ret = {\n        tokens: [],\n        endState: new State(state.language, ts.EndOfLineState.None, false)\n    };\n    function appendFn(startIndex, type) {\n        if (ret.tokens.length === 0 || ret.tokens[ret.tokens.length - 1].scopes !== type) {\n            ret.tokens.push({\n                startIndex: startIndex,\n                scopes: type\n            });\n        }\n    }\n    var isTypeScript = state.language === Language.TypeScript;\n    // shebang statement, #! /bin/node\n    if (!isTypeScript && checkSheBang(0, text, appendFn)) {\n        return ret;\n    }\n    var result = classifier.getClassificationsForLine(text, state.eolState, true), offset = 0;\n    ret.endState.eolState = result.finalLexState;\n    ret.endState.inJsDocComment = result.finalLexState === ts.EndOfLineState.InMultiLineCommentTrivia && (state.inJsDocComment || /\\/\\*\\*.*$/.test(text));\n    for (var _i = 0, _a = result.entries; _i < _a.length; _i++) {\n        var entry = _a[_i];\n        var type;\n        if (entry.classification === ts.TokenClass.Punctuation) {\n            // punctions: check for brackets: (){}[]\n            var ch = text.charCodeAt(offset);\n            type = bracketTypeTable[ch] || tokenTypeTable[entry.classification];\n            appendFn(offset, type);\n        }\n        else if (entry.classification === ts.TokenClass.Comment) {\n            // comments: check for JSDoc, block, and line comments\n            if (ret.endState.inJsDocComment || /\\/\\*\\*.*\\*\\//.test(text.substr(offset, entry.length))) {\n                appendFn(offset, isTypeScript ? 'comment.doc.ts' : 'comment.doc.js');\n            }\n            else {\n                appendFn(offset, isTypeScript ? 'comment.ts' : 'comment.js');\n            }\n        }\n        else {\n            // everything else\n            appendFn(offset, tokenTypeTable[entry.classification] || '');\n        }\n        offset += entry.length;\n    }\n    return ret;\n}\nvar tsBracketTypeTable = Object.create(null);\ntsBracketTypeTable['('.charCodeAt(0)] = 'delimiter.parenthesis.ts';\ntsBracketTypeTable[')'.charCodeAt(0)] = 'delimiter.parenthesis.ts';\ntsBracketTypeTable['{'.charCodeAt(0)] = 'delimiter.bracket.ts';\ntsBracketTypeTable['}'.charCodeAt(0)] = 'delimiter.bracket.ts';\ntsBracketTypeTable['['.charCodeAt(0)] = 'delimiter.array.ts';\ntsBracketTypeTable[']'.charCodeAt(0)] = 'delimiter.array.ts';\nvar tsTokenTypeTable = Object.create(null);\ntsTokenTypeTable[ts.TokenClass.Identifier] = 'identifier.ts';\ntsTokenTypeTable[ts.TokenClass.Keyword] = 'keyword.ts';\ntsTokenTypeTable[ts.TokenClass.Operator] = 'delimiter.ts';\ntsTokenTypeTable[ts.TokenClass.Punctuation] = 'delimiter.ts';\ntsTokenTypeTable[ts.TokenClass.NumberLiteral] = 'number.ts';\ntsTokenTypeTable[ts.TokenClass.RegExpLiteral] = 'regexp.ts';\ntsTokenTypeTable[ts.TokenClass.StringLiteral] = 'string.ts';\nvar jsBracketTypeTable = Object.create(null);\njsBracketTypeTable['('.charCodeAt(0)] = 'delimiter.parenthesis.js';\njsBracketTypeTable[')'.charCodeAt(0)] = 'delimiter.parenthesis.js';\njsBracketTypeTable['{'.charCodeAt(0)] = 'delimiter.bracket.js';\njsBracketTypeTable['}'.charCodeAt(0)] = 'delimiter.bracket.js';\njsBracketTypeTable['['.charCodeAt(0)] = 'delimiter.array.js';\njsBracketTypeTable[']'.charCodeAt(0)] = 'delimiter.array.js';\nvar jsTokenTypeTable = Object.create(null);\njsTokenTypeTable[ts.TokenClass.Identifier] = 'identifier.js';\njsTokenTypeTable[ts.TokenClass.Keyword] = 'keyword.js';\njsTokenTypeTable[ts.TokenClass.Operator] = 'delimiter.js';\njsTokenTypeTable[ts.TokenClass.Punctuation] = 'delimiter.js';\njsTokenTypeTable[ts.TokenClass.NumberLiteral] = 'number.js';\njsTokenTypeTable[ts.TokenClass.RegExpLiteral] = 'regexp.js';\njsTokenTypeTable[ts.TokenClass.StringLiteral] = 'string.js';\nfunction checkSheBang(deltaOffset, line, appendFn) {\n    if (line.indexOf('#!') === 0) {\n        appendFn(deltaOffset, 'comment.shebang');\n        return true;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(modeId, defaults) {\n        var _this = this;\n        this._modeId = modeId;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var maxIdleTime = this._defaults.getWorkerMaxIdleTime();\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (maxIdleTime > 0 && timePassedSinceLastUsed > maxIdleTime) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        var _this = this;\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `TypeScriptWorker` instance\n                moduleId: 'vs/language/typescript/tsWorker',\n                label: this._modeId,\n                // passed in to the create() method\n                createData: {\n                    compilerOptions: this._defaults.getCompilerOptions(),\n                    extraLibs: this._defaults.getExtraLibs()\n                }\n            });\n            var p = this._worker.getProxy();\n            if (this._defaults.getEagerModelSync()) {\n                p = p.then(function (worker) {\n                    return _this._worker.withSyncedResources(monaco.editor.getModels()\n                        .filter(function (model) { return model.getModeId() === _this._modeId; })\n                        .map(function (model) { return model.uri; }));\n                });\n            }\n            this._client = p;\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as ts from './lib/typescriptServices.js';\nvar Uri = monaco.Uri;\nvar Promise = monaco.Promise;\nvar Adapter = /** @class */ (function () {\n    function Adapter(_worker) {\n        this._worker = _worker;\n    }\n    Adapter.prototype._positionToOffset = function (uri, position) {\n        var model = monaco.editor.getModel(uri);\n        return model.getOffsetAt(position);\n    };\n    Adapter.prototype._offsetToPosition = function (uri, offset) {\n        var model = monaco.editor.getModel(uri);\n        return model.getPositionAt(offset);\n    };\n    Adapter.prototype._textSpanToRange = function (uri, span) {\n        var p1 = this._offsetToPosition(uri, span.start);\n        var p2 = this._offsetToPosition(uri, span.start + span.length);\n        var startLineNumber = p1.lineNumber, startColumn = p1.column;\n        var endLineNumber = p2.lineNumber, endColumn = p2.column;\n        return { startLineNumber: startLineNumber, startColumn: startColumn, endLineNumber: endLineNumber, endColumn: endColumn };\n    };\n    return Adapter;\n}());\nexport { Adapter };\n// --- diagnostics --- ---\nvar DiagnostcsAdapter = /** @class */ (function (_super) {\n    __extends(DiagnostcsAdapter, _super);\n    function DiagnostcsAdapter(_defaults, _selector, worker) {\n        var _this = _super.call(this, worker) || this;\n        _this._defaults = _defaults;\n        _this._selector = _selector;\n        _this._disposables = [];\n        _this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            if (model.getModeId() !== _selector) {\n                return;\n            }\n            var handle;\n            var changeSubscription = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri); }, 500);\n            });\n            _this._listener[model.uri.toString()] = {\n                dispose: function () {\n                    changeSubscription.dispose();\n                    clearTimeout(handle);\n                }\n            };\n            _this._doValidate(model.uri);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._selector, []);\n            var key = model.uri.toString();\n            if (_this._listener[key]) {\n                _this._listener[key].dispose();\n                delete _this._listener[key];\n            }\n        };\n        _this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        _this._disposables.push(monaco.editor.onWillDisposeModel(onModelRemoved));\n        _this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        _this._disposables.push({\n            dispose: function () {\n                for (var _i = 0, _a = monaco.editor.getModels(); _i < _a.length; _i++) {\n                    var model = _a[_i];\n                    onModelRemoved(model);\n                }\n            }\n        });\n        _this._disposables.push(_this._defaults.onDidChange(function () {\n            // redo diagnostics when options change\n            for (var _i = 0, _a = monaco.editor.getModels(); _i < _a.length; _i++) {\n                var model = _a[_i];\n                onModelRemoved(model);\n                onModelAdd(model);\n            }\n        }));\n        monaco.editor.getModels().forEach(onModelAdd);\n        return _this;\n    }\n    DiagnostcsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnostcsAdapter.prototype._doValidate = function (resource) {\n        var _this = this;\n        this._worker(resource).then(function (worker) {\n            if (!monaco.editor.getModel(resource)) {\n                // model was disposed in the meantime\n                return null;\n            }\n            var promises = [];\n            var _a = _this._defaults.getDiagnosticsOptions(), noSyntaxValidation = _a.noSyntaxValidation, noSemanticValidation = _a.noSemanticValidation;\n            if (!noSyntaxValidation) {\n                promises.push(worker.getSyntacticDiagnostics(resource.toString()));\n            }\n            if (!noSemanticValidation) {\n                promises.push(worker.getSemanticDiagnostics(resource.toString()));\n            }\n            return Promise.join(promises);\n        }).then(function (diagnostics) {\n            if (!diagnostics || !monaco.editor.getModel(resource)) {\n                // model was disposed in the meantime\n                return null;\n            }\n            var markers = diagnostics\n                .reduce(function (p, c) { return c.concat(p); }, [])\n                .map(function (d) { return _this._convertDiagnostics(resource, d); });\n            monaco.editor.setModelMarkers(monaco.editor.getModel(resource), _this._selector, markers);\n        }).done(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    DiagnostcsAdapter.prototype._convertDiagnostics = function (resource, diag) {\n        var _a = this._offsetToPosition(resource, diag.start), startLineNumber = _a.lineNumber, startColumn = _a.column;\n        var _b = this._offsetToPosition(resource, diag.start + diag.length), endLineNumber = _b.lineNumber, endColumn = _b.column;\n        return {\n            severity: monaco.MarkerSeverity.Error,\n            startLineNumber: startLineNumber,\n            startColumn: startColumn,\n            endLineNumber: endLineNumber,\n            endColumn: endColumn,\n            message: ts.flattenDiagnosticMessageText(diag.messageText, '\\n')\n        };\n    };\n    return DiagnostcsAdapter;\n}(Adapter));\nexport { DiagnostcsAdapter };\nvar SuggestAdapter = /** @class */ (function (_super) {\n    __extends(SuggestAdapter, _super);\n    function SuggestAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SuggestAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return ['.'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SuggestAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        var offset = this._positionToOffset(resource, position);\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getCompletionsAtPosition(resource.toString(), offset);\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var suggestions = info.entries.map(function (entry) {\n                return {\n                    uri: resource,\n                    position: position,\n                    label: entry.name,\n                    sortText: entry.sortText,\n                    kind: SuggestAdapter.convertKind(entry.kind)\n                };\n            });\n            return suggestions;\n        }));\n    };\n    SuggestAdapter.prototype.resolveCompletionItem = function (item, token) {\n        var _this = this;\n        var myItem = item;\n        var resource = myItem.uri;\n        var position = myItem.position;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getCompletionEntryDetails(resource.toString(), _this._positionToOffset(resource, position), myItem.label);\n        }).then(function (details) {\n            if (!details) {\n                return myItem;\n            }\n            return {\n                uri: resource,\n                position: position,\n                label: details.name,\n                kind: SuggestAdapter.convertKind(details.kind),\n                detail: ts.displayPartsToString(details.displayParts),\n                documentation: ts.displayPartsToString(details.documentation)\n            };\n        }));\n    };\n    SuggestAdapter.convertKind = function (kind) {\n        switch (kind) {\n            case Kind.primitiveType:\n            case Kind.keyword:\n                return monaco.languages.CompletionItemKind.Keyword;\n            case Kind.variable:\n            case Kind.localVariable:\n                return monaco.languages.CompletionItemKind.Variable;\n            case Kind.memberVariable:\n            case Kind.memberGetAccessor:\n            case Kind.memberSetAccessor:\n                return monaco.languages.CompletionItemKind.Field;\n            case Kind.function:\n            case Kind.memberFunction:\n            case Kind.constructSignature:\n            case Kind.callSignature:\n            case Kind.indexSignature:\n                return monaco.languages.CompletionItemKind.Function;\n            case Kind.enum:\n                return monaco.languages.CompletionItemKind.Enum;\n            case Kind.module:\n                return monaco.languages.CompletionItemKind.Module;\n            case Kind.class:\n                return monaco.languages.CompletionItemKind.Class;\n            case Kind.interface:\n                return monaco.languages.CompletionItemKind.Interface;\n            case Kind.warning:\n                return monaco.languages.CompletionItemKind.File;\n        }\n        return monaco.languages.CompletionItemKind.Property;\n    };\n    return SuggestAdapter;\n}(Adapter));\nexport { SuggestAdapter };\nvar SignatureHelpAdapter = /** @class */ (function (_super) {\n    __extends(SignatureHelpAdapter, _super);\n    function SignatureHelpAdapter() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.signatureHelpTriggerCharacters = ['(', ','];\n        return _this;\n    }\n    SignatureHelpAdapter.prototype.provideSignatureHelp = function (model, position, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.getSignatureHelpItems(resource.toString(), _this._positionToOffset(resource, position)); }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var ret = {\n                activeSignature: info.selectedItemIndex,\n                activeParameter: info.argumentIndex,\n                signatures: []\n            };\n            info.items.forEach(function (item) {\n                var signature = {\n                    label: '',\n                    documentation: null,\n                    parameters: []\n                };\n                signature.label += ts.displayPartsToString(item.prefixDisplayParts);\n                item.parameters.forEach(function (p, i, a) {\n                    var label = ts.displayPartsToString(p.displayParts);\n                    var parameter = {\n                        label: label,\n                        documentation: ts.displayPartsToString(p.documentation)\n                    };\n                    signature.label += label;\n                    signature.parameters.push(parameter);\n                    if (i < a.length - 1) {\n                        signature.label += ts.displayPartsToString(item.separatorDisplayParts);\n                    }\n                });\n                signature.label += ts.displayPartsToString(item.suffixDisplayParts);\n                ret.signatures.push(signature);\n            });\n            return ret;\n        }));\n    };\n    return SignatureHelpAdapter;\n}(Adapter));\nexport { SignatureHelpAdapter };\n// --- hover ------\nvar QuickInfoAdapter = /** @class */ (function (_super) {\n    __extends(QuickInfoAdapter, _super);\n    function QuickInfoAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    QuickInfoAdapter.prototype.provideHover = function (model, position, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getQuickInfoAtPosition(resource.toString(), _this._positionToOffset(resource, position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var documentation = ts.displayPartsToString(info.documentation);\n            var tags = info.tags ? info.tags.map(function (tag) {\n                var label = \"*@\" + tag.name + \"*\";\n                if (!tag.text) {\n                    return label;\n                }\n                return label + (tag.text.match(/\\r\\n|\\n/g) ? ' \\n' + tag.text : \" - \" + tag.text);\n            })\n                .join('  \\n\\n') : '';\n            var contents = ts.displayPartsToString(info.displayParts);\n            return {\n                range: _this._textSpanToRange(resource, info.textSpan),\n                contents: [{\n                        value: contents\n                    }, {\n                        value: documentation + (tags ? '\\n\\n' + tags : '')\n                    }]\n            };\n        }));\n    };\n    return QuickInfoAdapter;\n}(Adapter));\nexport { QuickInfoAdapter };\n// --- occurrences ------\nvar OccurrencesAdapter = /** @class */ (function (_super) {\n    __extends(OccurrencesAdapter, _super);\n    function OccurrencesAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OccurrencesAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getOccurrencesAtPosition(resource.toString(), _this._positionToOffset(resource, position));\n        }).then(function (entries) {\n            if (!entries) {\n                return;\n            }\n            return entries.map(function (entry) {\n                return {\n                    range: _this._textSpanToRange(resource, entry.textSpan),\n                    kind: entry.isWriteAccess ? monaco.languages.DocumentHighlightKind.Write : monaco.languages.DocumentHighlightKind.Text\n                };\n            });\n        }));\n    };\n    return OccurrencesAdapter;\n}(Adapter));\nexport { OccurrencesAdapter };\n// --- definition ------\nvar DefinitionAdapter = /** @class */ (function (_super) {\n    __extends(DefinitionAdapter, _super);\n    function DefinitionAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DefinitionAdapter.prototype.provideDefinition = function (model, position, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getDefinitionAtPosition(resource.toString(), _this._positionToOffset(resource, position));\n        }).then(function (entries) {\n            if (!entries) {\n                return;\n            }\n            var result = [];\n            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n                var entry = entries_1[_i];\n                var uri = Uri.parse(entry.fileName);\n                if (monaco.editor.getModel(uri)) {\n                    result.push({\n                        uri: uri,\n                        range: _this._textSpanToRange(uri, entry.textSpan)\n                    });\n                }\n            }\n            return result;\n        }));\n    };\n    return DefinitionAdapter;\n}(Adapter));\nexport { DefinitionAdapter };\n// --- references ------\nvar ReferenceAdapter = /** @class */ (function (_super) {\n    __extends(ReferenceAdapter, _super);\n    function ReferenceAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ReferenceAdapter.prototype.provideReferences = function (model, position, context, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getReferencesAtPosition(resource.toString(), _this._positionToOffset(resource, position));\n        }).then(function (entries) {\n            if (!entries) {\n                return;\n            }\n            var result = [];\n            for (var _i = 0, entries_2 = entries; _i < entries_2.length; _i++) {\n                var entry = entries_2[_i];\n                var uri = Uri.parse(entry.fileName);\n                if (monaco.editor.getModel(uri)) {\n                    result.push({\n                        uri: uri,\n                        range: _this._textSpanToRange(uri, entry.textSpan)\n                    });\n                }\n            }\n            return result;\n        }));\n    };\n    return ReferenceAdapter;\n}(Adapter));\nexport { ReferenceAdapter };\n// --- outline ------\nvar OutlineAdapter = /** @class */ (function (_super) {\n    __extends(OutlineAdapter, _super);\n    function OutlineAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OutlineAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.getNavigationBarItems(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            var convert = function (bucket, item, containerLabel) {\n                var result = {\n                    name: item.text,\n                    kind: (outlineTypeTable[item.kind] || monaco.languages.SymbolKind.Variable),\n                    location: {\n                        uri: resource,\n                        range: _this._textSpanToRange(resource, item.spans[0])\n                    },\n                    containerName: containerLabel\n                };\n                if (item.childItems && item.childItems.length > 0) {\n                    for (var _i = 0, _a = item.childItems; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        convert(bucket, child, result.name);\n                    }\n                }\n                bucket.push(result);\n            };\n            var result = [];\n            items.forEach(function (item) { return convert(result, item); });\n            return result;\n        }));\n    };\n    return OutlineAdapter;\n}(Adapter));\nexport { OutlineAdapter };\nvar Kind = /** @class */ (function () {\n    function Kind() {\n    }\n    Kind.unknown = '';\n    Kind.keyword = 'keyword';\n    Kind.script = 'script';\n    Kind.module = 'module';\n    Kind.class = 'class';\n    Kind.interface = 'interface';\n    Kind.type = 'type';\n    Kind.enum = 'enum';\n    Kind.variable = 'var';\n    Kind.localVariable = 'local var';\n    Kind.function = 'function';\n    Kind.localFunction = 'local function';\n    Kind.memberFunction = 'method';\n    Kind.memberGetAccessor = 'getter';\n    Kind.memberSetAccessor = 'setter';\n    Kind.memberVariable = 'property';\n    Kind.constructorImplementation = 'constructor';\n    Kind.callSignature = 'call';\n    Kind.indexSignature = 'index';\n    Kind.constructSignature = 'construct';\n    Kind.parameter = 'parameter';\n    Kind.typeParameter = 'type parameter';\n    Kind.primitiveType = 'primitive type';\n    Kind.label = 'label';\n    Kind.alias = 'alias';\n    Kind.const = 'const';\n    Kind.let = 'let';\n    Kind.warning = 'warning';\n    return Kind;\n}());\nexport { Kind };\nvar outlineTypeTable = Object.create(null);\noutlineTypeTable[Kind.module] = monaco.languages.SymbolKind.Module;\noutlineTypeTable[Kind.class] = monaco.languages.SymbolKind.Class;\noutlineTypeTable[Kind.enum] = monaco.languages.SymbolKind.Enum;\noutlineTypeTable[Kind.interface] = monaco.languages.SymbolKind.Interface;\noutlineTypeTable[Kind.memberFunction] = monaco.languages.SymbolKind.Method;\noutlineTypeTable[Kind.memberVariable] = monaco.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberGetAccessor] = monaco.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberSetAccessor] = monaco.languages.SymbolKind.Property;\noutlineTypeTable[Kind.variable] = monaco.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.const] = monaco.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.localVariable] = monaco.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.variable] = monaco.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.function] = monaco.languages.SymbolKind.Function;\noutlineTypeTable[Kind.localFunction] = monaco.languages.SymbolKind.Function;\n// --- formatting ----\nvar FormatHelper = /** @class */ (function (_super) {\n    __extends(FormatHelper, _super);\n    function FormatHelper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FormatHelper._convertOptions = function (options) {\n        return {\n            ConvertTabsToSpaces: options.insertSpaces,\n            TabSize: options.tabSize,\n            IndentSize: options.tabSize,\n            IndentStyle: ts.IndentStyle.Smart,\n            NewLineCharacter: '\\n',\n            InsertSpaceAfterCommaDelimiter: true,\n            InsertSpaceAfterSemicolonInForStatements: true,\n            InsertSpaceBeforeAndAfterBinaryOperators: true,\n            InsertSpaceAfterKeywordsInControlFlowStatements: true,\n            InsertSpaceAfterFunctionKeywordForAnonymousFunctions: true,\n            InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: false,\n            InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: false,\n            InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: false,\n            PlaceOpenBraceOnNewLineForControlBlocks: false,\n            PlaceOpenBraceOnNewLineForFunctions: false\n        };\n    };\n    FormatHelper.prototype._convertTextChanges = function (uri, change) {\n        return {\n            text: change.newText,\n            range: this._textSpanToRange(uri, change.span)\n        };\n    };\n    return FormatHelper;\n}(Adapter));\nexport { FormatHelper };\nvar FormatAdapter = /** @class */ (function (_super) {\n    __extends(FormatAdapter, _super);\n    function FormatAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FormatAdapter.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getFormattingEditsForRange(resource.toString(), _this._positionToOffset(resource, { lineNumber: range.startLineNumber, column: range.startColumn }), _this._positionToOffset(resource, { lineNumber: range.endLineNumber, column: range.endColumn }), FormatHelper._convertOptions(options));\n        }).then(function (edits) {\n            if (edits) {\n                return edits.map(function (edit) { return _this._convertTextChanges(resource, edit); });\n            }\n        }));\n    };\n    return FormatAdapter;\n}(FormatHelper));\nexport { FormatAdapter };\nvar FormatOnTypeAdapter = /** @class */ (function (_super) {\n    __extends(FormatOnTypeAdapter, _super);\n    function FormatOnTypeAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(FormatOnTypeAdapter.prototype, \"autoFormatTriggerCharacters\", {\n        get: function () {\n            return [';', '}', '\\n'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FormatOnTypeAdapter.prototype.provideOnTypeFormattingEdits = function (model, position, ch, options, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getFormattingEditsAfterKeystroke(resource.toString(), _this._positionToOffset(resource, position), ch, FormatHelper._convertOptions(options));\n        }).then(function (edits) {\n            if (edits) {\n                return edits.map(function (edit) { return _this._convertTextChanges(resource, edit); });\n            }\n        }));\n    };\n    return FormatOnTypeAdapter;\n}(FormatHelper));\nexport { FormatOnTypeAdapter };\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    token.onCancellationRequested(function () { return promise.cancel(); });\n    return promise;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { Language, createTokenizationSupport } from './tokenization.js';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nvar javaScriptWorker;\nvar typeScriptWorker;\nexport function setupTypeScript(defaults) {\n    typeScriptWorker = setupMode(defaults, 'typescript', Language.TypeScript);\n}\nexport function setupJavaScript(defaults) {\n    javaScriptWorker = setupMode(defaults, 'javascript', Language.EcmaScript5);\n}\nexport function getJavaScriptWorker() {\n    return new monaco.Promise(function (resolve, reject) {\n        if (!javaScriptWorker) {\n            return reject(\"JavaScript not registered!\");\n        }\n        resolve(javaScriptWorker);\n    });\n}\nexport function getTypeScriptWorker() {\n    return new monaco.Promise(function (resolve, reject) {\n        if (!typeScriptWorker) {\n            return reject(\"TypeScript not registered!\");\n        }\n        resolve(typeScriptWorker);\n    });\n}\nfunction setupMode(defaults, modeId, language) {\n    var client = new WorkerManager(modeId, defaults);\n    var worker = function (first) {\n        var more = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            more[_i - 1] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, [first].concat(more));\n    };\n    monaco.languages.registerCompletionItemProvider(modeId, new languageFeatures.SuggestAdapter(worker));\n    monaco.languages.registerSignatureHelpProvider(modeId, new languageFeatures.SignatureHelpAdapter(worker));\n    monaco.languages.registerHoverProvider(modeId, new languageFeatures.QuickInfoAdapter(worker));\n    monaco.languages.registerDocumentHighlightProvider(modeId, new languageFeatures.OccurrencesAdapter(worker));\n    monaco.languages.registerDefinitionProvider(modeId, new languageFeatures.DefinitionAdapter(worker));\n    monaco.languages.registerReferenceProvider(modeId, new languageFeatures.ReferenceAdapter(worker));\n    monaco.languages.registerDocumentSymbolProvider(modeId, new languageFeatures.OutlineAdapter(worker));\n    monaco.languages.registerDocumentRangeFormattingEditProvider(modeId, new languageFeatures.FormatAdapter(worker));\n    monaco.languages.registerOnTypeFormattingEditProvider(modeId, new languageFeatures.FormatOnTypeAdapter(worker));\n    new languageFeatures.DiagnostcsAdapter(defaults, modeId, worker);\n    monaco.languages.setLanguageConfiguration(modeId, richEditConfiguration);\n    monaco.languages.setTokensProvider(modeId, createTokenizationSupport(language));\n    return worker;\n}\nvar richEditConfiguration = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    onEnterRules: [\n        {\n            // e.g. /** | */\n            beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n            afterText: /^\\s*\\*\\/$/,\n            action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\n        },\n        {\n            // e.g. /** ...|\n            beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n            action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\n        },\n        {\n            // e.g.  * ...|\n            beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\n            action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\n        },\n        {\n            // e.g.  */|\n            beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\n            action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\n        }\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"', notIn: ['string'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n        { open: '`', close: '`', notIn: ['string', 'comment'] },\n        { open: \"/**\", close: \" */\", notIn: [\"string\"] }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*//\\\\s*#?region\\\\b\"),\n            end: new RegExp(\"^\\\\s*//\\\\s*#?endregion\\\\b\")\n        }\n    }\n};\n","export var conf = {\n    comments: {\n        lineComment: '#'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        offSide: true\n    }\n};\nexport var language = {\n    tokenPostfix: '.yaml',\n    brackets: [\n        { token: 'delimiter.bracket', open: '{', close: '}' },\n        { token: 'delimiter.square', open: '[', close: ']' }\n    ],\n    keywords: ['true', 'True', 'TRUE', 'false', 'False', 'FALSE', 'null', 'Null', 'Null', '~'],\n    numberInteger: /(?:0|[+-]?[0-9]+)/,\n    numberFloat: /(?:0|[+-]?[0-9]+)(?:\\.[0-9]+)?(?:e[-+][1-9][0-9]*)?/,\n    numberOctal: /0o[0-7]+/,\n    numberHex: /0x[0-9a-fA-F]+/,\n    numberInfinity: /[+-]?\\.(?:inf|Inf|INF)/,\n    numberNaN: /\\.(?:nan|Nan|NAN)/,\n    numberDate: /\\d{4}-\\d\\d-\\d\\d([Tt ]\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(( ?[+-]\\d\\d?(:\\d\\d)?)|Z)?)?/,\n    escapes: /\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,\n    tokenizer: {\n        root: [\n            { include: '@whitespace' },\n            { include: '@comment' },\n            // Directive\n            [/%[^ ]+.*$/, 'meta.directive'],\n            // Document Markers\n            [/---/, 'operators.directivesEnd'],\n            [/\\.{3}/, 'operators.documentEnd'],\n            // Block Structure Indicators\n            [/[-?:](?= )/, 'operators'],\n            { include: '@anchor' },\n            { include: '@tagHandle' },\n            { include: '@flowCollections' },\n            { include: '@blockStyle' },\n            // Numbers\n            [/@numberInteger(?![ \\t]*\\S+)/, 'number'],\n            [/@numberFloat(?![ \\t]*\\S+)/, 'number.float'],\n            [/@numberOctal(?![ \\t]*\\S+)/, 'number.octal'],\n            [/@numberHex(?![ \\t]*\\S+)/, 'number.hex'],\n            [/@numberInfinity(?![ \\t]*\\S+)/, 'number.infinity'],\n            [/@numberNaN(?![ \\t]*\\S+)/, 'number.nan'],\n            [/@numberDate(?![ \\t]*\\S+)/, 'number.date'],\n            // Key:Value pair\n            [/(\".*?\"|'.*?'|.*?)([ \\t]*)(:)( |$)/, ['type', 'white', 'operators', 'white']],\n            { include: '@flowScalars' },\n            // String nodes\n            [/.+$/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@default': 'string'\n                    }\n                }]\n        ],\n        // Flow Collection: Flow Mapping\n        object: [\n            { include: '@whitespace' },\n            { include: '@comment' },\n            // Flow Mapping termination\n            [/\\}/, '@brackets', '@pop'],\n            // Flow Mapping delimiter\n            [/,/, 'delimiter.comma'],\n            // Flow Mapping Key:Value delimiter\n            [/:(?= )/, 'operators'],\n            // Flow Mapping Key:Value key\n            [/(?:\".*?\"|'.*?'|[^,\\{\\[]+?)(?=: )/, 'type'],\n            // Start Flow Style\n            { include: '@flowCollections' },\n            { include: '@flowScalars' },\n            // Scalar Data types\n            { include: '@tagHandle' },\n            { include: '@anchor' },\n            { include: '@flowNumber' },\n            // Other value (keyword or string)\n            [/[^\\},]+/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@default': 'string'\n                    }\n                }]\n        ],\n        // Flow Collection: Flow Sequence\n        array: [\n            { include: '@whitespace' },\n            { include: '@comment' },\n            // Flow Sequence termination\n            [/\\]/, '@brackets', '@pop'],\n            // Flow Sequence delimiter\n            [/,/, 'delimiter.comma'],\n            // Start Flow Style\n            { include: '@flowCollections' },\n            { include: '@flowScalars' },\n            // Scalar Data types\n            { include: '@tagHandle' },\n            { include: '@anchor' },\n            { include: '@flowNumber' },\n            // Other value (keyword or string)\n            [/[^\\],]+/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@default': 'string'\n                    }\n                }]\n        ],\n        // Flow Scalars (quoted strings)\n        string: [\n            [/[^\\\\\"']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }]\n        ],\n        // First line of a Block Style\n        multiString: [\n            [/^( +).+$/, 'string', '@multiStringContinued.$1']\n        ],\n        // Further lines of a Block Style\n        //   Workaround for indentation detection\n        multiStringContinued: [\n            [/^( *).+$/, {\n                    cases: {\n                        '$1==$S2': 'string',\n                        '@default': { token: '@rematch', next: '@popall' }\n                    }\n                }]\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white']\n        ],\n        // Only line comments\n        comment: [\n            [/#.*$/, 'comment']\n        ],\n        // Start Flow Collections\n        flowCollections: [\n            [/\\[/, '@brackets', '@array'],\n            [/\\{/, '@brackets', '@object']\n        ],\n        // Start Flow Scalars (quoted strings)\n        flowScalars: [\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', '@string.\\'']\n        ],\n        // Start Block Scalar\n        blockStyle: [\n            [/[>|][0-9]*[+-]?$/, 'operators', '@multiString']\n        ],\n        // Numbers in Flow Collections (terminate with ,]})\n        flowNumber: [\n            [/@numberInteger(?=[ \\t]*[,\\]\\}])/, 'number'],\n            [/@numberFloat(?=[ \\t]*[,\\]\\}])/, 'number.float'],\n            [/@numberOctal(?=[ \\t]*[,\\]\\}])/, 'number.octal'],\n            [/@numberHex(?=[ \\t]*[,\\]\\}])/, 'number.hex'],\n            [/@numberInfinity(?=[ \\t]*[,\\]\\}])/, 'number.infinity'],\n            [/@numberNaN(?=[ \\t]*[,\\]\\}])/, 'number.nan'],\n            [/@numberDate(?=[ \\t]*[,\\]\\}])/, 'number.date']\n        ],\n        tagHandle: [\n            [/\\![^ ]*/, 'tag']\n        ],\n        anchor: [\n            [/[&*][^ ]+/, 'namespace']\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        blockComment: ['<!--', '-->'],\n    },\n    brackets: [\n        ['<', '>']\n    ],\n    autoClosingPairs: [\n        { open: '<', close: '>' },\n        { open: '\\'', close: '\\'' },\n        { open: '\"', close: '\"' },\n    ],\n    surroundingPairs: [\n        { open: '<', close: '>' },\n        { open: '\\'', close: '\\'' },\n        { open: '\"', close: '\"' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.xml',\n    ignoreCase: true,\n    // Useful regular expressions\n    qualifiedName: /(?:[\\w\\.\\-]+:)?[\\w\\.\\-]+/,\n    tokenizer: {\n        root: [\n            [/[^<&]+/, ''],\n            { include: '@whitespace' },\n            // Standard opening tag\n            [/(<)(@qualifiedName)/, [\n                    { token: 'delimiter' },\n                    { token: 'tag', next: '@tag' }\n                ]],\n            // Standard closing tag\n            [/(<\\/)(@qualifiedName)(\\s*)(>)/, [\n                    { token: 'delimiter' },\n                    { token: 'tag' },\n                    '',\n                    { token: 'delimiter' }\n                ]],\n            // Meta tags - instruction\n            [/(<\\?)(@qualifiedName)/, [\n                    { token: 'delimiter' },\n                    { token: 'metatag', next: '@tag' }\n                ]],\n            // Meta tags - declaration\n            [/(<\\!)(@qualifiedName)/, [\n                    { token: 'delimiter' },\n                    { token: 'metatag', next: '@tag' }\n                ]],\n            // CDATA\n            [/<\\!\\[CDATA\\[/, { token: 'delimiter.cdata', next: '@cdata' }],\n            [/&\\w+;/, 'string.escape'],\n        ],\n        cdata: [\n            [/[^\\]]+/, ''],\n            [/\\]\\]>/, { token: 'delimiter.cdata', next: '@pop' }],\n            [/\\]/, '']\n        ],\n        tag: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/(@qualifiedName)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, ['attribute.name', '', 'attribute.value']],\n            [/(@qualifiedName)(\\s*=\\s*)(\"[^\">?\\/]*|'[^'>?\\/]*)(?=[\\?\\/]\\>)/, ['attribute.name', '', 'attribute.value']],\n            [/(@qualifiedName)(\\s*=\\s*)(\"[^\">]*|'[^'>]*)/, ['attribute.name', '', 'attribute.value']],\n            [/@qualifiedName/, 'attribute.name'],\n            [/\\?>/, { token: 'delimiter', next: '@pop' }],\n            [/(\\/)(>)/, [\n                    { token: 'tag' },\n                    { token: 'delimiter', next: '@pop' }\n                ]],\n            [/>/, { token: 'delimiter', next: '@pop' }],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/<!--/, { token: 'comment', next: '@comment' }]\n        ],\n        comment: [\n            [/[^<\\-]+/, 'comment.content'],\n            [/-->/, { token: 'comment', next: '@pop' }],\n            [/<!--/, 'comment.content.invalid'],\n            [/[<\\-]/, 'comment.content']\n        ],\n    },\n};\n","/*!---------------------------------------------------------------------------------------------\n *  Copyright (C) David Owens II, owensd.io. All rights reserved.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n        { open: '`', close: '`' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n        { open: '`', close: '`' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.swift',\n    // TODO(owensd): Support the full range of unicode valid identifiers.\n    identifier: /[a-zA-Z_][\\w$]*/,\n    // TODO(owensd): Support the @availability macro properly.\n    attributes: [\n        '@autoclosure', '@noescape', '@noreturn', '@NSApplicationMain', '@NSCopying', '@NSManaged',\n        '@objc', '@UIApplicationMain', '@noreturn', '@availability', '@IBAction', '@IBDesignable', '@IBInspectable', '@IBOutlet'\n    ],\n    accessmodifiers: ['public', 'private', 'internal'],\n    keywords: [\n        '__COLUMN__', '__FILE__', '__FUNCTION__', '__LINE__', 'as', 'as!', 'as?', 'associativity', 'break', 'case', 'catch',\n        'class', 'continue', 'convenience', 'default', 'deinit', 'didSet', 'do', 'dynamic', 'dynamicType',\n        'else', 'enum', 'extension', 'fallthrough', 'final', 'for', 'func', 'get', 'guard', 'if', 'import', 'in', 'infix',\n        'init', 'inout', 'internal', 'is', 'lazy', 'left', 'let', 'mutating', 'nil', 'none', 'nonmutating', 'operator',\n        'optional', 'override', 'postfix', 'precedence', 'prefix', 'private', 'protocol', 'Protocol', 'public',\n        'repeat', 'required', 'return', 'right', 'self', 'Self', 'set', 'static', 'struct', 'subscript', 'super', 'switch',\n        'throw', 'throws', 'try', 'try!', 'Type', 'typealias', 'unowned', 'var', 'weak', 'where', 'while', 'willSet', 'FALSE', 'TRUE'\n    ],\n    symbols: /[=(){}\\[\\].,:;@#\\_&\\-<>`?!+*\\\\\\/]/,\n    // Moved . to operatorstart so it can be a delimiter\n    operatorstart: /[\\/=\\-+!*%<>&|^~?\\u00A1-\\u00A7\\u00A9\\u00AB\\u00AC\\u00AE\\u00B0-\\u00B1\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7\\u2016-\\u2017\\u2020-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u23FF\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3030]/,\n    operatorend: /[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uE0100-\\uE01EF]/,\n    operators: /(@operatorstart)((@operatorstart)|(@operatorend))*/,\n    // TODO(owensd): These are borrowed from C#; need to validate correctness for Swift.\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    tokenizer: {\n        root: [\n            { include: '@comment' },\n            { include: '@attribute' },\n            { include: '@literal' },\n            { include: '@keyword' },\n            { include: '@invokedmethod' },\n            { include: '@symbol' },\n        ],\n        symbol: [\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/[.]/, 'delimiter'],\n            [/@operators/, 'operator'],\n            [/@symbols/, 'operator']\n        ],\n        comment: [\n            [/\\/\\/\\/.*$/, 'comment.doc'],\n            [/\\/\\*\\*/, 'comment.doc', '@commentdocbody'],\n            [/\\/\\/.*$/, 'comment'],\n            [/\\/\\*/, 'comment', '@commentbody']\n        ],\n        commentdocbody: [\n            [/\\/\\*/, 'comment', '@commentbody'],\n            [/\\*\\//, 'comment.doc', '@pop'],\n            [/\\:[a-zA-Z]+\\:/, 'comment.doc.param'],\n            [/./, 'comment.doc']\n        ],\n        commentbody: [\n            [/\\/\\*/, 'comment', '@commentbody'],\n            [/\\*\\//, 'comment', '@pop'],\n            [/./, 'comment']\n        ],\n        attribute: [\n            [/\\@@identifier/, {\n                    cases: {\n                        '@attributes': 'keyword.control',\n                        '@default': ''\n                    }\n                }]\n        ],\n        literal: [\n            [/\"/, { token: 'string.quote', next: '@stringlit' }],\n            [/0[b]([01]_?)+/, 'number.binary'],\n            [/0[o]([0-7]_?)+/, 'number.octal'],\n            [/0[x]([0-9a-fA-F]_?)+([pP][\\-+](\\d_?)+)?/, 'number.hex'],\n            [/(\\d_?)*\\.(\\d_?)+([eE][\\-+]?(\\d_?)+)?/, 'number.float'],\n            [/(\\d_?)+/, 'number']\n        ],\n        stringlit: [\n            [/\\\\\\(/, { token: 'operator', next: '@interpolatedexpression' }],\n            [/@escapes/, 'string'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, { token: 'string.quote', next: '@pop' }],\n            [/./, 'string']\n        ],\n        interpolatedexpression: [\n            [/\\(/, { token: 'operator', next: '@interpolatedexpression' }],\n            [/\\)/, { token: 'operator', next: '@pop' }],\n            { include: '@literal' },\n            { include: '@keyword' },\n            { include: '@symbol' }\n        ],\n        keyword: [\n            [/`/, { token: 'operator', next: '@escapedkeyword' }],\n            [/@identifier/, {\n                    cases: {\n                        '@keywords': 'keyword', '[A-Z][\\a-zA-Z0-9$]*': 'type.identifier',\n                        '@default': 'identifier'\n                    }\n                }]\n        ],\n        escapedkeyword: [\n            [/`/, { token: 'operator', next: '@pop' }],\n            [/./, 'identifier']\n        ],\n        //\t\tsymbol: [\n        //\t\t\t[ /@symbols/, 'operator' ],\n        //\t\t\t[ /@operators/, 'operator' ]\n        //\t\t],\n        invokedmethod: [\n            [/([.])(@identifier)/, {\n                    cases: {\n                        '$2': ['delimeter', 'type.identifier'],\n                        '@default': ''\n                    }\n                }],\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [['{', '}'], ['[', ']'], ['(', ')'], ['<', '>']],\n    autoClosingPairs: [\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.sol',\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' },\n        { token: 'delimiter.angle', open: '<', close: '>' }\n    ],\n    keywords: [\n        // Main keywords\n        'pragma',\n        'solidity',\n        'contract',\n        'library',\n        'using',\n        'struct',\n        'function',\n        'modifier',\n        //Built-in types\n        'address',\n        'string',\n        'bool',\n        //Other types\n        'Int', 'Uint', 'Byte', 'Fixed', 'Ufixed',\n        //All int\n        'int', 'int8', 'int16', 'int24', 'int32', 'int40', 'int48', 'int56', 'int64', 'int72', 'int80', 'int88', 'int96', 'int104', 'int112', 'int120', 'int128', 'int136', 'int144', 'int152', 'int160', 'int168', 'int176', 'int184', 'int192', 'int200', 'int208', 'int216', 'int224', 'int232', 'int240', 'int248', 'int256',\n        //All uint\n        'uint', 'uint8', 'uint16', 'uint24', 'uint32', 'uint40', 'uint48', 'uint56', 'uint64', 'uint72', 'uint80', 'uint88', 'uint96', 'uint104', 'uint112', 'uint120', 'uint128', 'uint136', 'uint144', 'uint152', 'uint160', 'uint168', 'uint176', 'uint184', 'uint192', 'uint200', 'uint208', 'uint216', 'uint224', 'uint232', 'uint240', 'uint248', 'uint256',\n        //All Byte\n        'byte', 'bytes', 'bytes1', 'bytes2', 'bytes3', 'bytes4', 'bytes5', 'bytes6', 'bytes7', 'bytes8', 'bytes9', 'bytes10', 'bytes11', 'bytes12', 'bytes13', 'bytes14', 'bytes15', 'bytes16', 'bytes17', 'bytes18', 'bytes19', 'bytes20', 'bytes21', 'bytes22', 'bytes23', 'bytes24', 'bytes25', 'bytes26', 'bytes27', 'bytes28', 'bytes29', 'bytes30', 'bytes31', 'bytes32',\n        //All fixed\n        'fixed', 'fixed0x8', 'fixed0x16', 'fixed0x24', 'fixed0x32', 'fixed0x40', 'fixed0x48', 'fixed0x56', 'fixed0x64', 'fixed0x72', 'fixed0x80', 'fixed0x88', 'fixed0x96', 'fixed0x104', 'fixed0x112', 'fixed0x120', 'fixed0x128', 'fixed0x136', 'fixed0x144', 'fixed0x152', 'fixed0x160', 'fixed0x168', 'fixed0x176', 'fixed0x184', 'fixed0x192', 'fixed0x200', 'fixed0x208', 'fixed0x216', 'fixed0x224', 'fixed0x232', 'fixed0x240', 'fixed0x248', 'fixed0x256', 'fixed8x8', 'fixed8x16', 'fixed8x24', 'fixed8x32', 'fixed8x40', 'fixed8x48', 'fixed8x56', 'fixed8x64', 'fixed8x72', 'fixed8x80', 'fixed8x88', 'fixed8x96', 'fixed8x104', 'fixed8x112', 'fixed8x120', 'fixed8x128', 'fixed8x136', 'fixed8x144', 'fixed8x152', 'fixed8x160', 'fixed8x168', 'fixed8x176', 'fixed8x184', 'fixed8x192', 'fixed8x200', 'fixed8x208', 'fixed8x216', 'fixed8x224', 'fixed8x232', 'fixed8x240', 'fixed8x248', 'fixed16x8', 'fixed16x16', 'fixed16x24', 'fixed16x32', 'fixed16x40', 'fixed16x48', 'fixed16x56', 'fixed16x64', 'fixed16x72', 'fixed16x80', 'fixed16x88', 'fixed16x96', 'fixed16x104', 'fixed16x112', 'fixed16x120', 'fixed16x128', 'fixed16x136', 'fixed16x144', 'fixed16x152', 'fixed16x160', 'fixed16x168', 'fixed16x176', 'fixed16x184', 'fixed16x192', 'fixed16x200', 'fixed16x208', 'fixed16x216', 'fixed16x224', 'fixed16x232', 'fixed16x240', 'fixed24x8', 'fixed24x16', 'fixed24x24', 'fixed24x32', 'fixed24x40', 'fixed24x48', 'fixed24x56', 'fixed24x64', 'fixed24x72', 'fixed24x80', 'fixed24x88', 'fixed24x96', 'fixed24x104', 'fixed24x112', 'fixed24x120', 'fixed24x128', 'fixed24x136', 'fixed24x144', 'fixed24x152', 'fixed24x160', 'fixed24x168', 'fixed24x176', 'fixed24x184', 'fixed24x192', 'fixed24x200', 'fixed24x208', 'fixed24x216', 'fixed24x224', 'fixed24x232', 'fixed32x8', 'fixed32x16', 'fixed32x24', 'fixed32x32', 'fixed32x40', 'fixed32x48', 'fixed32x56', 'fixed32x64', 'fixed32x72', 'fixed32x80', 'fixed32x88', 'fixed32x96', 'fixed32x104', 'fixed32x112', 'fixed32x120', 'fixed32x128', 'fixed32x136', 'fixed32x144', 'fixed32x152', 'fixed32x160', 'fixed32x168', 'fixed32x176', 'fixed32x184', 'fixed32x192', 'fixed32x200', 'fixed32x208', 'fixed32x216', 'fixed32x224', 'fixed40x8', 'fixed40x16', 'fixed40x24', 'fixed40x32', 'fixed40x40', 'fixed40x48', 'fixed40x56', 'fixed40x64', 'fixed40x72', 'fixed40x80', 'fixed40x88', 'fixed40x96', 'fixed40x104', 'fixed40x112', 'fixed40x120', 'fixed40x128', 'fixed40x136', 'fixed40x144', 'fixed40x152', 'fixed40x160', 'fixed40x168', 'fixed40x176', 'fixed40x184', 'fixed40x192', 'fixed40x200', 'fixed40x208', 'fixed40x216', 'fixed48x8', 'fixed48x16', 'fixed48x24', 'fixed48x32', 'fixed48x40', 'fixed48x48', 'fixed48x56', 'fixed48x64', 'fixed48x72', 'fixed48x80', 'fixed48x88', 'fixed48x96', 'fixed48x104', 'fixed48x112', 'fixed48x120', 'fixed48x128', 'fixed48x136', 'fixed48x144', 'fixed48x152', 'fixed48x160', 'fixed48x168', 'fixed48x176', 'fixed48x184', 'fixed48x192', 'fixed48x200', 'fixed48x208', 'fixed56x8', 'fixed56x16', 'fixed56x24', 'fixed56x32', 'fixed56x40', 'fixed56x48', 'fixed56x56', 'fixed56x64', 'fixed56x72', 'fixed56x80', 'fixed56x88', 'fixed56x96', 'fixed56x104', 'fixed56x112', 'fixed56x120', 'fixed56x128', 'fixed56x136', 'fixed56x144', 'fixed56x152', 'fixed56x160', 'fixed56x168', 'fixed56x176', 'fixed56x184', 'fixed56x192', 'fixed56x200', 'fixed64x8', 'fixed64x16', 'fixed64x24', 'fixed64x32', 'fixed64x40', 'fixed64x48', 'fixed64x56', 'fixed64x64', 'fixed64x72', 'fixed64x80', 'fixed64x88', 'fixed64x96', 'fixed64x104', 'fixed64x112', 'fixed64x120', 'fixed64x128', 'fixed64x136', 'fixed64x144', 'fixed64x152', 'fixed64x160', 'fixed64x168', 'fixed64x176', 'fixed64x184', 'fixed64x192', 'fixed72x8', 'fixed72x16', 'fixed72x24', 'fixed72x32', 'fixed72x40', 'fixed72x48', 'fixed72x56', 'fixed72x64', 'fixed72x72', 'fixed72x80', 'fixed72x88', 'fixed72x96', 'fixed72x104', 'fixed72x112', 'fixed72x120', 'fixed72x128', 'fixed72x136', 'fixed72x144', 'fixed72x152', 'fixed72x160', 'fixed72x168', 'fixed72x176', 'fixed72x184', 'fixed80x8', 'fixed80x16', 'fixed80x24', 'fixed80x32', 'fixed80x40', 'fixed80x48', 'fixed80x56', 'fixed80x64', 'fixed80x72', 'fixed80x80', 'fixed80x88', 'fixed80x96', 'fixed80x104', 'fixed80x112', 'fixed80x120', 'fixed80x128', 'fixed80x136', 'fixed80x144', 'fixed80x152', 'fixed80x160', 'fixed80x168', 'fixed80x176', 'fixed88x8', 'fixed88x16', 'fixed88x24', 'fixed88x32', 'fixed88x40', 'fixed88x48', 'fixed88x56', 'fixed88x64', 'fixed88x72', 'fixed88x80', 'fixed88x88', 'fixed88x96', 'fixed88x104', 'fixed88x112', 'fixed88x120', 'fixed88x128', 'fixed88x136', 'fixed88x144', 'fixed88x152', 'fixed88x160', 'fixed88x168', 'fixed96x8', 'fixed96x16', 'fixed96x24', 'fixed96x32', 'fixed96x40', 'fixed96x48', 'fixed96x56', 'fixed96x64', 'fixed96x72', 'fixed96x80', 'fixed96x88', 'fixed96x96', 'fixed96x104', 'fixed96x112', 'fixed96x120', 'fixed96x128', 'fixed96x136', 'fixed96x144', 'fixed96x152', 'fixed96x160', 'fixed104x8', 'fixed104x16', 'fixed104x24', 'fixed104x32', 'fixed104x40', 'fixed104x48', 'fixed104x56', 'fixed104x64', 'fixed104x72', 'fixed104x80', 'fixed104x88', 'fixed104x96', 'fixed104x104', 'fixed104x112', 'fixed104x120', 'fixed104x128', 'fixed104x136', 'fixed104x144', 'fixed104x152', 'fixed112x8', 'fixed112x16', 'fixed112x24', 'fixed112x32', 'fixed112x40', 'fixed112x48', 'fixed112x56', 'fixed112x64', 'fixed112x72', 'fixed112x80', 'fixed112x88', 'fixed112x96', 'fixed112x104', 'fixed112x112', 'fixed112x120', 'fixed112x128', 'fixed112x136', 'fixed112x144', 'fixed120x8', 'fixed120x16', 'fixed120x24', 'fixed120x32', 'fixed120x40', 'fixed120x48', 'fixed120x56', 'fixed120x64', 'fixed120x72', 'fixed120x80', 'fixed120x88', 'fixed120x96', 'fixed120x104', 'fixed120x112', 'fixed120x120', 'fixed120x128', 'fixed120x136', 'fixed128x8', 'fixed128x16', 'fixed128x24', 'fixed128x32', 'fixed128x40', 'fixed128x48', 'fixed128x56', 'fixed128x64', 'fixed128x72', 'fixed128x80', 'fixed128x88', 'fixed128x96', 'fixed128x104', 'fixed128x112', 'fixed128x120', 'fixed128x128', 'fixed136x8', 'fixed136x16', 'fixed136x24', 'fixed136x32', 'fixed136x40', 'fixed136x48', 'fixed136x56', 'fixed136x64', 'fixed136x72', 'fixed136x80', 'fixed136x88', 'fixed136x96', 'fixed136x104', 'fixed136x112', 'fixed136x120', 'fixed144x8', 'fixed144x16', 'fixed144x24', 'fixed144x32', 'fixed144x40', 'fixed144x48', 'fixed144x56', 'fixed144x64', 'fixed144x72', 'fixed144x80', 'fixed144x88', 'fixed144x96', 'fixed144x104', 'fixed144x112', 'fixed152x8', 'fixed152x16', 'fixed152x24', 'fixed152x32', 'fixed152x40', 'fixed152x48', 'fixed152x56', 'fixed152x64', 'fixed152x72', 'fixed152x80', 'fixed152x88', 'fixed152x96', 'fixed152x104', 'fixed160x8', 'fixed160x16', 'fixed160x24', 'fixed160x32', 'fixed160x40', 'fixed160x48', 'fixed160x56', 'fixed160x64', 'fixed160x72', 'fixed160x80', 'fixed160x88', 'fixed160x96', 'fixed168x8', 'fixed168x16', 'fixed168x24', 'fixed168x32', 'fixed168x40', 'fixed168x48', 'fixed168x56', 'fixed168x64', 'fixed168x72', 'fixed168x80', 'fixed168x88', 'fixed176x8', 'fixed176x16', 'fixed176x24', 'fixed176x32', 'fixed176x40', 'fixed176x48', 'fixed176x56', 'fixed176x64', 'fixed176x72', 'fixed176x80', 'fixed184x8', 'fixed184x16', 'fixed184x24', 'fixed184x32', 'fixed184x40', 'fixed184x48', 'fixed184x56', 'fixed184x64', 'fixed184x72', 'fixed192x8', 'fixed192x16', 'fixed192x24', 'fixed192x32', 'fixed192x40', 'fixed192x48', 'fixed192x56', 'fixed192x64', 'fixed200x8', 'fixed200x16', 'fixed200x24', 'fixed200x32', 'fixed200x40', 'fixed200x48', 'fixed200x56', 'fixed208x8', 'fixed208x16', 'fixed208x24', 'fixed208x32', 'fixed208x40', 'fixed208x48', 'fixed216x8', 'fixed216x16', 'fixed216x24', 'fixed216x32', 'fixed216x40', 'fixed224x8', 'fixed224x16', 'fixed224x24', 'fixed224x32', 'fixed232x8', 'fixed232x16', 'fixed232x24', 'fixed240x8', 'fixed240x16', 'fixed248x8',\n        //All ufixed\n        'ufixed', 'ufixed0x8', 'ufixed0x16', 'ufixed0x24', 'ufixed0x32', 'ufixed0x40', 'ufixed0x48', 'ufixed0x56', 'ufixed0x64', 'ufixed0x72', 'ufixed0x80', 'ufixed0x88', 'ufixed0x96', 'ufixed0x104', 'ufixed0x112', 'ufixed0x120', 'ufixed0x128', 'ufixed0x136', 'ufixed0x144', 'ufixed0x152', 'ufixed0x160', 'ufixed0x168', 'ufixed0x176', 'ufixed0x184', 'ufixed0x192', 'ufixed0x200', 'ufixed0x208', 'ufixed0x216', 'ufixed0x224', 'ufixed0x232', 'ufixed0x240', 'ufixed0x248', 'ufixed0x256', 'ufixed8x8', 'ufixed8x16', 'ufixed8x24', 'ufixed8x32', 'ufixed8x40', 'ufixed8x48', 'ufixed8x56', 'ufixed8x64', 'ufixed8x72', 'ufixed8x80', 'ufixed8x88', 'ufixed8x96', 'ufixed8x104', 'ufixed8x112', 'ufixed8x120', 'ufixed8x128', 'ufixed8x136', 'ufixed8x144', 'ufixed8x152', 'ufixed8x160', 'ufixed8x168', 'ufixed8x176', 'ufixed8x184', 'ufixed8x192', 'ufixed8x200', 'ufixed8x208', 'ufixed8x216', 'ufixed8x224', 'ufixed8x232', 'ufixed8x240', 'ufixed8x248', 'ufixed16x8', 'ufixed16x16', 'ufixed16x24', 'ufixed16x32', 'ufixed16x40', 'ufixed16x48', 'ufixed16x56', 'ufixed16x64', 'ufixed16x72', 'ufixed16x80', 'ufixed16x88', 'ufixed16x96', 'ufixed16x104', 'ufixed16x112', 'ufixed16x120', 'ufixed16x128', 'ufixed16x136', 'ufixed16x144', 'ufixed16x152', 'ufixed16x160', 'ufixed16x168', 'ufixed16x176', 'ufixed16x184', 'ufixed16x192', 'ufixed16x200', 'ufixed16x208', 'ufixed16x216', 'ufixed16x224', 'ufixed16x232', 'ufixed16x240', 'ufixed24x8', 'ufixed24x16', 'ufixed24x24', 'ufixed24x32', 'ufixed24x40', 'ufixed24x48', 'ufixed24x56', 'ufixed24x64', 'ufixed24x72', 'ufixed24x80', 'ufixed24x88', 'ufixed24x96', 'ufixed24x104', 'ufixed24x112', 'ufixed24x120', 'ufixed24x128', 'ufixed24x136', 'ufixed24x144', 'ufixed24x152', 'ufixed24x160', 'ufixed24x168', 'ufixed24x176', 'ufixed24x184', 'ufixed24x192', 'ufixed24x200', 'ufixed24x208', 'ufixed24x216', 'ufixed24x224', 'ufixed24x232', 'ufixed32x8', 'ufixed32x16', 'ufixed32x24', 'ufixed32x32', 'ufixed32x40', 'ufixed32x48', 'ufixed32x56', 'ufixed32x64', 'ufixed32x72', 'ufixed32x80', 'ufixed32x88', 'ufixed32x96', 'ufixed32x104', 'ufixed32x112', 'ufixed32x120', 'ufixed32x128', 'ufixed32x136', 'ufixed32x144', 'ufixed32x152', 'ufixed32x160', 'ufixed32x168', 'ufixed32x176', 'ufixed32x184', 'ufixed32x192', 'ufixed32x200', 'ufixed32x208', 'ufixed32x216', 'ufixed32x224', 'ufixed40x8', 'ufixed40x16', 'ufixed40x24', 'ufixed40x32', 'ufixed40x40', 'ufixed40x48', 'ufixed40x56', 'ufixed40x64', 'ufixed40x72', 'ufixed40x80', 'ufixed40x88', 'ufixed40x96', 'ufixed40x104', 'ufixed40x112', 'ufixed40x120', 'ufixed40x128', 'ufixed40x136', 'ufixed40x144', 'ufixed40x152', 'ufixed40x160', 'ufixed40x168', 'ufixed40x176', 'ufixed40x184', 'ufixed40x192', 'ufixed40x200', 'ufixed40x208', 'ufixed40x216', 'ufixed48x8', 'ufixed48x16', 'ufixed48x24', 'ufixed48x32', 'ufixed48x40', 'ufixed48x48', 'ufixed48x56', 'ufixed48x64', 'ufixed48x72', 'ufixed48x80', 'ufixed48x88', 'ufixed48x96', 'ufixed48x104', 'ufixed48x112', 'ufixed48x120', 'ufixed48x128', 'ufixed48x136', 'ufixed48x144', 'ufixed48x152', 'ufixed48x160', 'ufixed48x168', 'ufixed48x176', 'ufixed48x184', 'ufixed48x192', 'ufixed48x200', 'ufixed48x208', 'ufixed56x8', 'ufixed56x16', 'ufixed56x24', 'ufixed56x32', 'ufixed56x40', 'ufixed56x48', 'ufixed56x56', 'ufixed56x64', 'ufixed56x72', 'ufixed56x80', 'ufixed56x88', 'ufixed56x96', 'ufixed56x104', 'ufixed56x112', 'ufixed56x120', 'ufixed56x128', 'ufixed56x136', 'ufixed56x144', 'ufixed56x152', 'ufixed56x160', 'ufixed56x168', 'ufixed56x176', 'ufixed56x184', 'ufixed56x192', 'ufixed56x200', 'ufixed64x8', 'ufixed64x16', 'ufixed64x24', 'ufixed64x32', 'ufixed64x40', 'ufixed64x48', 'ufixed64x56', 'ufixed64x64', 'ufixed64x72', 'ufixed64x80', 'ufixed64x88', 'ufixed64x96', 'ufixed64x104', 'ufixed64x112', 'ufixed64x120', 'ufixed64x128', 'ufixed64x136', 'ufixed64x144', 'ufixed64x152', 'ufixed64x160', 'ufixed64x168', 'ufixed64x176', 'ufixed64x184', 'ufixed64x192', 'ufixed72x8', 'ufixed72x16', 'ufixed72x24', 'ufixed72x32', 'ufixed72x40', 'ufixed72x48', 'ufixed72x56', 'ufixed72x64', 'ufixed72x72', 'ufixed72x80', 'ufixed72x88', 'ufixed72x96', 'ufixed72x104', 'ufixed72x112', 'ufixed72x120', 'ufixed72x128', 'ufixed72x136', 'ufixed72x144', 'ufixed72x152', 'ufixed72x160', 'ufixed72x168', 'ufixed72x176', 'ufixed72x184', 'ufixed80x8', 'ufixed80x16', 'ufixed80x24', 'ufixed80x32', 'ufixed80x40', 'ufixed80x48', 'ufixed80x56', 'ufixed80x64', 'ufixed80x72', 'ufixed80x80', 'ufixed80x88', 'ufixed80x96', 'ufixed80x104', 'ufixed80x112', 'ufixed80x120', 'ufixed80x128', 'ufixed80x136', 'ufixed80x144', 'ufixed80x152', 'ufixed80x160', 'ufixed80x168', 'ufixed80x176', 'ufixed88x8', 'ufixed88x16', 'ufixed88x24', 'ufixed88x32', 'ufixed88x40', 'ufixed88x48', 'ufixed88x56', 'ufixed88x64', 'ufixed88x72', 'ufixed88x80', 'ufixed88x88', 'ufixed88x96', 'ufixed88x104', 'ufixed88x112', 'ufixed88x120', 'ufixed88x128', 'ufixed88x136', 'ufixed88x144', 'ufixed88x152', 'ufixed88x160', 'ufixed88x168', 'ufixed96x8', 'ufixed96x16', 'ufixed96x24', 'ufixed96x32', 'ufixed96x40', 'ufixed96x48', 'ufixed96x56', 'ufixed96x64', 'ufixed96x72', 'ufixed96x80', 'ufixed96x88', 'ufixed96x96', 'ufixed96x104', 'ufixed96x112', 'ufixed96x120', 'ufixed96x128', 'ufixed96x136', 'ufixed96x144', 'ufixed96x152', 'ufixed96x160', 'ufixed104x8', 'ufixed104x16', 'ufixed104x24', 'ufixed104x32', 'ufixed104x40', 'ufixed104x48', 'ufixed104x56', 'ufixed104x64', 'ufixed104x72', 'ufixed104x80', 'ufixed104x88', 'ufixed104x96', 'ufixed104x104', 'ufixed104x112', 'ufixed104x120', 'ufixed104x128', 'ufixed104x136', 'ufixed104x144', 'ufixed104x152', 'ufixed112x8', 'ufixed112x16', 'ufixed112x24', 'ufixed112x32', 'ufixed112x40', 'ufixed112x48', 'ufixed112x56', 'ufixed112x64', 'ufixed112x72', 'ufixed112x80', 'ufixed112x88', 'ufixed112x96', 'ufixed112x104', 'ufixed112x112', 'ufixed112x120', 'ufixed112x128', 'ufixed112x136', 'ufixed112x144', 'ufixed120x8', 'ufixed120x16', 'ufixed120x24', 'ufixed120x32', 'ufixed120x40', 'ufixed120x48', 'ufixed120x56', 'ufixed120x64', 'ufixed120x72', 'ufixed120x80', 'ufixed120x88', 'ufixed120x96', 'ufixed120x104', 'ufixed120x112', 'ufixed120x120', 'ufixed120x128', 'ufixed120x136', 'ufixed128x8', 'ufixed128x16', 'ufixed128x24', 'ufixed128x32', 'ufixed128x40', 'ufixed128x48', 'ufixed128x56', 'ufixed128x64', 'ufixed128x72', 'ufixed128x80', 'ufixed128x88', 'ufixed128x96', 'ufixed128x104', 'ufixed128x112', 'ufixed128x120', 'ufixed128x128', 'ufixed136x8', 'ufixed136x16', 'ufixed136x24', 'ufixed136x32', 'ufixed136x40', 'ufixed136x48', 'ufixed136x56', 'ufixed136x64', 'ufixed136x72', 'ufixed136x80', 'ufixed136x88', 'ufixed136x96', 'ufixed136x104', 'ufixed136x112', 'ufixed136x120', 'ufixed144x8', 'ufixed144x16', 'ufixed144x24', 'ufixed144x32', 'ufixed144x40', 'ufixed144x48', 'ufixed144x56', 'ufixed144x64', 'ufixed144x72', 'ufixed144x80', 'ufixed144x88', 'ufixed144x96', 'ufixed144x104', 'ufixed144x112', 'ufixed152x8', 'ufixed152x16', 'ufixed152x24', 'ufixed152x32', 'ufixed152x40', 'ufixed152x48', 'ufixed152x56', 'ufixed152x64', 'ufixed152x72', 'ufixed152x80', 'ufixed152x88', 'ufixed152x96', 'ufixed152x104', 'ufixed160x8', 'ufixed160x16', 'ufixed160x24', 'ufixed160x32', 'ufixed160x40', 'ufixed160x48', 'ufixed160x56', 'ufixed160x64', 'ufixed160x72', 'ufixed160x80', 'ufixed160x88', 'ufixed160x96', 'ufixed168x8', 'ufixed168x16', 'ufixed168x24', 'ufixed168x32', 'ufixed168x40', 'ufixed168x48', 'ufixed168x56', 'ufixed168x64', 'ufixed168x72', 'ufixed168x80', 'ufixed168x88', 'ufixed176x8', 'ufixed176x16', 'ufixed176x24', 'ufixed176x32', 'ufixed176x40', 'ufixed176x48', 'ufixed176x56', 'ufixed176x64', 'ufixed176x72', 'ufixed176x80', 'ufixed184x8', 'ufixed184x16', 'ufixed184x24', 'ufixed184x32', 'ufixed184x40', 'ufixed184x48', 'ufixed184x56', 'ufixed184x64', 'ufixed184x72', 'ufixed192x8', 'ufixed192x16', 'ufixed192x24', 'ufixed192x32', 'ufixed192x40', 'ufixed192x48', 'ufixed192x56', 'ufixed192x64', 'ufixed200x8', 'ufixed200x16', 'ufixed200x24', 'ufixed200x32', 'ufixed200x40', 'ufixed200x48', 'ufixed200x56', 'ufixed208x8', 'ufixed208x16', 'ufixed208x24', 'ufixed208x32', 'ufixed208x40', 'ufixed208x48', 'ufixed216x8', 'ufixed216x16', 'ufixed216x24', 'ufixed216x32', 'ufixed216x40', 'ufixed224x8', 'ufixed224x16', 'ufixed224x24', 'ufixed224x32', 'ufixed232x8', 'ufixed232x16', 'ufixed232x24', 'ufixed240x8', 'ufixed240x16', 'ufixed248x8',\n        'event',\n        'enum',\n        'let',\n        'mapping',\n        'private',\n        'public',\n        'external',\n        'inherited',\n        'payable',\n        'true',\n        'false',\n        'var',\n        'import',\n        'constant',\n        'if',\n        'else',\n        'for',\n        'else',\n        'for',\n        'while',\n        'do',\n        'break',\n        'continue',\n        'throw',\n        'returns',\n        'return',\n        'suicide',\n        'new',\n        'is',\n        'this',\n        'super'\n    ],\n    operators: [\n        '=', '>', '<', '!', '~', '?', ':',\n        '==', '<=', '>=', '!=', '&&', '||', '++', '--',\n        '+', '-', '*', '/', '&', '|', '^', '%', '<<',\n        '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\n        '^=', '%=', '<<=', '>>=', '>>>='\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    integersuffix: /(ll|LL|u|U|l|L)?(ll|LL|u|U|l|L)?/,\n    floatsuffix: /[fFlL]?/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // [[ attributes ]].\n            [/\\[\\[.*\\]\\]/, 'annotation'],\n            // Preprocessor directive\n            [/^\\s*#\\w+/, 'keyword'],\n            //DataTypes\n            [/int\\d*/, 'keyword'],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }],\n            // numbers\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/0[xX][0-9a-fA-F']*[0-9a-fA-F](@integersuffix)/, 'number.hex'],\n            [/0[0-7']*[0-7](@integersuffix)/, 'number.octal'],\n            [/0[bB][0-1']*[0-1](@integersuffix)/, 'number.binary'],\n            [/\\d[\\d']*\\d(@integersuffix)/, 'number'],\n            [/\\d(@integersuffix)/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string'],\n            // characters\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@doccomment'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            [/\\*\\//, 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        //Identical copy of comment above, except for the addition of .doc\n        doccomment: [\n            [/[^\\/*]+/, 'comment.doc'],\n            [/\\*\\//, 'comment.doc', '@pop'],\n            [/[\\/*]/, 'comment.doc']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, 'string', '@pop']\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@$#!.:]?[\\w-?]+%?)|[@#!.]/g,\n    comments: {\n        blockComment: ['/*', '*/'],\n        lineComment: '//'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\n            end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.scss',\n    ws: '[ \\t\\n\\r\\f]*',\n    identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.bracket' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '<', close: '>', token: 'delimiter.angle' }\n    ],\n    tokenizer: {\n        root: [\n            { include: '@selector' },\n        ],\n        selector: [\n            { include: '@comments' },\n            { include: '@import' },\n            { include: '@variabledeclaration' },\n            { include: '@warndebug' },\n            ['[@](include)', { token: 'keyword', next: '@includedeclaration' }],\n            ['[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)', { token: 'keyword', next: '@keyframedeclaration' }],\n            ['[@](page|content|font-face|-moz-document)', { token: 'keyword' }],\n            ['[@](charset|namespace)', { token: 'keyword', next: '@declarationbody' }],\n            ['[@](function)', { token: 'keyword', next: '@functiondeclaration' }],\n            ['[@](mixin)', { token: 'keyword', next: '@mixindeclaration' }],\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\n            { include: '@controlstatement' },\n            { include: '@selectorname' },\n            ['[&\\\\*]', 'tag'],\n            ['[>\\\\+,]', 'delimiter'],\n            ['\\\\[', { token: 'delimiter.bracket', next: '@selectorattribute' }],\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }],\n        ],\n        selectorbody: [\n            ['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', 'attribute.name', '@rulevalue'],\n            { include: '@selector' },\n            ['[@](extend)', { token: 'keyword', next: '@extendbody' }],\n            ['[@](return)', { token: 'keyword', next: '@declarationbody' }],\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\n        ],\n        selectorname: [\n            ['#{', { token: 'meta', next: '@variableinterpolation' }],\n            ['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', 'tag'],\n        ],\n        selectorattribute: [\n            { include: '@term' },\n            [']', { token: 'delimiter.bracket', next: '@pop' }],\n        ],\n        term: [\n            { include: '@comments' },\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\n            { include: '@functioninvocation' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            { include: '@variablereference' },\n            ['(and\\\\b|or\\\\b|not\\\\b)', 'operator'],\n            { include: '@name' },\n            ['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'operator'],\n            [',', 'delimiter'],\n            ['!default', 'literal'],\n            ['\\\\(', { token: 'delimiter.parenthesis', next: '@parenthizedterm' }],\n        ],\n        rulevalue: [\n            { include: '@term' },\n            ['!important', 'literal'],\n            [';', 'delimiter', '@pop'],\n            ['{', { token: 'delimiter.curly', switchTo: '@nestedproperty' }],\n            ['(?=})', { token: '', next: '@pop' }],\n        ],\n        nestedproperty: [\n            ['[*_]?@identifier@ws:', 'attribute.name', '@rulevalue'],\n            { include: '@comments' },\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\n        ],\n        warndebug: [\n            ['[@](warn|debug)', { token: 'keyword', next: '@declarationbody' }],\n        ],\n        import: [\n            ['[@](import)', { token: 'keyword', next: '@declarationbody' }],\n        ],\n        variabledeclaration: [\n            ['\\\\$@identifier@ws:', 'variable.decl', '@declarationbody'],\n        ],\n        urldeclaration: [\n            { include: '@strings' },\n            ['[^)\\r\\n]+', 'string'],\n            ['\\\\)', { token: 'meta', next: '@pop' }],\n        ],\n        parenthizedterm: [\n            { include: '@term' },\n            ['\\\\)', { token: 'delimiter.parenthesis', next: '@pop' }],\n        ],\n        declarationbody: [\n            { include: '@term' },\n            [';', 'delimiter', '@pop'],\n            ['(?=})', { token: '', next: '@pop' }],\n        ],\n        extendbody: [\n            { include: '@selectorname' },\n            ['!optional', 'literal'],\n            [';', 'delimiter', '@pop'],\n            ['(?=})', { token: '', next: '@pop' }],\n        ],\n        variablereference: [\n            ['\\\\$@identifier', 'variable.ref'],\n            ['\\\\.\\\\.\\\\.', 'operator'],\n            ['#{', { token: 'meta', next: '@variableinterpolation' }],\n        ],\n        variableinterpolation: [\n            { include: '@variablereference' },\n            ['}', { token: 'meta', next: '@pop' }],\n        ],\n        comments: [\n            ['\\\\/\\\\*', 'comment', '@comment'],\n            ['\\\\/\\\\/+.*', 'comment'],\n        ],\n        comment: [\n            ['\\\\*\\\\/', 'comment', '@pop'],\n            ['.', 'comment'],\n        ],\n        name: [\n            ['@identifier', 'attribute.value'],\n        ],\n        numbers: [\n            ['(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', { token: 'number', next: '@units' }],\n            ['#[0-9a-fA-F_]+(?!\\\\w)', 'number.hex'],\n        ],\n        units: [\n            ['(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?', 'number', '@pop']\n        ],\n        functiondeclaration: [\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\n            ['{', { token: 'delimiter.curly', switchTo: '@functionbody' }],\n        ],\n        mixindeclaration: [\n            // mixin with parameters\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\n            // mixin without parameters\n            ['@identifier', 'meta'],\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }],\n        ],\n        parameterdeclaration: [\n            ['\\\\$@identifier@ws:', 'variable.decl'],\n            ['\\\\.\\\\.\\\\.', 'operator'],\n            [',', 'delimiter'],\n            { include: '@term' },\n            ['\\\\)', { token: 'meta', next: '@pop' }],\n        ],\n        includedeclaration: [\n            { include: '@functioninvocation' },\n            ['@identifier', 'meta'],\n            [';', 'delimiter', '@pop'],\n            ['(?=})', { token: '', next: '@pop' }],\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }],\n        ],\n        keyframedeclaration: [\n            ['@identifier', 'meta'],\n            ['{', { token: 'delimiter.curly', switchTo: '@keyframebody' }],\n        ],\n        keyframebody: [\n            { include: '@term' },\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }],\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\n        ],\n        controlstatement: [\n            ['[@](if|else|for|while|each|media)', { token: 'keyword.flow', next: '@controlstatementdeclaration' }],\n        ],\n        controlstatementdeclaration: [\n            ['(in|from|through|if|to)\\\\b', { token: 'keyword.flow' }],\n            { include: '@term' },\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }],\n        ],\n        functionbody: [\n            ['[@](return)', { token: 'keyword' }],\n            { include: '@variabledeclaration' },\n            { include: '@term' },\n            { include: '@controlstatement' },\n            [';', 'delimiter'],\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\n        ],\n        functioninvocation: [\n            ['@identifier\\\\(', { token: 'meta', next: '@functionarguments' }],\n        ],\n        functionarguments: [\n            ['\\\\$@identifier@ws:', 'attribute.name'],\n            ['[,]', 'delimiter'],\n            { include: '@term' },\n            ['\\\\)', { token: 'meta', next: '@pop' }],\n        ],\n        strings: [\n            ['~?\"', { token: 'string.delimiter', next: '@stringenddoublequote' }],\n            ['~?\\'', { token: 'string.delimiter', next: '@stringendquote' }]\n        ],\n        stringenddoublequote: [\n            ['\\\\\\\\.', 'string'],\n            ['\"', { token: 'string.delimiter', next: '@pop' }],\n            ['.', 'string']\n        ],\n        stringendquote: [\n            ['\\\\\\\\.', 'string'],\n            ['\\'', { token: 'string.delimiter', next: '@pop' }],\n            ['.', 'string']\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '[', close: ']' },\n        { open: '{', close: '}' },\n        { open: '(', close: ')' },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    tokenPostfix: '.rust',\n    defaultToken: 'invalid',\n    keywords: [\n        'as', 'box', 'break', 'const', 'continue', 'crate', 'else', 'enum',\n        'extern', 'false', 'fn', 'for', 'if', 'impl', 'in', 'let', 'loop',\n        'match', 'mod', 'move', 'mut', 'pub', 'ref', 'return', 'self',\n        'static', 'struct', 'super', 'trait', 'true', 'type', 'unsafe', 'use',\n        'where', 'while', 'catch', 'default', 'union', 'static', 'abstract',\n        'alignof', 'become', 'do', 'final', 'macro', 'offsetof', 'override',\n        'priv', 'proc', 'pure', 'sizeof', 'typeof', 'unsized', 'virtual',\n        'yield',\n    ],\n    typeKeywords: [\n        'Self', 'm32', 'm64', 'm128', 'f80', 'f16', 'f128', 'int', 'uint',\n        'float', 'char', 'bool', 'u8', 'u16', 'u32', 'u64', 'f32', 'f64', 'i8',\n        'i16', 'i32', 'i64', 'str', 'Option', 'Either', 'c_float', 'c_double',\n        'c_void', 'FILE', 'fpos_t', 'DIR', 'dirent', 'c_char', 'c_schar',\n        'c_uchar', 'c_short', 'c_ushort', 'c_int', 'c_uint', 'c_long',\n        'c_ulong', 'size_t', 'ptrdiff_t', 'clock_t', 'time_t', 'c_longlong',\n        'c_ulonglong', 'intptr_t', 'uintptr_t', 'off_t', 'dev_t', 'ino_t',\n        'pid_t', 'mode_t', 'ssize_t',\n    ],\n    constants: [\n        'true', 'false', 'Some', 'None', 'Left', 'Right', 'Ok', 'Err',\n    ],\n    supportConstants: [\n        'EXIT_FAILURE', 'EXIT_SUCCESS', 'RAND_MAX', 'EOF', 'SEEK_SET',\n        'SEEK_CUR', 'SEEK_END', '_IOFBF', '_IONBF', '_IOLBF', 'BUFSIZ',\n        'FOPEN_MAX', 'FILENAME_MAX', 'L_tmpnam', 'TMP_MAX', 'O_RDONLY',\n        'O_WRONLY', 'O_RDWR', 'O_APPEND', 'O_CREAT', 'O_EXCL', 'O_TRUNC',\n        'S_IFIFO', 'S_IFCHR', 'S_IFBLK', 'S_IFDIR', 'S_IFREG', 'S_IFMT',\n        'S_IEXEC', 'S_IWRITE', 'S_IREAD', 'S_IRWXU', 'S_IXUSR', 'S_IWUSR',\n        'S_IRUSR', 'F_OK', 'R_OK', 'W_OK', 'X_OK', 'STDIN_FILENO',\n        'STDOUT_FILENO', 'STDERR_FILENO',\n    ],\n    supportMacros: [\n        'format!', 'print!', 'println!', 'panic!', 'format_args!', 'unreachable!',\n        'write!', 'writeln!'\n    ],\n    operators: [\n        '!', '!=', '%', '%=', '&', '&=', '&&', '*', '*=', '+', '+=', '-', '-=',\n        '->', '.', '..', '...', '/', '/=', ':', ';', '<<', '<<=', '<', '<=', '=',\n        '==', '=>', '>', '>=', '>>', '>>=', '@', '^', '^=', '|', '|=', '||', '_',\n        '?', '#'\n    ],\n    escapes: /\\\\([nrt0\\\"''\\\\]|x\\h{2}|u\\{\\h{1,6}\\})/,\n    delimiters: /[,]/,\n    symbols: /[\\#\\!\\%\\&\\*\\+\\-\\.\\/\\:\\;\\<\\=\\>\\@\\^\\|_\\?]+/,\n    intSuffixes: /[iu](8|16|32|64|128|size)/,\n    floatSuffixes: /f(32|64)/,\n    tokenizer: {\n        root: [\n            [/[a-zA-Z][a-zA-Z0-9_]*!?|_[a-zA-Z0-9_]+/,\n                {\n                    cases: {\n                        '@typeKeywords': 'keyword.type',\n                        '@keywords': 'keyword',\n                        '@supportConstants': 'keyword',\n                        '@supportMacros': 'keyword',\n                        '@constants': 'keyword',\n                        '@default': 'identifier',\n                    }\n                }\n            ],\n            // Designator\n            [/\\$/, 'identifier'],\n            // Lifetime annotations\n            [/'[a-zA-Z_][a-zA-Z0-9_]*(?=[^\\'])/, 'identifier'],\n            // Byte literal\n            [/'\\S'/, 'string.byteliteral'],\n            // Strings\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string' }],\n            { include: '@numbers' },\n            // Whitespace + comments\n            { include: '@whitespace' },\n            [/@delimiters/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@default': 'delimiter'\n                    }\n                }],\n            [/[{}()\\[\\]<>]/, '@brackets'],\n            [/@symbols/, { cases: { '@operators': 'operator', '@default': '' } }],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            [/\\/\\*/, 'comment', '@push'],\n            [\"\\\\*/\", 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ],\n        numbers: [\n            //Octal\n            [/(0o[0-7_]+)(@intSuffixes)?/, { token: 'number' }],\n            //Binary\n            [/(0b[0-1_]+)(@intSuffixes)?/, { token: 'number' }],\n            //Exponent\n            [/[\\d][\\d_]*(\\.[\\d][\\d_]*)?[eE][+-][\\d_]+(@floatSuffixes)?/, { token: 'number' }],\n            //Float\n            [/\\b(\\d\\.?[\\d_]*)(@floatSuffixes)?\\b/, { token: 'number' }],\n            //Hexadecimal\n            [/(0x[\\da-fA-F]+)_?(@intSuffixes)?/, { token: 'number' }],\n            //Integer\n            [/[\\d][\\d_]*(@intSuffixes?)?/, { token: 'number' }],\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.redis',\n    ignoreCase: true,\n    brackets: [\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    keywords: [\n        \"APPEND\", \"AUTH\", \"BGREWRITEAOF\", \"BGSAVE\", \"BITCOUNT\", \"BITFIELD\", \"BITOP\", \"BITPOS\", \"BLPOP\", \"BRPOP\", \"BRPOPLPUSH\",\n        \"CLIENT\", \"KILL\", \"LIST\", \"GETNAME\", \"PAUSE\", \"REPLY\", \"SETNAME\", \"CLUSTER\", \"ADDSLOTS\", \"COUNT-FAILURE-REPORTS\",\n        \"COUNTKEYSINSLOT\", \"DELSLOTS\", \"FAILOVER\", \"FORGET\", \"GETKEYSINSLOT\", \"INFO\", \"KEYSLOT\", \"MEET\", \"NODES\", \"REPLICATE\",\n        \"RESET\", \"SAVECONFIG\", \"SET-CONFIG-EPOCH\", \"SETSLOT\", \"SLAVES\", \"SLOTS\", \"COMMAND\", \"COUNT\", \"GETKEYS\", \"CONFIG\", \"GET\",\n        \"REWRITE\", \"SET\", \"RESETSTAT\", \"DBSIZE\", \"DEBUG\", \"OBJECT\", \"SEGFAULT\", \"DECR\", \"DECRBY\", \"DEL\", \"DISCARD\", \"DUMP\", \"ECHO\",\n        \"EVAL\", \"EVALSHA\", \"EXEC\", \"EXISTS\", \"EXPIRE\", \"EXPIREAT\", \"FLUSHALL\", \"FLUSHDB\", \"GEOADD\", \"GEOHASH\", \"GEOPOS\", \"GEODIST\",\n        \"GEORADIUS\", \"GEORADIUSBYMEMBER\", \"GETBIT\", \"GETRANGE\", \"GETSET\", \"HDEL\", \"HEXISTS\", \"HGET\", \"HGETALL\", \"HINCRBY\", \"HINCRBYFLOAT\",\n        \"HKEYS\", \"HLEN\", \"HMGET\", \"HMSET\", \"HSET\", \"HSETNX\", \"HSTRLEN\", \"HVALS\", \"INCR\", \"INCRBY\", \"INCRBYFLOAT\", \"KEYS\", \"LASTSAVE\",\n        \"LINDEX\", \"LINSERT\", \"LLEN\", \"LPOP\", \"LPUSH\", \"LPUSHX\", \"LRANGE\", \"LREM\", \"LSET\", \"LTRIM\", \"MGET\", \"MIGRATE\", \"MONITOR\",\n        \"MOVE\", \"MSET\", \"MSETNX\", \"MULTI\", \"PERSIST\", \"PEXPIRE\", \"PEXPIREAT\", \"PFADD\", \"PFCOUNT\", \"PFMERGE\", \"PING\", \"PSETEX\",\n        \"PSUBSCRIBE\", \"PUBSUB\", \"PTTL\", \"PUBLISH\", \"PUNSUBSCRIBE\", \"QUIT\", \"RANDOMKEY\", \"READONLY\", \"READWRITE\", \"RENAME\", \"RENAMENX\",\n        \"RESTORE\", \"ROLE\", \"RPOP\", \"RPOPLPUSH\", \"RPUSH\", \"RPUSHX\", \"SADD\", \"SAVE\", \"SCARD\", \"SCRIPT\", \"FLUSH\", \"LOAD\", \"SDIFF\",\n        \"SDIFFSTORE\", \"SELECT\", \"SETBIT\", \"SETEX\", \"SETNX\", \"SETRANGE\", \"SHUTDOWN\", \"SINTER\", \"SINTERSTORE\", \"SISMEMBER\", \"SLAVEOF\",\n        \"SLOWLOG\", \"SMEMBERS\", \"SMOVE\", \"SORT\", \"SPOP\", \"SRANDMEMBER\", \"SREM\", \"STRLEN\", \"SUBSCRIBE\", \"SUNION\", \"SUNIONSTORE\", \"SWAPDB\",\n        \"SYNC\", \"TIME\", \"TOUCH\", \"TTL\", \"TYPE\", \"UNSUBSCRIBE\", \"UNLINK\", \"UNWATCH\", \"WAIT\", \"WATCH\", \"ZADD\", \"ZCARD\", \"ZCOUNT\", \"ZINCRBY\",\n        \"ZINTERSTORE\", \"ZLEXCOUNT\", \"ZRANGE\", \"ZRANGEBYLEX\", \"ZREVRANGEBYLEX\", \"ZRANGEBYSCORE\", \"ZRANK\", \"ZREM\", \"ZREMRANGEBYLEX\",\n        \"ZREMRANGEBYRANK\", \"ZREMRANGEBYSCORE\", \"ZREVRANGE\", \"ZREVRANGEBYSCORE\", \"ZREVRANK\", \"ZSCORE\", \"ZUNIONSTORE\", \"SCAN\", \"SSCAN\",\n        \"HSCAN\", \"ZSCAN\"\n    ],\n    operators: [],\n    builtinFunctions: [],\n    builtinVariables: [],\n    pseudoColumns: [],\n    tokenizer: {\n        root: [\n            { include: '@whitespace' },\n            { include: '@pseudoColumns' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            { include: '@scopes' },\n            [/[;,.]/, 'delimiter'],\n            [/[()]/, '@brackets'],\n            [/[\\w@#$]+/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@operators': 'operator',\n                        '@builtinVariables': 'predefined',\n                        '@builtinFunctions': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            [/[<>=!%&+\\-*/|~^]/, 'operator'],\n        ],\n        whitespace: [\n            [/\\s+/, 'white']\n        ],\n        pseudoColumns: [\n            [/[$][A-Za-z_][\\w@#$]*/, {\n                    cases: {\n                        '@pseudoColumns': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n        ],\n        numbers: [\n            [/0[xX][0-9a-fA-F]*/, 'number'],\n            [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\n            [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\n        ],\n        strings: [\n            [/'/, { token: 'string', next: '@string' }],\n            [/\"/, { token: 'string.double', next: '@stringDouble' }]\n        ],\n        string: [\n            [/[^']+/, 'string'],\n            [/''/, 'string'],\n            [/'/, { token: 'string', next: '@pop' }],\n        ],\n        stringDouble: [\n            [/[^\"]+/, 'string.double'],\n            [/\"\"/, 'string.double'],\n            [/\"/, { token: 'string.double', next: '@pop' }]\n        ],\n        scopes: []\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n// Allow for running under nodejs/requirejs in tests\nvar _monaco = (typeof monaco === 'undefined' ? self.monaco : monaco);\nvar EMPTY_ELEMENTS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n    comments: {\n        blockComment: ['<!--', '-->']\n    },\n    brackets: [\n        ['<!--', '-->'],\n        ['<', '>'],\n        ['{', '}'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' }\n    ],\n    surroundingPairs: [\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n        { open: '<', close: '>' }\n    ],\n    onEnterRules: [\n        {\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n            afterText: /^<\\/(\\w[\\w\\d]*)\\s*>$/i,\n            action: { indentAction: _monaco.languages.IndentAction.IndentOutdent }\n        },\n        {\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n            action: { indentAction: _monaco.languages.IndentAction.Indent }\n        }\n    ],\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '',\n    // ignoreCase: true,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [/@@/],\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.root' }],\n            [/<!DOCTYPE/, 'metatag.html', '@doctype'],\n            [/<!--/, 'comment.html', '@comment'],\n            [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\n            [/(<)(script)/, ['delimiter.html', { token: 'tag.html', next: '@script' }]],\n            [/(<)(style)/, ['delimiter.html', { token: 'tag.html', next: '@style' }]],\n            [/(<)([:\\w]+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\n            [/(<\\/)(\\w+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\n            [/</, 'delimiter.html'],\n            [/[ \\t\\r\\n]+/],\n            [/[^<@]+/],\n        ],\n        doctype: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.comment' }],\n            [/[^>]+/, 'metatag.content.html'],\n            [/>/, 'metatag.html', '@pop'],\n        ],\n        comment: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.comment' }],\n            [/-->/, 'comment.html', '@pop'],\n            [/[^-]+/, 'comment.content.html'],\n            [/./, 'comment.content.html']\n        ],\n        otherTag: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.otherTag' }],\n            [/\\/?>/, 'delimiter.html', '@pop'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n        ],\n        // -- BEGIN <script> tags handling\n        // After <script\n        script: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.script' }],\n            [/type/, 'attribute.name', '@scriptAfterType'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/(<\\/)(script\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\n        ],\n        // After <script ... type\n        scriptAfterType: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.scriptAfterType' }],\n            [/=/, 'delimiter', '@scriptAfterTypeEquals'],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <script ... type =\n        scriptAfterTypeEquals: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.scriptAfterTypeEquals' }],\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <script ... type = $S2\n        scriptWithCustomType: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.scriptWithCustomType.$S2' }],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.$S2', nextEmbedded: '$S2' }],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        scriptEmbedded: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInEmbeddedState.scriptEmbedded.$S2', nextEmbedded: '@pop' }],\n            [/<\\/script/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\n        ],\n        // -- END <script> tags handling\n        // -- BEGIN <style> tags handling\n        // After <style\n        style: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.style' }],\n            [/type/, 'attribute.name', '@styleAfterType'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/(<\\/)(style\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\n        ],\n        // After <style ... type\n        styleAfterType: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.styleAfterType' }],\n            [/=/, 'delimiter', '@styleAfterTypeEquals'],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <style ... type =\n        styleAfterTypeEquals: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.styleAfterTypeEquals' }],\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <style ... type = $S2\n        styleWithCustomType: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.styleWithCustomType.$S2' }],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.$S2', nextEmbedded: '$S2' }],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        styleEmbedded: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInEmbeddedState.styleEmbedded.$S2', nextEmbedded: '@pop' }],\n            [/<\\/style/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\n        ],\n        // -- END <style> tags handling\n        razorInSimpleState: [\n            [/@\\*/, 'comment.cs', '@razorBlockCommentTopLevel'],\n            [/@[{(]/, 'metatag.cs', '@razorRootTopLevel'],\n            [/(@)(\\s*[\\w]+)/, ['metatag.cs', { token: 'identifier.cs', switchTo: '@$S2.$S3' }]],\n            [/[})]/, { token: 'metatag.cs', switchTo: '@$S2.$S3' }],\n            [/\\*@/, { token: 'comment.cs', switchTo: '@$S2.$S3' }],\n        ],\n        razorInEmbeddedState: [\n            [/@\\*/, 'comment.cs', '@razorBlockCommentTopLevel'],\n            [/@[{(]/, 'metatag.cs', '@razorRootTopLevel'],\n            [/(@)(\\s*[\\w]+)/, ['metatag.cs', { token: 'identifier.cs', switchTo: '@$S2.$S3', nextEmbedded: '$S3' }]],\n            [/[})]/, { token: 'metatag.cs', switchTo: '@$S2.$S3', nextEmbedded: '$S3' }],\n            [/\\*@/, { token: 'comment.cs', switchTo: '@$S2.$S3', nextEmbedded: '$S3' }],\n        ],\n        razorBlockCommentTopLevel: [\n            [/\\*@/, '@rematch', '@pop'],\n            [/[^*]+/, 'comment.cs'],\n            [/./, 'comment.cs']\n        ],\n        razorBlockComment: [\n            [/\\*@/, 'comment.cs', '@pop'],\n            [/[^*]+/, 'comment.cs'],\n            [/./, 'comment.cs']\n        ],\n        razorRootTopLevel: [\n            [/\\{/, 'delimiter.bracket.cs', '@razorRoot'],\n            [/\\(/, 'delimiter.parenthesis.cs', '@razorRoot'],\n            [/[})]/, '@rematch', '@pop'],\n            { include: 'razorCommon' }\n        ],\n        razorRoot: [\n            [/\\{/, 'delimiter.bracket.cs', '@razorRoot'],\n            [/\\(/, 'delimiter.parenthesis.cs', '@razorRoot'],\n            [/\\}/, 'delimiter.bracket.cs', '@pop'],\n            [/\\)/, 'delimiter.parenthesis.cs', '@pop'],\n            { include: 'razorCommon' }\n        ],\n        razorCommon: [\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@razorKeywords': { token: 'keyword.cs' },\n                        '@default': 'identifier.cs'\n                    }\n                }],\n            // brackets\n            [/[\\[\\]]/, 'delimiter.array.cs'],\n            // whitespace\n            [/[ \\t\\r\\n]+/],\n            // comments\n            [/\\/\\/.*$/, 'comment.cs'],\n            [/@\\*/, 'comment.cs', '@razorBlockComment'],\n            // strings\n            [/\"([^\"]*)\"/, 'string.cs'],\n            [/'([^']*)'/, 'string.cs'],\n            // simple html\n            [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\n            [/(<)(\\w+)(>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\n            [/(<\\/)(\\w+)(>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\n            // delimiters\n            [/[\\+\\-\\*\\%\\&\\|\\^\\~\\!\\=\\<\\>\\/\\?\\;\\:\\.\\,]/, 'delimiter.cs'],\n            // numbers\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?/, 'number.float.cs'],\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float.cs'],\n            [/0[xX][0-9a-fA-F']*[0-9a-fA-F]/, 'number.hex.cs'],\n            [/0[0-7']*[0-7]/, 'number.octal.cs'],\n            [/0[bB][0-1']*[0-1]/, 'number.binary.cs'],\n            [/\\d[\\d']*/, 'number.cs'],\n            [/\\d/, 'number.cs'],\n        ]\n    },\n    razorKeywords: [\n        'abstract', 'as', 'async', 'await', 'base', 'bool',\n        'break', 'by', 'byte', 'case',\n        'catch', 'char', 'checked', 'class',\n        'const', 'continue', 'decimal', 'default',\n        'delegate', 'do', 'double', 'descending',\n        'explicit', 'event', 'extern', 'else',\n        'enum', 'false', 'finally', 'fixed',\n        'float', 'for', 'foreach', 'from',\n        'goto', 'group', 'if', 'implicit',\n        'in', 'int', 'interface', 'internal',\n        'into', 'is', 'lock', 'long', 'nameof',\n        'new', 'null', 'namespace', 'object',\n        'operator', 'out', 'override', 'orderby',\n        'params', 'private', 'protected', 'public',\n        'readonly', 'ref', 'return', 'switch',\n        'struct', 'sbyte', 'sealed', 'short',\n        'sizeof', 'stackalloc', 'static', 'string',\n        'select', 'this', 'throw', 'true',\n        'try', 'typeof', 'uint', 'ulong',\n        'unchecked', 'unsafe', 'ushort', 'using',\n        'var', 'virtual', 'volatile', 'void', 'when',\n        'while', 'where', 'yield',\n        'model', 'inject' // Razor specific\n    ],\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '#'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.r',\n    roxygen: [\n        '@param',\n        '@return',\n        '@name',\n        '@rdname',\n        '@examples',\n        '@include',\n        '@docType',\n        '@S3method',\n        '@TODO',\n        '@aliases',\n        '@alias',\n        '@assignee',\n        '@author',\n        '@callGraphDepth',\n        '@callGraph',\n        '@callGraphPrimitives',\n        '@concept',\n        '@exportClass',\n        '@exportMethod',\n        '@exportPattern',\n        '@export',\n        '@formals',\n        '@format',\n        '@importClassesFrom',\n        '@importFrom',\n        '@importMethodsFrom',\n        '@import',\n        '@keywords',\n        '@method',\n        '@nord',\n        '@note',\n        '@references',\n        '@seealso',\n        '@setClass',\n        '@slot',\n        '@source',\n        '@title',\n        '@usage'\n    ],\n    constants: [\n        'NULL',\n        'FALSE',\n        'TRUE',\n        'NA',\n        'Inf',\n        'NaN ',\n        'NA_integer_',\n        'NA_real_',\n        'NA_complex_',\n        'NA_character_ ',\n        'T',\n        'F',\n        'LETTERS',\n        'letters',\n        'month.abb',\n        'month.name',\n        'pi',\n        'R.version.string'\n    ],\n    keywords: [\n        'break',\n        'next',\n        'return',\n        'if',\n        'else',\n        'for',\n        'in',\n        'repeat',\n        'while',\n        'array',\n        'category',\n        'character',\n        'complex',\n        'double',\n        'function',\n        'integer',\n        'list',\n        'logical',\n        'matrix',\n        'numeric',\n        'vector',\n        'data.frame',\n        'factor',\n        'library',\n        'require',\n        'attach',\n        'detach',\n        'source'\n    ],\n    special: [\n        '\\\\n',\n        '\\\\r',\n        '\\\\t',\n        '\\\\b',\n        '\\\\a',\n        '\\\\f',\n        '\\\\v',\n        '\\\\\\'',\n        '\\\\\"',\n        '\\\\\\\\'\n    ],\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.bracket' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    tokenizer: {\n        root: [\n            { include: '@numbers' },\n            { include: '@strings' },\n            [/[{}\\[\\]()]/, '@brackets'],\n            { include: '@operators' },\n            [/#'/, 'comment.doc', '@roxygen'],\n            [/(^#.*$)/, 'comment'],\n            [/\\s+/, 'white'],\n            [/[,:;]/, 'delimiter'],\n            [/@[a-zA-Z]\\w*/, 'tag'],\n            [/[a-zA-Z]\\w*/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@constants': 'constant',\n                        '@default': 'identifier'\n                    }\n                }]\n        ],\n        // Recognize Roxygen comments\n        roxygen: [\n            [/@\\w+/, {\n                    cases: {\n                        '@roxygen': 'tag',\n                        '@eos': { token: 'comment.doc', next: '@pop' },\n                        '@default': 'comment.doc'\n                    }\n                }],\n            [/\\s+/, {\n                    cases: {\n                        '@eos': { token: 'comment.doc', next: '@pop' },\n                        '@default': 'comment.doc'\n                    }\n                }],\n            [/.*/, { token: 'comment.doc', next: '@pop' }]\n        ],\n        // Recognize positives, negatives, decimals, imaginaries, and scientific notation\n        numbers: [\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\n            [/-?(\\d*\\.)?\\d+([eE][+\\-]?\\d+)?/, 'number']\n        ],\n        // Recognize operators\n        operators: [\n            [/<{1,2}-/, 'operator'],\n            [/->{1,2}/, 'operator'],\n            [/%[^%\\s]+%/, 'operator'],\n            [/\\*\\*/, 'operator'],\n            [/%%/, 'operator'],\n            [/&&/, 'operator'],\n            [/\\|\\|/, 'operator'],\n            [/<</, 'operator'],\n            [/>>/, 'operator'],\n            [/[-+=&|!<>^~*/:$]/, 'operator']\n        ],\n        // Recognize strings, including those broken across lines\n        strings: [\n            [/'/, 'string.escape', '@stringBody'],\n            [/\"/, 'string.escape', '@dblStringBody']\n        ],\n        stringBody: [\n            [/\\\\./, {\n                    cases: {\n                        '@special': 'string',\n                        '@default': 'error-token'\n                    }\n                }],\n            [/'/, 'string.escape', '@popall'],\n            [/./, 'string'],\n        ],\n        dblStringBody: [\n            [/\\\\./, {\n                    cases: {\n                        '@special': 'string',\n                        '@default': 'error-token'\n                    }\n                }],\n            [/\"/, 'string.escape', '@popall'],\n            [/./, 'string'],\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '#',\n        blockComment: ['\\'\\'\\'', '\\'\\'\\''],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"', notIn: ['string'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        offSide: true,\n        markers: {\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.python',\n    keywords: [\n        'and',\n        'as',\n        'assert',\n        'break',\n        'class',\n        'continue',\n        'def',\n        'del',\n        'elif',\n        'else',\n        'except',\n        'exec',\n        'finally',\n        'for',\n        'from',\n        'global',\n        'if',\n        'import',\n        'in',\n        'is',\n        'lambda',\n        'None',\n        'not',\n        'or',\n        'pass',\n        'print',\n        'raise',\n        'return',\n        'self',\n        'try',\n        'while',\n        'with',\n        'yield',\n        'int',\n        'float',\n        'long',\n        'complex',\n        'hex',\n        'abs',\n        'all',\n        'any',\n        'apply',\n        'basestring',\n        'bin',\n        'bool',\n        'buffer',\n        'bytearray',\n        'callable',\n        'chr',\n        'classmethod',\n        'cmp',\n        'coerce',\n        'compile',\n        'complex',\n        'delattr',\n        'dict',\n        'dir',\n        'divmod',\n        'enumerate',\n        'eval',\n        'execfile',\n        'file',\n        'filter',\n        'format',\n        'frozenset',\n        'getattr',\n        'globals',\n        'hasattr',\n        'hash',\n        'help',\n        'id',\n        'input',\n        'intern',\n        'isinstance',\n        'issubclass',\n        'iter',\n        'len',\n        'locals',\n        'list',\n        'map',\n        'max',\n        'memoryview',\n        'min',\n        'next',\n        'object',\n        'oct',\n        'open',\n        'ord',\n        'pow',\n        'print',\n        'property',\n        'reversed',\n        'range',\n        'raw_input',\n        'reduce',\n        'reload',\n        'repr',\n        'reversed',\n        'round',\n        'set',\n        'setattr',\n        'slice',\n        'sorted',\n        'staticmethod',\n        'str',\n        'sum',\n        'super',\n        'tuple',\n        'type',\n        'unichr',\n        'unicode',\n        'vars',\n        'xrange',\n        'zip',\n        'True',\n        'False',\n        '__dict__',\n        '__methods__',\n        '__members__',\n        '__class__',\n        '__bases__',\n        '__name__',\n        '__mro__',\n        '__subclasses__',\n        '__init__',\n        '__import__'\n    ],\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.bracket' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    tokenizer: {\n        root: [\n            { include: '@whitespace' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            [/[,:;]/, 'delimiter'],\n            [/[{}\\[\\]()]/, '@brackets'],\n            [/@[a-zA-Z]\\w*/, 'tag'],\n            [/[a-zA-Z]\\w*/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@default': 'identifier'\n                    }\n                }]\n        ],\n        // Deal with white space, including single and multi-line comments\n        whitespace: [\n            [/\\s+/, 'white'],\n            [/(^#.*$)/, 'comment'],\n            [/('''.*''')|(\"\"\".*\"\"\")/, 'string'],\n            [/'''.*$/, 'string', '@endDocString'],\n            [/\"\"\".*$/, 'string', '@endDblDocString']\n        ],\n        endDocString: [\n            [/\\\\'/, 'string'],\n            [/.*'''/, 'string', '@popall'],\n            [/.*$/, 'string']\n        ],\n        endDblDocString: [\n            [/\\\\\"/, 'string'],\n            [/.*\"\"\"/, 'string', '@popall'],\n            [/.*$/, 'string']\n        ],\n        // Recognize hex, negatives, decimals, imaginaries, longs, and scientific notation\n        numbers: [\n            [/-?0x([abcdef]|[ABCDEF]|\\d)+[lL]?/, 'number.hex'],\n            [/-?(\\d*\\.)?\\d+([eE][+\\-]?\\d+)?[jJ]?[lL]?/, 'number']\n        ],\n        // Recognize strings, including those broken across lines with \\ (but not without)\n        strings: [\n            [/'$/, 'string.escape', '@popall'],\n            [/'/, 'string.escape', '@stringBody'],\n            [/\"$/, 'string.escape', '@popall'],\n            [/\"/, 'string.escape', '@dblStringBody']\n        ],\n        stringBody: [\n            [/\\\\./, 'string'],\n            [/'/, 'string.escape', '@popall'],\n            [/.(?=.*')/, 'string'],\n            [/.*\\\\$/, 'string'],\n            [/.*$/, 'string', '@popall']\n        ],\n        dblStringBody: [\n            [/\\\\./, 'string'],\n            [/\"/, 'string.escape', '@popall'],\n            [/.(?=.*\")/, 'string'],\n            [/.*\\\\$/, 'string'],\n            [/.*$/, 'string', '@popall']\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    // the default separators except `$-`\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        lineComment: '#',\n        blockComment: ['<#', '#>'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"', notIn: ['string'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.ps1',\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.square', open: '[', close: ']' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\n    ],\n    keywords: [\n        'begin', 'break', 'catch', 'class', 'continue', 'data',\n        'define', 'do', 'dynamicparam', 'else', 'elseif', 'end',\n        'exit', 'filter', 'finally', 'for', 'foreach', 'from',\n        'function', 'if', 'in', 'param', 'process', 'return',\n        'switch', 'throw', 'trap', 'try', 'until', 'using',\n        'var', 'while', 'workflow', 'parallel', 'sequence', 'inlinescript', 'configuration'\n    ],\n    helpKeywords: /SYNOPSIS|DESCRIPTION|PARAMETER|EXAMPLE|INPUTS|OUTPUTS|NOTES|LINK|COMPONENT|ROLE|FUNCTIONALITY|FORWARDHELPTARGETNAME|FORWARDHELPCATEGORY|REMOTEHELPRUNSPACE|EXTERNALHELP/,\n    // we include these common regular expressions\n    symbols: /[=><!~?&%|+\\-*\\/\\^;\\.,]+/,\n    escapes: /`(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // commands and keywords\n            [/[a-zA-Z_][\\w-]*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': ''\n                    }\n                }],\n            // whitespace\n            [/[ \\t\\r\\n]+/, ''],\n            // labels\n            [/^:\\w*/, 'metatag'],\n            // variables\n            [/\\$(\\{((global|local|private|script|using):)?[\\w]+\\}|((global|local|private|script|using):)?[\\w]+)/, 'variable'],\n            // Comments\n            [/<#/, 'comment', '@comment'],\n            [/#.*$/, 'comment'],\n            // delimiters\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\n            [/\\d+?/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings:\n            [/\\@\"/, 'string', '@herestring.\"'],\n            [/\\@'/, 'string', '@herestring.\\''],\n            [/\"/, {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: '@string.\"' }\n                    }\n                }],\n            [/'/, {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: '@string.\\'' }\n                    }\n                }],\n        ],\n        string: [\n            [/[^\"'\\$`]+/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/@escapes/, {\n                    cases: {\n                        '@eos': { token: 'string.escape', next: '@popall' },\n                        '@default': 'string.escape'\n                    }\n                }],\n            [/`./, {\n                    cases: {\n                        '@eos': { token: 'string.escape.invalid', next: '@popall' },\n                        '@default': 'string.escape.invalid'\n                    }\n                }],\n            [/\\$[\\w]+$/, {\n                    cases: {\n                        '$S2==\"': { token: 'variable', next: '@popall' },\n                        '@default': { token: 'string', next: '@popall' }\n                    }\n                }],\n            [/\\$[\\w]+/, {\n                    cases: {\n                        '$S2==\"': 'variable',\n                        '@default': 'string'\n                    }\n                }],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': {\n                            cases: {\n                                '@eos': { token: 'string', next: '@popall' },\n                                '@default': 'string'\n                            }\n                        }\n                    }\n                }],\n        ],\n        herestring: [\n            [/^\\s*([\"'])@/, {\n                    cases: {\n                        '$1==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }],\n            [/[^\\$`]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/`./, 'string.escape.invalid'],\n            [/\\$[\\w]+/, {\n                    cases: {\n                        '$S2==\"': 'variable',\n                        '@default': 'string'\n                    }\n                }],\n        ],\n        comment: [\n            [/[^#\\.]+/, 'comment'],\n            [/#>/, 'comment', '@pop'],\n            [/(\\.)(@helpKeywords)(?!\\w)/, { token: 'comment.keyword.$2' }],\n            [/[\\.#]/, 'comment']\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string'] },\n        { open: '[', close: ']', notIn: ['string'] },\n        { open: '(', close: ')', notIn: ['string'] },\n        { open: '\"', close: '\"', notIn: ['string'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*(#|\\/\\/)region\\\\b\"),\n            end: new RegExp(\"^\\\\s*(#|\\/\\/)endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '',\n    // ignoreCase: true,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.root' }],\n            [/<!DOCTYPE/, 'metatag.html', '@doctype'],\n            [/<!--/, 'comment.html', '@comment'],\n            [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\n            [/(<)(script)/, ['delimiter.html', { token: 'tag.html', next: '@script' }]],\n            [/(<)(style)/, ['delimiter.html', { token: 'tag.html', next: '@style' }]],\n            [/(<)([:\\w]+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\n            [/(<\\/)(\\w+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\n            [/</, 'delimiter.html'],\n            [/[^<]+/] // text\n        ],\n        doctype: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.comment' }],\n            [/[^>]+/, 'metatag.content.html'],\n            [/>/, 'metatag.html', '@pop'],\n        ],\n        comment: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.comment' }],\n            [/-->/, 'comment.html', '@pop'],\n            [/[^-]+/, 'comment.content.html'],\n            [/./, 'comment.content.html']\n        ],\n        otherTag: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.otherTag' }],\n            [/\\/?>/, 'delimiter.html', '@pop'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n        ],\n        // -- BEGIN <script> tags handling\n        // After <script\n        script: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.script' }],\n            [/type/, 'attribute.name', '@scriptAfterType'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/(<\\/)(script\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\n        ],\n        // After <script ... type\n        scriptAfterType: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.scriptAfterType' }],\n            [/=/, 'delimiter', '@scriptAfterTypeEquals'],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <script ... type =\n        scriptAfterTypeEquals: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.scriptAfterTypeEquals' }],\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <script ... type = $S2\n        scriptWithCustomType: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.scriptWithCustomType.$S2' }],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.$S2', nextEmbedded: '$S2' }],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        scriptEmbedded: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInEmbeddedState.scriptEmbedded.$S2', nextEmbedded: '@pop' }],\n            [/<\\/script/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\n        ],\n        // -- END <script> tags handling\n        // -- BEGIN <style> tags handling\n        // After <style\n        style: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.style' }],\n            [/type/, 'attribute.name', '@styleAfterType'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/(<\\/)(style\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\n        ],\n        // After <style ... type\n        styleAfterType: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.styleAfterType' }],\n            [/=/, 'delimiter', '@styleAfterTypeEquals'],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <style ... type =\n        styleAfterTypeEquals: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.styleAfterTypeEquals' }],\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <style ... type = $S2\n        styleWithCustomType: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.styleWithCustomType.$S2' }],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.$S2', nextEmbedded: '$S2' }],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        styleEmbedded: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInEmbeddedState.styleEmbedded.$S2', nextEmbedded: '@pop' }],\n            [/<\\/style/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\n        ],\n        // -- END <style> tags handling\n        phpInSimpleState: [\n            [/<\\?((php)|=)?/, 'metatag.php'],\n            [/\\?>/, { token: 'metatag.php', switchTo: '@$S2.$S3' }],\n            { include: 'phpRoot' }\n        ],\n        phpInEmbeddedState: [\n            [/<\\?((php)|=)?/, 'metatag.php'],\n            [/\\?>/, { token: 'metatag.php', switchTo: '@$S2.$S3', nextEmbedded: '$S3' }],\n            { include: 'phpRoot' }\n        ],\n        phpRoot: [\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@phpKeywords': { token: 'keyword.php' },\n                        '@phpCompileTimeConstants': { token: 'constant.php' },\n                        '@default': 'identifier.php'\n                    }\n                }],\n            [/[$a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@phpPreDefinedVariables': { token: 'variable.predefined.php' },\n                        '@default': 'variable.php'\n                    }\n                }],\n            // brackets\n            [/[{}]/, 'delimiter.bracket.php'],\n            [/[\\[\\]]/, 'delimiter.array.php'],\n            [/[()]/, 'delimiter.parenthesis.php'],\n            // whitespace\n            [/[ \\t\\r\\n]+/],\n            // comments\n            [/#/, 'comment.php', '@phpLineComment'],\n            [/\\/\\//, 'comment.php', '@phpLineComment'],\n            // block comments\n            [/\\/\\*/, 'comment.php', '@phpComment'],\n            // strings\n            [/\"/, 'string.php', '@phpDoubleQuoteString'],\n            [/'/, 'string.php', '@phpSingleQuoteString'],\n            // delimiters\n            [/[\\+\\-\\*\\%\\&\\|\\^\\~\\!\\=\\<\\>\\/\\?\\;\\:\\.\\,\\@]/, 'delimiter.php'],\n            // numbers\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?/, 'number.float.php'],\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float.php'],\n            [/0[xX][0-9a-fA-F']*[0-9a-fA-F]/, 'number.hex.php'],\n            [/0[0-7']*[0-7]/, 'number.octal.php'],\n            [/0[bB][0-1']*[0-1]/, 'number.binary.php'],\n            [/\\d[\\d']*/, 'number.php'],\n            [/\\d/, 'number.php'],\n        ],\n        phpComment: [\n            [/\\*\\//, 'comment.php', '@pop'],\n            [/[^*]+/, 'comment.php'],\n            [/./, 'comment.php']\n        ],\n        phpLineComment: [\n            [/\\?>/, { token: '@rematch', next: '@pop' }],\n            [/.$/, 'comment.php', '@pop'],\n            [/[^?]+$/, 'comment.php', '@pop'],\n            [/[^?]+/, 'comment.php'],\n            [/./, 'comment.php']\n        ],\n        phpDoubleQuoteString: [\n            [/[^\\\\\"]+/, 'string.php'],\n            [/@escapes/, 'string.escape.php'],\n            [/\\\\./, 'string.escape.invalid.php'],\n            [/\"/, 'string.php', '@pop']\n        ],\n        phpSingleQuoteString: [\n            [/[^\\\\']+/, 'string.php'],\n            [/@escapes/, 'string.escape.php'],\n            [/\\\\./, 'string.escape.invalid.php'],\n            [/'/, 'string.php', '@pop']\n        ],\n    },\n    phpKeywords: [\n        'abstract', 'and', 'array', 'as', 'break',\n        'callable', 'case', 'catch', 'cfunction', 'class', 'clone',\n        'const', 'continue', 'declare', 'default', 'do',\n        'else', 'elseif', 'enddeclare', 'endfor', 'endforeach',\n        'endif', 'endswitch', 'endwhile', 'extends', 'false', 'final',\n        'for', 'foreach', 'function', 'global', 'goto',\n        'if', 'implements', 'interface', 'instanceof', 'insteadof',\n        'namespace', 'new', 'null', 'object', 'old_function', 'or', 'private',\n        'protected', 'public', 'resource', 'static', 'switch', 'throw', 'trait',\n        'try', 'true', 'use', 'var', 'while', 'xor',\n        'die', 'echo', 'empty', 'exit', 'eval',\n        'include', 'include_once', 'isset', 'list', 'require',\n        'require_once', 'return', 'print', 'unset', 'yield',\n        '__construct'\n    ],\n    phpCompileTimeConstants: [\n        '__CLASS__',\n        '__DIR__',\n        '__FILE__',\n        '__LINE__',\n        '__NAMESPACE__',\n        '__METHOD__',\n        '__FUNCTION__',\n        '__TRAIT__'\n    ],\n    phpPreDefinedVariables: [\n        '$GLOBALS',\n        '$_SERVER',\n        '$_GET',\n        '$_POST',\n        '$_FILES',\n        '$_REQUEST',\n        '$_SESSION',\n        '$_ENV',\n        '$_COOKIE',\n        '$php_errormsg',\n        '$HTTP_RAW_POST_DATA',\n        '$http_response_header',\n        '$argc',\n        '$argv'\n    ],\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '--',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.sql',\n    ignoreCase: true,\n    brackets: [\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    keywords: [\n        \"A\", \"ABORT\", \"ABS\", \"ABSENT\", \"ABSOLUTE\", \"ACCESS\", \"ACCORDING\", \"ACTION\", \"ADA\", \"ADD\", \"ADMIN\", \"AFTER\", \"AGGREGATE\", \"ALL\",\n        \"ALLOCATE\", \"ALSO\", \"ALTER\", \"ALWAYS\", \"ANALYSE\", \"ANALYZE\", \"AND\", \"ANY\", \"ARE\", \"ARRAY\", \"ARRAY_AGG\", \"ARRAY_MAX_CARDINALITY\",\n        \"AS\", \"ASC\", \"ASENSITIVE\", \"ASSERTION\", \"ASSIGNMENT\", \"ASYMMETRIC\", \"AT\", \"ATOMIC\", \"ATTRIBUTE\", \"ATTRIBUTES\", \"AUTHORIZATION\",\n        \"AVG\", \"BACKWARD\", \"BASE64\", \"BEFORE\", \"BEGIN\", \"BEGIN_FRAME\", \"BEGIN_PARTITION\", \"BERNOULLI\", \"BETWEEN\", \"BIGINT\", \"BINARY\",\n        \"BIT\", \"BIT_LENGTH\", \"BLOB\", \"BLOCKED\", \"BOM\", \"BOOLEAN\", \"BOTH\", \"BREADTH\", \"BY\", \"C\", \"CACHE\", \"CALL\", \"CALLED\", \"CARDINALITY\",\n        \"CASCADE\", \"CASCADED\", \"CASE\", \"CAST\", \"CATALOG\", \"CATALOG_NAME\", \"CEIL\", \"CEILING\", \"CHAIN\", \"CHAR\", \"CHARACTER\",\n        \"CHARACTERISTICS\", \"CHARACTERS\", \"CHARACTER_LENGTH\", \"CHARACTER_SET_CATALOG\", \"CHARACTER_SET_NAME\", \"CHARACTER_SET_SCHEMA\",\n        \"CHAR_LENGTH\", \"CHECK\", \"CHECKPOINT\", \"CLASS\", \"CLASS_ORIGIN\", \"CLOB\", \"CLOSE\", \"CLUSTER\", \"COALESCE\", \"COBOL\", \"COLLATE\",\n        \"COLLATION\", \"COLLATION_CATALOG\", \"COLLATION_NAME\", \"COLLATION_SCHEMA\", \"COLLECT\", \"COLUMN\", \"COLUMNS\", \"COLUMN_NAME\",\n        \"COMMAND_FUNCTION\", \"COMMAND_FUNCTION_CODE\", \"COMMENT\", \"COMMENTS\", \"COMMIT\", \"COMMITTED\", \"CONCURRENTLY\", \"CONDITION\",\n        \"CONDITION_NUMBER\", \"CONFIGURATION\", \"CONFLICT\", \"CONNECT\", \"CONNECTION\", \"CONNECTION_NAME\", \"CONSTRAINT\", \"CONSTRAINTS\",\n        \"CONSTRAINT_CATALOG\", \"CONSTRAINT_NAME\", \"CONSTRAINT_SCHEMA\", \"CONSTRUCTOR\", \"CONTAINS\", \"CONTENT\", \"CONTINUE\", \"CONTROL\",\n        \"CONVERSION\", \"CONVERT\", \"COPY\", \"CORR\", \"CORRESPONDING\", \"COST\", \"COUNT\", \"COVAR_POP\", \"COVAR_SAMP\", \"CREATE\", \"CROSS\", \"CSV\",\n        \"CUBE\", \"CUME_DIST\", \"CURRENT\", \"CURRENT_CATALOG\", \"CURRENT_DATE\", \"CURRENT_DEFAULT_TRANSFORM_GROUP\", \"CURRENT_PATH\",\n        \"CURRENT_ROLE\", \"CURRENT_ROW\", \"CURRENT_SCHEMA\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"CURRENT_TRANSFORM_GROUP_FOR_TYPE\",\n        \"CURRENT_USER\", \"CURSOR\", \"CURSOR_NAME\", \"CYCLE\", \"DATA\", \"DATABASE\", \"DATALINK\", \"DATE\", \"DATETIME_INTERVAL_CODE\",\n        \"DATETIME_INTERVAL_PRECISION\", \"DAY\", \"DB\", \"DEALLOCATE\", \"DEC\", \"DECIMAL\", \"DECLARE\", \"DEFAULT\", \"DEFAULTS\", \"DEFERRABLE\",\n        \"DEFERRED\", \"DEFINED\", \"DEFINER\", \"DEGREE\", \"DELETE\", \"DELIMITER\", \"DELIMITERS\", \"DENSE_RANK\", \"DEPENDS\", \"DEPTH\", \"DEREF\",\n        \"DERIVED\", \"DESC\", \"DESCRIBE\", \"DESCRIPTOR\", \"DETERMINISTIC\", \"DIAGNOSTICS\", \"DICTIONARY\", \"DISABLE\", \"DISCARD\", \"DISCONNECT\",\n        \"DISPATCH\", \"DISTINCT\", \"DLNEWCOPY\", \"DLPREVIOUSCOPY\", \"DLURLCOMPLETE\", \"DLURLCOMPLETEONLY\", \"DLURLCOMPLETEWRITE\", \"DLURLPATH\",\n        \"DLURLPATHONLY\", \"DLURLPATHWRITE\", \"DLURLSCHEME\", \"DLURLSERVER\", \"DLVALUE\", \"DO\", \"DOCUMENT\", \"DOMAIN\", \"DOUBLE\", \"DROP\",\n        \"DYNAMIC\", \"DYNAMIC_FUNCTION\", \"DYNAMIC_FUNCTION_CODE\", \"EACH\", \"ELEMENT\", \"ELSE\", \"EMPTY\", \"ENABLE\", \"ENCODING\", \"ENCRYPTED\",\n        \"END\", \"END-EXEC\", \"END_FRAME\", \"END_PARTITION\", \"ENFORCED\", \"ENUM\", \"EQUALS\", \"ESCAPE\", \"EVENT\", \"EVERY\", \"EXCEPT\", \"EXCEPTION\",\n        \"EXCLUDE\", \"EXCLUDING\", \"EXCLUSIVE\", \"EXEC\", \"EXECUTE\", \"EXISTS\", \"EXP\", \"EXPLAIN\", \"EXPRESSION\", \"EXTENSION\", \"EXTERNAL\",\n        \"EXTRACT\", \"FALSE\", \"FAMILY\", \"FETCH\", \"FILE\", \"FILTER\", \"FINAL\", \"FIRST\", \"FIRST_VALUE\", \"FLAG\", \"FLOAT\", \"FLOOR\", \"FOLLOWING\",\n        \"FOR\", \"FORCE\", \"FOREIGN\", \"FORTRAN\", \"FORWARD\", \"FOUND\", \"FRAME_ROW\", \"FREE\", \"FREEZE\", \"FROM\", \"FS\", \"FULL\", \"FUNCTION\",\n        \"FUNCTIONS\", \"FUSION\", \"G\", \"GENERAL\", \"GENERATED\", \"GET\", \"GLOBAL\", \"GO\", \"GOTO\", \"GRANT\", \"GRANTED\", \"GREATEST\", \"GROUP\",\n        \"GROUPING\", \"GROUPS\", \"HANDLER\", \"HAVING\", \"HEADER\", \"HEX\", \"HIERARCHY\", \"HOLD\", \"HOUR\", \"ID\", \"IDENTITY\", \"IF\", \"IGNORE\",\n        \"ILIKE\", \"IMMEDIATE\", \"IMMEDIATELY\", \"IMMUTABLE\", \"IMPLEMENTATION\", \"IMPLICIT\", \"IMPORT\", \"IN\", \"INCLUDING\", \"INCREMENT\",\n        \"INDENT\", \"INDEX\", \"INDEXES\", \"INDICATOR\", \"INHERIT\", \"INHERITS\", \"INITIALLY\", \"INLINE\", \"INNER\", \"INOUT\", \"INPUT\",\n        \"INSENSITIVE\", \"INSERT\", \"INSTANCE\", \"INSTANTIABLE\", \"INSTEAD\", \"INT\", \"INTEGER\", \"INTEGRITY\", \"INTERSECT\", \"INTERSECTION\",\n        \"INTERVAL\", \"INTO\", \"INVOKER\", \"IS\", \"ISNULL\", \"ISOLATION\", \"JOIN\", \"K\", \"KEY\", \"KEY_MEMBER\", \"KEY_TYPE\", \"LABEL\", \"LAG\",\n        \"LANGUAGE\", \"LARGE\", \"LAST\", \"LAST_VALUE\", \"LATERAL\", \"LEAD\", \"LEADING\", \"LEAKPROOF\", \"LEAST\", \"LEFT\", \"LENGTH\", \"LEVEL\",\n        \"LIBRARY\", \"LIKE\", \"LIKE_REGEX\", \"LIMIT\", \"LINK\", \"LISTEN\", \"LN\", \"LOAD\", \"LOCAL\", \"LOCALTIME\", \"LOCALTIMESTAMP\", \"LOCATION\",\n        \"LOCATOR\", \"LOCK\", \"LOCKED\", \"LOGGED\", \"LOWER\", \"M\", \"MAP\", \"MAPPING\", \"MATCH\", \"MATCHED\", \"MATERIALIZED\", \"MAX\", \"MAXVALUE\",\n        \"MAX_CARDINALITY\", \"MEMBER\", \"MERGE\", \"MESSAGE_LENGTH\", \"MESSAGE_OCTET_LENGTH\", \"MESSAGE_TEXT\", \"METHOD\", \"MIN\", \"MINUTE\",\n        \"MINVALUE\", \"MOD\", \"MODE\", \"MODIFIES\", \"MODULE\", \"MONTH\", \"MORE\", \"MOVE\", \"MULTISET\", \"MUMPS\", \"NAME\", \"NAMES\", \"NAMESPACE\",\n        \"NATIONAL\", \"NATURAL\", \"NCHAR\", \"NCLOB\", \"NESTING\", \"NEW\", \"NEXT\", \"NFC\", \"NFD\", \"NFKC\", \"NFKD\", \"NIL\", \"NO\", \"NONE\",\n        \"NORMALIZE\", \"NORMALIZED\", \"NOT\", \"NOTHING\", \"NOTIFY\", \"NOTNULL\", \"NOWAIT\", \"NTH_VALUE\", \"NTILE\", \"NULL\", \"NULLABLE\", \"NULLIF\",\n        \"NULLS\", \"NUMBER\", \"NUMERIC\", \"OBJECT\", \"OCCURRENCES_REGEX\", \"OCTETS\", \"OCTET_LENGTH\", \"OF\", \"OFF\", \"OFFSET\", \"OIDS\", \"OLD\",\n        \"ON\", \"ONLY\", \"OPEN\", \"OPERATOR\", \"OPTION\", \"OPTIONS\", \"OR\", \"ORDER\", \"ORDERING\", \"ORDINALITY\", \"OTHERS\", \"OUT\", \"OUTER\",\n        \"OUTPUT\", \"OVER\", \"OVERLAPS\", \"OVERLAY\", \"OVERRIDING\", \"OWNED\", \"OWNER\", \"P\", \"PAD\", \"PARALLEL\", \"PARAMETER\", \"PARAMETER_MODE\",\n        \"PARAMETER_NAME\", \"PARAMETER_ORDINAL_POSITION\", \"PARAMETER_SPECIFIC_CATALOG\", \"PARAMETER_SPECIFIC_NAME\",\n        \"PARAMETER_SPECIFIC_SCHEMA\", \"PARSER\", \"PARTIAL\", \"PARTITION\", \"PASCAL\", \"PASSING\", \"PASSTHROUGH\", \"PASSWORD\", \"PATH\",\n        \"PERCENT\", \"PERCENTILE_CONT\", \"PERCENTILE_DISC\", \"PERCENT_RANK\", \"PERIOD\", \"PERMISSION\", \"PLACING\", \"PLANS\", \"PLI\", \"POLICY\",\n        \"PORTION\", \"POSITION\", \"POSITION_REGEX\", \"POWER\", \"PRECEDES\", \"PRECEDING\", \"PRECISION\", \"PREPARE\", \"PREPARED\", \"PRESERVE\",\n        \"PRIMARY\", \"PRIOR\", \"PRIVILEGES\", \"PROCEDURAL\", \"PROCEDURE\", \"PROGRAM\", \"PUBLIC\", \"QUOTE\", \"RANGE\", \"RANK\", \"READ\", \"READS\",\n        \"REAL\", \"REASSIGN\", \"RECHECK\", \"RECOVERY\", \"RECURSIVE\", \"REF\", \"REFERENCES\", \"REFERENCING\", \"REFRESH\", \"REGR_AVGX\", \"REGR_AVGY\",\n        \"REGR_COUNT\", \"REGR_INTERCEPT\", \"REGR_R2\", \"REGR_SLOPE\", \"REGR_SXX\", \"REGR_SXY\", \"REGR_SYY\", \"REINDEX\", \"RELATIVE\", \"RELEASE\",\n        \"RENAME\", \"REPEATABLE\", \"REPLACE\", \"REPLICA\", \"REQUIRING\", \"RESET\", \"RESPECT\", \"RESTART\", \"RESTORE\", \"RESTRICT\", \"RESULT\",\n        \"RETURN\", \"RETURNED_CARDINALITY\", \"RETURNED_LENGTH\", \"RETURNED_OCTET_LENGTH\", \"RETURNED_SQLSTATE\", \"RETURNING\", \"RETURNS\",\n        \"REVOKE\", \"RIGHT\", \"ROLE\", \"ROLLBACK\", \"ROLLUP\", \"ROUTINE\", \"ROUTINE_CATALOG\", \"ROUTINE_NAME\", \"ROUTINE_SCHEMA\", \"ROW\", \"ROWS\",\n        \"ROW_COUNT\", \"ROW_NUMBER\", \"RULE\", \"SAVEPOINT\", \"SCALE\", \"SCHEMA\", \"SCHEMA_NAME\", \"SCOPE\", \"SCOPE_CATALOG\", \"SCOPE_NAME\",\n        \"SCOPE_SCHEMA\", \"SCROLL\", \"SEARCH\", \"SECOND\", \"SECTION\", \"SECURITY\", \"SELECT\", \"SELECTIVE\", \"SELF\", \"SENSITIVE\", \"SEQUENCE\",\n        \"SEQUENCES\", \"SERIALIZABLE\", \"SERVER\", \"SERVER_NAME\", \"SESSION\", \"SESSION_USER\", \"SET\", \"SETOF\", \"SETS\", \"SHARE\", \"SHOW\",\n        \"SIMILAR\", \"SIMPLE\", \"SIZE\", \"SKIP\", \"SMALLINT\", \"SNAPSHOT\", \"SOME\", \"SOURCE\", \"SPACE\", \"SPECIFIC\", \"SPECIFICTYPE\",\n        \"SPECIFIC_NAME\", \"SQL\", \"SQLCODE\", \"SQLERROR\", \"SQLEXCEPTION\", \"SQLSTATE\", \"SQLWARNING\", \"SQRT\", \"STABLE\", \"STANDALONE\",\n        \"START\", \"STATE\", \"STATEMENT\", \"STATIC\", \"STATISTICS\", \"STDDEV_POP\", \"STDDEV_SAMP\", \"STDIN\", \"STDOUT\", \"STORAGE\", \"STRICT\",\n        \"STRIP\", \"STRUCTURE\", \"STYLE\", \"SUBCLASS_ORIGIN\", \"SUBMULTISET\", \"SUBSTRING\", \"SUBSTRING_REGEX\", \"SUCCEEDS\", \"SUM\", \"SYMMETRIC\",\n        \"SYSID\", \"SYSTEM\", \"SYSTEM_TIME\", \"SYSTEM_USER\", \"T\", \"TABLE\", \"TABLES\", \"TABLESAMPLE\", \"TABLESPACE\", \"TABLE_NAME\", \"TEMP\",\n        \"TEMPLATE\", \"TEMPORARY\", \"TEXT\", \"THEN\", \"TIES\", \"TIME\", \"TIMESTAMP\", \"TIMEZONE_HOUR\", \"TIMEZONE_MINUTE\", \"TO\", \"TOKEN\",\n        \"TOP_LEVEL_COUNT\", \"TRAILING\", \"TRANSACTION\", \"TRANSACTIONS_COMMITTED\", \"TRANSACTIONS_ROLLED_BACK\", \"TRANSACTION_ACTIVE\",\n        \"TRANSFORM\", \"TRANSFORMS\", \"TRANSLATE\", \"TRANSLATE_REGEX\", \"TRANSLATION\", \"TREAT\", \"TRIGGER\", \"TRIGGER_CATALOG\", \"TRIGGER_NAME\",\n        \"TRIGGER_SCHEMA\", \"TRIM\", \"TRIM_ARRAY\", \"TRUE\", \"TRUNCATE\", \"TRUSTED\", \"TYPE\", \"TYPES\", \"UESCAPE\", \"UNBOUNDED\", \"UNCOMMITTED\",\n        \"UNDER\", \"UNENCRYPTED\", \"UNION\", \"UNIQUE\", \"UNKNOWN\", \"UNLINK\", \"UNLISTEN\", \"UNLOGGED\", \"UNNAMED\", \"UNNEST\", \"UNTIL\", \"UNTYPED\",\n        \"UPDATE\", \"UPPER\", \"URI\", \"USAGE\", \"USER\", \"USER_DEFINED_TYPE_CATALOG\", \"USER_DEFINED_TYPE_CODE\", \"USER_DEFINED_TYPE_NAME\",\n        \"USER_DEFINED_TYPE_SCHEMA\", \"USING\", \"VACUUM\", \"VALID\", \"VALIDATE\", \"VALIDATOR\", \"VALUE\", \"VALUES\", \"VALUE_OF\", \"VARBINARY\",\n        \"VARCHAR\", \"VARIADIC\", \"VARYING\", \"VAR_POP\", \"VAR_SAMP\", \"VERBOSE\", \"VERSION\", \"VERSIONING\", \"VIEW\", \"VIEWS\", \"VOLATILE\",\n        \"WHEN\", \"WHENEVER\", \"WHERE\", \"WHITESPACE\", \"WIDTH_BUCKET\", \"WINDOW\", \"WITH\", \"WITHIN\", \"WITHOUT\", \"WORK\", \"WRAPPER\", \"WRITE\",\n        \"XML\", \"XMLAGG\", \"XMLATTRIBUTES\", \"XMLBINARY\", \"XMLCAST\", \"XMLCOMMENT\", \"XMLCONCAT\", \"XMLDECLARATION\", \"XMLDOCUMENT\",\n        \"XMLELEMENT\", \"XMLEXISTS\", \"XMLFOREST\", \"XMLITERATE\", \"XMLNAMESPACES\", \"XMLPARSE\", \"XMLPI\", \"XMLQUERY\", \"XMLROOT\", \"XMLSCHEMA\",\n        \"XMLSERIALIZE\", \"XMLTABLE\", \"XMLTEXT\", \"XMLVALIDATE\", \"YEAR\", \"YES\", \"ZONE\"\n    ],\n    operators: [\n        \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\n    ],\n    builtinFunctions: [\n        \"abbrev\", \"abs\", \"acos\", \"acosd\", \"age\", \"any\", \"area\", \"array_agg\", \"array_append\", \"array_cat\", \"array_dims\", \"array_fill\",\n        \"array_length\", \"array_lower\", \"array_ndims\", \"array_position\", \"array_positions\", \"array_prepend\", \"array_remove\", \"array_replace\",\n        \"array_to_json\", \"array_to_string\", \"array_to_tsvector\", \"array_upper\", \"ascii\", \"asin\", \"asind\", \"atan\", \"atan2\", \"atan2d\", \"atand\",\n        \"avg\", \"bit\", \"bit_and\", \"bit_length\", \"bit_or\", \"bool_and\", \"bool_or\", \"bound_box\", \"box\", \"brin_summarize_new_values\", \"broadcast\",\n        \"btrim\", \"cardinality\", \"cbrt\", \"ceil\", \"ceiling\", \"center\", \"char_length\", \"character_length\", \"chr\", \"circle\", \"clock_timestamp\",\n        \"coalesce\", \"col_description\", \"concat\", \"concat_ws\", \"convert\", \"convert_from\", \"convert_to\", \"corr\", \"cos\", \"cosd\", \"cot\", \"cotd\",\n        \"count\", \"covar_pop\", \"covar_samp\", \"cume_dist\", \"current_catalog\", \"current_database\", \"current_date\", \"current_query\", \"current_role\",\n        \"current_schema\", \"current_schemas\", \"current_setting\", \"current_time\", \"current_timestamp\", \"current_user\", \"currval\", \"cursor_to_xml\",\n        \"date_part\", \"date_trunc\", \"decode\", \"degrees\", \"dense_rank\", \"diameter\", \"div\", \"encode\", \"enum_first\", \"enum_last\", \"enum_range\", \"every\",\n        \"exp\", \"extract\", \"family\", \"first_value\", \"floor\", \"format\", \"format_type\", \"generate_series\", \"generate_subscripts\", \"get_bit\", \"get_byte\",\n        \"get_current_ts_config\", \"gin_clean_pending_list\", \"greatest\", \"grouping\", \"has_any_column_privilege\", \"has_column_privilege\",\n        \"has_database_privilege\", \"has_foreign_data_wrapper_privilege\", \"has_function_privilege\", \"has_language_privilege\", \"has_schema_privilege\",\n        \"has_sequence_privilege\", \"has_server_privilege\", \"has_table_privilege\", \"has_tablespace_privilege\", \"has_type_privilege\", \"height\", \"host\",\n        \"hostmask\", \"inet_client_addr\", \"inet_client_port\", \"inet_merge\", \"inet_same_family\", \"inet_server_addr\", \"inet_server_port\", \"initcap\",\n        \"isclosed\", \"isempty\", \"isfinite\", \"isopen\", \"json_agg\", \"json_object\", \"json_object_agg\", \"json_populate_record\", \"json_populate_recordset\",\n        \"json_to_record\", \"json_to_recordset\", \"jsonb_agg\", \"jsonb_object_agg\", \"justify_days\", \"justify_hours\", \"justify_interval\", \"lag\",\n        \"last_value\", \"lastval\", \"lead\", \"least\", \"left\", \"length\", \"line\", \"ln\", \"localtime\", \"localtimestamp\", \"log\", \"lower\", \"lower_inc\",\n        \"lower_inf\", \"lpad\", \"lseg\", \"ltrim\", \"make_date\", \"make_interval\", \"make_time\", \"make_timestamp\", \"make_timestamptz\", \"masklen\", \"max\",\n        \"md5\", \"min\", \"mod\", \"mode\", \"netmask\", \"network\", \"nextval\", \"now\", \"npoints\", \"nth_value\", \"ntile\", \"nullif\", \"num_nonnulls\", \"num_nulls\",\n        \"numnode\", \"obj_description\", \"octet_length\", \"overlay\", \"parse_ident\", \"path\", \"pclose\", \"percent_rank\", \"percentile_cont\", \"percentile_disc\",\n        \"pg_advisory_lock\", \"pg_advisory_lock_shared\", \"pg_advisory_unlock\", \"pg_advisory_unlock_all\", \"pg_advisory_unlock_shared\", \"pg_advisory_xact_lock\",\n        \"pg_advisory_xact_lock_shared\", \"pg_backend_pid\", \"pg_backup_start_time\", \"pg_blocking_pids\", \"pg_cancel_backend\", \"pg_client_encoding\",\n        \"pg_collation_is_visible\", \"pg_column_size\", \"pg_conf_load_time\", \"pg_control_checkpoint\", \"pg_control_init\", \"pg_control_recovery\",\n        \"pg_control_system\", \"pg_conversion_is_visible\", \"pg_create_logical_replication_slot\", \"pg_create_physical_replication_slot\", \"pg_create_restore_point\",\n        \"pg_current_xlog_flush_location\", \"pg_current_xlog_insert_location\", \"pg_current_xlog_location\", \"pg_database_size\", \"pg_describe_object\",\n        \"pg_drop_replication_slot\", \"pg_export_snapshot\", \"pg_filenode_relation\", \"pg_function_is_visible\", \"pg_get_constraintdef\", \"pg_get_expr\",\n        \"pg_get_function_arguments\", \"pg_get_function_identity_arguments\", \"pg_get_function_result\", \"pg_get_functiondef\", \"pg_get_indexdef\", \"pg_get_keywords\",\n        \"pg_get_object_address\", \"pg_get_owned_sequence\", \"pg_get_ruledef\", \"pg_get_serial_sequence\", \"pg_get_triggerdef\", \"pg_get_userbyid\", \"pg_get_viewdef\",\n        \"pg_has_role\", \"pg_identify_object\", \"pg_identify_object_as_address\", \"pg_index_column_has_property\", \"pg_index_has_property\", \"pg_indexam_has_property\",\n        \"pg_indexes_size\", \"pg_is_in_backup\", \"pg_is_in_recovery\", \"pg_is_other_temp_schema\", \"pg_is_xlog_replay_paused\", \"pg_last_committed_xact\",\n        \"pg_last_xact_replay_timestamp\", \"pg_last_xlog_receive_location\", \"pg_last_xlog_replay_location\", \"pg_listening_channels\", \"pg_logical_emit_message\",\n        \"pg_logical_slot_get_binary_changes\", \"pg_logical_slot_get_changes\", \"pg_logical_slot_peek_binary_changes\", \"pg_logical_slot_peek_changes\", \"pg_ls_dir\",\n        \"pg_my_temp_schema\", \"pg_notification_queue_usage\", \"pg_opclass_is_visible\", \"pg_operator_is_visible\", \"pg_opfamily_is_visible\", \"pg_options_to_table\",\n        \"pg_postmaster_start_time\", \"pg_read_binary_file\", \"pg_read_file\", \"pg_relation_filenode\", \"pg_relation_filepath\", \"pg_relation_size\", \"pg_reload_conf\",\n        \"pg_replication_origin_create\", \"pg_replication_origin_drop\", \"pg_replication_origin_oid\", \"pg_replication_origin_progress\", \"pg_replication_origin_session_is_setup\",\n        \"pg_replication_origin_session_progress\", \"pg_replication_origin_session_reset\", \"pg_replication_origin_session_setup\", \"pg_replication_origin_xact_reset\",\n        \"pg_replication_origin_xact_setup\", \"pg_rotate_logfile\", \"pg_size_bytes\", \"pg_size_pretty\", \"pg_sleep\", \"pg_sleep_for\", \"pg_sleep_until\", \"pg_start_backup\",\n        \"pg_stat_file\", \"pg_stop_backup\", \"pg_switch_xlog\", \"pg_table_is_visible\", \"pg_table_size\", \"pg_tablespace_databases\", \"pg_tablespace_location\",\n        \"pg_tablespace_size\", \"pg_terminate_backend\", \"pg_total_relation_size\", \"pg_trigger_depth\", \"pg_try_advisory_lock\", \"pg_try_advisory_lock_shared\",\n        \"pg_try_advisory_xact_lock\", \"pg_try_advisory_xact_lock_shared\", \"pg_ts_config_is_visible\", \"pg_ts_dict_is_visible\", \"pg_ts_parser_is_visible\",\n        \"pg_ts_template_is_visible\", \"pg_type_is_visible\", \"pg_typeof\", \"pg_xact_commit_timestamp\", \"pg_xlog_location_diff\", \"pg_xlog_replay_pause\",\n        \"pg_xlog_replay_resume\", \"pg_xlogfile_name\", \"pg_xlogfile_name_offset\", \"phraseto_tsquery\", \"pi\", \"plainto_tsquery\", \"point\", \"polygon\", \"popen\", \"position\",\n        \"power\", \"pqserverversion\", \"query_to_xml\", \"querytree\", \"quote_ident\", \"quote_literal\", \"quote_nullable\", \"radians\", \"radius\", \"random\", \"range_merge\",\n        \"rank\", \"regexp_matches\", \"regexp_replace\", \"regexp_split_to_array\", \"regexp_split_to_table\", \"regr_avgx\", \"regr_avgy\", \"regr_count\", \"regr_intercept\",\n        \"regr_r2\", \"regr_slope\", \"regr_sxx\", \"regr_sxy\", \"regr_syy\", \"repeat\", \"replace\", \"reverse\", \"right\", \"round\", \"row_number\", \"row_security_active\",\n        \"row_to_json\", \"rpad\", \"rtrim\", \"scale\", \"session_user\", \"set_bit\", \"set_byte\", \"set_config\", \"set_masklen\", \"setseed\", \"setval\", \"setweight\",\n        \"shobj_description\", \"sign\", \"sin\", \"sind\", \"split_part\", \"sprintf\", \"sqrt\", \"statement_timestamp\", \"stddev\", \"stddev_pop\", \"stddev_samp\", \"string_agg\",\n        \"string_to_array\", \"strip\", \"strpos\", \"substr\", \"substring\", \"sum\", \"table_to_xml\", \"table_to_xml_and_xmlschema\", \"tan\", \"tand\", \"text\", \"timeofday\",\n        \"timezone\", \"to_ascii\", \"to_char\", \"to_date\", \"to_hex\", \"to_json\", \"to_number\", \"to_regclass\", \"to_regnamespace\", \"to_regoper\", \"to_regoperator\", \"to_regproc\",\n        \"to_regprocedure\", \"to_regrole\", \"to_regtype\", \"to_timestamp\", \"to_tsquery\", \"to_tsvector\", \"transaction_timestamp\", \"translate\", \"trim\", \"trunc\", \"ts_debug\",\n        \"ts_delete\", \"ts_filter\", \"ts_headline\", \"ts_lexize\", \"ts_parse\", \"ts_rank\", \"ts_rank_cd\", \"ts_rewrite\", \"ts_stat\", \"ts_token_type\", \"tsquery_phrase\",\n        \"tsvector_to_array\", \"tsvector_update_trigger\", \"tsvector_update_trigger_column\", \"txid_current\", \"txid_current_snapshot\", \"txid_snapshot_xip\", \"txid_snapshot_xmax\",\n        \"txid_snapshot_xmin\", \"txid_visible_in_snapshot\", \"unnest\", \"upper\", \"upper_inc\", \"upper_inf\", \"user\", \"var_pop\", \"var_samp\", \"variance\", \"version\", \"width\",\n        \"width_bucket\", \"xml_is_well_formed\", \"xml_is_well_formed_content\", \"xml_is_well_formed_document\", \"xmlagg\", \"xmlcomment\", \"xmlconcat\", \"xmlelement\", \"xmlexists\",\n        \"xmlforest\", \"xmlparse\", \"xmlpi\", \"xmlroot\", \"xmlserialize\", \"xpath\", \"xpath_exists\"\n    ],\n    builtinVariables: [],\n    pseudoColumns: [],\n    tokenizer: {\n        root: [\n            { include: '@comments' },\n            { include: '@whitespace' },\n            { include: '@pseudoColumns' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            { include: '@complexIdentifiers' },\n            { include: '@scopes' },\n            [/[;,.]/, 'delimiter'],\n            [/[()]/, '@brackets'],\n            [/[\\w@#$]+/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@operators': 'operator',\n                        '@builtinVariables': 'predefined',\n                        '@builtinFunctions': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            [/[<>=!%&+\\-*/|~^]/, 'operator'],\n        ],\n        whitespace: [\n            [/\\s+/, 'white']\n        ],\n        comments: [\n            [/--+.*/, 'comment'],\n            [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\n        ],\n        comment: [\n            [/[^*/]+/, 'comment'],\n            // Not supporting nested comments, as nested comments seem to not be standard?\n            // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\n            // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\n            [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\n            [/./, 'comment']\n        ],\n        pseudoColumns: [\n            [/[$][A-Za-z_][\\w@#$]*/, {\n                    cases: {\n                        '@pseudoColumns': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n        ],\n        numbers: [\n            [/0[xX][0-9a-fA-F]*/, 'number'],\n            [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\n            [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\n        ],\n        strings: [\n            [/'/, { token: 'string', next: '@string' }],\n        ],\n        string: [\n            [/[^']+/, 'string'],\n            [/''/, 'string'],\n            [/'/, { token: 'string', next: '@pop' }]\n        ],\n        complexIdentifiers: [\n            [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\n        ],\n        quotedIdentifier: [\n            [/[^\"]+/, 'identifier'],\n            [/\"\"/, 'identifier'],\n            [/\"/, { token: 'identifier.quote', next: '@pop' }]\n        ],\n        scopes: []\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.objective-c',\n    keywords: [\n        '#import',\n        '#include',\n        '#define',\n        '#else',\n        '#endif',\n        '#if',\n        '#ifdef',\n        '#ifndef',\n        '#ident',\n        '#undef',\n        '@class',\n        '@defs',\n        '@dynamic',\n        '@encode',\n        '@end',\n        '@implementation',\n        '@interface',\n        '@package',\n        '@private',\n        '@protected',\n        '@property',\n        '@protocol',\n        '@public',\n        '@selector',\n        '@synthesize',\n        '__declspec',\n        'assign',\n        'auto',\n        'BOOL',\n        'break',\n        'bycopy',\n        'byref',\n        'case',\n        'char',\n        'Class',\n        'const',\n        'copy',\n        'continue',\n        'default',\n        'do',\n        'double',\n        'else',\n        'enum',\n        'extern',\n        'FALSE',\n        'false',\n        'float',\n        'for',\n        'goto',\n        'if',\n        'in',\n        'int',\n        'id',\n        'inout',\n        'IMP',\n        'long',\n        'nil',\n        'nonatomic',\n        'NULL',\n        'oneway',\n        'out',\n        'private',\n        'public',\n        'protected',\n        'readwrite',\n        'readonly',\n        'register',\n        'return',\n        'SEL',\n        'self',\n        'short',\n        'signed',\n        'sizeof',\n        'static',\n        'struct',\n        'super',\n        'switch',\n        'typedef',\n        'TRUE',\n        'true',\n        'union',\n        'unsigned',\n        'volatile',\n        'void',\n        'while',\n    ],\n    decpart: /\\d(_?\\d)*/,\n    decimal: /0|@decpart/,\n    tokenizer: {\n        root: [\n            { include: '@comments' },\n            { include: '@whitespace' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            [/[,:;]/, 'delimiter'],\n            [/[{}\\[\\]()<>]/, '@brackets'],\n            [/[a-zA-Z@#]\\w*/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@default': 'identifier'\n                    }\n                }],\n            [/[<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,]|and\\\\b|or\\\\b|not\\\\b]/, 'operator'],\n        ],\n        whitespace: [\n            [/\\s+/, 'white'],\n        ],\n        comments: [\n            ['\\\\/\\\\*', 'comment', '@comment'],\n            ['\\\\/\\\\/+.*', 'comment'],\n        ],\n        comment: [\n            ['\\\\*\\\\/', 'comment', '@pop'],\n            ['.', 'comment',],\n        ],\n        numbers: [\n            [/0[xX][0-9a-fA-F]*(_?[0-9a-fA-F])*/, 'number.hex'],\n            [/@decimal((\\.@decpart)?([eE][\\-+]?@decpart)?)[fF]*/, {\n                    cases: {\n                        '(\\\\d)*': 'number',\n                        '$0': 'number.float'\n                    }\n                }]\n        ],\n        // Recognize strings, including those broken across lines with \\ (but not without)\n        strings: [\n            [/'$/, 'string.escape', '@popall'],\n            [/'/, 'string.escape', '@stringBody'],\n            [/\"$/, 'string.escape', '@popall'],\n            [/\"/, 'string.escape', '@dblStringBody']\n        ],\n        stringBody: [\n            [/\\\\./, 'string'],\n            [/'/, 'string.escape', '@popall'],\n            [/.(?=.*')/, 'string'],\n            [/.*\\\\$/, 'string'],\n            [/.*$/, 'string', '@popall']\n        ],\n        dblStringBody: [\n            [/\\\\./, 'string'],\n            [/\"/, 'string.escape', '@popall'],\n            [/.(?=.*\")/, 'string'],\n            [/.*\\\\$/, 'string'],\n            [/.*$/, 'string', '@popall']\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar TOKEN_HEADER_LEAD = 'keyword';\nvar TOKEN_HEADER = 'keyword';\nvar TOKEN_EXT_HEADER = 'keyword';\nvar TOKEN_SEPARATOR = 'meta.separator';\nvar TOKEN_QUOTE = 'comment';\nvar TOKEN_LIST = 'keyword';\nvar TOKEN_BLOCK = 'string';\nvar TOKEN_BLOCK_CODE = 'variable.source';\nvar DELIM_ASSIGN = 'delimiter.html';\nvar ATTRIB_NAME = 'attribute.name.html';\nvar ATTRIB_VALUE = 'string.html';\nfunction getTag(name) {\n    return 'tag';\n}\nexport var conf = {\n    comments: {\n        blockComment: ['<!--', '-->',]\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '<', close: '>', notIn: ['string'] }\n    ],\n    surroundingPairs: [\n        { open: '(', close: ')' },\n        { open: '[', close: ']' },\n        { open: '`', close: '`' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*<!--\\\\s*#?region\\\\b.*-->\"),\n            end: new RegExp(\"^\\\\s*<!--\\\\s*#?endregion\\\\b.*-->\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.md',\n    // escape codes\n    control: /[\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n    noncontrol: /[^\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n    escapes: /\\\\(?:@control)/,\n    // escape codes for javascript/CSS strings\n    jsescapes: /\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,\n    // non matched elements\n    empty: [\n        'area', 'base', 'basefont', 'br', 'col', 'frame',\n        'hr', 'img', 'input', 'isindex', 'link', 'meta', 'param'\n    ],\n    tokenizer: {\n        root: [\n            // headers (with #)\n            [/^(\\s{0,3})(#+)((?:[^\\\\#]|@escapes)+)((?:#+)?)/, ['white', TOKEN_HEADER_LEAD, TOKEN_HEADER, TOKEN_HEADER]],\n            // headers (with =)\n            [/^\\s*(=+|\\-+)\\s*$/, TOKEN_EXT_HEADER],\n            // headers (with ***)\n            [/^\\s*((\\*[ ]?)+)\\s*$/, TOKEN_SEPARATOR],\n            // quote\n            [/^\\s*>+/, TOKEN_QUOTE],\n            // list (starting with * or number)\n            [/^\\s*([\\*\\-+:]|\\d+\\.)\\s/, TOKEN_LIST],\n            // code block (4 spaces indent)\n            [/^(\\t|[ ]{4})[^ ].*$/, TOKEN_BLOCK],\n            // code block (3 tilde)\n            [/^\\s*~~~\\s*((?:\\w|[\\/\\-#])+)?\\s*$/, { token: TOKEN_BLOCK, next: '@codeblock' }],\n            // github style code blocks (with backticks and language)\n            [/^\\s*```\\s*((?:\\w|[\\/\\-#])+)\\s*$/, { token: TOKEN_BLOCK, next: '@codeblockgh', nextEmbedded: '$1' }],\n            // github style code blocks (with backticks but no language)\n            [/^\\s*```\\s*$/, { token: TOKEN_BLOCK, next: '@codeblock' }],\n            // markup within lines\n            { include: '@linecontent' },\n        ],\n        codeblock: [\n            [/^\\s*~~~\\s*$/, { token: TOKEN_BLOCK, next: '@pop' }],\n            [/^\\s*```\\s*$/, { token: TOKEN_BLOCK, next: '@pop' }],\n            [/.*$/, TOKEN_BLOCK_CODE],\n        ],\n        // github style code blocks\n        codeblockgh: [\n            [/```\\s*$/, { token: TOKEN_BLOCK_CODE, next: '@pop', nextEmbedded: '@pop' }],\n            [/[^`]+/, TOKEN_BLOCK_CODE],\n        ],\n        linecontent: [\n            // escapes\n            [/&\\w+;/, 'string.escape'],\n            [/@escapes/, 'escape'],\n            // various markup\n            [/\\b__([^\\\\_]|@escapes|_(?!_))+__\\b/, 'strong'],\n            [/\\*\\*([^\\\\*]|@escapes|\\*(?!\\*))+\\*\\*/, 'strong'],\n            [/\\b_[^_]+_\\b/, 'emphasis'],\n            [/\\*([^\\\\*]|@escapes)+\\*/, 'emphasis'],\n            [/`([^\\\\`]|@escapes)+`/, 'variable'],\n            // links\n            [/\\{[^}]+\\}/, 'string.target'],\n            [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\]\\([^\\)]+\\))/, ['string.link', '', 'string.link']],\n            [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\])/, 'string.link'],\n            // or html\n            { include: 'html' },\n        ],\n        // Note: it is tempting to rather switch to the real HTML mode instead of building our own here\n        // but currently there is a limitation in Monarch that prevents us from doing it: The opening\n        // '<' would start the HTML mode, however there is no way to jump 1 character back to let the\n        // HTML mode also tokenize the opening angle bracket. Thus, even though we could jump to HTML,\n        // we cannot correctly tokenize it in that mode yet.\n        html: [\n            // html tags\n            [/<(\\w+)\\/>/, getTag('$1')],\n            [/<(\\w+)/, {\n                    cases: {\n                        '@empty': { token: getTag('$1'), next: '@tag.$1' },\n                        '@default': { token: getTag('$1'), next: '@tag.$1' }\n                    }\n                }],\n            [/<\\/(\\w+)\\s*>/, { token: getTag('$1') }],\n            [/<!--/, 'comment', '@comment']\n        ],\n        comment: [\n            [/[^<\\-]+/, 'comment.content'],\n            [/-->/, 'comment', '@pop'],\n            [/<!--/, 'comment.content.invalid'],\n            [/[<\\-]/, 'comment.content']\n        ],\n        // Almost full HTML tag matching, complete with embedded scripts & styles\n        tag: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/(type)(\\s*=\\s*)(\")([^\"]+)(\")/, [ATTRIB_NAME, DELIM_ASSIGN, ATTRIB_VALUE,\n                    { token: ATTRIB_VALUE, switchTo: '@tag.$S2.$4' },\n                    ATTRIB_VALUE]],\n            [/(type)(\\s*=\\s*)(')([^']+)(')/, [ATTRIB_NAME, DELIM_ASSIGN, ATTRIB_VALUE,\n                    { token: ATTRIB_VALUE, switchTo: '@tag.$S2.$4' },\n                    ATTRIB_VALUE]],\n            [/(\\w+)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, [ATTRIB_NAME, DELIM_ASSIGN, ATTRIB_VALUE]],\n            [/\\w+/, ATTRIB_NAME],\n            [/\\/>/, getTag('$S2'), '@pop'],\n            [/>/, {\n                    cases: {\n                        '$S2==style': { token: getTag('$S2'), switchTo: 'embeddedStyle', nextEmbedded: 'text/css' },\n                        '$S2==script': {\n                            cases: {\n                                '$S3': { token: getTag('$S2'), switchTo: 'embeddedScript', nextEmbedded: '$S3' },\n                                '@default': { token: getTag('$S2'), switchTo: 'embeddedScript', nextEmbedded: 'text/javascript' }\n                            }\n                        },\n                        '@default': { token: getTag('$S2'), next: '@pop' }\n                    }\n                }],\n        ],\n        embeddedStyle: [\n            [/[^<]+/, ''],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\n            [/</, '']\n        ],\n        embeddedScript: [\n            [/[^<]+/, ''],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\n            [/</, '']\n        ],\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@#!.:]?[\\w-?]+%?)|[@#!.]/g,\n    comments: {\n        blockComment: ['/*', '*/'],\n        lineComment: '//'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\n            end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.less',\n    identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n    identifierPlus: '-?-?([a-zA-Z:.]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-:.]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.bracket' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '<', close: '>', token: 'delimiter.angle' }\n    ],\n    tokenizer: {\n        root: [\n            { include: '@nestedJSBegin' },\n            ['[ \\\\t\\\\r\\\\n]+', ''],\n            { include: '@comments' },\n            { include: '@keyword' },\n            { include: '@strings' },\n            { include: '@numbers' },\n            ['[*_]?[a-zA-Z\\\\-\\\\s]+(?=:.*(;|(\\\\\\\\$)))', 'attribute.name', '@attribute'],\n            ['url(\\\\-prefix)?\\\\(', { token: 'tag', next: '@urldeclaration' }],\n            ['[{}()\\\\[\\\\]]', '@brackets'],\n            ['[,:;]', 'delimiter'],\n            ['#@identifierPlus', 'tag.id'],\n            ['&', 'tag'],\n            ['\\\\.@identifierPlus(?=\\\\()', 'tag.class', '@attribute'],\n            ['\\\\.@identifierPlus', 'tag.class'],\n            ['@identifierPlus', 'tag'],\n            { include: '@operators' },\n            ['@(@identifier(?=[:,\\\\)]))', 'variable', '@attribute'],\n            ['@(@identifier)', 'variable'],\n            ['@', 'key', '@atRules']\n        ],\n        nestedJSBegin: [\n            ['``', 'delimiter.backtick'],\n            ['`', { token: 'delimiter.backtick', next: '@nestedJSEnd', nextEmbedded: 'text/javascript' }],\n        ],\n        nestedJSEnd: [\n            ['`', { token: 'delimiter.backtick', next: '@pop', nextEmbedded: '@pop' }],\n        ],\n        operators: [\n            ['[<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~]', 'operator']\n        ],\n        keyword: [\n            ['(@[\\\\s]*import|![\\\\s]*important|true|false|when|iscolor|isnumber|isstring|iskeyword|isurl|ispixel|ispercentage|isem|hue|saturation|lightness|alpha|lighten|darken|saturate|desaturate|fadein|fadeout|fade|spin|mix|round|ceil|floor|percentage)\\\\b', 'keyword']\n        ],\n        urldeclaration: [\n            { include: '@strings' },\n            ['[^)\\r\\n]+', 'string'],\n            ['\\\\)', { token: 'tag', next: '@pop' }],\n        ],\n        attribute: [\n            { include: '@nestedJSBegin' },\n            { include: '@comments' },\n            { include: '@strings' },\n            { include: '@numbers' },\n            { include: '@keyword' },\n            ['[a-zA-Z\\\\-]+(?=\\\\()', 'attribute.value', '@attribute'],\n            ['>', 'operator', '@pop'],\n            ['@identifier', 'attribute.value'],\n            { include: '@operators' },\n            ['@(@identifier)', 'variable'],\n            ['[)\\\\}]', '@brackets', '@pop'],\n            ['[{}()\\\\[\\\\]>]', '@brackets'],\n            ['[;]', 'delimiter', '@pop'],\n            ['[,=:]', 'delimiter'],\n            ['\\\\s', ''],\n            ['.', 'attribute.value']\n        ],\n        comments: [\n            ['\\\\/\\\\*', 'comment', '@comment'],\n            ['\\\\/\\\\/+.*', 'comment'],\n        ],\n        comment: [\n            ['\\\\*\\\\/', 'comment', '@pop'],\n            ['.', 'comment'],\n        ],\n        numbers: [\n            ['(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', { token: 'attribute.value.number', next: '@units' }],\n            ['#[0-9a-fA-F_]+(?!\\\\w)', 'attribute.value.hex']\n        ],\n        units: [\n            ['(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?', 'attribute.value.unit', '@pop']\n        ],\n        strings: [\n            ['~?\"', { token: 'string.delimiter', next: '@stringsEndDoubleQuote' }],\n            ['~?\\'', { token: 'string.delimiter', next: '@stringsEndQuote' }]\n        ],\n        stringsEndDoubleQuote: [\n            ['\\\\\\\\\"', 'string'],\n            ['\"', { token: 'string.delimiter', next: '@popall' }],\n            ['.', 'string']\n        ],\n        stringsEndQuote: [\n            ['\\\\\\\\\\'', 'string'],\n            ['\\'', { token: 'string.delimiter', next: '@popall' }],\n            ['.', 'string']\n        ],\n        atRules: [\n            { include: '@comments' },\n            { include: '@strings' },\n            ['[()]', 'delimiter'],\n            ['[\\\\{;]', 'delimiter', '@pop'],\n            ['.', 'key']\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    // the default separators except `@$`\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n        { open: '<', close: '>' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\n            end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.java',\n    keywords: [\n        'abstract', 'continue', 'for', 'new', 'switch', 'assert', 'default',\n        'goto', 'package', 'synchronized', 'boolean', 'do', 'if', 'private',\n        'this', 'break', 'double', 'implements', 'protected', 'throw', 'byte',\n        'else', 'import', 'public', 'throws', 'case', 'enum', 'instanceof', 'return',\n        'transient', 'catch', 'extends', 'int', 'short', 'try', 'char', 'final',\n        'interface', 'static', 'void', 'class', 'finally', 'long', 'strictfp',\n        'volatile', 'const', 'float', 'native', 'super', 'while', 'true', 'false'\n    ],\n    operators: [\n        '=', '>', '<', '!', '~', '?', ':',\n        '==', '<=', '>=', '!=', '&&', '||', '++', '--',\n        '+', '-', '*', '/', '&', '|', '^', '%', '<<',\n        '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\n        '^=', '%=', '<<=', '>>=', '>>>='\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    digits: /\\d+(_+\\d+)*/,\n    octaldigits: /[0-7]+(_+[0-7]+)*/,\n    binarydigits: /[0-1]+(_+[0-1]+)*/,\n    hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/[a-zA-Z_$][\\w$]*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }],\n            // @ annotations.\n            [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\n            // numbers\n            [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\n            [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\n            [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\n            [/0(@octaldigits)[Ll]?/, 'number.octal'],\n            [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\n            [/(@digits)[fFdD]/, 'number.float'],\n            [/(@digits)[lL]?/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string'],\n            // characters\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\n            // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\n            [/\\*\\//, 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        //Identical copy of comment above, except for the addition of .doc\n        javadoc: [\n            [/[^\\/*]+/, 'comment.doc'],\n            // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\n            [/\\/\\*/, 'comment.doc.invalid'],\n            [/\\*\\//, 'comment.doc', '@pop'],\n            [/[\\/*]/, 'comment.doc']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, 'string', '@pop']\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n// Allow for running under nodejs/requirejs in tests\nvar _monaco = (typeof monaco === 'undefined' ? self.monaco : monaco);\nvar EMPTY_ELEMENTS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n    comments: {\n        blockComment: ['{{!--', '--}}']\n    },\n    brackets: [\n        ['<!--', '-->'],\n        ['<', '>'],\n        ['{{', '}}'],\n        ['{', '}'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' }\n    ],\n    surroundingPairs: [\n        { open: '<', close: '>' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' }\n    ],\n    onEnterRules: [\n        {\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n            afterText: /^<\\/(\\w[\\w\\d]*)\\s*>$/i,\n            action: { indentAction: _monaco.languages.IndentAction.IndentOutdent }\n        },\n        {\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n            action: { indentAction: _monaco.languages.IndentAction.Indent }\n        }\n    ],\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '',\n    // ignoreCase: true,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.root' }],\n            [/<!DOCTYPE/, 'metatag.html', '@doctype'],\n            [/<!--/, 'comment.html', '@comment'],\n            [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\n            [/(<)(script)/, ['delimiter.html', { token: 'tag.html', next: '@script' }]],\n            [/(<)(style)/, ['delimiter.html', { token: 'tag.html', next: '@style' }]],\n            [/(<)([:\\w]+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\n            [/(<\\/)(\\w+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\n            [/</, 'delimiter.html'],\n            [/\\{/, 'delimiter.html'],\n            [/[^<{]+/] // text\n        ],\n        doctype: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.comment' }],\n            [/[^>]+/, 'metatag.content.html'],\n            [/>/, 'metatag.html', '@pop'],\n        ],\n        comment: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.comment' }],\n            [/-->/, 'comment.html', '@pop'],\n            [/[^-]+/, 'comment.content.html'],\n            [/./, 'comment.content.html']\n        ],\n        otherTag: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.otherTag' }],\n            [/\\/?>/, 'delimiter.html', '@pop'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n        ],\n        // -- BEGIN <script> tags handling\n        // After <script\n        script: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.script' }],\n            [/type/, 'attribute.name', '@scriptAfterType'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/(<\\/)(script\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\n        ],\n        // After <script ... type\n        scriptAfterType: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.scriptAfterType' }],\n            [/=/, 'delimiter', '@scriptAfterTypeEquals'],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <script ... type =\n        scriptAfterTypeEquals: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.scriptAfterTypeEquals' }],\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <script ... type = $S2\n        scriptWithCustomType: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.scriptWithCustomType.$S2' }],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.$S2', nextEmbedded: '$S2' }],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        scriptEmbedded: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInEmbeddedState.scriptEmbedded.$S2', nextEmbedded: '@pop' }],\n            [/<\\/script/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\n        ],\n        // -- END <script> tags handling\n        // -- BEGIN <style> tags handling\n        // After <style\n        style: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.style' }],\n            [/type/, 'attribute.name', '@styleAfterType'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/(<\\/)(style\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\n        ],\n        // After <style ... type\n        styleAfterType: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.styleAfterType' }],\n            [/=/, 'delimiter', '@styleAfterTypeEquals'],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <style ... type =\n        styleAfterTypeEquals: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.styleAfterTypeEquals' }],\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <style ... type = $S2\n        styleWithCustomType: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.styleWithCustomType.$S2' }],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.$S2', nextEmbedded: '$S2' }],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        styleEmbedded: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInEmbeddedState.styleEmbedded.$S2', nextEmbedded: '@pop' }],\n            [/<\\/style/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\n        ],\n        // -- END <style> tags handling\n        handlebarsInSimpleState: [\n            [/\\{\\{\\{?/, 'delimiter.handlebars'],\n            [/\\}\\}\\}?/, { token: 'delimiter.handlebars', switchTo: '@$S2.$S3' }],\n            { include: 'handlebarsRoot' }\n        ],\n        handlebarsInEmbeddedState: [\n            [/\\{\\{\\{?/, 'delimiter.handlebars'],\n            [/\\}\\}\\}?/, { token: 'delimiter.handlebars', switchTo: '@$S2.$S3', nextEmbedded: '$S3' }],\n            { include: 'handlebarsRoot' }\n        ],\n        handlebarsRoot: [\n            [/[#/][^\\s}]+/, 'keyword.helper.handlebars'],\n            [/else\\b/, 'keyword.helper.handlebars'],\n            [/[\\s]+/],\n            [/[^}]/, 'variable.parameter.handlebars'],\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '`', close: '`', notIn: ['string'] },\n        { open: '\"', close: '\"', notIn: ['string'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '`', close: '`' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.go',\n    keywords: [\n        'break',\n        'case',\n        'chan',\n        'const',\n        'continue',\n        'default',\n        'defer',\n        'else',\n        'fallthrough',\n        'for',\n        'func',\n        'go',\n        'goto',\n        'if',\n        'import',\n        'interface',\n        'map',\n        'package',\n        'range',\n        'return',\n        'select',\n        'struct',\n        'switch',\n        'type',\n        'var',\n        'bool',\n        'true',\n        'false',\n        'uint8',\n        'uint16',\n        'uint32',\n        'uint64',\n        'int8',\n        'int16',\n        'int32',\n        'int64',\n        'float32',\n        'float64',\n        'complex64',\n        'complex128',\n        'byte',\n        'rune',\n        'uint',\n        'int',\n        'uintptr',\n        'string',\n        'nil',\n    ],\n    operators: [\n        '+', '-', '*', '/', '%', '&', '|', '^', '<<', '>>', '&^',\n        '+=', '-=', '*=', '/=', '%=', '&=', '|=', '^=', '<<=', '>>=', '&^=',\n        '&&', '||', '<-', '++', '--', '==', '<', '>', '=', '!', '!=', '<=', '>=', ':=', '...',\n        '(', ')', '', ']', '{', '}', ',', ';', '.', ':'\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // [[ attributes ]].\n            [/\\[\\[.*\\]\\]/, 'annotation'],\n            // Preprocessor directive\n            [/^\\s*#\\w+/, 'keyword'],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }],\n            // numbers\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?/, 'number.float'],\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F']*[0-9a-fA-F]/, 'number.hex'],\n            [/0[0-7']*[0-7]/, 'number.octal'],\n            [/0[bB][0-1']*[0-1]/, 'number.binary'],\n            [/\\d[\\d']*/, 'number'],\n            [/\\d/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string'],\n            [/`/, \"string\", \"@rawstring\"],\n            // characters\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@doccomment'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\n            // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\n            [/\\*\\//, 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        //Identical copy of comment above, except for the addition of .doc\n        doccomment: [\n            [/[^\\/*]+/, 'comment.doc'],\n            // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\n            [/\\/\\*/, 'comment.doc.invalid'],\n            [/\\*\\//, 'comment.doc', '@pop'],\n            [/[\\/*]/, 'comment.doc']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, 'string', '@pop']\n        ],\n        rawstring: [\n            [/[^\\`]/, \"string\"],\n            [/`/, \"string\", \"@pop\"]\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['(*', '*)'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*//\\\\s*#region\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#region(.*)\\\\*\\\\)\"),\n            end: new RegExp(\"^\\\\s*//\\\\s*#endregion\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#endregion\\\\s*\\\\*\\\\)\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.fs',\n    keywords: [\n        'abstract', 'and', 'atomic', 'as',\n        'assert', 'asr', 'base', 'begin',\n        'break', 'checked', 'component',\n        'const', 'constraint', 'constructor',\n        'continue', 'class', 'default',\n        'delegate', 'do', 'done', 'downcast',\n        'downto', 'elif', 'else', 'end',\n        'exception', 'eager', 'event', 'external',\n        'extern', 'false', 'finally', 'for',\n        'fun', 'function', 'fixed', 'functor',\n        'global', 'if', 'in', 'include', 'inherit',\n        'inline', 'interface', 'internal', 'land',\n        'lor', 'lsl', 'lsr', 'lxor', 'lazy', 'let',\n        'match', 'member', 'mod', 'module', 'mutable',\n        'namespace', 'method', 'mixin', 'new', 'not',\n        'null', 'of', 'open', 'or', 'object',\n        'override', 'private', 'parallel', 'process',\n        'protected', 'pure', 'public', 'rec', 'return',\n        'static', 'sealed', 'struct', 'sig', 'then',\n        'to', 'true', 'tailcall', 'trait',\n        'try', 'type', 'upcast', 'use',\n        'val', 'void', 'virtual', 'volatile',\n        'when', 'while', 'with', 'yield'\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\^%;\\.,\\/]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    integersuffix: /[uU]?[yslnLI]?/,\n    floatsuffix: /[fFmM]?/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // [< attributes >].\n            [/\\[<.*>\\]/, 'annotation'],\n            // Preprocessor directive\n            [/^#(if|else|endif)/, 'keyword'],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/0x[0-9a-fA-F]+LF/, 'number.float'],\n            [/0x[0-9a-fA-F]+(@integersuffix)/, 'number.hex'],\n            [/0b[0-1]+(@integersuffix)/, 'number.bin'],\n            [/\\d+(@integersuffix)/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"\"\"/, 'string', '@string.\"\"\"'],\n            [/\"/, 'string', '@string.\"'],\n            // literal string\n            [/\\@\"/, { token: 'string.quote', next: '@litstring' }],\n            // characters\n            [/'[^\\\\']'B?/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/\\(\\*(?!\\))/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\*]+/, 'comment'],\n            [/\\*\\)/, 'comment', '@pop'],\n            [/\\*/, 'comment']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/(\"\"\"|\"B?)/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }]\n        ],\n        litstring: [\n            [/[^\"]+/, 'string'],\n            [/\"\"/, 'string.escape'],\n            [/\"/, { token: 'string.quote', next: '@pop' }]\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        blockComment: ['###', '###'],\n        lineComment: '#'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.coffee',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    regEx: /\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,\n    keywords: [\n        'and', 'or', 'is', 'isnt', 'not', 'on', 'yes', '@', 'no', 'off',\n        'true', 'false', 'null', 'this',\n        'new', 'delete', 'typeof', 'in', 'instanceof',\n        'return', 'throw', 'break', 'continue', 'debugger',\n        'if', 'else', 'switch', 'for', 'while', 'do', 'try', 'catch', 'finally',\n        'class', 'extends', 'super',\n        'undefined', 'then', 'unless', 'until', 'loop', 'of', 'by', 'when'\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?&%|+\\-*\\/\\^\\.,\\:]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/\\@[a-zA-Z_]\\w*/, 'variable.predefined'],\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        'this': 'variable.predefined',\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': ''\n                    }\n                }],\n            // whitespace\n            [/[ \\t\\r\\n]+/, ''],\n            // Comments\n            [/###/, 'comment', '@comment'],\n            [/#.*$/, 'comment'],\n            // regular expressions\n            ['///', { token: 'regexp', next: '@hereregexp' }],\n            [/^(\\s*)(@regEx)/, ['', 'regexp']],\n            [/(\\()(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\n            [/(\\,)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\=)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\:)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\[)(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\n            [/(\\!)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\&)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\|)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\?)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\{)(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\n            [/(\\;)(\\s*)(@regEx)/, ['', '', 'regexp']],\n            // delimiters\n            [/}/, {\n                    cases: {\n                        '$S2==interpolatedstring': { token: 'string', next: '@pop' },\n                        '@default': '@brackets'\n                    }\n                }],\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d+[eE]([\\-+]?\\d+)?/, 'number.float'],\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\n            [/0[0-7]+(?!\\d)/, 'number.octal'],\n            [/\\d+/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[,.]/, 'delimiter'],\n            // strings:\n            [/\"\"\"/, 'string', '@herestring.\"\"\"'],\n            [/'''/, 'string', '@herestring.\\'\\'\\''],\n            [/\"/, {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: '@string.\"' }\n                    }\n                }],\n            [/'/, {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: '@string.\\'' }\n                    }\n                }],\n        ],\n        string: [\n            [/[^\"'\\#\\\\]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\./, 'string.escape.invalid'],\n            [/\\./, 'string.escape.invalid'],\n            [/#{/, {\n                    cases: {\n                        '$S2==\"': { token: 'string', next: 'root.interpolatedstring' },\n                        '@default': 'string'\n                    }\n                }],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }],\n            [/#/, 'string']\n        ],\n        herestring: [\n            [/(\"\"\"|''')/, {\n                    cases: {\n                        '$1==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }],\n            [/[^#\\\\'\"]+/, 'string'],\n            [/['\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\./, 'string.escape.invalid'],\n            [/#{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\n            [/#/, 'string']\n        ],\n        comment: [\n            [/[^#]+/, 'comment',],\n            [/###/, 'comment', '@pop'],\n            [/#/, 'comment'],\n        ],\n        hereregexp: [\n            [/[^\\\\\\/#]+/, 'regexp'],\n            [/\\\\./, 'regexp'],\n            [/#.*$/, 'comment'],\n            ['///[igm]*', { token: 'regexp', next: '@pop' }],\n            [/\\//, 'regexp'],\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: 'REM'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ],\n    surroundingPairs: [\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#region\"),\n            end: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#endregion\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.bat',\n    brackets: [\n        { token: 'delimiter.bracket', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' }\n    ],\n    keywords: /call|defined|echo|errorlevel|exist|for|goto|if|pause|set|shift|start|title|not|pushd|popd/,\n    // we include these common regular expressions\n    symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [/^(\\s*)(rem(?:\\s.*|))$/, ['', 'comment']],\n            [/(\\@?)(@keywords)(?!\\w)/, [{ token: 'keyword' }, { token: 'keyword.$2' }]],\n            // whitespace\n            [/[ \\t\\r\\n]+/, ''],\n            // blocks\n            [/setlocal(?!\\w)/, 'keyword.tag-setlocal'],\n            [/endlocal(?!\\w)/, 'keyword.tag-setlocal'],\n            // words\n            [/[a-zA-Z_]\\w*/, ''],\n            // labels\n            [/:\\w*/, 'metatag'],\n            // variables\n            [/%[^%]+%/, 'variable'],\n            [/%%[\\w]+(?!\\w)/, 'variable'],\n            // punctuations\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\n            [/\\d+/, 'number'],\n            // punctuation: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings:\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', '@string.\\''],\n        ],\n        string: [\n            [/[^\\\\\"'%]+/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/%[\\w ]+%/, 'variable'],\n            [/%%[\\w]+(?!\\w)/, 'variable'],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }],\n            [/$/, 'string', '@popall']\n        ],\n    }\n};\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The diagnostic's serverity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.title);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n})(TextEdit || (TextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits) {\n        this.edits = edits;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\n        this.edits.push(TextEdit.insert(position, newText));\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\n        this.edits.push(TextEdit.replace(range, newText));\n    };\n    TextEditChangeImpl.prototype.delete = function (range) {\n        this.edits.push(TextEdit.del(range));\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            return this._workspaceEdit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (VersionedTextDocumentIdentifier.is(key)) {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    documentChanges: []\n                };\n            }\n            if (!this._workspaceEdit.documentChanges) {\n                throw new Error('Workspace edit is not configured for versioned document changes.');\n            }\n            var textDocument = key;\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    changes: Object.create(null)\n                };\n            }\n            if (!this._workspaceEdit.changes) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    return WorkspaceChange;\n}());\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n})(MarkedString || (MarkedString = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n    ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrance.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containg the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics) {\n        return { diagnostics: diagnostics };\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data))\n            result.data = data;\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * A document link is a range in a text document that links to an internal or external resource, like another\n * text document or a web site.\n */\nvar DocumentLink = /** @class */ (function () {\n    function DocumentLink() {\n    }\n    return DocumentLink;\n}());\nexport { DocumentLink };\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target) {\n        return { range: range, target: target };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return 0;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Ovelapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nexport var TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = null;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = null;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === null) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var pos = 0, len = text.length, value = '', tokenOffset = 0, token = 16 /* Unknown */, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                ch = text.charCodeAt(pos++);\n                switch (ch) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch_1 = scanHexDigits(4, true);\n                        if (ch_1 >= 0) {\n                            result += String.fromCharCode(ch_1);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var commentClosed = false;\n                    while (pos < len) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && (pos + 1 < len) && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenError: function () { return scanError; }\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n//# sourceMappingURL=scanner.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\nexport function format(documentText, range, options) {\n    var initialIndentLevel;\n    var formatText;\n    var formatTextStart;\n    var rangeStart;\n    var rangeEnd;\n    if (range) {\n        rangeStart = range.offset;\n        rangeEnd = rangeStart + range.length;\n        formatTextStart = rangeStart;\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n            formatTextStart--;\n        }\n        var endOffset = rangeEnd;\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n            endOffset++;\n        }\n        formatText = documentText.substring(formatTextStart, endOffset);\n        initialIndentLevel = computeIndentLevel(formatText, 0, options);\n    }\n    else {\n        formatText = documentText;\n        initialIndentLevel = 0;\n        formatTextStart = 0;\n        rangeStart = 0;\n        rangeEnd = documentText.length;\n    }\n    var eol = getEOL(options, documentText);\n    var lineBreak = false;\n    var indentLevel = 0;\n    var indentValue;\n    if (options.insertSpaces) {\n        indentValue = repeat(' ', options.tabSize || 4);\n    }\n    else {\n        indentValue = '\\t';\n    }\n    var scanner = createScanner(formatText, false);\n    var hasError = false;\n    function newLineAndIndent() {\n        return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    function scanNext() {\n        var token = scanner.scan();\n        lineBreak = false;\n        while (token === 15 /* Trivia */ || token === 14 /* LineBreakTrivia */) {\n            lineBreak = lineBreak || (token === 14 /* LineBreakTrivia */);\n            token = scanner.scan();\n        }\n        hasError = token === 16 /* Unknown */ || scanner.getTokenError() !== 0 /* None */;\n        return token;\n    }\n    var editOperations = [];\n    function addEdit(text, startOffset, endOffset) {\n        if (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n        }\n    }\n    var firstToken = scanNext();\n    if (firstToken !== 17 /* EOF */) {\n        var firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n        var initialIndent = repeat(indentValue, initialIndentLevel);\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\n    }\n    while (firstToken !== 17 /* EOF */) {\n        var firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n        var secondToken = scanNext();\n        var replaceContent = '';\n        while (!lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n            // comments on the same line: keep them on the same line, but ignore them otherwise\n            var commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n            addEdit(' ', firstTokenEnd, commentTokenStart);\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n            replaceContent = secondToken === 12 /* LineCommentTrivia */ ? newLineAndIndent() : '';\n            secondToken = scanNext();\n        }\n        if (secondToken === 2 /* CloseBraceToken */) {\n            if (firstToken !== 1 /* OpenBraceToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else if (secondToken === 4 /* CloseBracketToken */) {\n            if (firstToken !== 3 /* OpenBracketToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else {\n            switch (firstToken) {\n                case 3 /* OpenBracketToken */:\n                case 1 /* OpenBraceToken */:\n                    indentLevel++;\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 5 /* CommaToken */:\n                case 12 /* LineCommentTrivia */:\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    if (lineBreak) {\n                        replaceContent = newLineAndIndent();\n                    }\n                    else {\n                        // symbol following comment on the same line: keep on same line, separate with ' '\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 6 /* ColonToken */:\n                    replaceContent = ' ';\n                    break;\n                case 10 /* StringLiteral */:\n                    if (secondToken === 6 /* ColonToken */) {\n                        replaceContent = '';\n                        break;\n                    }\n                // fall through\n                case 7 /* NullKeyword */:\n                case 8 /* TrueKeyword */:\n                case 9 /* FalseKeyword */:\n                case 11 /* NumericLiteral */:\n                case 2 /* CloseBraceToken */:\n                case 4 /* CloseBracketToken */:\n                    if (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */) {\n                        replaceContent = ' ';\n                    }\n                    else if (secondToken !== 5 /* CommaToken */ && secondToken !== 17 /* EOF */) {\n                        hasError = true;\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    hasError = true;\n                    break;\n            }\n            if (lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n                replaceContent = newLineAndIndent();\n            }\n        }\n        var secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n        firstToken = secondToken;\n    }\n    return editOperations;\n}\nfunction repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\nfunction computeIndentLevel(content, offset, options) {\n    var i = 0;\n    var nChars = 0;\n    var tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        var ch = content.charAt(i);\n        if (ch === ' ') {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charAt(i);\n        if (ch === '\\r') {\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                return '\\r\\n';\n            }\n            return '\\r';\n        }\n        else if (ch === '\\n') {\n            return '\\n';\n        }\n    }\n    return (options && options.eol) || '\\n';\n}\nexport function isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n//# sourceMappingURL=format.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    var segments = []; // strings or numbers\n    var earlyReturnException = new Object();\n    var previousNode = void 0;\n    var previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object'\n    };\n    var isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.columnOffset = void 0;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: function (name, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onArrayBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.push(0);\n            },\n            onArrayEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onLiteralValue: function (value, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getLiteralNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: function (sep, offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.columnOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = void 0;\n                }\n                else if (sep === ',') {\n                    var last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = void 0;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode: previousNode,\n        isAtPropertyKey: isAtPropertyKey,\n        matches: function (pattern) {\n            var k = 0;\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentProperty = null;\n    var currentParent = [];\n    var previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    var visitor = {\n        onObjectBegin: function () {\n            var object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: function (name) {\n            currentProperty = name;\n        },\n        onObjectEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: function () {\n            var array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [] }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    var visitor = {\n        onObjectBegin: function (offset) {\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: function (name, offset, length) {\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\n        },\n        onObjectEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: function (offset, length) {\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: function (value, offset, length) {\n            onValue({ type: getLiteralNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: function (sep, offset, length) {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.columnOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    var result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return void 0;\n    }\n    var node = root;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var segment = path_1[_i];\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return void 0;\n            }\n            var found = false;\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var propertyNode = _b[_a];\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return void 0;\n            }\n        }\n        else {\n            var index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return void 0;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    if (node.type === 'array') {\n        return node.children.map(getNodeValue);\n    }\n    else if (node.type === 'object') {\n        var obj = Object.create(null);\n        for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            obj[prop.children[0].value] = getNodeValue(prop.children[1]);\n        }\n        return obj;\n    }\n    return node.value;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options) {\n    var _scanner = createScanner(text, false);\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    var disallowComments = options && options.disallowComments;\n    var allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            var token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* InvalidUnicode */:\n                    handleError(14 /* InvalidUnicode */);\n                    break;\n                case 5 /* InvalidEscapeCharacter */:\n                    handleError(15 /* InvalidEscapeCharacter */);\n                    break;\n                case 3 /* UnexpectedEndOfNumber */:\n                    handleError(13 /* UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* UnexpectedEndOfString */:\n                    handleError(12 /* UnexpectedEndOfString */);\n                    break;\n                case 6 /* InvalidCharacter */:\n                    handleError(16 /* InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    handleError(1 /* InvalidSymbol */);\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter, skipUntil) {\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token = _scanner.getToken();\n            while (token !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        var value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* NumericLiteral */:\n                var value = 0;\n                try {\n                    value = JSON.parse(_scanner.getTokenValue());\n                    if (typeof value !== 'number') {\n                        handleError(2 /* InvalidNumberFormat */);\n                        value = 0;\n                    }\n                }\n                catch (e) {\n                    handleError(2 /* InvalidNumberFormat */);\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* StringLiteral */) {\n            handleError(3 /* PropertyNameExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ColonExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        var needsComma = false;\n        while (_scanner.getToken() !== 2 /* CloseBraceToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* CloseBraceToken */) {\n            handleError(7 /* CloseBraceExpected */, [2 /* CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        var needsComma = false;\n        while (_scanner.getToken() !== 4 /* CloseBracketToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (_scanner.getToken() !== 4 /* CloseBracketToken */) {\n            handleError(8 /* CloseBracketExpected */, [4 /* CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* OpenBracketToken */:\n                return parseArray();\n            case 1 /* OpenBraceToken */:\n                return parseObject();\n            case 10 /* StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* EOF */) {\n        return true;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* EOF */) {\n        handleError(9 /* EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    var _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* LineCommentTrivia */:\n            case 13 /* BlockCommentTrivia */:\n            case 17 /* EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== void 0) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* EOF */);\n    return parts.join('');\n}\nfunction getLiteralNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        default: return 'null';\n    }\n}\n//# sourceMappingURL=parser.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format.js';\nimport * as edit from './impl/edit.js';\nimport * as scanner from './impl/scanner.js';\nimport * as parser from './impl/parser.js';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport var createScanner = scanner.createScanner;\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport var getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport var parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport var parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport var findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport var getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport var visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport var stripComments = parser.stripComments;\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\nexport function applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = edit.applyEdit(text, edits[i]);\n    }\n    return text;\n}\n//# sourceMappingURL=main.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|((::|[@#.!:])?[\\w-?]+%?)|::|[@#.!:]/g,\n    comments: {\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\n            end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.css',\n    ws: '[ \\t\\n\\r\\f]*',\n    identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.bracket' },\n        { open: '[', close: ']', token: 'delimiter.bracket' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '<', close: '>', token: 'delimiter.angle' }\n    ],\n    tokenizer: {\n        root: [\n            { include: '@selector' },\n        ],\n        selector: [\n            { include: '@comments' },\n            { include: '@import' },\n            { include: '@strings' },\n            ['[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)', { token: 'keyword', next: '@keyframedeclaration' }],\n            ['[@](page|content|font-face|-moz-document)', { token: 'keyword' }],\n            ['[@](charset|namespace)', { token: 'keyword', next: '@declarationbody' }],\n            ['(url-prefix)(\\\\()', ['attribute.value', { token: 'delimiter.parenthesis', next: '@urldeclaration' }]],\n            ['(url)(\\\\()', ['attribute.value', { token: 'delimiter.parenthesis', next: '@urldeclaration' }]],\n            { include: '@selectorname' },\n            ['[\\\\*]', 'tag'],\n            ['[>\\\\+,]', 'delimiter'],\n            ['\\\\[', { token: 'delimiter.bracket', next: '@selectorattribute' }],\n            ['{', { token: 'delimiter.bracket', next: '@selectorbody' }]\n        ],\n        selectorbody: [\n            { include: '@comments' },\n            ['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', 'attribute.name', '@rulevalue'],\n            ['}', { token: 'delimiter.bracket', next: '@pop' }]\n        ],\n        selectorname: [\n            ['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', 'tag'],\n        ],\n        selectorattribute: [\n            { include: '@term' },\n            [']', { token: 'delimiter.bracket', next: '@pop' }],\n        ],\n        term: [\n            { include: '@comments' },\n            ['(url-prefix)(\\\\()', ['attribute.value', { token: 'delimiter.parenthesis', next: '@urldeclaration' }]],\n            ['(url)(\\\\()', ['attribute.value', { token: 'delimiter.parenthesis', next: '@urldeclaration' }]],\n            { include: '@functioninvocation' },\n            { include: '@numbers' },\n            { include: '@name' },\n            ['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'delimiter'],\n            [',', 'delimiter']\n        ],\n        rulevalue: [\n            { include: '@comments' },\n            { include: '@strings' },\n            { include: '@term' },\n            ['!important', 'keyword'],\n            [';', 'delimiter', '@pop'],\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\n        ],\n        warndebug: [\n            ['[@](warn|debug)', { token: 'keyword', next: '@declarationbody' }]\n        ],\n        import: [\n            ['[@](import)', { token: 'keyword', next: '@declarationbody' }]\n        ],\n        urldeclaration: [\n            { include: '@strings' },\n            ['[^)\\r\\n]+', 'string'],\n            ['\\\\)', { token: 'delimiter.parenthesis', next: '@pop' }]\n        ],\n        parenthizedterm: [\n            { include: '@term' },\n            ['\\\\)', { token: 'delimiter.parenthesis', next: '@pop' }]\n        ],\n        declarationbody: [\n            { include: '@term' },\n            [';', 'delimiter', '@pop'],\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\n        ],\n        comments: [\n            ['\\\\/\\\\*', 'comment', '@comment'],\n            ['\\\\/\\\\/+.*', 'comment']\n        ],\n        comment: [\n            ['\\\\*\\\\/', 'comment', '@pop'],\n            [/[^*/]+/, 'comment'],\n            [/./, 'comment'],\n        ],\n        name: [\n            ['@identifier', 'attribute.value']\n        ],\n        numbers: [\n            ['-?(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', { token: 'attribute.value.number', next: '@units' }],\n            ['#[0-9a-fA-F_]+(?!\\\\w)', 'attribute.value.hex']\n        ],\n        units: [\n            ['(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?', 'attribute.value.unit', '@pop']\n        ],\n        keyframedeclaration: [\n            ['@identifier', 'attribute.value'],\n            ['{', { token: 'delimiter.bracket', switchTo: '@keyframebody' }],\n        ],\n        keyframebody: [\n            { include: '@term' },\n            ['{', { token: 'delimiter.bracket', next: '@selectorbody' }],\n            ['}', { token: 'delimiter.bracket', next: '@pop' }],\n        ],\n        functioninvocation: [\n            ['@identifier\\\\(', { token: 'attribute.value', next: '@functionarguments' }],\n        ],\n        functionarguments: [\n            ['\\\\$@identifier@ws:', 'attribute.name'],\n            ['[,]', 'delimiter'],\n            { include: '@term' },\n            ['\\\\)', { token: 'attribute.value', next: '@pop' }],\n        ],\n        strings: [\n            ['~?\"', { token: 'string', next: '@stringenddoublequote' }],\n            ['~?\\'', { token: 'string', next: '@stringendquote' }]\n        ],\n        stringenddoublequote: [\n            ['\\\\\\\\.', 'string'],\n            ['\"', { token: 'string', next: '@pop' }],\n            [/[^\\\\\"]+/, 'string'],\n            ['.', 'string']\n        ],\n        stringendquote: [\n            ['\\\\\\\\.', 'string'],\n            ['\\'', { token: 'string', next: '@pop' }],\n            [/[^\\\\']+/, 'string'],\n            ['.', 'string']\n        ]\n    }\n};\n"],"sourceRoot":""}