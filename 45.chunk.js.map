{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/language/html/workerManager.js","webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js","webpack:///./node_modules/monaco-editor/esm/vs/language/html/languageFeatures.js","webpack:///./node_modules/monaco-editor/esm/vs/language/html/htmlMode.js"],"names":["Position","Range","Location","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","Promise","monaco","WorkerManager","defaults","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","createData","languageSettings","options","languageId","label","getProxy","getLanguageServiceWorker","resources","_i","arguments","length","p","completeCallback","errorCallback","r","c","e","then","toShallowCancelPromise","client","_","withSyncedResources","create","line","character","is","value","candidate","Is","defined","number","one","two","three","four","start","end","Error","uri","range","string","undefined","Warning","Information","Hint","message","severity","code","source","result","title","command","args","replace","newText","insert","position","del","textDocument","edits","VersionedTextDocumentIdentifier","Array","isArray","TextDocumentIdentifier","TextDocumentItem","MarkupKind","CompletionItemKind","InsertTextFormat","CompletionItem","CompletionList","MarkedString","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolInformation","CodeActionContext","CodeLens","FormattingOptions","TextEditChangeImpl","push","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","Object","_workspaceEdit","documentChanges","forEach","textDocumentEdit","textEditChange","changes","keys","key","defineProperty","get","enumerable","configurable","getTextEditChange","version","text","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","items","isIncomplete","fromPlainText","plainText","documentation","parameters","Read","Write","kind","Namespace","Package","String","Number","Boolean","Key","Null","name","containerName","location","diagnostics","typedArray","data","tabSize","insertSpaces","boolean","DocumentLink","target","TextDocument","TextDocumentSaveReason","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","left","slice","right","leftIdx","rightIdx","i","ret","a","b","lastModifiedOffset","startOffset","endOffset","substring","Manual","AfterDelay","FocusOut","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","toString","call","check","every","Uri","languageFeatures_Range","DiagnosticsAdapter","_disposables","_listener","onModelAdd","model","handle","modeId","getModeId","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","getModels","d","resource","worker","doValidation","markers","map","diag","lsSeverity","MarkerSeverity","Info","toSeverity","startLineNumber","startColumn","endLineNumber","endColumn","toDiagnostics","getModel","err","console","error","fromPosition","column","lineNumber","fromRange","getStartPosition","getEndPosition","toRange","toCompletionItemKind","mItemKind","languages","toTextEdit","textEdit","languageFeatures_CompletionAdapter","CompletionAdapter","provideCompletionItems","token","getWordUntilPosition","wireCancellationToken","doComplete","info","entry","item","insertText","sortText","filterText","detail","insertTextFormat","DocumentHighlightAdapter","provideDocumentHighlights","findDocumentHighlights","mKind","toHighlighKind","DocumentLinkAdapter","provideLinks","findDocumentLinks","url","fromFormattingOptions","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","promise","cancel","onCancellationRequested","setupMode","uris","apply","registerCompletionItemProvider","registerDocumentHighlightProvider","registerLinkProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","__webpack_require__","__webpack_exports__"],"mappings":"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","file":"45.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `HTMLWorker` instance\n                moduleId: 'vs/language/html/htmlWorker',\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.options,\n                    languageId: this._defaults.languageId\n                },\n                label: this._defaults.languageId\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The diagnostic's serverity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.title);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n})(TextEdit || (TextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits) {\n        this.edits = edits;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\n        this.edits.push(TextEdit.insert(position, newText));\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\n        this.edits.push(TextEdit.replace(range, newText));\n    };\n    TextEditChangeImpl.prototype.delete = function (range) {\n        this.edits.push(TextEdit.del(range));\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            return this._workspaceEdit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (VersionedTextDocumentIdentifier.is(key)) {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    documentChanges: []\n                };\n            }\n            if (!this._workspaceEdit.documentChanges) {\n                throw new Error('Workspace edit is not configured for versioned document changes.');\n            }\n            var textDocument = key;\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    changes: Object.create(null)\n                };\n            }\n            if (!this._workspaceEdit.changes) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    return WorkspaceChange;\n}());\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n})(MarkedString || (MarkedString = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n    ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrance.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containg the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics) {\n        return { diagnostics: diagnostics };\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data))\n            result.data = data;\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * A document link is a range in a text document that links to an internal or external resource, like another\n * text document or a web site.\n */\nvar DocumentLink = /** @class */ (function () {\n    function DocumentLink() {\n    }\n    return DocumentLink;\n}());\nexport { DocumentLink };\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target) {\n        return { range: range, target: target };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return 0;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Ovelapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nexport var TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = null;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = null;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === null) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                monaco.editor.setModelMarkers(monaco.editor.getModel(resource), languageId, markers);\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: fromPosition(range.getStartPosition()), end: fromPosition(range.getEndPosition()) };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nfunction toCompletionItem(entry) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: entry.documentation,\n        detail: entry.detail,\n        kind: toCompletionItemKind(entry.kind),\n        textEdit: toTextEdit(entry.textEdit),\n        data: entry.data\n    };\n}\nfunction fromMarkdownString(entry) {\n    return {\n        kind: (typeof entry === 'string' ? ls.MarkupKind.PlainText : ls.MarkupKind.Markdown),\n        value: (typeof entry === 'string' ? entry : entry.value)\n    };\n}\nfunction fromCompletionItem(entry) {\n    var item = {\n        label: entry.label,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: fromMarkdownString(entry.documentation),\n        detail: entry.detail,\n        kind: fromCompletionItemKind(entry.kind),\n        data: entry.data\n    };\n    if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n        item.insertText = entry.insertText.value;\n        item.insertTextFormat = ls.InsertTextFormat.Snippet;\n    }\n    else {\n        item.insertText = entry.insertText;\n    }\n    if (entry.range) {\n        item.textEdit = ls.TextEdit.replace(fromRange(entry.range), item.insertText);\n    }\n    return item;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return ['.', ':', '<', '\"', '=', '/'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nfunction toHighlighKind(kind) {\n    var mKind = monaco.languages.DocumentHighlightKind;\n    switch (kind) {\n        case ls.DocumentHighlightKind.Read: return mKind.Read;\n        case ls.DocumentHighlightKind.Write: return mKind.Write;\n        case ls.DocumentHighlightKind.Text: return mKind.Text;\n    }\n    return mKind.Text;\n}\nvar DocumentHighlightAdapter = /** @class */ (function () {\n    function DocumentHighlightAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentHighlights(resource.toString(), fromPosition(position)); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                kind: toHighlighKind(item.kind)\n            }); });\n        }));\n    };\n    return DocumentHighlightAdapter;\n}());\nexport { DocumentHighlightAdapter };\nvar DocumentLinkAdapter = /** @class */ (function () {\n    function DocumentLinkAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentLinkAdapter.prototype.provideLinks = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentLinks(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                url: item.target\n            }); });\n        }));\n    };\n    return DocumentLinkAdapter;\n}());\nexport { DocumentLinkAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    if (promise.cancel) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n    }\n    return promise;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nexport function setupMode(defaults) {\n    var client = new WorkerManager(defaults);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    // all modes\n    monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker));\n    monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker));\n    monaco.languages.registerLinkProvider(languageId, new languageFeatures.DocumentLinkAdapter(worker));\n    // only html\n    if (languageId === 'html') {\n        monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker));\n        monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker));\n        new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults);\n    }\n}\n"],"sourceRoot":""}