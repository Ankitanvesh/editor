{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/cpp/cpp.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/workerManager.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/languageFeatures.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/tokenization.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/jsonMode.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/vb/vb.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/sql/sql.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/sb/sb.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/ruby/ruby.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/redshift/redshift.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/pug/pug.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/postiats/postiats.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/mysql/mysql.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/msdax/msdax.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/lua/lua.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/ini/ini.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/csp/csp.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.js","webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js","webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/html/html.js"],"names":["__webpack_require__","d","__webpack_exports__","language","conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","defaultToken","tokenPostfix","token","keywords","operators","symbols","escapes","integersuffix","floatsuffix","encoding","tokenizer","root","next","cases","@keywords","@default","include","@operators","whitespace","comment","doccomment","string","raw","$3==$S2","Promise","monaco","WorkerManager","defaults","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","label","languageId","createData","languageSettings","diagnosticsOptions","getProxy","getLanguageServiceWorker","p","completeCallback","errorCallback","r","resources","_i","arguments","length","then","client","_","withSyncedResources","c","e","Uri","Range","DiagnostcsAdapter","_languageId","_disposables","_listener","Object","create","onModelAdd","model","handle","modeId","getModeId","uri","toString","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","push","onDidCreateModel","onWillDisposeModel","_resetSchema","onDidChangeModelLanguage","event","key","getModels","forEach","resource","worker","resetSchema","doValidation","diagnostics","map","code","diag","String","severity","lsSeverity","main","Error","MarkerSeverity","Warning","Information","Info","Hint","toSeverity","startLineNumber","range","line","startColumn","character","endLineNumber","endColumn","message","source","getModel","undefined","err","console","error","fromPosition","position","column","lineNumber","fromRange","getStartPosition","getEndPosition","toRange","toCompletionItemKind","kind","mItemKind","languages","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","toTextEdit","textEdit","text","newText","languageFeatures_CompletionAdapter","CompletionAdapter","defineProperty","get","enumerable","configurable","provideCompletionItems","getWordUntilPosition","wireCancellationToken","doComplete","info","items","entry","item","insertText","sortText","filterText","documentation","detail","insertTextFormat","value","isIncomplete","toMarkdownString","thing","replace","HoverAdapter","provideHover","doHover","contents","Array","isArray","toMarkedStringArray","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","name","containerName","mKind","SymbolKind","Namespace","Package","Constant","Number","Boolean","toSymbolKind","location","parse","fromFormattingOptions","options","tabSize","insertSpaces","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","edits","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","promise","cancel","onCancellationRequested","createTokenizationSupport","supportComments","getInitialState","JSONState","tokenize","state","offsetDelta","stopAtOffset","numberOfInsertedCharacters","adjustOffset","scanError","ret","scanner","jsonc_parser_main","lastWasColon","tokens","endState","clone","offset","getPosition","type","scan","substr","TOKEN_DELIM_OBJECT","TOKEN_DELIM_ARRAY","TOKEN_DELIM_COLON","TOKEN_DELIM_COMMA","TOKEN_VALUE_BOOLEAN","TOKEN_VALUE_NULL","TOKEN_VALUE_STRING","TOKEN_PROPERTY_NAME","TOKEN_VALUE_NUMBER","TOKEN_COMMENT_LINE","TOKEN_COMMENT_BLOCK","getStateData","getTokenError","startIndex","scopes","_state","equals","other","setStateData","setupMode","disposables","uris","apply","registerCompletionItemProvider","registerHoverProvider","registerDocumentSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","setTokensProvider","setLanguageConfiguration","richEditConfiguration","wordPattern","ignoreCase","tagwords","@tagwords","builtinFunctions","builtinVariables","pseudoColumns","@builtinVariables","@builtinFunctions","@pseudoColumns","numbers","strings","complexIdentifiers","bracketedIdentifier","quotedIdentifier","identifier","$2","keywordops","builtins","declarations","linedecls","escape","decpart","decimal","delim","heredelim","regexpctl","regexpesc","for|until|while","@declarations","@builtins","if|unless|while|until","for","@linedecls","@keywordops","$1","dodecl","switchTo","do","modifier","then|else|elsif|do","sstring","dstring","$#==$S3","heredoc","$2==$S2","interpolated","interpolated_compound","pregexp","$#==$S2","~[)}\\]]","~@regexpctl","regexp","regexcontrol","regexrange","regexpcomment","pstring","qstring","$#==$S4","qqstring","offSide","tags","$2@tags","@eos","$2@keywords","tag","simpleText","attributeList","blockText","($S2\\s+.*$)","keywords_dlr","keywords_srp","irregular_keyword_list","keywords_types","keywords_effects","IDENTFST","IDENTRST","symbolic","digit","digitseq0","xdigit","xdigitseq0","INTSP","FLOATSP","fexponent","fexponent_bin","deciexp","hexiexp","irregular_keywords","ESCHAR","regex","action","@keywords_dlr","@keywords_srp","nextEmbedded","@keywords_types","lexing_COMMENT_block_ml","lexing_COMMENT_block_c","lexing_COMMENT_rest","lexing_EFFECT_commaseq0","@keywords_effects","lexing_EXTCODE","lexing_DQUOTE","stringDouble","functions","@functions","$1==$S2","instructions","instructionAfter","variableAfter","variable","stringBody","dblStringBody","typeKeywords","namespaceFollows","parenFollows","@namespaceFollows","$S2==interpolatedstring","$S2==litinterpstring","qualified","namespace","litstring","litinterpstring","interpolatedstring","Position","Location","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","is","candidate","Is","defined","number","one","two","three","four","result","title","command","args","insert","del","textDocument","VersionedTextDocumentIdentifier","TextDocumentIdentifier","TextDocumentItem","MarkupKind","InsertTextFormat","CompletionItem","CompletionList","MarkedString","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolInformation","CodeActionContext","CodeLens","FormattingOptions","TextEditChangeImpl","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","_workspaceEdit","documentChanges","textDocumentEdit","textEditChange","changes","keys","getTextEditChange","version","PlainText","Markdown","Folder","EnumMember","Struct","Event","Operator","TypeParameter","fromPlainText","plainText","parameters","Read","Write","Key","Null","typedArray","data","boolean","DocumentLink","target","TextDocument","TextDocumentSaveReason","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","left","slice","right","leftIdx","rightIdx","i","a","b","lastModifiedOffset","startOffset","endOffset","substring","Manual","AfterDelay","FocusOut","_uri","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","ch","charAt","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","call","check","every","_monaco","self","EMPTY_ELEMENTS","onEnterRules","beforeText","join","afterText","indentAction","IndentAction","IndentOutdent","Indent","doctype","otherTag","script","scriptAfterType","scriptAfterTypeEquals","scriptWithCustomType","scriptEmbedded","style","styleAfterType","styleAfterTypeEquals","styleWithCustomType","styleEmbedded"],"mappings":"oIAAAA,EAAAC,EAAAC,EAAA,6BAAAC,IAKA,IAAAC,GACAC,UACAC,YAAA,KACAC,cAAA,YAEAC,WACA,IAAW,MACX,UACA,UAEAC,mBACSC,KAAA,IAAAC,MAAA,MACAD,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,IAAAC,OAAA,sBACAF,KAAA,IAAAC,MAAA,IAAAC,OAAA,YAETC,mBACSH,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETG,SACAC,SACAC,MAAA,IAAAC,OAAA,6BACAC,IAAA,IAAAD,OAAA,mCAIAd,GACAgB,aAAA,GACAC,aAAA,OACAZ,WACSa,MAAA,kBAAAX,KAAA,IAAmCC,MAAA,MACnCU,MAAA,wBAAAX,KAAA,IAAAC,MAAA,MACAU,MAAA,mBAAAX,KAAA,IAAAC,MAAA,MACAU,MAAA,kBAAAX,KAAA,IAAAC,MAAA,MAETW,UACA,WACA,MACA,QACA,OACA,OACA,QACA,OACA,QACA,OACA,QACA,QACA,YACA,aACA,WACA,MACA,WACA,UACA,WACA,SACA,KACA,SACA,eACA,OACA,OACA,OACA,QACA,WACA,SACA,SACA,QACA,QACA,UACA,QACA,MACA,SACA,QACA,UACA,OACA,KACA,KACA,WACA,SACA,MACA,YACA,eACA,WACA,UACA,OACA,UACA,YACA,MACA,WACA,UACA,YACA,WACA,WACA,UACA,SACA,UACA,UACA,WACA,YACA,SACA,MACA,WACA,mBACA,WACA,SACA,YACA,SACA,QACA,SACA,SACA,SACA,gBACA,cACA,SACA,SACA,WACA,OACA,eACA,QACA,cACA,OACA,MACA,UACA,SACA,WACA,QACA,WACA,QACA,UACA,OACA,WACA,UACA,QACA,QACA,OACA,SACA,SACA,YACA,YACA,aACA,iBACA,UACA,wBACA,UACA,sBACA,WACA,uBACA,OACA,aACA,YACA,QACA,WACA,UACA,QACA,oBACA,UACA,YACA,aACA,aACA,UACA,WACA,aACA,YACA,gBACA,OACA,SACA,eACA,cACA,kBACA,WACA,WACA,UACA,UACA,UACA,SACA,cACA,UACA,SACA,UACA,UACA,SACA,UACA,UACA,QACA,yBACA,YACA,SACA,SACA,aACA,eACA,WACA,QACA,WACA,aACA,UACA,UACA,UACA,aACA,WACA,WACA,uBACA,YACA,UACA,aACA,QACA,aACA,WACA,cACA,WACA,WACA,UACA,wBACA,QACA,aAEAC,WACA,4BACA,wCACA,qCACA,yCACA,8BAGAC,QAAA,wBACAC,QAAA,wEACAC,cAAA,mCACAC,YAAA,UACAC,SAAA,WAEAC,WACAC,OAEA,oCAAkDT,MAAA,mBAAAU,KAAA,aAElD,gBACAC,OACAC,aAAsCZ,MAAA,cACtCa,WAAA,iBAIaC,QAAA,gBAEb,4BAEA,0BAEA,aAAiB,cACjB,iCACA,YACAH,OACAI,aAAA,YACAF,WAAA,OAIA,wDACA,0DACA,+DACA,iDACA,sDACA,wCACA,gCAEA,QAAgB,cAEhB,qCACA,yBAEA,sBACA,yDACA,uBAEAG,aACA,kBACA,6CACA,8BACA,sBAEAC,UACA,sBACA,0BACA,oBAGAC,aACA,0BACA,8BACA,wBAEAC,SACA,qBACA,6BACA,gCACA,sBAEAC,MACA,iCACAT,OACAU,WAAA,gDAAuFrB,MAAA,iBAAAU,KAAA,SACvFG,YAAA,yDAIA,+DCpTA,IAAAS,EAAAC,OAAAD,QAEAE,EAAA,WACA,SAAAA,EAAAC,GACA,IAAAC,EAAAC,KACAA,KAAAC,UAAAH,EACAE,KAAAE,QAAA,KACAF,KAAAG,mBAAAC,YAAA,WAA2D,OAAAL,EAAAM,gBAA+B,KAC1FL,KAAAM,cAAA,EACAN,KAAAO,sBAAAP,KAAAC,UAAAO,YAAA,WAA6E,OAAAT,EAAAU,gBAqD7E,OAnDAZ,EAAAa,UAAAD,YAAA,WACAT,KAAAE,UACAF,KAAAE,QAAAS,UACAX,KAAAE,QAAA,MAEAF,KAAAY,QAAA,MAEAf,EAAAa,UAAAC,QAAA,WACAE,cAAAb,KAAAG,oBACAH,KAAAO,sBAAAI,UACAX,KAAA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KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETE,mBACSH,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,OAGTR,GACAgB,aAAA,GACAC,aAAA,OACA4R,YAAA,EACAxS,WACSE,KAAA,IAAAC,MAAA,IAAAU,MAAA,qBACAX,KAAA,IAAAC,MAAA,IAAAU,MAAA,0BAETC,UACA,mBACA,SACA,WACA,qBACA,SACA,aACA,SACA,MACA,UACA,QACA,MACA,UACA,UACA,UACA,WACA,QACA,YACA,YACA,kBACA,gBACA,cACA,aACA,qBACA,oBACA,4BACA,mBACA,kBACA,0BACA,2BACA,UACA,QACA,YACA,gBACA,oBACA,qBACA,oBACA,aACA,eACA,gBACA,SACA,cACA,kBACA,aACA,cACA,KACA,MACA,WACA,aACA,sBACA,KACA,SACA,SACA,qBACA,QACA,aACA,iBACA,gBACA,OACA,eACA,aACA,yBACA,cACA,yBACA,+BACA,8BACA,YACA,eACA,oBACA,SACA,kBACA,SACA,YACA,QACA,eACA,SACA,SACA,UACA,MACA,WACA,YACA,eACA,QACA,SACA,kBACA,SACA,eACA,SACA,cACA,OACA,cACA,KACA,QACA,OACA,SACA,SACA,kBACA,UACA,OACA,UACA,QACA,mBACA,cACA,mBACA,kBACA,UACA,OACA,YACA,QACA,oBACA,mBACA,eACA,aACA,eACA,mBACA,UACA,iBACA,aACA,aACA,aACA,sBACA,aACA,UACA,QACA,QACA,UACA,YACA,WACA,UACA,aACA,SACA,aACA,UACA,cACA,sBACA,SACA,YACA,sBACA,cACA,UACA,SACA,0BACA,gBACA,UACA,aACA,cACA,UACA,UACA,WACA,uBACA,WACA,gBACA,UACA,eACA,SACA,YACA,UACA,MACA,SACA,aACA,uBACA,aACA,gBACA,OACA,UACA,eACA,SACA,yBACA,iBACA,QACA,OACA,mBACA,cACA,WACA,mBACA,qBACA,oBACA,eACA,OACA,gCACA,YACA,aACA,WACA,YACA,iBACA,MACA,YACA,OACA,cACA,OACA,YACA,4BACA,oBACA,aACA,MACA,UACA,UACA,aACA,UACA,mBACA,4BACA,mBACA,iBACA,aACA,QACA,qBACA,SACA,UACA,iBACA,OACA,aACA,MACA,OACA,cACA,OACA,OACA,cACA,SACA,eACA,iBACA,UACA,iBACA,WACA,OACA,WACA,cACA,WACA,SACA,OACA,gBACA,mBACA,OACA,aACA,UACA,UACA,WACA,OACA,YACA,QACA,YACA,SACA,gBACA,UACA,aACA,MACA,WACA,eACA,SACA,QACA,6BACA,YACA,SACA,eACA,QACA,uBACA,OACA,aACA,UACA,OACA,SACA,aACA,cACA,WACA,0BACA,YACA,WACA,kBACA,iBACA,WACA,gBACA,0BACA,QACA,SACA,OACA,eACA,QACA,kBACA,OACA,YACA,aACA,eACA,WACA,WACA,aACA,gBACA,6BACA,sBACA,4CACA,sBACA,wCACA,4CACA,aACA,YACA,gBACA,QACA,WACA,QACA,UACA,YACA,MACA,QACA,iCACA,gCACA,SACA,YACA,YACA,YACA,UACA,aACA,UACA,eACA,OACA,gBACA,mBACA,kBACA,OACA,OACA,WACA,WACA,WACA,KACA,sBACA,iBACA,qBACA,gBACA,MACA,SACA,KACA,OACA,WACA,QACA,QACA,QACA,qBACA,OACA,OACA,SACA,SACA,aACA,uBACA,OACA,cACA,OACA,OACA,YACA,WACA,wBACA,OACA,QACA,WACA,kBACA,iBACA,cACA,KACA,qBACA,iBACA,wCACA,kBACA,QACA,YACA,cACA,wBACA,aACA,UACA,YACA,cACA,QACA,cACA,WACA,eACA,OACA,YACA,QACA,cACA,cACA,SACA,WACA,UACA,MACA,UACA,OACA,KACA,KACA,UACA,YACA,MACA,KACA,OACA,WACA,aACA,mBACA,eACA,YACA,eACA,YACA,WACA,MACA,aACA,OACA,SACA,OACA,sBACA,YACA,WACA,OACA,UACA,QACA,UACA,UACA,UACA,UACA,WACA,QACA,SACA,OACA,WACA,cACA,gBACA,OACA,cACA,iBACA,QACA,qBACA,kBACA,eACA,QACA,WACA,OACA,MACA,SACA,OACA,0BACA,SACA,kBACA,uBACA,UACA,eACA,iBACA,YACA,sBACA,aACA,qBACA,oBACA,qBACA,WACA,SACA,YACA,YACA,eACA,UACA,kBACA,WACA,KACA,mBACA,YACA,gBACA,SACA,SACA,mBACA,wBACA,uCACA,wBACA,QACA,UACA,uBACA,qBACA,cACA,cACA,kBACA,sBACA,qBACA,SACA,UACA,WACA,SACA,iBACA,SACA,QACA,QACA,OACA,aACA,cACA,OACA,aACA,WACA,qBACA,QACA,YACA,kBACA,cACA,aACA,eACA,UACA,OACA,KACA,iBACA,cACA,iBACA,gBACA,cACA,cACA,UACA,UACA,UACA,SACA,WACA,WACA,UACA,SACA,SACA,MACA,wBACA,eACA,OACA,cACA,aACA,WACA,UACA,WACA,SACA,SACA,eACA,aACA,WACA,SACA,QACA,OACA,WACA,UACA,qBACA,WACA,SACA,KACA,MACA,UACA,SACA,UACA,cACA,eACA,KACA,aACA,SACA,OACA,OACA,gBACA,WACA,aACA,WACA,SACA,QACA,MACA,SACA,eACA,OACA,WACA,QACA,YACA,YACA,OACA,cACA,YACA,UACA,mBACA,YACA,UACA,YACA,aACA,UACA,WACA,OACA,UACA,WACA,UACA,iBACA,YACA,gBACA,OACA,0BACA,OACA,aACA,OACA,YACA,YACA,UACA,eACA,QACA,QACA,WACA,iBACA,UACA,aACA,OACA,YACA,YACA,iBACA,UACA,UACA,WACA,uBACA,kBACA,oBACA,WACA,oBACA,SACA,MACA,UACA,QACA,4BACA,QACA,cACA,oBACA,YACA,QACA,MACA,MACA,MACA,UACA,OACA,0BACA,YACA,yBACA,wBACA,aACA,wBACA,gBACA,oBACA,WACA,WACA,WACA,kBACA,YACA,OACA,UACA,UACA,YACA,cACA,WACA,YACA,qBACA,aACA,aACA,uBACA,6BACA,WACA,SACA,2BACA,sBACA,SACA,aACA,yBACA,cACA,iBACA,aACA,iBACA,UACA,cACA,2BACA,mCACA,mCACA,WACA,WACA,SACA,qBACA,QACA,WACA,UACA,UACA,WACA,kBACA,SACA,SACA,aACA,YACA,SACA,UACA,SACA,SACA,SACA,aACA,SACA,OACA,WACA,SACA,OACA,QACA,MACA,WACA,aACA,UACA,OACA,iBACA,gBACA,aACA,WACA,WACA,UACA,OACA,OACA,SACA,SACA,OACA,YACA,SACA,kBACA,cACA,gBACA,SACA,SACA,eACA,SACA,SACA,YACA,iBACA,iBACA,UACA,SACA,eACA,gBACA,SACA,YACA,OACA,OACA,OACA,WACA,eACA,SACA,UACA,iBACA,eACA,UACA,kBACA,MACA,OACA,UACA,kBACA,aACA,WACA,eACA,gBACA,eACA,iBACA,aACA,WACA,MACA,YACA,SACA,cACA,cACA,eACA,cACA,YACA,OACA,OACA,gBACA,WACA,aACA,WACA,iBACA,SACA,SACA,UACA,2BACA,gBACA,QACA,MACA,cACA,UACA,UACA,QACA,aACA,UACA,gBACA,cACA,QACA,YACA,SACA,wBACA,aACA,yBACA,yBACA,QACA,eACA,SACA,aACA,OACA,gBACA,SACA,aACA,iBACA,WACA,UACA,UACA,eACA,YACA,UACA,SACA,YACA,qBACA,UACA,UACA,SACA,QACA,eACA,cACA,UACA,WACA,OACA,OACA,SACA,uBACA,KACA,MACA,OACA,eACA,WACA,OACA,YACA,QACA,OACA,OACA,UACA,QACA,YACA,UACA,KACA,MACA,sBACA,WACA,UACA,cACA,kBACA,wBACA,OACA,cACA,WACA,wBACA,UACA,aACA,kBACA,OACA,WACA,eACA,cACA,MACA,OACA,wBACA,OACA,eACA,YACA,YACA,cACA,YACA,SACA,mBACA,UACA,YACA,SACA,SACA,SACA,aACA,cACA,UACA,MACA,MACA,OACA,OACA,cACA,QACA,YACA,aACA,QACA,SACA,YACA,UACA,UACA,aACA,UACA,OACA,gBACA,QACA,aACA,uBACA,UACA,OACA,SACA,kBACA,OACA,QACA,QACA,UACA,OACA,SACA,UACA,UACA,OACA,WACA,YACA,aACA,QACA,OACA,OACA,MACA,UACA,gBACA,YACA,SACA,SACA,OACA,OACA,QAEAC,WAEA,mEAEA,6BAEA,6DAEA,kCAEA,kBAEA,WAEA4R,kBAEA,kHAEA,uGAEA,iDAEA,6BAEA,8DAEA,2EACA,yHACA,sGACA,0HAEA,gBAEA,yFAEA,wHACA,0HACA,6FAEA,mCAEA,8FACA,yEAEA,qGACA,gHACA,wGACA,gFACA,sGACA,8GAEA,yCAEA,uBAEA,oDAEA,gIACA,kIACA,qEAEA,0GACA,0HAEA,kIACA,8HACA,+GAEA,sBAEA,2DAEA,kJAEA,gCAEA,oFAEA,uEAEA,2BAEAC,kBAEA,oHACA,2FAEA,iCAEA,cAEA,WAEA,kDAEA,oGACA,+DAEAC,eACA,+CAEAxR,WACAC,OACaK,QAAA,cACAA,QAAA,gBACAA,QAAA,mBACAA,QAAA,aACAA,QAAA,aACAA,QAAA,wBACAA,QAAA,YACb,QAAgB,cAChB,qBACA,YACAH,OACAC,YAAA,UACAG,aAAA,WACAkR,oBAAA,aACAC,oBAAA,aACArR,WAAA,iBAGA,gCAEAG,aACA,gBAEAhC,WACA,oBACA,QAAsBgB,MAAA,gBAAAU,KAAA,cAEtBO,UACA,qBAIA,QAAsBjB,MAAA,gBAAAU,KAAA,UACtB,gBAEAsR,gBACA,wBACArR,OACAwR,iBAAA,aACAtR,WAAA,iBAIAuR,UACA,+BACA,iCACA,qDAEAC,UACA,MAAoBrS,MAAA,SAAAU,KAAA,aACpB,KAAmBV,MAAA,SAAAU,KAAA,aAEnBS,SACA,mBACA,gBACA,KAAmBnB,MAAA,SAAAU,KAAA,UAEnB4R,qBACA,MAAoBtS,MAAA,mBAAAU,KAAA,0BACpB,KAAmBV,MAAA,mBAAAU,KAAA,uBAEnB6R,sBACA,wBACA,oBACA,KAAmBvS,MAAA,mBAAAU,KAAA,UAEnB8R,mBACA,uBACA,oBACA,KAAmBxS,MAAA,mBAAAU,KAAA,UAEnB+P,SACA,yDACA,kBAAgCzQ,MAAA,iBAChC,gBAA8BA,MAAA,iBAC9B,oBAAkCA,MAAA,mBAClC,kBAAgCA,MAAA,mBAChC,mBAAiCA,MAAA,mBACjC,UAAwBA,MAAA,mBACxB,WAAyBA,MAAA,oBACzB,WAAyBA,MAAA,kGC5mCzBrB,EAAAC,EAAAC,EAAA,6BAAAC,IAKA,IAAAC,GACAC,UACAC,YAAA,KAEAE,WACA,oBACA,eACA,qBACA,iBACA,iBAEAC,mBACSC,KAAA,IAAAC,MAAA,IAAAC,OAAA,sBACAF,KAAA,IAAAC,MAAA,IAAAC,OAAA,sBACAF,KAAA,IAAAC,MAAA,IAAAC,OAAA,uBAGTT,GACAgB,aAAA,GACAC,aAAA,MACA4R,YAAA,EACAxS,WACSa,MAAA,kBAAAX,KAAA,IAAAC,MAAA,MACAU,MAAA,wBAAAX,KAAA,IAAAC,MAAA,MAEAU,MAAA,iBAAAX,KAAA,KAAAC,MAAA,UACAU,MAAA,oBAAAX,KAAA,QAAAC,MAAA,aACAU,MAAA,kBAAAX,KAAA,MAAAC,MAAA,WACAU,MAAA,kBAAAX,KAAA,MAAAC,MAAA,WAETW,UACA,qDACA,oDAEA2R,UACA,0BAEA1R,WAAA,uDAEAuS,WAAA,iBACAtS,QAAA,oBACAC,QAAA,wEAEAI,WACAC,OAEaK,QAAA,gBAEb,gCAEA,eACAH,OACAC,aAAsCZ,MAAA,cACtCe,aAAA,WACAF,WAAA,oBAIA,sBACAF,OACA+R,IAAA,2BACA7R,WAAA,OAIA,4BACA,iBAEA,yBACA,YACAF,OACAI,aAAA,WACAF,WAAA,gBAIA,qCACA,yBAEAG,aACA,kBACA,sBAEAG,SACA,qBACA,6BACA,gCACA,sGC5FAxC,EAAAC,EAAAC,EAAA,6BAAAC,IAKA,IAAAC,GACAC,UACAC,YAAA,IACAC,cAAA,kBAEAC,WACA,UACA,IAAW,MACX,UAEAC,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETE,mBACSH,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,OAmDTR,GACAiB,aAAA,QACAE,UACA,yEACA,kEACA,yEACA,wEACA,gCAEA0S,YACA,8BAEAC,UACA,8DACA,mEAGAC,cACA,gFAEAC,WACA,+DAEA5S,WACA,uEACA,kDACA,uEAEAf,WACSE,KAAA,IAAAC,MAAA,IAAAU,MAAA,0BACAX,KAAA,IAASC,MAAA,IAAYU,MAAA,oBACrBX,KAAA,IAAAC,MAAA,IAAAU,MAAA,qBAGTG,QAAA,0BAEA4S,OAAA,uEACA3S,QAAA,4CACA4S,QAAA,YACAC,QAAA,aACAC,MAAA,qBACAC,UAAA,kCACAC,UAAA,yBACAC,UAAA,mFAEA7S,WAGAC,OAIA,oCAEAE,OACA2S,mBAAgDtT,MAAA,aAAAU,KAAA,cAChD6S,iBAA8CvT,MAAA,aAAAU,KAAA,YAC9Cb,KAAoCG,MAAA,cAAAU,KAAA,QACpCE,YAAA,UACA4S,YAAA,aACA3S,WAAA,kBAGA,mBAEAF,OACA8S,yBAAkDzT,MAAA,cAAAU,KAAA,iBAClDgT,KAAgC1T,MAAA,aAAAU,KAAA,cAChCiT,cAAuC3T,MAAA,aAAAU,KAAA,YACvCb,KAAgCG,MAAA,cAAAU,KAAA,QAChCE,YAAA,UACA4S,YAAA,aACA3S,WAAA,iBAGA,8CACA,8BACA,2CACA,yCAEA,wBAAsCb,MAAA,2BAAAU,KAAA,iBACtC,8BAA4CV,MAAA,2BAAAU,KAAA,iBAC5C,qBAAmCV,MAAA,2BAAAU,KAAA,iBAEtBI,QAAA,gBAEb,KAAmBd,MAAA,iBAAAU,KAAA,kBACnB,KAAmBV,MAAA,kBAAAU,KAAA,iBAEnB,kBAAgCV,MAAA,WAAAU,KAAA,aAEhC,KAAmBV,MAAA,iBAAAU,KAAA,kBACnB,mCACA,MAAoBV,MAAA,iBAAAU,KAAA,kBACpB,MAAoBV,MAAA,iBAAAU,KAAA,gBAEpB,2BAAyCV,MAAA,eAAAU,KAAA,aAEzC,aAAiB,cACjB,YACAC,OACAiT,cAAA,UACA7S,aAAA,WACAF,WAAA,OAGA,OAAgB,cAEhB,kDACA,yCACA,uCACA,2BACA,gDACAF,OACAkT,GAAA,eACAhT,WAAA,aAOAiT,SACA,KAAmB9T,MAAA,GAAA+T,SAAA,eACnB,mBACApT,OACAd,KAAgCG,MAAA,cAAAU,KAAA,QAChCsT,IAA+BhU,MAAA,UAAA+T,SAAA,aAC/BJ,cAAuC3T,MAAA,WAAA+T,SAAA,aACvCnT,YAAA,UACA4S,YAAA,aACA3S,WAAA,iBAGaC,QAAA,UAKbmT,WACA,gBACA,mBACAtT,OACAd,KAAgCG,MAAA,cAAAU,KAAA,QAChCwT,sBAA+ClU,MAAA,UAAA+T,SAAA,aAC/CJ,cAAuC3T,MAAA,WAAA+T,SAAA,aACvCnT,YAAA,UACA4S,YAAA,aACA3S,WAAA,iBAGaC,QAAA,UAIbqT,UACA,yBACA,qCACA,6BACA,KAAmBnU,MAAA,mBAAAU,KAAA,UAKnB0T,UACA,2BACA,0CACA,4BACA,iCACA,oCACA,QACAzT,OACA0T,WAAoCrU,MAAA,mBAAAU,KAAA,QACpCG,WAAA,iBAMAyT,UACA,uBACA3T,OACA4T,WAAA,kBAAuDvU,MAAA,2BAAAU,KAAA,SACvDG,YAAA,uCAGA,wBAGA2T,eACA,mCACA,6CACA,iDACA,OAAqBxU,MAAA,sBAAA+T,SAAA,4BACrB,eAGAU,wBACA,OAAqBzU,MAAA,sBAAAU,KAAA,UACRI,QAAA,UAIb4T,UACa5T,QAAA,gBAIb,eACAH,OACA0T,WAAoCrU,MAAA,eAAAU,KAAA,QACpCiU,WAAoC3U,MAAA,eAAAU,KAAA,SACpCkU,WAA6B,kCAC7BC,cAAA,wBACAhU,WAAA,aAGaC,QAAA,kBAGbgU,SACahU,QAAA,kBACb,qBACA,YAA0Bd,MAAA,gBAAwB,SAElD+U,eACA,0BAAmC,+FACnC,gDAA+D/U,MAAA,wBAAAU,KAAA,kBAC/D,8EACA,SAAuBV,MAAA,wBAAAU,KAAA,oBACvB,2CACA,uCACA,wBACA,+BACA,0BACA,sCAEAsU,aACA,8BACA,wBACA,wBACA,+BACA,mBACA,gDAEAC,gBACA,oBACA,MAAoBjV,MAAA,wBAAAU,KAAA,UAIpBwU,UACA,cAA4BlV,MAAA,kBAAA+T,SAAA,qBAC5B,cAA4B/T,MAAA,kBAAA+T,SAAA,qBAC5B,cAA4B/T,MAAA,kBAAA+T,SAAA,qBAC5B,aAA2B/T,MAAA,kBAAA+T,SAAA,qBAC3B,oBAAkC/T,MAAA,kBAAA+T,SAAA,uBAClC,QAAsB/T,MAAA,eAAA+T,SAAA,kBACtB,QAAsB/T,MAAA,eAAA+T,SAAA,kBACtB,QAAsB/T,MAAA,eAAA+T,SAAA,kBACtB,OAAqB/T,MAAA,eAAA+T,SAAA,kBACrB,cAA4B/T,MAAA,eAAA+T,SAAA,oBAC5B,eAA6B/T,MAAA,kBAAA+T,SAAA,sBAC7B,eAA6B/T,MAAA,kBAAA+T,SAAA,sBAC7B,eAA6B/T,MAAA,kBAAA+T,SAAA,sBAC7B,cAA4B/T,MAAA,kBAAA+T,SAAA,sBAC5B,qBAAmC/T,MAAA,kBAAA+T,SAAA,wBACnC,mBAAiC/T,MAAA,UAAAU,KAAA,UACjC,KAAmBV,MAAA,UAAAU,KAAA,UAOnByU,UACA,4BACA,4BACA,KACAxU,OACAyU,WAAoCpV,MAAA,mBAAAU,KAAA,QACpC2T,WAAoCrU,MAAA,mBAAAU,KAAA,SACpCG,WAAA,iBASAwU,WACA,0CACavU,QAAA,aAGbE,aACA,kBACA,sCACA,mBAEAC,UACA,oBACA,mCACA,kCACA,gGC/XAtC,EAAAC,EAAAC,EAAA,6BAAAC,IAKA,IAAAC,GACAC,UACAC,YAAA,KACAC,cAAA,YAEAC,WACA,IAAW,MACX,UACA,UAEAC,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETE,mBACSH,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,OAGTR,GACAgB,aAAA,GACAC,aAAA,OACA4R,YAAA,EACAxS,WACSE,KAAA,IAAAC,MAAA,IAAAU,MAAA,qBACAX,KAAA,IAAAC,MAAA,IAAAU,MAAA,0BAETC,UACA,4GACA,8GACA,6GACA,gHACA,gHACA,mHACA,6GACA,mHACA,kHACA,uHACA,gHACA,qHACA,4DAEAC,WACA,8GAEA4R,kBACA,+GACA,kHACA,sHACA,gHACA,iHACA,4GACA,4GACA,6GACA,sHACA,+GACA,+GACA,qHACA,qHACA,qHACA,iHACA,sHACA,wHACA,yHACA,oHACA,4GACA,oHACA,gGACA,wHACA,4GACA,iHACA,yHACA,2HACA,yHACA,oHACA,mHACA,6HACA,8GACA,yHACA,iHACA,uHACA,sHACA,+HACA,0HACA,wHACA,+GACA,+HACA,0GACA,yHACA,0HACA,4GACA,oHACA,sHACA,+GACA,4HACA,6GACA,uHACA,sGACA,qHACA,2HACA,8GACA,8GACA,6HACA,+GACA,gHACA,+GACA,mHACA,oHACA,qHACA,uHACA,mHACA,oHACA,iHACA,0HACA,sHACA,yHACA,qHACA,qHAEAC,oBACAC,iBACAxR,WACAC,OACaK,QAAA,cACAA,QAAA,gBACAA,QAAA,mBACAA,QAAA,aACAA,QAAA,aACAA,QAAA,wBACAA,QAAA,YACb,QAAgB,cAChB,qBACA,YACAH,OACAC,YAAA,UACAG,aAAA,WACAkR,oBAAA,aACAC,oBAAA,aACArR,WAAA,iBAGA,gCAEAG,aACA,gBAEAhC,WACA,oBACA,QAAsBgB,MAAA,gBAAAU,KAAA,cAEtBO,UACA,qBAIA,QAAsBjB,MAAA,gBAAAU,KAAA,UACtB,gBAEAsR,gBACA,wBACArR,OACAwR,iBAAA,aACAtR,WAAA,iBAIAuR,UACA,+BACA,iCACA,qDAEAC,UACA,KAAmBrS,MAAA,SAAAU,KAAA,aAEnBS,SACA,mBACA,gBACA,KAAmBnB,MAAA,SAAAU,KAAA,UAEnB4R,qBACA,KAAmBtS,MAAA,mBAAAU,KAAA,uBAEnB8R,mBACA,uBACA,oBACA,KAAmBxS,MAAA,mBAAAU,KAAA,UAEnB+P,wFCtMA9R,EAAAC,EAAAC,EAAA,6BAAAC,IAKA,IAAAC,GACAC,U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WACA,cACA,YACA,eAEA,KAEA,MAEA,SAEA,QAMA,WAEA,WAEA,WACA,WACA,WACA,YACA,eAEA,KAEA,MAEA,SACA,SACA,SAEA,YAEA,KACA,MACA,MAEA,OACA,QAEA,QACA,SAEA,KACA,OACA,OAEA,SAEA,KAEA,QACA,SACA,SACA,SACA,UAEA,UACA,YAEA,YACA,cAEA,SAQA,MAEA,QAEA,SACA,WAEA,SAEA,UACA,UACA,WAEA,KACA,KAEA,MAEA,MACA,QAEA,UAIA,MACA,SACA,SACA,SAKA,UACA,UAEA,MAEA,UAKA,UACA,UACA,UACA,WACA,cAKA,QAEA,MACA,QAEA,OACA,QAOA,OAEA,WACA,WACA,WACA,YACA,gBAEA+V,cACA,SACA,UAEA,UACA,cAEA,WAEA,WACA,eACA,eACA,eACA,eACA,eAEA,UACA,WACA,UACA,iBAEA,UACA,YACA,YAEA,WAEA,cACA,cACA,cAEA,OACA,SACA,UACA,QACA,UACA,WAEA,OACA,SACA,UACA,UACA,YACA,aAEA,OACA,SACA,UACA,SACA,WACA,YAEA,SACA,YAEA,SAEA,YAEA,cACA,eAEA,aAEA,iBACA,kBAEAC,cAEA,MACA,SACA,UAEA,QAEA,QACA,WACA,YAEA,QACA,SAEA,SAEA,SACA,SAEA,UAEA,SACA,UAEA,WACA,WAEA,UACA,YACA,aAEAC,wBACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,OACA,QACA,QACA,OACA,MACA,OACA,MACA,QACA,OACA,aACA,aACA,YACA,YACA,YACA,WACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,SACA,SACA,QACA,UACA,UACA,SACA,aACA,aACA,YACA,YACA,YACA,WACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,SACA,SACA,WACA,UACA,eACA,YACA,OACA,MACA,SACA,SAEAC,gBACA,OACA,SACA,OACA,MACA,QACA,OACA,OACA,OACA,OACA,QACA,SACA,UAGAC,kBACA,IACA,MACA,MACA,MACA,SACA,SACA,SACA,MACA,MACA,KAEAlW,WACA,IACA,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AAA,IAAYU,MAAA,uBACrBX,KAAA,IAAAC,MAAA,IAAAU,MAAA,0BAETC,UAEA,MACA,SACA,MACA,WACA,YACA,QACA,KACA,QACA,KACA,SACA,UACA,MACA,OACA,KAEA,UACA,SACA,UACA,WACA,WACA,UAEAiY,WAEA,4FACA,8DACA,kEACA,8DACA,kGACA,qFACA,gEACA,iEACA,qEACA,kEACA,kDACA,sDACA,yEACA,+EACA,gEACA,sEACA,gDACA,gEACA,iDACA,4DACA,2CACA,uCACA,6EACA,iDACA,gDACA,gCAEA,4CACA,wCACA,8CACA,qDACA,4DACA,4DACA,wDACA,sDACA,mCACA,mCACA,sCACA,8DACA,gEACA,yCACA,+CACA,yCACA,+BACA,4CACA,kDACA,2CACA,oCACA,qDACA,qCACA,uCACA,iDACA,iBAEA1X,WACAC,OACaK,QAAA,cACAA,QAAA,gBACAA,QAAA,aACAA,QAAA,aACAA,QAAA,wBACb,QAAgB,cAChB,SAAkB,cAClB,uBACAH,OACAC,YAAA,UACAuX,aAAA,UACAtX,WAAA,iBAGA,gCAEAG,aACA,gBAEAhC,WACA,sBACA,QAAsBgB,MAAA,gBAAAU,KAAA,cAEtBO,UACA,qBACA,QAAsBjB,MAAA,gBAAAU,KAAA,UACtB,gBAEA0R,UACA,+BACA,iCACA,qDAEAC,UACA,MAAoBrS,MAAA,SAAAU,KAAA,aACpB,KAAmBV,MAAA,SAAAU,KAAA,aAEnBS,SACA,mBACA,gBACA,KAAmBnB,MAAA,SAAAU,KAAA,UAEnB4R,qBACA,MAAoBtS,MAAA,mBAAAU,KAAA,0BACpB,KAAmBV,MAAA,mBAAAU,KAAA,uBAEnB6R,sBACA,wBACA,oBACA,KAAmBvS,MAAA,mBAAAU,KAAA,UAEnB8R,mBACA,uBACA,oBACA,KAAmBxS,MAAA,mBAAAU,KAAA,wFCpKnB/B,EAAAC,EAAAC,EAAA,6BAAAC,IAKA,IAAAC,GACAC,UACAC,YAAA,KACAC,cAAA,cAEAC,WACA,IAAW,MACX,UACA,UAEAC,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,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","file":"1.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '[', close: ']' },\n        { open: '{', close: '}' },\n        { open: '(', close: ')' },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.cpp',\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' },\n        { token: 'delimiter.angle', open: '<', close: '>' }\n    ],\n    keywords: [\n        'abstract',\n        'amp',\n        'array',\n        'auto',\n        'bool',\n        'break',\n        'case',\n        'catch',\n        'char',\n        'class',\n        'const',\n        'constexpr',\n        'const_cast',\n        'continue',\n        'cpu',\n        'decltype',\n        'default',\n        'delegate',\n        'delete',\n        'do',\n        'double',\n        'dynamic_cast',\n        'each',\n        'else',\n        'enum',\n        'event',\n        'explicit',\n        'export',\n        'extern',\n        'false',\n        'final',\n        'finally',\n        'float',\n        'for',\n        'friend',\n        'gcnew',\n        'generic',\n        'goto',\n        'if',\n        'in',\n        'initonly',\n        'inline',\n        'int',\n        'interface',\n        'interior_ptr',\n        'internal',\n        'literal',\n        'long',\n        'mutable',\n        'namespace',\n        'new',\n        'noexcept',\n        'nullptr',\n        '__nullptr',\n        'operator',\n        'override',\n        'partial',\n        'pascal',\n        'pin_ptr',\n        'private',\n        'property',\n        'protected',\n        'public',\n        'ref',\n        'register',\n        'reinterpret_cast',\n        'restrict',\n        'return',\n        'safe_cast',\n        'sealed',\n        'short',\n        'signed',\n        'sizeof',\n        'static',\n        'static_assert',\n        'static_cast',\n        'struct',\n        'switch',\n        'template',\n        'this',\n        'thread_local',\n        'throw',\n        'tile_static',\n        'true',\n        'try',\n        'typedef',\n        'typeid',\n        'typename',\n        'union',\n        'unsigned',\n        'using',\n        'virtual',\n        'void',\n        'volatile',\n        'wchar_t',\n        'where',\n        'while',\n        '_asm',\n        '_based',\n        '_cdecl',\n        '_declspec',\n        '_fastcall',\n        '_if_exists',\n        '_if_not_exists',\n        '_inline',\n        '_multiple_inheritance',\n        '_pascal',\n        '_single_inheritance',\n        '_stdcall',\n        '_virtual_inheritance',\n        '_w64',\n        '__abstract',\n        '__alignof',\n        '__asm',\n        '__assume',\n        '__based',\n        '__box',\n        '__builtin_alignof',\n        '__cdecl',\n        '__clrcall',\n        '__declspec',\n        '__delegate',\n        '__event',\n        '__except',\n        '__fastcall',\n        '__finally',\n        '__forceinline',\n        '__gc',\n        '__hook',\n        '__identifier',\n        '__if_exists',\n        '__if_not_exists',\n        '__inline',\n        '__int128',\n        '__int16',\n        '__int32',\n        '__int64',\n        '__int8',\n        '__interface',\n        '__leave',\n        '__m128',\n        '__m128d',\n        '__m128i',\n        '__m256',\n        '__m256d',\n        '__m256i',\n        '__m64',\n        '__multiple_inheritance',\n        '__newslot',\n        '__nogc',\n        '__noop',\n        '__nounwind',\n        '__novtordisp',\n        '__pascal',\n        '__pin',\n        '__pragma',\n        '__property',\n        '__ptr32',\n        '__ptr64',\n        '__raise',\n        '__restrict',\n        '__resume',\n        '__sealed',\n        '__single_inheritance',\n        '__stdcall',\n        '__super',\n        '__thiscall',\n        '__try',\n        '__try_cast',\n        '__typeof',\n        '__unaligned',\n        '__unhook',\n        '__uuidof',\n        '__value',\n        '__virtual_inheritance',\n        '__w64',\n        '__wchar_t'\n    ],\n    operators: [\n        '=', '>', '<', '!', '~', '?', ':',\n        '==', '<=', '>=', '!=', '&&', '||', '++', '--',\n        '+', '-', '*', '/', '&', '|', '^', '%', '<<',\n        '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\n        '^=', '%=', '<<=', '>>=', '>>>='\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    integersuffix: /(ll|LL|u|U|l|L)?(ll|LL|u|U|l|L)?/,\n    floatsuffix: /[fFlL]?/,\n    encoding: /u|u8|U|L/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // C++ 11 Raw String\n            [/@encoding?R\\\"(?:([^ ()\\\\\\t]*))\\(/, { token: 'string.raw.begin', next: '@raw.$1' }],\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // [[ attributes ]].\n            [/\\[\\[.*\\]\\]/, 'annotation'],\n            // Preprocessor directive\n            [/^\\s*#\\s*\\w+/, 'keyword'],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }],\n            // numbers\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/0[xX][0-9a-fA-F']*[0-9a-fA-F](@integersuffix)/, 'number.hex'],\n            [/0[0-7']*[0-7](@integersuffix)/, 'number.octal'],\n            [/0[bB][0-1']*[0-1](@integersuffix)/, 'number.binary'],\n            [/\\d[\\d']*\\d(@integersuffix)/, 'number'],\n            [/\\d(@integersuffix)/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string'],\n            // characters\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@doccomment'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            [/\\*\\//, 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        //Identical copy of comment above, except for the addition of .doc\n        doccomment: [\n            [/[^\\/*]+/, 'comment.doc'],\n            [/\\*\\//, 'comment.doc', '@pop'],\n            [/[\\/*]/, 'comment.doc']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, 'string', '@pop']\n        ],\n        raw: [\n            [/(.*)(\\))(?:([^ ()\\\\\\t]*))(\\\")/, {\n                    cases: {\n                        '$3==$S2': ['string.raw', 'string.raw.end', 'string.raw.end', { token: 'string.raw.end', next: '@pop' }],\n                        '@default': ['string.raw', 'string.raw', 'string.raw', 'string.raw']\n                    }\n                }\n            ],\n            [/.*/, 'string.raw']\n        ]\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `JSONWorker` instance\n                moduleId: 'vs/language/json/jsonWorker',\n                label: this._defaults.languageId,\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.diagnosticsOptions,\n                    languageId: this._defaults.languageId\n                }\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnostcsAdapter = /** @class */ (function () {\n    function DiagnostcsAdapter(_languageId, _worker) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n            _this._resetSchema(model.uri);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n            _this._resetSchema(event.model.uri);\n        }));\n        this._disposables.push({\n            dispose: function () {\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnostcsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnostcsAdapter.prototype._resetSchema = function (resource) {\n        this._worker().then(function (worker) {\n            worker.resetSchema(resource.toString());\n        });\n    };\n    DiagnostcsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                var model = monaco.editor.getModel(resource);\n                if (model.getModeId() === languageId) {\n                    monaco.editor.setModelMarkers(model, languageId, markers);\n                }\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnostcsAdapter;\n}());\nexport { DiagnostcsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: fromPosition(range.getStartPosition()), end: fromPosition(range.getEndPosition()) };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nfunction toCompletionItem(entry) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: entry.documentation,\n        detail: entry.detail,\n        kind: toCompletionItemKind(entry.kind),\n        textEdit: toTextEdit(entry.textEdit),\n        data: entry.data\n    };\n}\nfunction fromMarkdownString(entry) {\n    return {\n        kind: (typeof entry === 'string' ? ls.MarkupKind.PlainText : ls.MarkupKind.Markdown),\n        value: (typeof entry === 'string' ? entry : entry.value)\n    };\n}\nfunction fromCompletionItem(entry) {\n    var item = {\n        label: entry.label,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: fromMarkdownString(entry.documentation),\n        detail: entry.detail,\n        kind: fromCompletionItemKind(entry.kind),\n        data: entry.data\n    };\n    if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n        item.insertText = entry.insertText.value;\n        item.insertTextFormat = ls.InsertTextFormat.Snippet;\n    }\n    else {\n        item.insertText = entry.insertText;\n    }\n    if (entry.range) {\n        item.textEdit = ls.TextEdit.replace(fromRange(entry.range), item.insertText);\n    }\n    return item;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return [' ', ':'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- hover ------\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        }));\n    };\n    return HoverAdapter;\n}());\nexport { HoverAdapter };\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                location: toLocation(item.location)\n            }); });\n        }));\n    };\n    return DocumentSymbolAdapter;\n}());\nexport { DocumentSymbolAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    if (promise.cancel) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n    }\n    return promise;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as json from './_deps/jsonc-parser/main.js';\nexport function createTokenizationSupport(supportComments) {\n    return {\n        getInitialState: function () { return new JSONState(null, null, false); },\n        tokenize: function (line, state, offsetDelta, stopAtOffset) { return tokenize(supportComments, line, state, offsetDelta, stopAtOffset); }\n    };\n}\nexport var TOKEN_DELIM_OBJECT = 'delimiter.bracket.json';\nexport var TOKEN_DELIM_ARRAY = 'delimiter.array.json';\nexport var TOKEN_DELIM_COLON = 'delimiter.colon.json';\nexport var TOKEN_DELIM_COMMA = 'delimiter.comma.json';\nexport var TOKEN_VALUE_BOOLEAN = 'keyword.json';\nexport var TOKEN_VALUE_NULL = 'keyword.json';\nexport var TOKEN_VALUE_STRING = 'string.value.json';\nexport var TOKEN_VALUE_NUMBER = 'number.json';\nexport var TOKEN_PROPERTY_NAME = 'string.key.json';\nexport var TOKEN_COMMENT_BLOCK = 'comment.block.json';\nexport var TOKEN_COMMENT_LINE = 'comment.line.json';\nvar JSONState = /** @class */ (function () {\n    function JSONState(state, scanError, lastWasColon) {\n        this._state = state;\n        this.scanError = scanError;\n        this.lastWasColon = lastWasColon;\n    }\n    JSONState.prototype.clone = function () {\n        return new JSONState(this._state, this.scanError, this.lastWasColon);\n    };\n    JSONState.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        }\n        if (!other || !(other instanceof JSONState)) {\n            return false;\n        }\n        return this.scanError === other.scanError &&\n            this.lastWasColon === other.lastWasColon;\n    };\n    JSONState.prototype.getStateData = function () {\n        return this._state;\n    };\n    JSONState.prototype.setStateData = function (state) {\n        this._state = state;\n    };\n    return JSONState;\n}());\nfunction tokenize(comments, line, state, offsetDelta, stopAtOffset) {\n    if (offsetDelta === void 0) { offsetDelta = 0; }\n    // handle multiline strings and block comments\n    var numberOfInsertedCharacters = 0, adjustOffset = false;\n    switch (state.scanError) {\n        case 2 /* UnexpectedEndOfString */:\n            line = '\"' + line;\n            numberOfInsertedCharacters = 1;\n            break;\n        case 1 /* UnexpectedEndOfComment */:\n            line = '/*' + line;\n            numberOfInsertedCharacters = 2;\n            break;\n    }\n    var scanner = json.createScanner(line), kind, ret, lastWasColon = state.lastWasColon;\n    ret = {\n        tokens: [],\n        endState: state.clone()\n    };\n    while (true) {\n        var offset = offsetDelta + scanner.getPosition(), type = '';\n        kind = scanner.scan();\n        if (kind === 17 /* EOF */) {\n            break;\n        }\n        // Check that the scanner has advanced\n        if (offset === offsetDelta + scanner.getPosition()) {\n            throw new Error('Scanner did not advance, next 3 characters are: ' + line.substr(scanner.getPosition(), 3));\n        }\n        // In case we inserted /* or \" character, we need to\n        // adjust the offset of all tokens (except the first)\n        if (adjustOffset) {\n            offset -= numberOfInsertedCharacters;\n        }\n        adjustOffset = numberOfInsertedCharacters > 0;\n        // brackets and type\n        switch (kind) {\n            case 1 /* OpenBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 2 /* CloseBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 3 /* OpenBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 4 /* CloseBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 6 /* ColonToken */:\n                type = TOKEN_DELIM_COLON;\n                lastWasColon = true;\n                break;\n            case 5 /* CommaToken */:\n                type = TOKEN_DELIM_COMMA;\n                lastWasColon = false;\n                break;\n            case 8 /* TrueKeyword */:\n            case 9 /* FalseKeyword */:\n                type = TOKEN_VALUE_BOOLEAN;\n                lastWasColon = false;\n                break;\n            case 7 /* NullKeyword */:\n                type = TOKEN_VALUE_NULL;\n                lastWasColon = false;\n                break;\n            case 10 /* StringLiteral */:\n                type = lastWasColon ? TOKEN_VALUE_STRING : TOKEN_PROPERTY_NAME;\n                lastWasColon = false;\n                break;\n            case 11 /* NumericLiteral */:\n                type = TOKEN_VALUE_NUMBER;\n                lastWasColon = false;\n                break;\n        }\n        // comments, iff enabled\n        if (comments) {\n            switch (kind) {\n                case 12 /* LineCommentTrivia */:\n                    type = TOKEN_COMMENT_LINE;\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    type = TOKEN_COMMENT_BLOCK;\n                    break;\n            }\n        }\n        ret.endState = new JSONState(state.getStateData(), scanner.getTokenError(), lastWasColon);\n        ret.tokens.push({\n            startIndex: offset,\n            scopes: type\n        });\n    }\n    return ret;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nimport { createTokenizationSupport } from './tokenization.js';\nexport function setupMode(defaults) {\n    var disposables = [];\n    var client = new WorkerManager(defaults);\n    disposables.push(client);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    disposables.push(monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker)));\n    disposables.push(monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker)));\n    disposables.push(monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker)));\n    disposables.push(new languageFeatures.DiagnostcsAdapter(languageId, worker));\n    disposables.push(monaco.languages.setTokensProvider(languageId, createTokenizationSupport(true)));\n    disposables.push(monaco.languages.setLanguageConfiguration(languageId, richEditConfiguration));\n}\nvar richEditConfiguration = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\[\\{\\]\\}\\:\\\"\\,\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string'] },\n        { open: '[', close: ']', notIn: ['string'] },\n        { open: '\"', close: '\"', notIn: ['string'] }\n    ]\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '\\'',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'], ['[', ']'], ['(', ')'], ['<', '>'],\n        ['addhandler', 'end addhandler'],\n        ['class', 'end class'],\n        ['enum', 'end enum'],\n        ['event', 'end event'],\n        ['function', 'end function'],\n        ['get', 'end get'],\n        ['if', 'end if'],\n        ['interface', 'end interface'],\n        ['module', 'end module'],\n        ['namespace', 'end namespace'],\n        ['operator', 'end operator'],\n        ['property', 'end property'],\n        ['raiseevent', 'end raiseevent'],\n        ['removehandler', 'end removehandler'],\n        ['select', 'end select'],\n        ['set', 'end set'],\n        ['structure', 'end structure'],\n        ['sub', 'end sub'],\n        ['synclock', 'end synclock'],\n        ['try', 'end try'],\n        ['while', 'end while'],\n        ['with', 'end with'],\n        ['using', 'end using'],\n        ['do', 'loop'],\n        ['for', 'next']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '<', close: '>', notIn: ['string', 'comment'] },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#Region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#End Region\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.vb',\n    ignoreCase: true,\n    brackets: [\n        { token: 'delimiter.bracket', open: '{', close: '}' },\n        { token: 'delimiter.array', open: '[', close: ']' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.angle', open: '<', close: '>' },\n        // Special bracket statement pairs\n        // according to https://msdn.microsoft.com/en-us/library/tsw2a11z.aspx\n        { token: 'keyword.tag-addhandler', open: 'addhandler', close: 'end addhandler' },\n        { token: 'keyword.tag-class', open: 'class', close: 'end class' },\n        { token: 'keyword.tag-enum', open: 'enum', close: 'end enum' },\n        { token: 'keyword.tag-event', open: 'event', close: 'end event' },\n        { token: 'keyword.tag-function', open: 'function', close: 'end function' },\n        { token: 'keyword.tag-get', open: 'get', close: 'end get' },\n        { token: 'keyword.tag-if', open: 'if', close: 'end if' },\n        { token: 'keyword.tag-interface', open: 'interface', close: 'end interface' },\n        { token: 'keyword.tag-module', open: 'module', close: 'end module' },\n        { token: 'keyword.tag-namespace', open: 'namespace', close: 'end namespace' },\n        { token: 'keyword.tag-operator', open: 'operator', close: 'end operator' },\n        { token: 'keyword.tag-property', open: 'property', close: 'end property' },\n        { token: 'keyword.tag-raiseevent', open: 'raiseevent', close: 'end raiseevent' },\n        { token: 'keyword.tag-removehandler', open: 'removehandler', close: 'end removehandler' },\n        { token: 'keyword.tag-select', open: 'select', close: 'end select' },\n        { token: 'keyword.tag-set', open: 'set', close: 'end set' },\n        { token: 'keyword.tag-structure', open: 'structure', close: 'end structure' },\n        { token: 'keyword.tag-sub', open: 'sub', close: 'end sub' },\n        { token: 'keyword.tag-synclock', open: 'synclock', close: 'end synclock' },\n        { token: 'keyword.tag-try', open: 'try', close: 'end try' },\n        { token: 'keyword.tag-while', open: 'while', close: 'end while' },\n        { token: 'keyword.tag-with', open: 'with', close: 'end with' },\n        // Other pairs\n        { token: 'keyword.tag-using', open: 'using', close: 'end using' },\n        { token: 'keyword.tag-do', open: 'do', close: 'loop' },\n        { token: 'keyword.tag-for', open: 'for', close: 'next' }\n    ],\n    keywords: [\n        'AddHandler', 'AddressOf', 'Alias', 'And', 'AndAlso', 'As', 'Async', 'Boolean', 'ByRef', 'Byte', 'ByVal', 'Call',\n        'Case', 'Catch', 'CBool', 'CByte', 'CChar', 'CDate', 'CDbl', 'CDec', 'Char', 'CInt', 'Class', 'CLng',\n        'CObj', 'Const', 'Continue', 'CSByte', 'CShort', 'CSng', 'CStr', 'CType', 'CUInt', 'CULng', 'CUShort',\n        'Date', 'Decimal', 'Declare', 'Default', 'Delegate', 'Dim', 'DirectCast', 'Do', 'Double', 'Each', 'Else',\n        'ElseIf', 'End', 'EndIf', 'Enum', 'Erase', 'Error', 'Event', 'Exit', 'False', 'Finally', 'For', 'Friend',\n        'Function', 'Get', 'GetType', 'GetXMLNamespace', 'Global', 'GoSub', 'GoTo', 'Handles', 'If', 'Implements',\n        'Imports', 'In', 'Inherits', 'Integer', 'Interface', 'Is', 'IsNot', 'Let', 'Lib', 'Like', 'Long', 'Loop',\n        'Me', 'Mod', 'Module', 'MustInherit', 'MustOverride', 'MyBase', 'MyClass', 'NameOf', 'Namespace', 'Narrowing', 'New',\n        'Next', 'Not', 'Nothing', 'NotInheritable', 'NotOverridable', 'Object', 'Of', 'On', 'Operator', 'Option',\n        'Optional', 'Or', 'OrElse', 'Out', 'Overloads', 'Overridable', 'Overrides', 'ParamArray', 'Partial',\n        'Private', 'Property', 'Protected', 'Public', 'RaiseEvent', 'ReadOnly', 'ReDim', 'RemoveHandler', 'Resume',\n        'Return', 'SByte', 'Select', 'Set', 'Shadows', 'Shared', 'Short', 'Single', 'Static', 'Step', 'Stop',\n        'String', 'Structure', 'Sub', 'SyncLock', 'Then', 'Throw', 'To', 'True', 'Try', 'TryCast', 'TypeOf',\n        'UInteger', 'ULong', 'UShort', 'Using', 'Variant', 'Wend', 'When', 'While', 'Widening', 'With', 'WithEvents',\n        'WriteOnly', 'Xor'\n    ],\n    tagwords: [\n        'If', 'Sub', 'Select', 'Try', 'Class', 'Enum',\n        'Function', 'Get', 'Interface', 'Module', 'Namespace', 'Operator', 'Set', 'Structure', 'Using', 'While', 'With',\n        'Do', 'Loop', 'For', 'Next', 'Property', 'Continue', 'AddHandler', 'RemoveHandler', 'Event', 'RaiseEvent', 'SyncLock'\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?;\\.,:&|+\\-*\\/\\^%]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    integersuffix: /U?[DI%L&S@]?/,\n    floatsuffix: /[R#F!]?/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // whitespace\n            { include: '@whitespace' },\n            // special ending tag-words\n            [/next(?!\\w)/, { token: 'keyword.tag-for' }],\n            [/loop(?!\\w)/, { token: 'keyword.tag-do' }],\n            // usual ending tags\n            [/end\\s+(?!for|do)([a-zA-Z_]\\w*)/, { token: 'keyword.tag-$1' }],\n            // identifiers, tagwords, and keywords\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@tagwords': { token: 'keyword.tag-$0' },\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            // Preprocessor directive\n            [/^\\s*#\\w+/, 'keyword'],\n            // numbers\n            [/\\d*\\d+e([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/\\d*\\.\\d+(e[\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/&H[0-9a-f]+(@integersuffix)/, 'number.hex'],\n            [/&0[0-7]+(@integersuffix)/, 'number.octal'],\n            [/\\d+(@integersuffix)/, 'number'],\n            // date literal\n            [/#.*#/, 'number'],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string'],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/(\\'|REM(?!\\w)).*$/, 'comment'],\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"C?/, 'string', '@pop']\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '--',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.sql',\n    ignoreCase: true,\n    brackets: [\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    keywords: [\n        'ABORT_AFTER_WAIT',\n        'ABSENT',\n        'ABSOLUTE',\n        'ACCENT_SENSITIVITY',\n        'ACTION',\n        'ACTIVATION',\n        'ACTIVE',\n        'ADD',\n        'ADDRESS',\n        'ADMIN',\n        'AES',\n        'AES_128',\n        'AES_192',\n        'AES_256',\n        'AFFINITY',\n        'AFTER',\n        'AGGREGATE',\n        'ALGORITHM',\n        'ALL_CONSTRAINTS',\n        'ALL_ERRORMSGS',\n        'ALL_INDEXES',\n        'ALL_LEVELS',\n        'ALL_SPARSE_COLUMNS',\n        'ALLOW_CONNECTIONS',\n        'ALLOW_MULTIPLE_EVENT_LOSS',\n        'ALLOW_PAGE_LOCKS',\n        'ALLOW_ROW_LOCKS',\n        'ALLOW_SINGLE_EVENT_LOSS',\n        'ALLOW_SNAPSHOT_ISOLATION',\n        'ALLOWED',\n        'ALTER',\n        'ANONYMOUS',\n        'ANSI_DEFAULTS',\n        'ANSI_NULL_DEFAULT',\n        'ANSI_NULL_DFLT_OFF',\n        'ANSI_NULL_DFLT_ON',\n        'ANSI_NULLS',\n        'ANSI_PADDING',\n        'ANSI_WARNINGS',\n        'APPEND',\n        'APPLICATION',\n        'APPLICATION_LOG',\n        'ARITHABORT',\n        'ARITHIGNORE',\n        'AS',\n        'ASC',\n        'ASSEMBLY',\n        'ASYMMETRIC',\n        'ASYNCHRONOUS_COMMIT',\n        'AT',\n        'ATOMIC',\n        'ATTACH',\n        'ATTACH_REBUILD_LOG',\n        'AUDIT',\n        'AUDIT_GUID',\n        'AUTHENTICATION',\n        'AUTHORIZATION',\n        'AUTO',\n        'AUTO_CLEANUP',\n        'AUTO_CLOSE',\n        'AUTO_CREATE_STATISTICS',\n        'AUTO_SHRINK',\n        'AUTO_UPDATE_STATISTICS',\n        'AUTO_UPDATE_STATISTICS_ASYNC',\n        'AUTOMATED_BACKUP_PREFERENCE',\n        'AUTOMATIC',\n        'AVAILABILITY',\n        'AVAILABILITY_MODE',\n        'BACKUP',\n        'BACKUP_PRIORITY',\n        'BASE64',\n        'BATCHSIZE',\n        'BEGIN',\n        'BEGIN_DIALOG',\n        'BIGINT',\n        'BINARY',\n        'BINDING',\n        'BIT',\n        'BLOCKERS',\n        'BLOCKSIZE',\n        'BOUNDING_BOX',\n        'BREAK',\n        'BROKER',\n        'BROKER_INSTANCE',\n        'BROWSE',\n        'BUCKET_COUNT',\n        'BUFFER',\n        'BUFFERCOUNT',\n        'BULK',\n        'BULK_LOGGED',\n        'BY',\n        'CACHE',\n        'CALL',\n        'CALLED',\n        'CALLER',\n        'CAP_CPU_PERCENT',\n        'CASCADE',\n        'CASE',\n        'CATALOG',\n        'CATCH',\n        'CELLS_PER_OBJECT',\n        'CERTIFICATE',\n        'CHANGE_RETENTION',\n        'CHANGE_TRACKING',\n        'CHANGES',\n        'CHAR',\n        'CHARACTER',\n        'CHECK',\n        'CHECK_CONSTRAINTS',\n        'CHECK_EXPIRATION',\n        'CHECK_POLICY',\n        'CHECKALLOC',\n        'CHECKCATALOG',\n        'CHECKCONSTRAINTS',\n        'CHECKDB',\n        'CHECKFILEGROUP',\n        'CHECKIDENT',\n        'CHECKPOINT',\n        'CHECKTABLE',\n        'CLASSIFIER_FUNCTION',\n        'CLEANTABLE',\n        'CLEANUP',\n        'CLEAR',\n        'CLOSE',\n        'CLUSTER',\n        'CLUSTERED',\n        'CODEPAGE',\n        'COLLATE',\n        'COLLECTION',\n        'COLUMN',\n        'COLUMN_SET',\n        'COLUMNS',\n        'COLUMNSTORE',\n        'COLUMNSTORE_ARCHIVE',\n        'COMMIT',\n        'COMMITTED',\n        'COMPATIBILITY_LEVEL',\n        'COMPRESSION',\n        'COMPUTE',\n        'CONCAT',\n        'CONCAT_NULL_YIELDS_NULL',\n        'CONFIGURATION',\n        'CONNECT',\n        'CONSTRAINT',\n        'CONTAINMENT',\n        'CONTENT',\n        'CONTEXT',\n        'CONTINUE',\n        'CONTINUE_AFTER_ERROR',\n        'CONTRACT',\n        'CONTRACT_NAME',\n        'CONTROL',\n        'CONVERSATION',\n        'COOKIE',\n        'COPY_ONLY',\n        'COUNTER',\n        'CPU',\n        'CREATE',\n        'CREATE_NEW',\n        'CREATION_DISPOSITION',\n        'CREDENTIAL',\n        'CRYPTOGRAPHIC',\n        'CUBE',\n        'CURRENT',\n        'CURRENT_DATE',\n        'CURSOR',\n        'CURSOR_CLOSE_ON_COMMIT',\n        'CURSOR_DEFAULT',\n        'CYCLE',\n        'DATA',\n        'DATA_COMPRESSION',\n        'DATA_PURITY',\n        'DATABASE',\n        'DATABASE_DEFAULT',\n        'DATABASE_MIRRORING',\n        'DATABASE_SNAPSHOT',\n        'DATAFILETYPE',\n        'DATE',\n        'DATE_CORRELATION_OPTIMIZATION',\n        'DATEFIRST',\n        'DATEFORMAT',\n        'DATETIME',\n        'DATETIME2',\n        'DATETIMEOFFSET',\n        'DAY',\n        'DAYOFYEAR',\n        'DAYS',\n        'DB_CHAINING',\n        'DBCC',\n        'DBREINDEX',\n        'DDL_DATABASE_LEVEL_EVENTS',\n        'DEADLOCK_PRIORITY',\n        'DEALLOCATE',\n        'DEC',\n        'DECIMAL',\n        'DECLARE',\n        'DECRYPTION',\n        'DEFAULT',\n        'DEFAULT_DATABASE',\n        'DEFAULT_FULLTEXT_LANGUAGE',\n        'DEFAULT_LANGUAGE',\n        'DEFAULT_SCHEMA',\n        'DEFINITION',\n        'DELAY',\n        'DELAYED_DURABILITY',\n        'DELETE',\n        'DELETED',\n        'DENSITY_VECTOR',\n        'DENY',\n        'DEPENDENTS',\n        'DES',\n        'DESC',\n        'DESCRIPTION',\n        'DESX',\n        'DHCP',\n        'DIAGNOSTICS',\n        'DIALOG',\n        'DIFFERENTIAL',\n        'DIRECTORY_NAME',\n        'DISABLE',\n        'DISABLE_BROKER',\n        'DISABLED',\n        'DISK',\n        'DISTINCT',\n        'DISTRIBUTED',\n        'DOCUMENT',\n        'DOUBLE',\n        'DROP',\n        'DROP_EXISTING',\n        'DROPCLEANBUFFERS',\n        'DUMP',\n        'DURABILITY',\n        'DYNAMIC',\n        'EDITION',\n        'ELEMENTS',\n        'ELSE',\n        'EMERGENCY',\n        'EMPTY',\n        'EMPTYFILE',\n        'ENABLE',\n        'ENABLE_BROKER',\n        'ENABLED',\n        'ENCRYPTION',\n        'END',\n        'ENDPOINT',\n        'ENDPOINT_URL',\n        'ERRLVL',\n        'ERROR',\n        'ERROR_BROKER_CONVERSATIONS',\n        'ERRORFILE',\n        'ESCAPE',\n        'ESTIMATEONLY',\n        'EVENT',\n        'EVENT_RETENTION_MODE',\n        'EXEC',\n        'EXECUTABLE',\n        'EXECUTE',\n        'EXIT',\n        'EXPAND',\n        'EXPIREDATE',\n        'EXPIRY_DATE',\n        'EXPLICIT',\n        'EXTENDED_LOGICAL_CHECKS',\n        'EXTENSION',\n        'EXTERNAL',\n        'EXTERNAL_ACCESS',\n        'FAIL_OPERATION',\n        'FAILOVER',\n        'FAILOVER_MODE',\n        'FAILURE_CONDITION_LEVEL',\n        'FALSE',\n        'FAN_IN',\n        'FAST',\n        'FAST_FORWARD',\n        'FETCH',\n        'FIELDTERMINATOR',\n        'FILE',\n        'FILEGROUP',\n        'FILEGROWTH',\n        'FILELISTONLY',\n        'FILENAME',\n        'FILEPATH',\n        'FILESTREAM',\n        'FILESTREAM_ON',\n        'FILETABLE_COLLATE_FILENAME',\n        'FILETABLE_DIRECTORY',\n        'FILETABLE_FULLPATH_UNIQUE_CONSTRAINT_NAME',\n        'FILETABLE_NAMESPACE',\n        'FILETABLE_PRIMARY_KEY_CONSTRAINT_NAME',\n        'FILETABLE_STREAMID_UNIQUE_CONSTRAINT_NAME',\n        'FILLFACTOR',\n        'FILTERING',\n        'FIRE_TRIGGERS',\n        'FIRST',\n        'FIRSTROW',\n        'FLOAT',\n        'FMTONLY',\n        'FOLLOWING',\n        'FOR',\n        'FORCE',\n        'FORCE_FAILOVER_ALLOW_DATA_LOSS',\n        'FORCE_SERVICE_ALLOW_DATA_LOSS',\n        'FORCED',\n        'FORCEPLAN',\n        'FORCESCAN',\n        'FORCESEEK',\n        'FOREIGN',\n        'FORMATFILE',\n        'FORMSOF',\n        'FORWARD_ONLY',\n        'FREE',\n        'FREEPROCCACHE',\n        'FREESESSIONCACHE',\n        'FREESYSTEMCACHE',\n        'FROM',\n        'FULL',\n        'FULLSCAN',\n        'FULLTEXT',\n        'FUNCTION',\n        'GB',\n        'GEOGRAPHY_AUTO_GRID',\n        'GEOGRAPHY_GRID',\n        'GEOMETRY_AUTO_GRID',\n        'GEOMETRY_GRID',\n        'GET',\n        'GLOBAL',\n        'GO',\n        'GOTO',\n        'GOVERNOR',\n        'GRANT',\n        'GRIDS',\n        'GROUP',\n        'GROUP_MAX_REQUESTS',\n        'HADR',\n        'HASH',\n        'HASHED',\n        'HAVING',\n        'HEADERONLY',\n        'HEALTH_CHECK_TIMEOUT',\n        'HELP',\n        'HIERARCHYID',\n        'HIGH',\n        'HINT',\n        'HISTOGRAM',\n        'HOLDLOCK',\n        'HONOR_BROKER_PRIORITY',\n        'HOUR',\n        'HOURS',\n        'IDENTITY',\n        'IDENTITY_INSERT',\n        'IDENTITY_VALUE',\n        'IDENTITYCOL',\n        'IF',\n        'IGNORE_CONSTRAINTS',\n        'IGNORE_DUP_KEY',\n        'IGNORE_NONCLUSTERED_COLUMNSTORE_INDEX',\n        'IGNORE_TRIGGERS',\n        'IMAGE',\n        'IMMEDIATE',\n        'IMPERSONATE',\n        'IMPLICIT_TRANSACTIONS',\n        'IMPORTANCE',\n        'INCLUDE',\n        'INCREMENT',\n        'INCREMENTAL',\n        'INDEX',\n        'INDEXDEFRAG',\n        'INFINITE',\n        'INFLECTIONAL',\n        'INIT',\n        'INITIATOR',\n        'INPUT',\n        'INPUTBUFFER',\n        'INSENSITIVE',\n        'INSERT',\n        'INSERTED',\n        'INSTEAD',\n        'INT',\n        'INTEGER',\n        'INTO',\n        'IO',\n        'IP',\n        'ISABOUT',\n        'ISOLATION',\n        'JOB',\n        'KB',\n        'KEEP',\n        'KEEP_CDC',\n        'KEEP_NULLS',\n        'KEEP_REPLICATION',\n        'KEEPDEFAULTS',\n        'KEEPFIXED',\n        'KEEPIDENTITY',\n        'KEEPNULLS',\n        'KERBEROS',\n        'KEY',\n        'KEY_SOURCE',\n        'KEYS',\n        'KEYSET',\n        'KILL',\n        'KILOBYTES_PER_BATCH',\n        'LABELONLY',\n        'LANGUAGE',\n        'LAST',\n        'LASTROW',\n        'LEVEL',\n        'LEVEL_1',\n        'LEVEL_2',\n        'LEVEL_3',\n        'LEVEL_4',\n        'LIFETIME',\n        'LIMIT',\n        'LINENO',\n        'LIST',\n        'LISTENER',\n        'LISTENER_IP',\n        'LISTENER_PORT',\n        'LOAD',\n        'LOADHISTORY',\n        'LOB_COMPACTION',\n        'LOCAL',\n        'LOCAL_SERVICE_NAME',\n        'LOCK_ESCALATION',\n        'LOCK_TIMEOUT',\n        'LOGIN',\n        'LOGSPACE',\n        'LOOP',\n        'LOW',\n        'MANUAL',\n        'MARK',\n        'MARK_IN_USE_FOR_REMOVAL',\n        'MASTER',\n        'MAX_CPU_PERCENT',\n        'MAX_DISPATCH_LATENCY',\n        'MAX_DOP',\n        'MAX_DURATION',\n        'MAX_EVENT_SIZE',\n        'MAX_FILES',\n        'MAX_IOPS_PER_VOLUME',\n        'MAX_MEMORY',\n        'MAX_MEMORY_PERCENT',\n        'MAX_QUEUE_READERS',\n        'MAX_ROLLOVER_FILES',\n        'MAX_SIZE',\n        'MAXDOP',\n        'MAXERRORS',\n        'MAXLENGTH',\n        'MAXRECURSION',\n        'MAXSIZE',\n        'MAXTRANSFERSIZE',\n        'MAXVALUE',\n        'MB',\n        'MEDIADESCRIPTION',\n        'MEDIANAME',\n        'MEDIAPASSWORD',\n        'MEDIUM',\n        'MEMBER',\n        'MEMORY_OPTIMIZED',\n        'MEMORY_OPTIMIZED_DATA',\n        'MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT',\n        'MEMORY_PARTITION_MODE',\n        'MERGE',\n        'MESSAGE',\n        'MESSAGE_FORWARD_SIZE',\n        'MESSAGE_FORWARDING',\n        'MICROSECOND',\n        'MILLISECOND',\n        'MIN_CPU_PERCENT',\n        'MIN_IOPS_PER_VOLUME',\n        'MIN_MEMORY_PERCENT',\n        'MINUTE',\n        'MINUTES',\n        'MINVALUE',\n        'MIRROR',\n        'MIRROR_ADDRESS',\n        'MODIFY',\n        'MONEY',\n        'MONTH',\n        'MOVE',\n        'MULTI_USER',\n        'MUST_CHANGE',\n        'NAME',\n        'NANOSECOND',\n        'NATIONAL',\n        'NATIVE_COMPILATION',\n        'NCHAR',\n        'NEGOTIATE',\n        'NESTED_TRIGGERS',\n        'NEW_ACCOUNT',\n        'NEW_BROKER',\n        'NEW_PASSWORD',\n        'NEWNAME',\n        'NEXT',\n        'NO',\n        'NO_BROWSETABLE',\n        'NO_CHECKSUM',\n        'NO_COMPRESSION',\n        'NO_EVENT_LOSS',\n        'NO_INFOMSGS',\n        'NO_TRUNCATE',\n        'NO_WAIT',\n        'NOCHECK',\n        'NOCOUNT',\n        'NOEXEC',\n        'NOEXPAND',\n        'NOFORMAT',\n        'NOINDEX',\n        'NOINIT',\n        'NOLOCK',\n        'NON',\n        'NON_TRANSACTED_ACCESS',\n        'NONCLUSTERED',\n        'NONE',\n        'NORECOMPUTE',\n        'NORECOVERY',\n        'NORESEED',\n        'NORESET',\n        'NOREWIND',\n        'NORMAL',\n        'NOSKIP',\n        'NOTIFICATION',\n        'NOTRUNCATE',\n        'NOUNLOAD',\n        'NOWAIT',\n        'NTEXT',\n        'NTLM',\n        'NUMANODE',\n        'NUMERIC',\n        'NUMERIC_ROUNDABORT',\n        'NVARCHAR',\n        'OBJECT',\n        'OF',\n        'OFF',\n        'OFFLINE',\n        'OFFSET',\n        'OFFSETS',\n        'OLD_ACCOUNT',\n        'OLD_PASSWORD',\n        'ON',\n        'ON_FAILURE',\n        'ONLINE',\n        'ONLY',\n        'OPEN',\n        'OPEN_EXISTING',\n        'OPENTRAN',\n        'OPTIMISTIC',\n        'OPTIMIZE',\n        'OPTION',\n        'ORDER',\n        'OUT',\n        'OUTPUT',\n        'OUTPUTBUFFER',\n        'OVER',\n        'OVERRIDE',\n        'OWNER',\n        'OWNERSHIP',\n        'PAD_INDEX',\n        'PAGE',\n        'PAGE_VERIFY',\n        'PAGECOUNT',\n        'PAGLOCK',\n        'PARAMETERIZATION',\n        'PARSEONLY',\n        'PARTIAL',\n        'PARTITION',\n        'PARTITIONS',\n        'PARTNER',\n        'PASSWORD',\n        'PATH',\n        'PER_CPU',\n        'PER_NODE',\n        'PERCENT',\n        'PERMISSION_SET',\n        'PERSISTED',\n        'PHYSICAL_ONLY',\n        'PLAN',\n        'POISON_MESSAGE_HANDLING',\n        'POOL',\n        'POPULATION',\n        'PORT',\n        'PRECEDING',\n        'PRECISION',\n        'PRIMARY',\n        'PRIMARY_ROLE',\n        'PRINT',\n        'PRIOR',\n        'PRIORITY',\n        'PRIORITY_LEVEL',\n        'PRIVATE',\n        'PRIVILEGES',\n        'PROC',\n        'PROCCACHE',\n        'PROCEDURE',\n        'PROCEDURE_NAME',\n        'PROCESS',\n        'PROFILE',\n        'PROPERTY',\n        'PROPERTY_DESCRIPTION',\n        'PROPERTY_INT_ID',\n        'PROPERTY_SET_GUID',\n        'PROVIDER',\n        'PROVIDER_KEY_NAME',\n        'PUBLIC',\n        'PUT',\n        'QUARTER',\n        'QUERY',\n        'QUERY_GOVERNOR_COST_LIMIT',\n        'QUEUE',\n        'QUEUE_DELAY',\n        'QUOTED_IDENTIFIER',\n        'RAISERROR',\n        'RANGE',\n        'RAW',\n        'RC2',\n        'RC4',\n        'RC4_128',\n        'READ',\n        'READ_COMMITTED_SNAPSHOT',\n        'READ_ONLY',\n        'READ_ONLY_ROUTING_LIST',\n        'READ_ONLY_ROUTING_URL',\n        'READ_WRITE',\n        'READ_WRITE_FILEGROUPS',\n        'READCOMMITTED',\n        'READCOMMITTEDLOCK',\n        'READONLY',\n        'READPAST',\n        'READTEXT',\n        'READUNCOMMITTED',\n        'READWRITE',\n        'REAL',\n        'REBUILD',\n        'RECEIVE',\n        'RECOMPILE',\n        'RECONFIGURE',\n        'RECOVERY',\n        'RECURSIVE',\n        'RECURSIVE_TRIGGERS',\n        'REFERENCES',\n        'REGENERATE',\n        'RELATED_CONVERSATION',\n        'RELATED_CONVERSATION_GROUP',\n        'RELATIVE',\n        'REMOTE',\n        'REMOTE_PROC_TRANSACTIONS',\n        'REMOTE_SERVICE_NAME',\n        'REMOVE',\n        'REORGANIZE',\n        'REPAIR_ALLOW_DATA_LOSS',\n        'REPAIR_FAST',\n        'REPAIR_REBUILD',\n        'REPEATABLE',\n        'REPEATABLEREAD',\n        'REPLICA',\n        'REPLICATION',\n        'REQUEST_MAX_CPU_TIME_SEC',\n        'REQUEST_MAX_MEMORY_GRANT_PERCENT',\n        'REQUEST_MEMORY_GRANT_TIMEOUT_SEC',\n        'REQUIRED',\n        'RESAMPLE',\n        'RESEED',\n        'RESERVE_DISK_SPACE',\n        'RESET',\n        'RESOURCE',\n        'RESTART',\n        'RESTORE',\n        'RESTRICT',\n        'RESTRICTED_USER',\n        'RESULT',\n        'RESUME',\n        'RETAINDAYS',\n        'RETENTION',\n        'RETURN',\n        'RETURNS',\n        'REVERT',\n        'REVOKE',\n        'REWIND',\n        'REWINDONLY',\n        'ROBUST',\n        'ROLE',\n        'ROLLBACK',\n        'ROLLUP',\n        'ROOT',\n        'ROUTE',\n        'ROW',\n        'ROWCOUNT',\n        'ROWGUIDCOL',\n        'ROWLOCK',\n        'ROWS',\n        'ROWS_PER_BATCH',\n        'ROWTERMINATOR',\n        'ROWVERSION',\n        'RSA_1024',\n        'RSA_2048',\n        'RSA_512',\n        'RULE',\n        'SAFE',\n        'SAFETY',\n        'SAMPLE',\n        'SAVE',\n        'SCHEDULER',\n        'SCHEMA',\n        'SCHEMA_AND_DATA',\n        'SCHEMA_ONLY',\n        'SCHEMABINDING',\n        'SCHEME',\n        'SCROLL',\n        'SCROLL_LOCKS',\n        'SEARCH',\n        'SECOND',\n        'SECONDARY',\n        'SECONDARY_ONLY',\n        'SECONDARY_ROLE',\n        'SECONDS',\n        'SECRET',\n        'SECURITY_LOG',\n        'SECURITYAUDIT',\n        'SELECT',\n        'SELECTIVE',\n        'SELF',\n        'SEND',\n        'SENT',\n        'SEQUENCE',\n        'SERIALIZABLE',\n        'SERVER',\n        'SERVICE',\n        'SERVICE_BROKER',\n        'SERVICE_NAME',\n        'SESSION',\n        'SESSION_TIMEOUT',\n        'SET',\n        'SETS',\n        'SETUSER',\n        'SHOW_STATISTICS',\n        'SHOWCONTIG',\n        'SHOWPLAN',\n        'SHOWPLAN_ALL',\n        'SHOWPLAN_TEXT',\n        'SHOWPLAN_XML',\n        'SHRINKDATABASE',\n        'SHRINKFILE',\n        'SHUTDOWN',\n        'SID',\n        'SIGNATURE',\n        'SIMPLE',\n        'SINGLE_BLOB',\n        'SINGLE_CLOB',\n        'SINGLE_NCLOB',\n        'SINGLE_USER',\n        'SINGLETON',\n        'SIZE',\n        'SKIP',\n        'SMALLDATETIME',\n        'SMALLINT',\n        'SMALLMONEY',\n        'SNAPSHOT',\n        'SORT_IN_TEMPDB',\n        'SOURCE',\n        'SPARSE',\n        'SPATIAL',\n        'SPATIAL_WINDOW_MAX_CELLS',\n        'SPECIFICATION',\n        'SPLIT',\n        'SQL',\n        'SQL_VARIANT',\n        'SQLPERF',\n        'STANDBY',\n        'START',\n        'START_DATE',\n        'STARTED',\n        'STARTUP_STATE',\n        'STAT_HEADER',\n        'STATE',\n        'STATEMENT',\n        'STATIC',\n        'STATISTICAL_SEMANTICS',\n        'STATISTICS',\n        'STATISTICS_INCREMENTAL',\n        'STATISTICS_NORECOMPUTE',\n        'STATS',\n        'STATS_STREAM',\n        'STATUS',\n        'STATUSONLY',\n        'STOP',\n        'STOP_ON_ERROR',\n        'STOPAT',\n        'STOPATMARK',\n        'STOPBEFOREMARK',\n        'STOPLIST',\n        'STOPPED',\n        'SUBJECT',\n        'SUBSCRIPTION',\n        'SUPPORTED',\n        'SUSPEND',\n        'SWITCH',\n        'SYMMETRIC',\n        'SYNCHRONOUS_COMMIT',\n        'SYNONYM',\n        'SYSNAME',\n        'SYSTEM',\n        'TABLE',\n        'TABLERESULTS',\n        'TABLESAMPLE',\n        'TABLOCK',\n        'TABLOCKX',\n        'TAKE',\n        'TAPE',\n        'TARGET',\n        'TARGET_RECOVERY_TIME',\n        'TB',\n        'TCP',\n        'TEXT',\n        'TEXTIMAGE_ON',\n        'TEXTSIZE',\n        'THEN',\n        'THESAURUS',\n        'THROW',\n        'TIES',\n        'TIME',\n        'TIMEOUT',\n        'TIMER',\n        'TIMESTAMP',\n        'TINYINT',\n        'TO',\n        'TOP',\n        'TORN_PAGE_DETECTION',\n        'TRACEOFF',\n        'TRACEON',\n        'TRACESTATUS',\n        'TRACK_CAUSALITY',\n        'TRACK_COLUMNS_UPDATED',\n        'TRAN',\n        'TRANSACTION',\n        'TRANSFER',\n        'TRANSFORM_NOISE_WORDS',\n        'TRIGGER',\n        'TRIPLE_DES',\n        'TRIPLE_DES_3KEY',\n        'TRUE',\n        'TRUNCATE',\n        'TRUNCATEONLY',\n        'TRUSTWORTHY',\n        'TRY',\n        'TSQL',\n        'TWO_DIGIT_YEAR_CUTOFF',\n        'TYPE',\n        'TYPE_WARNING',\n        'UNBOUNDED',\n        'UNCHECKED',\n        'UNCOMMITTED',\n        'UNDEFINED',\n        'UNIQUE',\n        'UNIQUEIDENTIFIER',\n        'UNKNOWN',\n        'UNLIMITED',\n        'UNLOAD',\n        'UNSAFE',\n        'UPDATE',\n        'UPDATETEXT',\n        'UPDATEUSAGE',\n        'UPDLOCK',\n        'URL',\n        'USE',\n        'USED',\n        'USER',\n        'USEROPTIONS',\n        'USING',\n        'VALID_XML',\n        'VALIDATION',\n        'VALUE',\n        'VALUES',\n        'VARBINARY',\n        'VARCHAR',\n        'VARYING',\n        'VERIFYONLY',\n        'VERSION',\n        'VIEW',\n        'VIEW_METADATA',\n        'VIEWS',\n        'VISIBILITY',\n        'WAIT_AT_LOW_PRIORITY',\n        'WAITFOR',\n        'WEEK',\n        'WEIGHT',\n        'WELL_FORMED_XML',\n        'WHEN',\n        'WHERE',\n        'WHILE',\n        'WINDOWS',\n        'WITH',\n        'WITHIN',\n        'WITHOUT',\n        'WITNESS',\n        'WORK',\n        'WORKLOAD',\n        'WRITETEXT',\n        'XACT_ABORT',\n        'XLOCK',\n        'XMAX',\n        'XMIN',\n        'XML',\n        'XMLDATA',\n        'XMLNAMESPACES',\n        'XMLSCHEMA',\n        'XQUERY',\n        'XSINIL',\n        'YEAR',\n        'YMAX',\n        'YMIN'\n    ],\n    operators: [\n        // Logical\n        'ALL', 'AND', 'ANY', 'BETWEEN', 'EXISTS', 'IN', 'LIKE', 'NOT', 'OR', 'SOME',\n        // Set\n        'EXCEPT', 'INTERSECT', 'UNION',\n        // Join\n        'APPLY', 'CROSS', 'FULL', 'INNER', 'JOIN', 'LEFT', 'OUTER', 'RIGHT',\n        // Predicates\n        'CONTAINS', 'FREETEXT', 'IS', 'NULL',\n        // Pivoting\n        'PIVOT', 'UNPIVOT',\n        // Merging\n        'MATCHED'\n    ],\n    builtinFunctions: [\n        // Aggregate\n        'AVG', 'CHECKSUM_AGG', 'COUNT', 'COUNT_BIG', 'GROUPING', 'GROUPING_ID', 'MAX', 'MIN', 'SUM', 'STDEV', 'STDEVP', 'VAR', 'VARP',\n        // Analytic\n        'CUME_DIST', 'FIRST_VALUE', 'LAG', 'LAST_VALUE', 'LEAD', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'PERCENT_RANK',\n        // Collation\n        'COLLATE', 'COLLATIONPROPERTY', 'TERTIARY_WEIGHTS',\n        // Azure\n        'FEDERATION_FILTERING_VALUE',\n        // Conversion\n        'CAST', 'CONVERT', 'PARSE', 'TRY_CAST', 'TRY_CONVERT', 'TRY_PARSE',\n        // Cryptographic\n        'ASYMKEY_ID', 'ASYMKEYPROPERTY', 'CERTPROPERTY', 'CERT_ID', 'CRYPT_GEN_RANDOM',\n        'DECRYPTBYASYMKEY', 'DECRYPTBYCERT', 'DECRYPTBYKEY', 'DECRYPTBYKEYAUTOASYMKEY', 'DECRYPTBYKEYAUTOCERT', 'DECRYPTBYPASSPHRASE',\n        'ENCRYPTBYASYMKEY', 'ENCRYPTBYCERT', 'ENCRYPTBYKEY', 'ENCRYPTBYPASSPHRASE', 'HASHBYTES', 'IS_OBJECTSIGNED',\n        'KEY_GUID', 'KEY_ID', 'KEY_NAME', 'SIGNBYASYMKEY', 'SIGNBYCERT', 'SYMKEYPROPERTY', 'VERIFYSIGNEDBYCERT', 'VERIFYSIGNEDBYASYMKEY',\n        // Cursor\n        'CURSOR_STATUS',\n        // Datatype\n        'DATALENGTH', 'IDENT_CURRENT', 'IDENT_INCR', 'IDENT_SEED', 'IDENTITY', 'SQL_VARIANT_PROPERTY',\n        // Datetime\n        'CURRENT_TIMESTAMP', 'DATEADD', 'DATEDIFF', 'DATEFROMPARTS', 'DATENAME', 'DATEPART', 'DATETIME2FROMPARTS', 'DATETIMEFROMPARTS',\n        'DATETIMEOFFSETFROMPARTS', 'DAY', 'EOMONTH', 'GETDATE', 'GETUTCDATE', 'ISDATE', 'MONTH', 'SMALLDATETIMEFROMPARTS', 'SWITCHOFFSET',\n        'SYSDATETIME', 'SYSDATETIMEOFFSET', 'SYSUTCDATETIME', 'TIMEFROMPARTS', 'TODATETIMEOFFSET', 'YEAR',\n        // Logical\n        'CHOOSE', 'COALESCE', 'IIF', 'NULLIF',\n        // Mathematical\n        'ABS', 'ACOS', 'ASIN', 'ATAN', 'ATN2', 'CEILING', 'COS', 'COT', 'DEGREES', 'EXP', 'FLOOR', 'LOG', 'LOG10',\n        'PI', 'POWER', 'RADIANS', 'RAND', 'ROUND', 'SIGN', 'SIN', 'SQRT', 'SQUARE', 'TAN',\n        // Metadata\n        'APP_NAME', 'APPLOCK_MODE', 'APPLOCK_TEST', 'ASSEMBLYPROPERTY', 'COL_LENGTH', 'COL_NAME', 'COLUMNPROPERTY',\n        'DATABASE_PRINCIPAL_ID', 'DATABASEPROPERTYEX', 'DB_ID', 'DB_NAME', 'FILE_ID', 'FILE_IDEX', 'FILE_NAME', 'FILEGROUP_ID',\n        'FILEGROUP_NAME', 'FILEGROUPPROPERTY', 'FILEPROPERTY', 'FULLTEXTCATALOGPROPERTY', 'FULLTEXTSERVICEPROPERTY',\n        'INDEX_COL', 'INDEXKEY_PROPERTY', 'INDEXPROPERTY', 'OBJECT_DEFINITION', 'OBJECT_ID',\n        'OBJECT_NAME', 'OBJECT_SCHEMA_NAME', 'OBJECTPROPERTY', 'OBJECTPROPERTYEX', 'ORIGINAL_DB_NAME', 'PARSENAME',\n        'SCHEMA_ID', 'SCHEMA_NAME', 'SCOPE_IDENTITY', 'SERVERPROPERTY', 'STATS_DATE', 'TYPE_ID', 'TYPE_NAME', 'TYPEPROPERTY',\n        // Ranking\n        'DENSE_RANK', 'NTILE', 'RANK', 'ROW_NUMBER',\n        // Replication\n        'PUBLISHINGSERVERNAME',\n        // Rowset\n        'OPENDATASOURCE', 'OPENQUERY', 'OPENROWSET', 'OPENXML',\n        // Security\n        'CERTENCODED', 'CERTPRIVATEKEY', 'CURRENT_USER', 'HAS_DBACCESS', 'HAS_PERMS_BY_NAME', 'IS_MEMBER', 'IS_ROLEMEMBER', 'IS_SRVROLEMEMBER',\n        'LOGINPROPERTY', 'ORIGINAL_LOGIN', 'PERMISSIONS', 'PWDENCRYPT', 'PWDCOMPARE', 'SESSION_USER', 'SESSIONPROPERTY', 'SUSER_ID', 'SUSER_NAME',\n        'SUSER_SID', 'SUSER_SNAME', 'SYSTEM_USER', 'USER', 'USER_ID', 'USER_NAME',\n        // String\n        'ASCII', 'CHAR', 'CHARINDEX', 'CONCAT', 'DIFFERENCE', 'FORMAT', 'LEFT', 'LEN', 'LOWER', 'LTRIM', 'NCHAR', 'PATINDEX',\n        'QUOTENAME', 'REPLACE', 'REPLICATE', 'REVERSE', 'RIGHT', 'RTRIM', 'SOUNDEX', 'SPACE', 'STR', 'STUFF', 'SUBSTRING', 'UNICODE', 'UPPER',\n        // System\n        'BINARY_CHECKSUM', 'CHECKSUM', 'CONNECTIONPROPERTY', 'CONTEXT_INFO', 'CURRENT_REQUEST_ID', 'ERROR_LINE', 'ERROR_NUMBER', 'ERROR_MESSAGE',\n        'ERROR_PROCEDURE', 'ERROR_SEVERITY', 'ERROR_STATE', 'FORMATMESSAGE', 'GETANSINULL', 'GET_FILESTREAM_TRANSACTION_CONTEXT', 'HOST_ID',\n        'HOST_NAME', 'ISNULL', 'ISNUMERIC', 'MIN_ACTIVE_ROWVERSION', 'NEWID', 'NEWSEQUENTIALID', 'ROWCOUNT_BIG', 'XACT_STATE',\n        // TextImage\n        'TEXTPTR', 'TEXTVALID',\n        // Trigger\n        'COLUMNS_UPDATED', 'EVENTDATA', 'TRIGGER_NESTLEVEL', 'UPDATE',\n        // ChangeTracking\n        'CHANGETABLE', 'CHANGE_TRACKING_CONTEXT', 'CHANGE_TRACKING_CURRENT_VERSION', 'CHANGE_TRACKING_IS_COLUMN_IN_MASK', 'CHANGE_TRACKING_MIN_VALID_VERSION',\n        // FullTextSearch\n        'CONTAINSTABLE', 'FREETEXTTABLE',\n        // SemanticTextSearch\n        'SEMANTICKEYPHRASETABLE', 'SEMANTICSIMILARITYDETAILSTABLE', 'SEMANTICSIMILARITYTABLE',\n        // FileStream\n        'FILETABLEROOTPATH', 'GETFILENAMESPACEPATH', 'GETPATHLOCATOR', 'PATHNAME',\n        // ServiceBroker\n        'GET_TRANSMISSION_STATUS'\n    ],\n    builtinVariables: [\n        // Configuration\n        '@@DATEFIRST', '@@DBTS', '@@LANGID', '@@LANGUAGE', '@@LOCK_TIMEOUT', '@@MAX_CONNECTIONS', '@@MAX_PRECISION', '@@NESTLEVEL',\n        '@@OPTIONS', '@@REMSERVER', '@@SERVERNAME', '@@SERVICENAME', '@@SPID', '@@TEXTSIZE', '@@VERSION',\n        // Cursor\n        '@@CURSOR_ROWS', '@@FETCH_STATUS',\n        // Datetime\n        '@@DATEFIRST',\n        // Metadata\n        '@@PROCID',\n        // System\n        '@@ERROR', '@@IDENTITY', '@@ROWCOUNT', '@@TRANCOUNT',\n        // Stats\n        '@@CONNECTIONS', '@@CPU_BUSY', '@@IDLE', '@@IO_BUSY', '@@PACKET_ERRORS', '@@PACK_RECEIVED', '@@PACK_SENT',\n        '@@TIMETICKS', '@@TOTAL_ERRORS', '@@TOTAL_READ', '@@TOTAL_WRITE'\n    ],\n    pseudoColumns: [\n        '$ACTION', '$IDENTITY', '$ROWGUID', '$PARTITION'\n    ],\n    tokenizer: {\n        root: [\n            { include: '@comments' },\n            { include: '@whitespace' },\n            { include: '@pseudoColumns' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            { include: '@complexIdentifiers' },\n            { include: '@scopes' },\n            [/[;,.]/, 'delimiter'],\n            [/[()]/, '@brackets'],\n            [/[\\w@#$]+/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@operators': 'operator',\n                        '@builtinVariables': 'predefined',\n                        '@builtinFunctions': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            [/[<>=!%&+\\-*/|~^]/, 'operator'],\n        ],\n        whitespace: [\n            [/\\s+/, 'white']\n        ],\n        comments: [\n            [/--+.*/, 'comment'],\n            [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\n        ],\n        comment: [\n            [/[^*/]+/, 'comment'],\n            // Not supporting nested comments, as nested comments seem to not be standard?\n            // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\n            // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\n            [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\n            [/./, 'comment']\n        ],\n        pseudoColumns: [\n            [/[$][A-Za-z_][\\w@#$]*/, {\n                    cases: {\n                        '@pseudoColumns': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n        ],\n        numbers: [\n            [/0[xX][0-9a-fA-F]*/, 'number'],\n            [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\n            [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\n        ],\n        strings: [\n            [/N'/, { token: 'string', next: '@string' }],\n            [/'/, { token: 'string', next: '@string' }]\n        ],\n        string: [\n            [/[^']+/, 'string'],\n            [/''/, 'string'],\n            [/'/, { token: 'string', next: '@pop' }]\n        ],\n        complexIdentifiers: [\n            [/\\[/, { token: 'identifier.quote', next: '@bracketedIdentifier' }],\n            [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\n        ],\n        bracketedIdentifier: [\n            [/[^\\]]+/, 'identifier'],\n            [/]]/, 'identifier'],\n            [/]/, { token: 'identifier.quote', next: '@pop' }]\n        ],\n        quotedIdentifier: [\n            [/[^\"]+/, 'identifier'],\n            [/\"\"/, 'identifier'],\n            [/\"/, { token: 'identifier.quote', next: '@pop' }]\n        ],\n        scopes: [\n            [/BEGIN\\s+(DISTRIBUTED\\s+)?TRAN(SACTION)?\\b/i, 'keyword'],\n            [/BEGIN\\s+TRY\\b/i, { token: 'keyword.try' }],\n            [/END\\s+TRY\\b/i, { token: 'keyword.try' }],\n            [/BEGIN\\s+CATCH\\b/i, { token: 'keyword.catch' }],\n            [/END\\s+CATCH\\b/i, { token: 'keyword.catch' }],\n            [/(BEGIN|CASE)\\b/i, { token: 'keyword.block' }],\n            [/END\\b/i, { token: 'keyword.block' }],\n            [/WHEN\\b/i, { token: 'keyword.choice' }],\n            [/THEN\\b/i, { token: 'keyword.choice' }]\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '\\'',\n    },\n    brackets: [\n        ['(', ')'], ['[', ']'],\n        ['If', 'EndIf'],\n        ['While', 'EndWhile'],\n        ['For', 'EndFor'],\n        ['Sub', 'EndSub']\n    ],\n    autoClosingPairs: [\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.sb',\n    ignoreCase: true,\n    brackets: [\n        { token: 'delimiter.array', open: '[', close: ']' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        // Special bracket statement pairs\n        { token: 'keyword.tag-if', open: 'If', close: 'EndIf' },\n        { token: 'keyword.tag-while', open: 'While', close: 'EndWhile' },\n        { token: 'keyword.tag-for', open: 'For', close: 'EndFor' },\n        { token: 'keyword.tag-sub', open: 'Sub', close: 'EndSub' },\n    ],\n    keywords: [\n        'Else', 'ElseIf', 'EndFor', 'EndIf', 'EndSub', 'EndWhile',\n        'For', 'Goto', 'If', 'Step', 'Sub', 'Then', 'To', 'While'\n    ],\n    tagwords: [\n        'If', 'Sub', 'While', 'For'\n    ],\n    operators: ['>', '<', '<>', '<=', '>=', 'And', 'Or', '+', '-', '*', '/', '='],\n    // we include these common regular expressions\n    identifier: /[a-zA-Z_][\\w]*/,\n    symbols: /[=><:+\\-*\\/%\\.,]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // whitespace\n            { include: '@whitespace' },\n            // classes\n            [/(@identifier)(?=[.])/, 'type'],\n            // identifiers, tagwords, and keywords\n            [/@identifier/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@operators': 'operator',\n                        '@default': 'variable.name'\n                    }\n                }],\n            // methods, properties, and events\n            [/([.])(@identifier)/, {\n                    cases: {\n                        '$2': ['delimiter', 'type.member'],\n                        '@default': ''\n                    }\n                }],\n            // numbers\n            [/\\d*\\.\\d+/, 'number.float'],\n            [/\\d+/, 'number'],\n            // delimiters and operators\n            [/[()\\[\\]]/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'operator',\n                        '@default': 'delimiter'\n                    }\n                }],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string'],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/(\\').*$/, 'comment']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"C?/, 'string', '@pop']\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '#',\n        blockComment: ['=begin', '=end'],\n    },\n    brackets: [\n        ['(', ')'],\n        ['{', '}'],\n        ['[', ']']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\n/*\n * Ruby language definition\n *\n * Quite a complex language due to elaborate escape sequences\n * and quoting of literate strings/regular expressions, and\n * an 'end' keyword that does not always apply to modifiers like until and while,\n * and a 'do' keyword that sometimes starts a block, but sometimes is part of\n * another statement (like 'while').\n *\n * (1) end blocks:\n * 'end' may end declarations like if or until, but sometimes 'if' or 'until'\n * are modifiers where there is no 'end'. Also, 'do' sometimes starts a block\n * that is ended by 'end', but sometimes it is part of a 'while', 'for', or 'until'\n * To do proper brace matching we do some elaborate state manipulation.\n * some examples:\n *\n *   until bla do\n *     work until tired\n *     list.each do\n *       something if test\n *     end\n *   end\n *\n * or\n *\n * if test\n *  something (if test then x end)\n *  bar if bla\n * end\n *\n * or, how about using class as a property..\n *\n * class Test\n *   def endpoint\n *     self.class.endpoint || routes\n *   end\n * end\n *\n * (2) quoting:\n * there are many kinds of strings and escape sequences. But also, one can\n * start many string-like things as '%qx' where q specifies the kind of string\n * (like a command, escape expanded, regular expression, symbol etc.), and x is\n * some character and only another 'x' ends the sequence. Except for brackets\n * where the closing bracket ends the sequence.. and except for a nested bracket\n * inside the string like entity. Also, such strings can contain interpolated\n * ruby expressions again (and span multiple lines). Moreover, expanded\n * regular expression can also contain comments.\n */\nexport var language = {\n    tokenPostfix: '.ruby',\n    keywords: [\n        '__LINE__', '__ENCODING__', '__FILE__', 'BEGIN', 'END', 'alias', 'and', 'begin',\n        'break', 'case', 'class', 'def', 'defined?', 'do', 'else', 'elsif', 'end',\n        'ensure', 'for', 'false', 'if', 'in', 'module', 'next', 'nil', 'not', 'or', 'redo',\n        'rescue', 'retry', 'return', 'self', 'super', 'then', 'true', 'undef', 'unless',\n        'until', 'when', 'while', 'yield',\n    ],\n    keywordops: [\n        '::', '..', '...', '?', ':', '=>'\n    ],\n    builtins: [\n        'require', 'public', 'private', 'include', 'extend', 'attr_reader',\n        'protected', 'private_class_method', 'protected_class_method', 'new'\n    ],\n    // these are closed by 'end' (if, while and until are handled separately)\n    declarations: [\n        'module', 'class', 'def', 'case', 'do', 'begin', 'for', 'if', 'while', 'until', 'unless'\n    ],\n    linedecls: [\n        'def', 'case', 'do', 'begin', 'for', 'if', 'while', 'until', 'unless'\n    ],\n    operators: [\n        '^', '&', '|', '<=>', '==', '===', '!~', '=~', '>', '>=', '<', '<=', '<<', '>>', '+',\n        '-', '*', '/', '%', '**', '~', '+@', '-@', '[]', '[]=', '`',\n        '+=', '-=', '*=', '**=', '/=', '^=', '%=', '<<=', '>>=', '&=', '&&=', '||=', '|='\n    ],\n    brackets: [\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' }\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%\\.]+/,\n    // escape sequences\n    escape: /(?:[abefnrstv\\\\\"'\\n\\r]|[0-7]{1,3}|x[0-9A-Fa-f]{1,2}|u[0-9A-Fa-f]{4})/,\n    escapes: /\\\\(?:C\\-(@escape|.)|c(@escape|.)|@escape)/,\n    decpart: /\\d(_?\\d)*/,\n    decimal: /0|@decpart/,\n    delim: /[^a-zA-Z0-9\\s\\n\\r]/,\n    heredelim: /(?:\\w+|'[^']*'|\"[^\"]*\"|`[^`]*`)/,\n    regexpctl: /[(){}\\[\\]\\$\\^|\\-*+?\\.]/,\n    regexpesc: /\\\\(?:[AzZbBdDfnrstvwWn0\\\\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})?/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        // Main entry.\n        // root.<decl> where decl is the current opening declaration (like 'class')\n        root: [\n            // identifiers and keywords\n            // most complexity here is due to matching 'end' correctly with declarations.\n            // We distinguish a declaration that comes first on a line, versus declarations further on a line (which are most likey modifiers)\n            [/^(\\s*)([a-z_]\\w*[!?=]?)/, ['white',\n                    {\n                        cases: {\n                            'for|until|while': { token: 'keyword.$2', next: '@dodecl.$2' },\n                            '@declarations': { token: 'keyword.$2', next: '@root.$2' },\n                            'end': { token: 'keyword.$S2', next: '@pop' },\n                            '@keywords': 'keyword',\n                            '@builtins': 'predefined',\n                            '@default': 'identifier'\n                        }\n                    }]],\n            [/[a-z_]\\w*[!?=]?/,\n                {\n                    cases: {\n                        'if|unless|while|until': { token: 'keyword.$0x', next: '@modifier.$0x' },\n                        'for': { token: 'keyword.$2', next: '@dodecl.$2' },\n                        '@linedecls': { token: 'keyword.$0', next: '@root.$0' },\n                        'end': { token: 'keyword.$S2', next: '@pop' },\n                        '@keywords': 'keyword',\n                        '@builtins': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            [/[A-Z][\\w]*[!?=]?/, 'constructor.identifier'],\n            [/\\$[\\w]*/, 'global.constant'],\n            [/@[\\w]*/, 'namespace.instance.identifier'],\n            [/@@[\\w]*/, 'namespace.class.identifier'],\n            // here document\n            [/<<[-~](@heredelim).*/, { token: 'string.heredoc.delimiter', next: '@heredoc.$1' }],\n            [/[ \\t\\r\\n]+<<(@heredelim).*/, { token: 'string.heredoc.delimiter', next: '@heredoc.$1' }],\n            [/^<<(@heredelim).*/, { token: 'string.heredoc.delimiter', next: '@heredoc.$1' }],\n            // whitespace\n            { include: '@whitespace' },\n            // strings\n            [/\"/, { token: 'string.d.delim', next: '@dstring.d.\"' }],\n            [/'/, { token: 'string.sq.delim', next: '@sstring.sq' }],\n            // % literals. For efficiency, rematch in the 'pstring' state\n            [/%([rsqxwW]|Q?)/, { token: '@rematch', next: 'pstring' }],\n            // commands and symbols\n            [/`/, { token: 'string.x.delim', next: '@dstring.x.`' }],\n            [/:(\\w|[$@])\\w*[!?=]?/, 'string.s'],\n            [/:\"/, { token: 'string.s.delim', next: '@dstring.s.\"' }],\n            [/:'/, { token: 'string.s.delim', next: '@sstring.s' }],\n            // regular expressions. Lookahead for a (not escaped) closing forwardslash on the same line\n            [/\\/(?=(\\\\\\/|[^\\/\\n])+\\/)/, { token: 'regexp.delim', next: '@regexp' }],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@keywordops': 'keyword',\n                        '@operators': 'operator',\n                        '@default': ''\n                    }\n                }],\n            [/[;,]/, 'delimiter'],\n            // numbers\n            [/0[xX][0-9a-fA-F](_?[0-9a-fA-F])*/, 'number.hex'],\n            [/0[_oO][0-7](_?[0-7])*/, 'number.octal'],\n            [/0[bB][01](_?[01])*/, 'number.binary'],\n            [/0[dD]@decpart/, 'number'],\n            [/@decimal((\\.@decpart)?([eE][\\-+]?@decpart)?)/, {\n                    cases: {\n                        '$1': 'number.float',\n                        '@default': 'number'\n                    }\n                }],\n        ],\n        // used to not treat a 'do' as a block opener if it occurs on the same\n        // line as a 'do' statement: 'while|until|for'\n        // dodecl.<decl> where decl is the declarations started, like 'while'\n        dodecl: [\n            [/^/, { token: '', switchTo: '@root.$S2' }],\n            [/[a-z_]\\w*[!?=]?/, {\n                    cases: {\n                        'end': { token: 'keyword.$S2', next: '@pop' },\n                        'do': { token: 'keyword', switchTo: '@root.$S2' },\n                        '@linedecls': { token: '@rematch', switchTo: '@root.$S2' },\n                        '@keywords': 'keyword',\n                        '@builtins': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            { include: '@root' }\n        ],\n        // used to prevent potential modifiers ('if|until|while|unless') to match\n        // with 'end' keywords.\n        // modifier.<decl>x where decl is the declaration starter, like 'if'\n        modifier: [\n            [/^/, '', '@pop'],\n            [/[a-z_]\\w*[!?=]?/, {\n                    cases: {\n                        'end': { token: 'keyword.$S2', next: '@pop' },\n                        'then|else|elsif|do': { token: 'keyword', switchTo: '@root.$S2' },\n                        '@linedecls': { token: '@rematch', switchTo: '@root.$S2' },\n                        '@keywords': 'keyword',\n                        '@builtins': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            { include: '@root' }\n        ],\n        // single quote strings (also used for symbols)\n        // sstring.<kind>  where kind is 'sq' (single quote) or 's' (symbol)\n        sstring: [\n            [/[^\\\\']+/, 'string.$S2'],\n            [/\\\\\\\\|\\\\'|\\\\$/, 'string.$S2.escape'],\n            [/\\\\./, 'string.$S2.invalid'],\n            [/'/, { token: 'string.$S2.delim', next: '@pop' }]\n        ],\n        // double quoted \"string\".\n        // dstring.<kind>.<delim> where kind is 'd' (double quoted), 'x' (command), or 's' (symbol)\n        // and delim is the ending delimiter (\" or `)\n        dstring: [\n            [/[^\\\\`\"#]+/, 'string.$S2'],\n            [/#/, 'string.$S2.escape', '@interpolated'],\n            [/\\\\$/, 'string.$S2.escape'],\n            [/@escapes/, 'string.$S2.escape'],\n            [/\\\\./, 'string.$S2.escape.invalid'],\n            [/[`\"]/, {\n                    cases: {\n                        '$#==$S3': { token: 'string.$S2.delim', next: '@pop' },\n                        '@default': 'string.$S2'\n                    }\n                }]\n        ],\n        // literal documents\n        // heredoc.<close> where close is the closing delimiter\n        heredoc: [\n            [/^(\\s*)(@heredelim)$/, {\n                    cases: {\n                        '$2==$S2': ['string.heredoc', { token: 'string.heredoc.delimiter', next: '@pop' }],\n                        '@default': ['string.heredoc', 'string.heredoc']\n                    }\n                }],\n            [/.*/, 'string.heredoc'],\n        ],\n        // interpolated sequence\n        interpolated: [\n            [/\\$\\w*/, 'global.constant', '@pop'],\n            [/@\\w*/, 'namespace.class.identifier', '@pop'],\n            [/@@\\w*/, 'namespace.instance.identifier', '@pop'],\n            [/[{]/, { token: 'string.escape.curly', switchTo: '@interpolated_compound' }],\n            ['', '', '@pop'],\n        ],\n        // any code\n        interpolated_compound: [\n            [/[}]/, { token: 'string.escape.curly', next: '@pop' }],\n            { include: '@root' },\n        ],\n        // %r quoted regexp\n        // pregexp.<open>.<close> where open/close are the open/close delimiter\n        pregexp: [\n            { include: '@whitespace' },\n            // turns out that you can quote using regex control characters, aargh!\n            // for example; %r|kgjgaj| is ok (even though | is used for alternation)\n            // so, we need to match those first\n            [/[^\\(\\{\\[\\\\]/, {\n                    cases: {\n                        '$#==$S3': { token: 'regexp.delim', next: '@pop' },\n                        '$#==$S2': { token: 'regexp.delim', next: '@push' },\n                        '~[)}\\\\]]': '@brackets.regexp.escape.control',\n                        '~@regexpctl': 'regexp.escape.control',\n                        '@default': 'regexp'\n                    }\n                }],\n            { include: '@regexcontrol' },\n        ],\n        // We match regular expression quite precisely\n        regexp: [\n            { include: '@regexcontrol' },\n            [/[^\\\\\\/]/, 'regexp'],\n            ['/[ixmp]*', { token: 'regexp.delim' }, '@pop'],\n        ],\n        regexcontrol: [\n            [/(\\{)(\\d+(?:,\\d*)?)(\\})/, ['@brackets.regexp.escape.control', 'regexp.escape.control', '@brackets.regexp.escape.control']],\n            [/(\\[)(\\^?)/, ['@brackets.regexp.escape.control', { token: 'regexp.escape.control', next: '@regexrange' }]],\n            [/(\\()(\\?[:=!])/, ['@brackets.regexp.escape.control', 'regexp.escape.control']],\n            [/\\(\\?#/, { token: 'regexp.escape.control', next: '@regexpcomment' }],\n            [/[()]/, '@brackets.regexp.escape.control'],\n            [/@regexpctl/, 'regexp.escape.control'],\n            [/\\\\$/, 'regexp.escape'],\n            [/@regexpesc/, 'regexp.escape'],\n            [/\\\\\\./, 'regexp.invalid'],\n            [/#/, 'regexp.escape', '@interpolated'],\n        ],\n        regexrange: [\n            [/-/, 'regexp.escape.control'],\n            [/\\^/, 'regexp.invalid'],\n            [/\\\\$/, 'regexp.escape'],\n            [/@regexpesc/, 'regexp.escape'],\n            [/[^\\]]/, 'regexp'],\n            [/\\]/, '@brackets.regexp.escape.control', '@pop'],\n        ],\n        regexpcomment: [\n            [/[^)]+/, 'comment'],\n            [/\\)/, { token: 'regexp.escape.control', next: '@pop' }]\n        ],\n        // % quoted strings\n        // A bit repetitive since we need to often special case the kind of ending delimiter\n        pstring: [\n            [/%([qws])\\(/, { token: 'string.$1.delim', switchTo: '@qstring.$1.(.)' }],\n            [/%([qws])\\[/, { token: 'string.$1.delim', switchTo: '@qstring.$1.[.]' }],\n            [/%([qws])\\{/, { token: 'string.$1.delim', switchTo: '@qstring.$1.{.}' }],\n            [/%([qws])</, { token: 'string.$1.delim', switchTo: '@qstring.$1.<.>' }],\n            [/%([qws])(@delim)/, { token: 'string.$1.delim', switchTo: '@qstring.$1.$2.$2' }],\n            [/%r\\(/, { token: 'regexp.delim', switchTo: '@pregexp.(.)' }],\n            [/%r\\[/, { token: 'regexp.delim', switchTo: '@pregexp.[.]' }],\n            [/%r\\{/, { token: 'regexp.delim', switchTo: '@pregexp.{.}' }],\n            [/%r</, { token: 'regexp.delim', switchTo: '@pregexp.<.>' }],\n            [/%r(@delim)/, { token: 'regexp.delim', switchTo: '@pregexp.$1.$1' }],\n            [/%(x|W|Q?)\\(/, { token: 'string.$1.delim', switchTo: '@qqstring.$1.(.)' }],\n            [/%(x|W|Q?)\\[/, { token: 'string.$1.delim', switchTo: '@qqstring.$1.[.]' }],\n            [/%(x|W|Q?)\\{/, { token: 'string.$1.delim', switchTo: '@qqstring.$1.{.}' }],\n            [/%(x|W|Q?)</, { token: 'string.$1.delim', switchTo: '@qqstring.$1.<.>' }],\n            [/%(x|W|Q?)(@delim)/, { token: 'string.$1.delim', switchTo: '@qqstring.$1.$2.$2' }],\n            [/%([rqwsxW]|Q?)./, { token: 'invalid', next: '@pop' }],\n            [/./, { token: 'invalid', next: '@pop' }],\n        ],\n        // non-expanded quoted string.\n        // qstring.<kind>.<open>.<close>\n        //  kind = q|w|s  (single quote, array, symbol)\n        //  open = open delimiter\n        //  close = close delimiter\n        qstring: [\n            [/\\\\$/, 'string.$S2.escape'],\n            [/\\\\./, 'string.$S2.escape'],\n            [/./, {\n                    cases: {\n                        '$#==$S4': { token: 'string.$S2.delim', next: '@pop' },\n                        '$#==$S3': { token: 'string.$S2.delim', next: '@push' },\n                        '@default': 'string.$S2'\n                    }\n                }],\n        ],\n        // expanded quoted string.\n        // qqstring.<kind>.<open>.<close>\n        //  kind = Q|W|x  (double quote, array, command)\n        //  open = open delimiter\n        //  close = close delimiter\n        qqstring: [\n            [/#/, 'string.$S2.escape', '@interpolated'],\n            { include: '@qstring' }\n        ],\n        // whitespace & comments\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/^\\s*=begin\\b/, 'comment', '@comment'],\n            [/#.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^=]+/, 'comment'],\n            [/^\\s*=begin\\b/, 'comment.invalid'],\n            [/^\\s*=end\\b.*/, 'comment', '@pop'],\n            [/[=]/, 'comment']\n        ],\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '--',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.sql',\n    ignoreCase: true,\n    brackets: [\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    keywords: [\n        \"AES128\", \"AES256\", \"ALL\", \"ALLOWOVERWRITE\", \"ANALYSE\", \"ANALYZE\", \"AND\", \"ANY\", \"ARRAY\", \"AS\", \"ASC\", \"AUTHORIZATION\",\n        \"BACKUP\", \"BETWEEN\", \"BINARY\", \"BLANKSASNULL\", \"BOTH\", \"BYTEDICT\", \"BZIP2\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLUMN\",\n        \"CONSTRAINT\", \"CREATE\", \"CREDENTIALS\", \"CROSS\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"CURRENT_USER\",\n        \"CURRENT_USER_ID\", \"DEFAULT\", \"DEFERRABLE\", \"DEFLATE\", \"DEFRAG\", \"DELTA\", \"DELTA32K\", \"DESC\", \"DISABLE\", \"DISTINCT\", \"DO\",\n        \"ELSE\", \"EMPTYASNULL\", \"ENABLE\", \"ENCODE\", \"ENCRYPT\", \"ENCRYPTION\", \"END\", \"EXCEPT\", \"EXPLICIT\", \"FALSE\", \"FOR\", \"FOREIGN\",\n        \"FREEZE\", \"FROM\", \"FULL\", \"GLOBALDICT256\", \"GLOBALDICT64K\", \"GRANT\", \"GROUP\", \"GZIP\", \"HAVING\", \"IDENTITY\", \"IGNORE\", \"ILIKE\",\n        \"IN\", \"INITIALLY\", \"INNER\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"LEADING\", \"LEFT\", \"LIKE\", \"LIMIT\", \"LOCALTIME\",\n        \"LOCALTIMESTAMP\", \"LUN\", \"LUNS\", \"LZO\", \"LZOP\", \"MINUS\", \"MOSTLY13\", \"MOSTLY32\", \"MOSTLY8\", \"NATURAL\", \"NEW\", \"NOT\", \"NOTNULL\",\n        \"NULL\", \"NULLS\", \"OFF\", \"OFFLINE\", \"OFFSET\", \"OID\", \"OLD\", \"ON\", \"ONLY\", \"OPEN\", \"OR\", \"ORDER\", \"OUTER\", \"OVERLAPS\", \"PARALLEL\",\n        \"PARTITION\", \"PERCENT\", \"PERMISSIONS\", \"PLACING\", \"PRIMARY\", \"RAW\", \"READRATIO\", \"RECOVER\", \"REFERENCES\", \"RESPECT\", \"REJECTLOG\",\n        \"RESORT\", \"RESTORE\", \"RIGHT\", \"SELECT\", \"SESSION_USER\", \"SIMILAR\", \"SNAPSHOT\", \"SOME\", \"SYSDATE\", \"SYSTEM\", \"TABLE\", \"TAG\",\n        \"TDES\", \"TEXT255\", \"TEXT32K\", \"THEN\", \"TIMESTAMP\", \"TO\", \"TOP\", \"TRAILING\", \"TRUE\", \"TRUNCATECOLUMNS\", \"UNION\", \"UNIQUE\", \"USER\",\n        \"USING\", \"VERBOSE\", \"WALLET\", \"WHEN\", \"WHERE\", \"WITH\", \"WITHOUT\"\n    ],\n    operators: [\n        \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\n    ],\n    builtinFunctions: [\n        \"current_schema\", \"current_schemas\", \"has_database_privilege\", \"has_schema_privilege\", \"has_table_privilege\", \"age\",\n        \"current_time\", \"current_timestamp\", \"localtime\", \"isfinite\", \"now\", \"ascii\", \"get_bit\", \"get_byte\", \"set_bit\", \"set_byte\",\n        \"to_ascii\", \"approximate percentile_disc\", \"avg\", \"count\", \"listagg\", \"max\", \"median\", \"min\", \"percentile_cont\", \"stddev_samp\",\n        \"stddev_pop\", \"sum\", \"var_samp\", \"var_pop\", \"bit_and\", \"bit_or\", \"bool_and\", \"bool_or\", \"cume_dist\", \"first_value\", \"lag\",\n        \"last_value\", \"lead\", \"nth_value\", \"ratio_to_report\", \"dense_rank\", \"ntile\", \"percent_rank\", \"rank\", \"row_number\", \"case\",\n        \"coalesce\", \"decode\", \"greatest\", \"least\", \"nvl\", \"nvl2\", \"nullif\", \"add_months\", \"at time zone\", \"convert_timezone\",\n        \"current_date\", \"date_cmp\", \"date_cmp_timestamp\", \"date_cmp_timestamptz\", \"date_part_year\", \"dateadd\", \"datediff\",\n        \"date_part\", \"date_trunc\", \"extract\", \"getdate\", \"interval_cmp\", \"last_day\", \"months_between\", \"next_day\", \"sysdate\",\n        \"timeofday\", \"timestamp_cmp\", \"timestamp_cmp_date\", \"timestamp_cmp_timestamptz\", \"timestamptz_cmp\", \"timestamptz_cmp_date\",\n        \"timestamptz_cmp_timestamp\", \"timezone\", \"to_timestamp\", \"trunc\", \"abs\", \"acos\", \"asin\", \"atan\", \"atan2\", \"cbrt\", \"ceil\",\n        \"ceiling\", \"checksum\", \"cos\", \"cot\", \"degrees\", \"dexp\", \"dlog1\", \"dlog10\", \"exp\", \"floor\", \"ln\", \"log\", \"mod\", \"pi\", \"power\",\n        \"radians\", \"random\", \"round\", \"sin\", \"sign\", \"sqrt\", \"tan\", \"to_hex\", \"bpcharcmp\", \"btrim\", \"bttext_pattern_cmp\", \"char_length\",\n        \"character_length\", \"charindex\", \"chr\", \"concat\", \"crc32\", \"func_sha1\", \"initcap\", \"left and rights\", \"len\", \"length\", \"lower\",\n        \"lpad and rpads\", \"ltrim\", \"md5\", \"octet_length\", \"position\", \"quote_ident\", \"quote_literal\", \"regexp_count\", \"regexp_instr\",\n        \"regexp_replace\", \"regexp_substr\", \"repeat\", \"replace\", \"replicate\", \"reverse\", \"rtrim\", \"split_part\", \"strpos\", \"strtol\",\n        \"substring\", \"textlen\", \"translate\", \"trim\", \"upper\", \"cast\", \"convert\", \"to_char\", \"to_date\", \"to_number\", \"json_array_length\",\n        \"json_extract_array_element_text\", \"json_extract_path_text\", \"current_setting\", \"pg_cancel_backend\", \"pg_terminate_backend\",\n        \"set_config\", \"current_database\", \"current_user\", \"current_user_id\", \"pg_backend_pid\", \"pg_last_copy_count\", \"pg_last_copy_id\",\n        \"pg_last_query_id\", \"pg_last_unload_count\", \"session_user\", \"slice_num\", \"user\", \"version\", \"abbrev\", \"acosd\", \"any\", \"area\",\n        \"array_agg\", \"array_append\", \"array_cat\", \"array_dims\", \"array_fill\", \"array_length\", \"array_lower\", \"array_ndims\",\n        \"array_position\", \"array_positions\", \"array_prepend\", \"array_remove\", \"array_replace\", \"array_to_json\", \"array_to_string\",\n        \"array_to_tsvector\", \"array_upper\", \"asind\", \"atan2d\", \"atand\", \"bit\", \"bit_length\", \"bound_box\", \"box\",\n        \"brin_summarize_new_values\", \"broadcast\", \"cardinality\", \"center\", \"circle\", \"clock_timestamp\", \"col_description\", \"concat_ws\",\n        \"convert_from\", \"convert_to\", \"corr\", \"cosd\", \"cotd\", \"covar_pop\", \"covar_samp\", \"current_catalog\", \"current_query\",\n        \"current_role\", \"currval\", \"cursor_to_xml\", \"diameter\", \"div\", \"encode\", \"enum_first\", \"enum_last\", \"enum_range\", \"every\",\n        \"family\", \"format\", \"format_type\", \"generate_series\", \"generate_subscripts\", \"get_current_ts_config\", \"gin_clean_pending_list\",\n        \"grouping\", \"has_any_column_privilege\", \"has_column_privilege\", \"has_foreign_data_wrapper_privilege\", \"has_function_privilege\",\n        \"has_language_privilege\", \"has_sequence_privilege\", \"has_server_privilege\", \"has_tablespace_privilege\", \"has_type_privilege\",\n        \"height\", \"host\", \"hostmask\", \"inet_client_addr\", \"inet_client_port\", \"inet_merge\", \"inet_same_family\", \"inet_server_addr\",\n        \"inet_server_port\", \"isclosed\", \"isempty\", \"isopen\", \"json_agg\", \"json_object\", \"json_object_agg\", \"json_populate_record\",\n        \"json_populate_recordset\", \"json_to_record\", \"json_to_recordset\", \"jsonb_agg\", \"jsonb_object_agg\", \"justify_days\", \"justify_hours\",\n        \"justify_interval\", \"lastval\", \"left\", \"line\", \"localtimestamp\", \"lower_inc\", \"lower_inf\", \"lpad\", \"lseg\", \"make_date\",\n        \"make_interval\", \"make_time\", \"make_timestamp\", \"make_timestamptz\", \"masklen\", \"mode\", \"netmask\", \"network\", \"nextval\", \"npoints\",\n        \"num_nonnulls\", \"num_nulls\", \"numnode\", \"obj_description\", \"overlay\", \"parse_ident\", \"path\", \"pclose\", \"percentile_disc\",\n        \"pg_advisory_lock\", \"pg_advisory_lock_shared\", \"pg_advisory_unlock\", \"pg_advisory_unlock_all\", \"pg_advisory_unlock_shared\",\n        \"pg_advisory_xact_lock\", \"pg_advisory_xact_lock_shared\", \"pg_backup_start_time\", \"pg_blocking_pids\", \"pg_client_encoding\",\n        \"pg_collation_is_visible\", \"pg_column_size\", \"pg_conf_load_time\", \"pg_control_checkpoint\", \"pg_control_init\", \"pg_control_recovery\",\n        \"pg_control_system\", \"pg_conversion_is_visible\", \"pg_create_logical_replication_slot\", \"pg_create_physical_replication_slot\",\n        \"pg_create_restore_point\", \"pg_current_xlog_flush_location\", \"pg_current_xlog_insert_location\", \"pg_current_xlog_location\",\n        \"pg_database_size\", \"pg_describe_object\", \"pg_drop_replication_slot\", \"pg_export_snapshot\", \"pg_filenode_relation\",\n        \"pg_function_is_visible\", \"pg_get_constraintdef\", \"pg_get_expr\", \"pg_get_function_arguments\", \"pg_get_function_identity_arguments\",\n        \"pg_get_function_result\", \"pg_get_functiondef\", \"pg_get_indexdef\", \"pg_get_keywords\", \"pg_get_object_address\",\n        \"pg_get_owned_sequence\", \"pg_get_ruledef\", \"pg_get_serial_sequence\", \"pg_get_triggerdef\", \"pg_get_userbyid\", \"pg_get_viewdef\",\n        \"pg_has_role\", \"pg_identify_object\", \"pg_identify_object_as_address\", \"pg_index_column_has_property\", \"pg_index_has_property\",\n        \"pg_indexam_has_property\", \"pg_indexes_size\", \"pg_is_in_backup\", \"pg_is_in_recovery\", \"pg_is_other_temp_schema\",\n        \"pg_is_xlog_replay_paused\", \"pg_last_committed_xact\", \"pg_last_xact_replay_timestamp\", \"pg_last_xlog_receive_location\",\n        \"pg_last_xlog_replay_location\", \"pg_listening_channels\", \"pg_logical_emit_message\", \"pg_logical_slot_get_binary_changes\",\n        \"pg_logical_slot_get_changes\", \"pg_logical_slot_peek_binary_changes\", \"pg_logical_slot_peek_changes\", \"pg_ls_dir\",\n        \"pg_my_temp_schema\", \"pg_notification_queue_usage\", \"pg_opclass_is_visible\", \"pg_operator_is_visible\", \"pg_opfamily_is_visible\",\n        \"pg_options_to_table\", \"pg_postmaster_start_time\", \"pg_read_binary_file\", \"pg_read_file\", \"pg_relation_filenode\",\n        \"pg_relation_filepath\", \"pg_relation_size\", \"pg_reload_conf\", \"pg_replication_origin_create\", \"pg_replication_origin_drop\",\n        \"pg_replication_origin_oid\", \"pg_replication_origin_progress\", \"pg_replication_origin_session_is_setup\",\n        \"pg_replication_origin_session_progress\", \"pg_replication_origin_session_reset\", \"pg_replication_origin_session_setup\",\n        \"pg_replication_origin_xact_reset\", \"pg_replication_origin_xact_setup\", \"pg_rotate_logfile\", \"pg_size_bytes\", \"pg_size_pretty\",\n        \"pg_sleep\", \"pg_sleep_for\", \"pg_sleep_until\", \"pg_start_backup\", \"pg_stat_file\", \"pg_stop_backup\", \"pg_switch_xlog\",\n        \"pg_table_is_visible\", \"pg_table_size\", \"pg_tablespace_databases\", \"pg_tablespace_location\", \"pg_tablespace_size\",\n        \"pg_total_relation_size\", \"pg_trigger_depth\", \"pg_try_advisory_lock\", \"pg_try_advisory_lock_shared\", \"pg_try_advisory_xact_lock\",\n        \"pg_try_advisory_xact_lock_shared\", \"pg_ts_config_is_visible\", \"pg_ts_dict_is_visible\", \"pg_ts_parser_is_visible\",\n        \"pg_ts_template_is_visible\", \"pg_type_is_visible\", \"pg_typeof\", \"pg_xact_commit_timestamp\", \"pg_xlog_location_diff\",\n        \"pg_xlog_replay_pause\", \"pg_xlog_replay_resume\", \"pg_xlogfile_name\", \"pg_xlogfile_name_offset\", \"phraseto_tsquery\",\n        \"plainto_tsquery\", \"point\", \"polygon\", \"popen\", \"pqserverversion\", \"query_to_xml\", \"querytree\", \"quote_nullable\", \"radius\",\n        \"range_merge\", \"regexp_matches\", \"regexp_split_to_array\", \"regexp_split_to_table\", \"regr_avgx\", \"regr_avgy\", \"regr_count\",\n        \"regr_intercept\", \"regr_r2\", \"regr_slope\", \"regr_sxx\", \"regr_sxy\", \"regr_syy\", \"right\", \"row_security_active\", \"row_to_json\",\n        \"rpad\", \"scale\", \"set_masklen\", \"setseed\", \"setval\", \"setweight\", \"shobj_description\", \"sind\", \"sprintf\", \"statement_timestamp\",\n        \"stddev\", \"string_agg\", \"string_to_array\", \"strip\", \"substr\", \"table_to_xml\", \"table_to_xml_and_xmlschema\", \"tand\", \"text\",\n        \"to_json\", \"to_regclass\", \"to_regnamespace\", \"to_regoper\", \"to_regoperator\", \"to_regproc\", \"to_regprocedure\", \"to_regrole\",\n        \"to_regtype\", \"to_tsquery\", \"to_tsvector\", \"transaction_timestamp\", \"ts_debug\", \"ts_delete\", \"ts_filter\", \"ts_headline\",\n        \"ts_lexize\", \"ts_parse\", \"ts_rank\", \"ts_rank_cd\", \"ts_rewrite\", \"ts_stat\", \"ts_token_type\", \"tsquery_phrase\", \"tsvector_to_array\",\n        \"tsvector_update_trigger\", \"tsvector_update_trigger_column\", \"txid_current\", \"txid_current_snapshot\", \"txid_snapshot_xip\",\n        \"txid_snapshot_xmax\", \"txid_snapshot_xmin\", \"txid_visible_in_snapshot\", \"unnest\", \"upper_inc\", \"upper_inf\", \"variance\", \"width\",\n        \"width_bucket\", \"xml_is_well_formed\", \"xml_is_well_formed_content\", \"xml_is_well_formed_document\", \"xmlagg\", \"xmlcomment\",\n        \"xmlconcat\", \"xmlelement\", \"xmlexists\", \"xmlforest\", \"xmlparse\", \"xmlpi\", \"xmlroot\", \"xmlserialize\", \"xpath\", \"xpath_exists\"\n    ],\n    builtinVariables: [],\n    pseudoColumns: [],\n    tokenizer: {\n        root: [\n            { include: '@comments' },\n            { include: '@whitespace' },\n            { include: '@pseudoColumns' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            { include: '@complexIdentifiers' },\n            { include: '@scopes' },\n            [/[;,.]/, 'delimiter'],\n            [/[()]/, '@brackets'],\n            [/[\\w@#$]+/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@operators': 'operator',\n                        '@builtinVariables': 'predefined',\n                        '@builtinFunctions': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            [/[<>=!%&+\\-*/|~^]/, 'operator'],\n        ],\n        whitespace: [\n            [/\\s+/, 'white']\n        ],\n        comments: [\n            [/--+.*/, 'comment'],\n            [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\n        ],\n        comment: [\n            [/[^*/]+/, 'comment'],\n            // Not supporting nested comments, as nested comments seem to not be standard?\n            // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\n            // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\n            [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\n            [/./, 'comment']\n        ],\n        pseudoColumns: [\n            [/[$][A-Za-z_][\\w@#$]*/, {\n                    cases: {\n                        '@pseudoColumns': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n        ],\n        numbers: [\n            [/0[xX][0-9a-fA-F]*/, 'number'],\n            [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\n            [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\n        ],\n        strings: [\n            [/'/, { token: 'string', next: '@string' }],\n        ],\n        string: [\n            [/[^']+/, 'string'],\n            [/''/, 'string'],\n            [/'/, { token: 'string', next: '@pop' }]\n        ],\n        complexIdentifiers: [\n            [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\n        ],\n        quotedIdentifier: [\n            [/[^\"]+/, 'identifier'],\n            [/\"\"/, 'identifier'],\n            [/\"/, { token: 'identifier.quote', next: '@pop' }]\n        ],\n        scopes: []\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//'\n    },\n    brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n    autoClosingPairs: [\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n    ],\n    folding: {\n        offSide: true\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.pug',\n    ignoreCase: true,\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.array', open: '[', close: ']' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\n    ],\n    keywords: ['append', 'block', 'case', 'default', 'doctype', 'each', 'else', 'extends',\n        'for', 'if', 'in', 'include', 'mixin', 'typeof', 'unless', 'var', 'when'],\n    tags: [\n        'a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio',\n        'b', 'base', 'basefont', 'bdi', 'bdo', 'blockquote', 'body', 'br', 'button',\n        'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'command',\n        'datalist', 'dd', 'del', 'details', 'dfn', 'div', 'dl', 'dt',\n        'em', 'embed',\n        'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'frame', 'frameset',\n        'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html',\n        'i', 'iframe', 'img', 'input', 'ins',\n        'keygen', 'kbd',\n        'label', 'li', 'link',\n        'map', 'mark', 'menu', 'meta', 'meter',\n        'nav', 'noframes', 'noscript',\n        'object', 'ol', 'optgroup', 'option', 'output',\n        'p', 'param', 'pre', 'progress',\n        'q',\n        'rp', 'rt', 'ruby',\n        's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup',\n        'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'tracks', 'tt',\n        'u', 'ul',\n        'video',\n        'wbr'\n    ],\n    // we include these common regular expressions\n    symbols: /[\\+\\-\\*\\%\\&\\|\\!\\=\\/\\.\\,\\:]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    tokenizer: {\n        root: [\n            // Tag or a keyword at start\n            [/^(\\s*)([a-zA-Z_-][\\w-]*)/,\n                {\n                    cases: {\n                        '$2@tags': {\n                            cases: {\n                                '@eos': ['', 'tag'],\n                                '@default': ['', { token: 'tag', next: '@tag.$1' },]\n                            }\n                        },\n                        '$2@keywords': ['', { token: 'keyword.$2' },],\n                        '@default': ['', '',]\n                    }\n                }\n            ],\n            // id\n            [/^(\\s*)(#[a-zA-Z_-][\\w-]*)/, {\n                    cases: {\n                        '@eos': ['', 'tag.id'],\n                        '@default': ['', { token: 'tag.id', next: '@tag.$1' }]\n                    }\n                }],\n            // class\n            [/^(\\s*)(\\.[a-zA-Z_-][\\w-]*)/, {\n                    cases: {\n                        '@eos': ['', 'tag.class'],\n                        '@default': ['', { token: 'tag.class', next: '@tag.$1' }]\n                    }\n                }],\n            // plain text with pipe\n            [/^(\\s*)(\\|.*)$/, ''],\n            { include: '@whitespace' },\n            // keywords\n            [/[a-zA-Z_$][\\w$]*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': ''\n                    }\n                }],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/\\d+/, 'number'],\n            // strings:\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', '@string.\\''],\n        ],\n        tag: [\n            [/(\\.)(\\s*$)/, [{ token: 'delimiter', next: '@blockText.$S2.' }, '']],\n            [/\\s+/, { token: '', next: '@simpleText' }],\n            // id\n            [/#[a-zA-Z_-][\\w-]*/, {\n                    cases: {\n                        '@eos': { token: 'tag.id', next: '@pop' },\n                        '@default': 'tag.id'\n                    }\n                }],\n            // class\n            [/\\.[a-zA-Z_-][\\w-]*/, {\n                    cases: {\n                        '@eos': { token: 'tag.class', next: '@pop' },\n                        '@default': 'tag.class'\n                    }\n                }],\n            // attributes\n            [/\\(/, { token: 'delimiter.parenthesis', next: '@attributeList' }],\n        ],\n        simpleText: [\n            [/[^#]+$/, { token: '', next: '@popall' }],\n            [/[^#]+/, { token: '' }],\n            // interpolation\n            [/(#{)([^}]*)(})/, {\n                    cases: {\n                        '@eos': ['interpolation.delimiter', 'interpolation', { token: 'interpolation.delimiter', next: '@popall' }],\n                        '@default': ['interpolation.delimiter', 'interpolation', 'interpolation.delimiter']\n                    }\n                }],\n            [/#$/, { token: '', next: '@popall' }],\n            [/#/, '']\n        ],\n        attributeList: [\n            [/\\s+/, ''],\n            [/(\\w+)(\\s*=\\s*)(\"|')/, ['attribute.name', 'delimiter', { token: 'attribute.value', next: '@value.$3' }]],\n            [/\\w+/, 'attribute.name'],\n            [/,/, {\n                    cases: {\n                        '@eos': { token: 'attribute.delimiter', next: '@popall' },\n                        '@default': 'attribute.delimiter'\n                    }\n                }],\n            [/\\)$/, { token: 'delimiter.parenthesis', next: '@popall' }],\n            [/\\)/, { token: 'delimiter.parenthesis', next: '@pop' }],\n        ],\n        whitespace: [\n            [/^(\\s*)(\\/\\/.*)$/, { token: 'comment', next: '@blockText.$1.comment' }],\n            [/[ \\t\\r\\n]+/, ''],\n            [/<!--/, { token: 'comment', next: '@comment' }],\n        ],\n        blockText: [\n            [/^\\s+.*$/, {\n                    cases: {\n                        '($S2\\\\s+.*$)': { token: '$S3' },\n                        '@default': { token: '@rematch', next: '@popall' }\n                    }\n                }],\n            [/./, { token: '@rematch', next: '@popall' }]\n        ],\n        comment: [\n            [/[^<\\-]+/, 'comment.content'],\n            [/-->/, { token: 'comment', next: '@pop' }],\n            [/<!--/, 'comment.content.invalid'],\n            [/[<\\-]/, 'comment.content']\n        ],\n        string: [\n            [/[^\\\\\"'#]+/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/@escapes/, {\n                    cases: {\n                        '@eos': { token: 'string.escape', next: '@popall' },\n                        '@default': 'string.escape'\n                    }\n                }],\n            [/\\\\./, {\n                    cases: {\n                        '@eos': { token: 'string.escape.invalid', next: '@popall' },\n                        '@default': 'string.escape.invalid'\n                    }\n                }],\n            // interpolation\n            [/(#{)([^}]*)(})/, ['interpolation.delimiter', 'interpolation', 'interpolation.delimiter']],\n            [/#/, 'string'],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': { token: 'string' }\n                    }\n                }],\n        ],\n        // Almost identical to above, except for escapes and the output token\n        value: [\n            [/[^\\\\\"']+/, {\n                    cases: {\n                        '@eos': { token: 'attribute.value', next: '@popall' },\n                        '@default': 'attribute.value'\n                    }\n                }],\n            [/\\\\./, {\n                    cases: {\n                        '@eos': { token: 'attribute.value', next: '@popall' },\n                        '@default': 'attribute.value'\n                    }\n                }],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'attribute.value', next: '@pop' },\n                        '@default': { token: 'attribute.value' }\n                    }\n                }],\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Artyom Shalkhakov. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *\n *  Based on the ATS/Postiats lexer by Hongwei Xi.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['(*', '*)'],\n    },\n    brackets: [['{', '}'], ['[', ']'], ['(', ')'], ['<', '>']],\n    autoClosingPairs: [\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n    ]\n};\nexport var language = {\n    tokenPostfix: '.pats',\n    // TODO: staload and dynload are followed by a special kind of string literals\n    // with {$IDENTIFER} variables, and it also may make sense to highlight\n    // the punctuation (. and / and \\) differently.\n    // Set defaultToken to invalid to see what you do not tokenize yet\n    defaultToken: 'invalid',\n    // keyword reference: https://github.com/githwxi/ATS-Postiats/blob/master/src/pats_lexing_token.dats\n    keywords: [\n        //\n        \"abstype\",\n        \"abst0ype\",\n        \"absprop\",\n        \"absview\",\n        \"absvtype\",\n        \"absviewtype\",\n        \"absvt0ype\",\n        \"absviewt0ype\",\n        //\n        \"as\",\n        //\n        \"and\",\n        //\n        \"assume\",\n        //\n        \"begin\",\n        //\n        /*\n                \"case\", // CASE\n        */\n        //\n        \"classdec\",\n        //\n        \"datasort\",\n        //\n        \"datatype\",\n        \"dataprop\",\n        \"dataview\",\n        \"datavtype\",\n        \"dataviewtype\",\n        //\n        \"do\",\n        //\n        \"end\",\n        //\n        \"extern\",\n        \"extype\",\n        \"extvar\",\n        //\n        \"exception\",\n        //\n        \"fn\",\n        \"fnx\",\n        \"fun\",\n        //\n        \"prfn\",\n        \"prfun\",\n        //\n        \"praxi\",\n        \"castfn\",\n        //\n        \"if\",\n        \"then\",\n        \"else\",\n        //\n        \"ifcase\",\n        //\n        \"in\",\n        //\n        \"infix\",\n        \"infixl\",\n        \"infixr\",\n        \"prefix\",\n        \"postfix\",\n        //\n        \"implmnt\",\n        \"implement\",\n        //\n        \"primplmnt\",\n        \"primplement\",\n        //\n        \"import\",\n        //\n        /*\n                \"lam\", // LAM\n                \"llam\", // LLAM\n                \"fix\", // FIX\n        */\n        //\n        \"let\",\n        //\n        \"local\",\n        //\n        \"macdef\",\n        \"macrodef\",\n        //\n        \"nonfix\",\n        //\n        \"symelim\",\n        \"symintr\",\n        \"overload\",\n        //\n        \"of\",\n        \"op\",\n        //\n        \"rec\",\n        //\n        \"sif\",\n        \"scase\",\n        //\n        \"sortdef\",\n        /*\n        // HX: [sta] is now deprecated\n        */\n        \"sta\",\n        \"stacst\",\n        \"stadef\",\n        \"static\",\n        /*\n                \"stavar\", // T_STAVAR\n        */\n        //\n        \"staload\",\n        \"dynload\",\n        //\n        \"try\",\n        //\n        \"tkindef\",\n        //\n        /*\n                \"type\", // TYPE\n        */\n        \"typedef\",\n        \"propdef\",\n        \"viewdef\",\n        \"vtypedef\",\n        \"viewtypedef\",\n        //\n        /*\n                \"val\", // VAL\n        */\n        \"prval\",\n        //\n        \"var\",\n        \"prvar\",\n        //\n        \"when\",\n        \"where\",\n        //\n        /*\n                \"for\", // T_FOR\n                \"while\", // T_WHILE\n        */\n        //\n        \"with\",\n        //\n        \"withtype\",\n        \"withprop\",\n        \"withview\",\n        \"withvtype\",\n        \"withviewtype\",\n    ],\n    keywords_dlr: [\n        \"$delay\",\n        \"$ldelay\",\n        //\n        \"$arrpsz\",\n        \"$arrptrsize\",\n        //\n        \"$d2ctype\",\n        //\n        \"$effmask\",\n        \"$effmask_ntm\",\n        \"$effmask_exn\",\n        \"$effmask_ref\",\n        \"$effmask_wrt\",\n        \"$effmask_all\",\n        //\n        \"$extern\",\n        \"$extkind\",\n        \"$extype\",\n        \"$extype_struct\",\n        //\n        \"$extval\",\n        \"$extfcall\",\n        \"$extmcall\",\n        //\n        \"$literal\",\n        //\n        \"$myfilename\",\n        \"$mylocation\",\n        \"$myfunction\",\n        //\n        \"$lst\",\n        \"$lst_t\",\n        \"$lst_vt\",\n        \"$list\",\n        \"$list_t\",\n        \"$list_vt\",\n        //\n        \"$rec\",\n        \"$rec_t\",\n        \"$rec_vt\",\n        \"$record\",\n        \"$record_t\",\n        \"$record_vt\",\n        //\n        \"$tup\",\n        \"$tup_t\",\n        \"$tup_vt\",\n        \"$tuple\",\n        \"$tuple_t\",\n        \"$tuple_vt\",\n        //\n        \"$break\",\n        \"$continue\",\n        //\n        \"$raise\",\n        //\n        \"$showtype\",\n        //\n        \"$vcopyenv_v\",\n        \"$vcopyenv_vt\",\n        //\n        \"$tempenver\",\n        //\n        \"$solver_assert\",\n        \"$solver_verify\",\n    ],\n    keywords_srp: [\n        //\n        \"#if\",\n        \"#ifdef\",\n        \"#ifndef\",\n        //\n        \"#then\",\n        //\n        \"#elif\",\n        \"#elifdef\",\n        \"#elifndef\",\n        //\n        \"#else\",\n        \"#endif\",\n        //\n        \"#error\",\n        //\n        \"#prerr\",\n        \"#print\",\n        //\n        \"#assert\",\n        //\n        \"#undef\",\n        \"#define\",\n        //\n        \"#include\",\n        \"#require\",\n        //\n        \"#pragma\",\n        \"#codegen2\",\n        \"#codegen3\",\n    ],\n    irregular_keyword_list: [\n        \"val+\",\n        \"val-\",\n        \"val\",\n        \"case+\",\n        \"case-\",\n        \"case\",\n        \"addr@\",\n        \"addr\",\n        \"fold@\",\n        \"free@\",\n        \"fix@\",\n        \"fix\",\n        \"lam@\",\n        \"lam\",\n        \"llam@\",\n        \"llam\",\n        \"viewt@ype+\",\n        \"viewt@ype-\",\n        \"viewt@ype\",\n        \"viewtype+\",\n        \"viewtype-\",\n        \"viewtype\",\n        \"view+\",\n        \"view-\",\n        \"view@\",\n        \"view\",\n        \"type+\",\n        \"type-\",\n        \"type\",\n        \"vtype+\",\n        \"vtype-\",\n        \"vtype\",\n        \"vt@ype+\",\n        \"vt@ype-\",\n        \"vt@ype\",\n        \"viewt@ype+\",\n        \"viewt@ype-\",\n        \"viewt@ype\",\n        \"viewtype+\",\n        \"viewtype-\",\n        \"viewtype\",\n        \"prop+\",\n        \"prop-\",\n        \"prop\",\n        \"type+\",\n        \"type-\",\n        \"type\",\n        \"t@ype\",\n        \"t@ype+\",\n        \"t@ype-\",\n        \"abst@ype\",\n        \"abstype\",\n        \"absviewt@ype\",\n        \"absvt@ype\",\n        \"for*\",\n        \"for\",\n        \"while*\",\n        \"while\"\n    ],\n    keywords_types: [\n        'bool',\n        'double',\n        'byte',\n        'int',\n        'short',\n        'char',\n        'void',\n        'unit',\n        'long',\n        'float',\n        'string',\n        'strptr'\n    ],\n    // TODO: reference for this?\n    keywords_effects: [\n        \"0\",\n        \"fun\",\n        \"clo\",\n        \"prf\",\n        \"funclo\",\n        \"cloptr\",\n        \"cloref\",\n        \"ref\",\n        \"ntm\",\n        \"1\" // all effects\n    ],\n    operators: [\n        \"@\",\n        \"!\",\n        \"|\",\n        \"`\",\n        \":\",\n        \"$\",\n        \".\",\n        \"=\",\n        \"#\",\n        \"~\",\n        //\n        \"..\",\n        \"...\",\n        //\n        \"=>\",\n        // \"=<\", // T_EQLT\n        \"=<>\",\n        \"=/=>\",\n        \"=>>\",\n        \"=/=>>\",\n        //\n        \"<\",\n        \">\",\n        //\n        \"><\",\n        //\n        \".<\",\n        \">.\",\n        //\n        \".<>.\",\n        //\n        \"->\",\n        //\"-<\", // T_MINUSLT\n        \"-<>\",\n    ],\n    brackets: [\n        { open: ',(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '`(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '%(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '\\'(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '\\'{', close: '}', token: 'delimiter.parenthesis' },\n        { open: '@(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '@{', close: '}', token: 'delimiter.brace' },\n        { open: '@[', close: ']', token: 'delimiter.square' },\n        { open: '#[', close: ']', token: 'delimiter.square' },\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '<', close: '>', token: 'delimiter.angle' }\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    IDENTFST: /[a-zA-Z_]/,\n    IDENTRST: /[a-zA-Z0-9_'$]/,\n    symbolic: /[%&+-./:=@~`^|*!$#?<>]/,\n    digit: /[0-9]/,\n    digitseq0: /@digit*/,\n    xdigit: /[0-9A-Za-z]/,\n    xdigitseq0: /@xdigit*/,\n    INTSP: /[lLuU]/,\n    FLOATSP: /[fFlL]/,\n    fexponent: /[eE][+-]?[0-9]+/,\n    fexponent_bin: /[pP][+-]?[0-9]+/,\n    deciexp: /\\.[0-9]*@fexponent?/,\n    hexiexp: /\\.[0-9a-zA-Z]*@fexponent_bin?/,\n    irregular_keywords: /val[+-]?|case[+-]?|addr\\@?|fold\\@|free\\@|fix\\@?|lam\\@?|llam\\@?|prop[+-]?|type[+-]?|view[+-@]?|viewt@?ype[+-]?|t@?ype[+-]?|v(iew)?t@?ype[+-]?|abst@?ype|absv(iew)?t@?ype|for\\*?|while\\*?/,\n    ESCHAR: /[ntvbrfa\\\\\\?'\"\\(\\[\\{]/,\n    start: 'root',\n    // The main tokenizer for ATS/Postiats\n    // reference: https://github.com/githwxi/ATS-Postiats/blob/master/src/pats_lexing.dats\n    tokenizer: {\n        root: [\n            // lexing_blankseq0\n            { regex: /[ \\t\\r\\n]+/, action: { token: '' } },\n            // NOTE: (*) is an invalid ML-like comment!\n            { regex: /\\(\\*\\)/, action: { token: 'invalid' } },\n            { regex: /\\(\\*/, action: { token: 'comment', next: 'lexing_COMMENT_block_ml' } },\n            { regex: /\\(/, action: '@brackets' /*{ token: 'delimiter.parenthesis' }*/ },\n            { regex: /\\)/, action: '@brackets' /*{ token: 'delimiter.parenthesis' }*/ },\n            { regex: /\\[/, action: '@brackets' /*{ token: 'delimiter.bracket' }*/ },\n            { regex: /\\]/, action: '@brackets' /*{ token: 'delimiter.bracket' }*/ },\n            { regex: /\\{/, action: '@brackets' /*{ token: 'delimiter.brace' }*/ },\n            { regex: /\\}/, action: '@brackets' /*{ token: 'delimiter.brace' }*/ },\n            // lexing_COMMA\n            { regex: /,\\(/, action: '@brackets' /*{ token: 'delimiter.parenthesis' }*/ },\n            { regex: /,/, action: { token: 'delimiter.comma' } },\n            { regex: /;/, action: { token: 'delimiter.semicolon' } },\n            // lexing_AT\n            { regex: /@\\(/, action: '@brackets' /* { token: 'delimiter.parenthesis' }*/ },\n            { regex: /@\\[/, action: '@brackets' /* { token: 'delimiter.bracket' }*/ },\n            { regex: /@\\{/, action: '@brackets' /*{ token: 'delimiter.brace' }*/ },\n            // lexing_COLON\n            { regex: /:</, action: { token: 'keyword', next: '@lexing_EFFECT_commaseq0' } },\n            /*\n            lexing_DOT:\n\n            . // SYMBOLIC => lexing_IDENT_sym\n            . FLOATDOT => lexing_FLOAT_deciexp\n            . DIGIT => T_DOTINT\n            */\n            { regex: /\\.@symbolic+/, action: { token: 'identifier.sym' } },\n            // FLOATDOT case\n            { regex: /\\.@digit*@fexponent@FLOATSP*/, action: { token: 'number.float' } },\n            { regex: /\\.@digit+/, action: { token: 'number.float' } },\n            // lexing_DOLLAR:\n            // '$' IDENTFST IDENTRST* => lexing_IDENT_dlr, _ => lexing_IDENT_sym\n            {\n                regex: /\\$@IDENTFST@IDENTRST*/,\n                action: {\n                    cases: {\n                        '@keywords_dlr': { token: 'keyword.dlr' },\n                        '@default': { token: 'namespace' },\n                    }\n                }\n            },\n            // lexing_SHARP:\n            // '#' IDENTFST IDENTRST* => lexing_ident_srp, _ => lexing_IDENT_sym\n            {\n                regex: /\\#@IDENTFST@IDENTRST*/,\n                action: {\n                    cases: {\n                        '@keywords_srp': { token: 'keyword.srp' },\n                        '@default': { token: 'identifier' },\n                    }\n                }\n            },\n            // lexing_PERCENT:\n            { regex: /%\\(/, action: { token: 'delimiter.parenthesis' } },\n            { regex: /^%{(#|\\^|\\$)?/, action: { token: 'keyword', next: '@lexing_EXTCODE', nextEmbedded: 'text/javascript' } },\n            { regex: /^%}/, action: { token: 'keyword' } },\n            // lexing_QUOTE\n            { regex: /'\\(/, action: { token: 'delimiter.parenthesis' } },\n            { regex: /'\\[/, action: { token: 'delimiter.bracket' } },\n            { regex: /'\\{/, action: { token: 'delimiter.brace' } },\n            [/(')(\\\\@ESCHAR|\\\\[xX]@xdigit+|\\\\@digit+)(')/, ['string', 'string.escape', 'string']],\n            [/'[^\\\\']'/, 'string'],\n            // lexing_DQUOTE\n            [/\"/, 'string.quote', '@lexing_DQUOTE'],\n            // lexing_BQUOTE\n            { regex: /`\\(/, action: '@brackets' /* { token: 'delimiter.parenthesis' }*/ },\n            // TODO: otherwise, try lexing_IDENT_sym\n            { regex: /\\\\/, action: { token: 'punctuation' } },\n            // lexing_IDENT_alp:\n            // NOTE: (?!regex) is syntax for \"not-followed-by\" regex\n            // to resolve ambiguity such as foreach$fwork being incorrectly lexed as [for] [each$fwork]!\n            { regex: /@irregular_keywords(?!@IDENTRST)/, action: { token: 'keyword' } },\n            {\n                regex: /@IDENTFST@IDENTRST*[<!\\[]?/,\n                action: {\n                    cases: {\n                        // TODO: dynload and staload should be specially parsed\n                        // dynload whitespace+ \"special_string\"\n                        // this special string is really:\n                        //  '/' '\\\\' '.' => punctuation\n                        // ({\\$)([a-zA-Z_][a-zA-Z_0-9]*)(}) => punctuation,keyword,punctuation\n                        // [^\"] => identifier/literal\n                        '@keywords': { token: 'keyword' },\n                        '@keywords_types': { token: 'type' },\n                        '@default': { token: 'identifier' }\n                    }\n                }\n            },\n            // lexing_IDENT_sym:\n            { regex: /\\/\\/\\/\\//, action: { token: 'comment', next: '@lexing_COMMENT_rest' } },\n            { regex: /\\/\\/.*$/, action: { token: 'comment' } },\n            { regex: /\\/\\*/, action: { token: 'comment', next: '@lexing_COMMENT_block_c' } },\n            // AS-20160627: specifically for effect annotations\n            { regex: /-<|=</, action: { token: 'keyword', next: '@lexing_EFFECT_commaseq0' } },\n            {\n                regex: /@symbolic+/,\n                action: {\n                    cases: {\n                        '@operators': 'keyword',\n                        '@default': 'operator'\n                    }\n                }\n            },\n            // lexing_ZERO:\n            // FIXME: this one is quite messy/unfinished yet\n            // TODO: lexing_INT_hex\n            // - testing_hexiexp => lexing_FLOAT_hexiexp\n            // - testing_fexponent_bin => lexing_FLOAT_hexiexp\n            // - testing_intspseq0 => T_INT_hex\n            // lexing_INT_hex:\n            { regex: /0[xX]@xdigit+(@hexiexp|@fexponent_bin)@FLOATSP*/, action: { token: 'number.float' } },\n            { regex: /0[xX]@xdigit+@INTSP*/, action: { token: 'number.hex' } },\n            { regex: /0[0-7]+(?![0-9])@INTSP*/, action: { token: 'number.octal' } },\n            //{regex: /0/, action: { token: 'number' } }, // INTZERO\n            // lexing_INT_dec:\n            // - testing_deciexp => lexing_FLOAT_deciexp\n            // - testing_fexponent => lexing_FLOAT_deciexp\n            // - otherwise => intspseq0 ([0-9]*[lLuU]?)\n            { regex: /@digit+(@fexponent|@deciexp)@FLOATSP*/, action: { token: 'number.float' } },\n            { regex: /@digit@digitseq0@INTSP*/, action: { token: 'number.decimal' } },\n            // DIGIT, if followed by digitseq0, is lexing_INT_dec\n            { regex: /@digit+@INTSP*/, action: { token: 'number' } },\n        ],\n        lexing_COMMENT_block_ml: [\n            [/[^\\(\\*]+/, 'comment'],\n            [/\\(\\*/, 'comment', '@push'],\n            [/\\(\\*/, 'comment.invalid'],\n            [/\\*\\)/, 'comment', '@pop'],\n            [/\\*/, 'comment']\n        ],\n        lexing_COMMENT_block_c: [\n            [/[^\\/*]+/, 'comment'],\n            // [/\\/\\*/, 'comment', '@push' ],    // nested C-style block comments not allowed\n            // [/\\/\\*/,    'comment.invalid' ],\t// NOTE: this breaks block comments in the shape of /* //*/\n            [/\\*\\//, 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        lexing_COMMENT_rest: [\n            [/$/, 'comment', '@pop'],\n            [/.*/, 'comment']\n        ],\n        // NOTE: added by AS, specifically for highlighting\n        lexing_EFFECT_commaseq0: [\n            {\n                regex: /@IDENTFST@IDENTRST+|@digit+/,\n                action: {\n                    cases: {\n                        '@keywords_effects': { token: 'type.effect' },\n                        '@default': { token: 'identifier' }\n                    }\n                }\n            },\n            { regex: /,/, action: { token: 'punctuation' } },\n            { regex: />/, action: { token: '@rematch', next: '@pop' } },\n        ],\n        lexing_EXTCODE: [\n            { regex: /^%}/, action: { token: '@rematch', next: '@pop', nextEmbedded: '@pop' } },\n            { regex: /[^%]+/, action: '' },\n        ],\n        lexing_DQUOTE: [\n            { regex: /\"/, action: { token: 'string.quote', next: '@pop' } },\n            // AS-20160628: additional hi-lighting for variables in staload/dynload strings\n            { regex: /(\\{\\$)(@IDENTFST@IDENTRST*)(\\})/, action: [{ token: 'string.escape' }, { token: 'identifier' }, { token: 'string.escape' }] },\n            { regex: /\\\\$/, action: { token: 'string.escape' } },\n            { regex: /\\\\(@ESCHAR|[xX]@xdigit+|@digit+)/, action: { token: 'string.escape' } },\n            { regex: /[^\\\\\"]+/, action: { token: 'string' } }\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '--',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.sql',\n    ignoreCase: true,\n    brackets: [\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    keywords: [\n        \"ACCESSIBLE\", \"ACCOUNT\", \"ACTION\", \"ADD\", \"AFTER\", \"AGAINST\", \"AGGREGATE\", \"ALGORITHM\", \"ALL\", \"ALTER\", \"ALWAYS\", \"ANALYSE\", \"ANALYZE\",\n        \"AND\", \"ANY\", \"AS\", \"ASC\", \"ASCII\", \"ASENSITIVE\", \"AT\", \"AUTOEXTEND_SIZE\", \"AUTO_INCREMENT\", \"AVG\", \"AVG_ROW_LENGTH\", \"BACKUP\", \"BEFORE\",\n        \"BEGIN\", \"BETWEEN\", \"BIGINT\", \"BINARY\", \"BINLOG\", \"BIT\", \"BLOB\", \"BLOCK\", \"BOOL\", \"BOOLEAN\", \"BOTH\", \"BTREE\", \"BY\", \"BYTE\", \"CACHE\", \"CALL\",\n        \"CASCADE\", \"CASCADED\", \"CASE\", \"CATALOG_NAME\", \"CHAIN\", \"CHANGE\", \"CHANGED\", \"CHANNEL\", \"CHAR\", \"CHARACTER\", \"CHARSET\", \"CHECK\", \"CHECKSUM\",\n        \"CIPHER\", \"CLASS_ORIGIN\", \"CLIENT\", \"CLOSE\", \"COALESCE\", \"CODE\", \"COLLATE\", \"COLLATION\", \"COLUMN\", \"COLUMNS\", \"COLUMN_FORMAT\", \"COLUMN_NAME\",\n        \"COMMENT\", \"COMMIT\", \"COMMITTED\", \"COMPACT\", \"COMPLETION\", \"COMPRESSED\", \"COMPRESSION\", \"CONCURRENT\", \"CONDITION\", \"CONNECTION\", \"CONSISTENT\",\n        \"CONSTRAINT\", \"CONSTRAINT_CATALOG\", \"CONSTRAINT_NAME\", \"CONSTRAINT_SCHEMA\", \"CONTAINS\", \"CONTEXT\", \"CONTINUE\", \"CONVERT\", \"CPU\", \"CREATE\",\n        \"CROSS\", \"CUBE\", \"CURRENT\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"CURRENT_USER\", \"CURSOR\", \"CURSOR_NAME\", \"DATA\", \"DATABASE\",\n        \"DATABASES\", \"DATAFILE\", \"DATE\", \"DATETIME\", \"DAY\", \"DAY_HOUR\", \"DAY_MICROSECOND\", \"DAY_MINUTE\", \"DAY_SECOND\", \"DEALLOCATE\", \"DEC\", \"DECIMAL\",\n        \"DECLARE\", \"DEFAULT\", \"DEFAULT_AUTH\", \"DEFINER\", \"DELAYED\", \"DELAY_KEY_WRITE\", \"DELETE\", \"DESC\", \"DESCRIBE\", \"DES_KEY_FILE\", \"DETERMINISTIC\",\n        \"DIAGNOSTICS\", \"DIRECTORY\", \"DISABLE\", \"DISCARD\", \"DISK\", \"DISTINCT\", \"DISTINCTROW\", \"DIV\", \"DO\", \"DOUBLE\", \"DROP\", \"DUAL\", \"DUMPFILE\",\n        \"DUPLICATE\", \"DYNAMIC\", \"EACH\", \"ELSE\", \"ELSEIF\", \"ENABLE\", \"ENCLOSED\", \"ENCRYPTION\", \"END\", \"ENDS\", \"ENGINE\", \"ENGINES\", \"ENUM\", \"ERROR\",\n        \"ERRORS\", \"ESCAPE\", \"ESCAPED\", \"EVENT\", \"EVENTS\", \"EVERY\", \"EXCHANGE\", \"EXECUTE\", \"EXISTS\", \"EXIT\", \"EXPANSION\", \"EXPIRE\", \"EXPLAIN\", \"EXPORT\",\n        \"EXTENDED\", \"EXTENT_SIZE\", \"FALSE\", \"FAST\", \"FAULTS\", \"FETCH\", \"FIELDS\", \"FILE\", \"FILE_BLOCK_SIZE\", \"FILTER\", \"FIRST\", \"FIXED\", \"FLOAT\", \"FLOAT4\",\n        \"FLOAT8\", \"FLUSH\", \"FOLLOWS\", \"FOR\", \"FORCE\", \"FOREIGN\", \"FORMAT\", \"FOUND\", \"FROM\", \"FULL\", \"FULLTEXT\", \"FUNCTION\", \"GENERAL\", \"GENERATED\",\n        \"GEOMETRY\", \"GEOMETRYCOLLECTION\", \"GET\", \"GET_FORMAT\", \"GLOBAL\", \"GRANT\", \"GRANTS\", \"GROUP\", \"GROUP_REPLICATION\", \"HANDLER\", \"HASH\", \"HAVING\",\n        \"HELP\", \"HIGH_PRIORITY\", \"HOST\", \"HOSTS\", \"HOUR\", \"HOUR_MICROSECOND\", \"HOUR_MINUTE\", \"HOUR_SECOND\", \"IDENTIFIED\", \"IF\", \"IGNORE\", \"IGNORE_SERVER_IDS\",\n        \"IMPORT\", \"INDEX\", \"INDEXES\", \"INFILE\", \"INITIAL_SIZE\", \"INNER\", \"INOUT\", \"INSENSITIVE\", \"INSERT\", \"INSERT_METHOD\", \"INSTALL\", \"INSTANCE\",\n        \"INT\", \"INT1\", \"INT2\", \"INT3\", \"INT4\", \"INT8\", \"INTEGER\", \"INTERVAL\", \"INTO\", \"INVOKER\", \"IO\", \"IO_AFTER_GTIDS\", \"IO_BEFORE_GTIDS\", \"IO_THREAD\",\n        \"IPC\", \"ISOLATION\", \"ISSUER\", \"ITERATE\", \"JOIN\", \"JSON\", \"KEY\", \"KEYS\", \"KEY_BLOCK_SIZE\", \"KILL\", \"LANGUAGE\", \"LAST\", \"LEADING\", \"LEAVE\",\n        \"LEAVES\", \"LEFT\", \"LESS\", \"LEVEL\", \"LIKE\", \"LIMIT\", \"LINEAR\", \"LINES\", \"LINESTRING\", \"LIST\", \"LOAD\", \"LOCAL\", \"LOCALTIME\", \"LOCALTIMESTAMP\", \"LOCK\",\n        \"LOCKS\", \"LOGFILE\", \"LOGS\", \"LONG\", \"LONGBLOB\", \"LONGTEXT\", \"LOOP\", \"LOW_PRIORITY\", \"MASTER\", \"MASTER_AUTO_POSITION\", \"MASTER_BIND\", \"MASTER_CONNECT_RETRY\",\n        \"MASTER_DELAY\", \"MASTER_HEARTBEAT_PERIOD\", \"MASTER_HOST\", \"MASTER_LOG_FILE\", \"MASTER_LOG_POS\", \"MASTER_PASSWORD\", \"MASTER_PORT\", \"MASTER_RETRY_COUNT\",\n        \"MASTER_SERVER_ID\", \"MASTER_SSL\", \"MASTER_SSL_CA\", \"MASTER_SSL_CAPATH\", \"MASTER_SSL_CERT\", \"MASTER_SSL_CIPHER\", \"MASTER_SSL_CRL\", \"MASTER_SSL_CRLPATH\",\n        \"MASTER_SSL_KEY\", \"MASTER_SSL_VERIFY_SERVER_CERT\", \"MASTER_TLS_VERSION\", \"MASTER_USER\", \"MATCH\", \"MAXVALUE\", \"MAX_CONNECTIONS_PER_HOUR\", \"MAX_QUERIES_PER_HOUR\",\n        \"MAX_ROWS\", \"MAX_SIZE\", \"MAX_STATEMENT_TIME\", \"MAX_UPDATES_PER_HOUR\", \"MAX_USER_CONNECTIONS\", \"MEDIUM\", \"MEDIUMBLOB\", \"MEDIUMINT\", \"MEDIUMTEXT\", \"MEMORY\",\n        \"MERGE\", \"MESSAGE_TEXT\", \"MICROSECOND\", \"MIDDLEINT\", \"MIGRATE\", \"MINUTE\", \"MINUTE_MICROSECOND\", \"MINUTE_SECOND\", \"MIN_ROWS\", \"MOD\", \"MODE\", \"MODIFIES\",\n        \"MODIFY\", \"MONTH\", \"MULTILINESTRING\", \"MULTIPOINT\", \"MULTIPOLYGON\", \"MUTEX\", \"MYSQL_ERRNO\", \"NAME\", \"NAMES\", \"NATIONAL\", \"NATURAL\", \"NCHAR\", \"NDB\",\n        \"NDBCLUSTER\", \"NEVER\", \"NEW\", \"NEXT\", \"NO\", \"NODEGROUP\", \"NONBLOCKING\", \"NONE\", \"NO_WAIT\", \"NO_WRITE_TO_BINLOG\", \"NUMBER\", \"NUMERIC\",\n        \"NVARCHAR\", \"OFFSET\", \"OLD_PASSWORD\", \"ON\", \"ONE\", \"ONLY\", \"OPEN\", \"OPTIMIZE\", \"OPTIMIZER_COSTS\", \"OPTION\", \"OPTIONALLY\", \"OPTIONS\", \"OR\", \"ORDER\",\n        \"OUT\", \"OUTER\", \"OUTFILE\", \"OWNER\", \"PACK_KEYS\", \"PAGE\", \"PARSER\", \"PARSE_GCOL_EXPR\", \"PARTIAL\", \"PARTITION\", \"PARTITIONING\", \"PARTITIONS\", \"PASSWORD\",\n        \"PHASE\", \"PLUGIN\", \"PLUGINS\", \"PLUGIN_DIR\", \"POINT\", \"POLYGON\", \"PORT\", \"PRECEDES\", \"PRECISION\", \"PREPARE\", \"PRESERVE\", \"PREV\", \"PRIMARY\", \"PRIVILEGES\",\n        \"PROCEDURE\", \"PROCESSLIST\", \"PROFILE\", \"PROFILES\", \"PROXY\", \"PURGE\", \"QUARTER\", \"QUERY\", \"QUICK\", \"RANGE\", \"READ\", \"READS\", \"READ_ONLY\", \"READ_WRITE\",\n        \"REAL\", \"REBUILD\", \"RECOVER\", \"REDOFILE\", \"REDO_BUFFER_SIZE\", \"REDUNDANT\", \"REFERENCES\", \"REGEXP\", \"RELAY\", \"RELAYLOG\", \"RELAY_LOG_FILE\", \"RELAY_LOG_POS\",\n        \"RELAY_THREAD\", \"RELEASE\", \"RELOAD\", \"REMOVE\", \"RENAME\", \"REORGANIZE\", \"REPAIR\", \"REPEAT\", \"REPEATABLE\", \"REPLACE\", \"REPLICATE_DO_DB\", \"REPLICATE_DO_TABLE\",\n        \"REPLICATE_IGNORE_DB\", \"REPLICATE_IGNORE_TABLE\", \"REPLICATE_REWRITE_DB\", \"REPLICATE_WILD_DO_TABLE\", \"REPLICATE_WILD_IGNORE_TABLE\", \"REPLICATION\", \"REQUIRE\",\n        \"RESET\", \"RESIGNAL\", \"RESTORE\", \"RESTRICT\", \"RESUME\", \"RETURN\", \"RETURNED_SQLSTATE\", \"RETURNS\", \"REVERSE\", \"REVOKE\", \"RIGHT\", \"RLIKE\", \"ROLLBACK\", \"ROLLUP\",\n        \"ROTATE\", \"ROUTINE\", \"ROW\", \"ROWS\", \"ROW_COUNT\", \"ROW_FORMAT\", \"RTREE\", \"SAVEPOINT\", \"SCHEDULE\", \"SCHEMA\", \"SCHEMAS\", \"SCHEMA_NAME\", \"SECOND\", \"SECOND_MICROSECOND\",\n        \"SECURITY\", \"SELECT\", \"SENSITIVE\", \"SEPARATOR\", \"SERIAL\", \"SERIALIZABLE\", \"SERVER\", \"SESSION\", \"SET\", \"SHARE\", \"SHOW\", \"SHUTDOWN\", \"SIGNAL\", \"SIGNED\", \"SIMPLE\",\n        \"SLAVE\", \"SLOW\", \"SMALLINT\", \"SNAPSHOT\", \"SOCKET\", \"SOME\", \"SONAME\", \"SOUNDS\", \"SOURCE\", \"SPATIAL\", \"SPECIFIC\", \"SQL\", \"SQLEXCEPTION\", \"SQLSTATE\", \"SQLWARNING\",\n        \"SQL_AFTER_GTIDS\", \"SQL_AFTER_MTS_GAPS\", \"SQL_BEFORE_GTIDS\", \"SQL_BIG_RESULT\", \"SQL_BUFFER_RESULT\", \"SQL_CACHE\", \"SQL_CALC_FOUND_ROWS\", \"SQL_NO_CACHE\",\n        \"SQL_SMALL_RESULT\", \"SQL_THREAD\", \"SQL_TSI_DAY\", \"SQL_TSI_HOUR\", \"SQL_TSI_MINUTE\", \"SQL_TSI_MONTH\", \"SQL_TSI_QUARTER\", \"SQL_TSI_SECOND\", \"SQL_TSI_WEEK\",\n        \"SQL_TSI_YEAR\", \"SSL\", \"STACKED\", \"START\", \"STARTING\", \"STARTS\", \"STATS_AUTO_RECALC\", \"STATS_PERSISTENT\", \"STATS_SAMPLE_PAGES\", \"STATUS\", \"STOP\", \"STORAGE\",\n        \"STORED\", \"STRAIGHT_JOIN\", \"STRING\", \"SUBCLASS_ORIGIN\", \"SUBJECT\", \"SUBPARTITION\", \"SUBPARTITIONS\", \"SUPER\", \"SUSPEND\", \"SWAPS\", \"SWITCHES\", \"TABLE\", \"TABLES\",\n        \"TABLESPACE\", \"TABLE_CHECKSUM\", \"TABLE_NAME\", \"TEMPORARY\", \"TEMPTABLE\", \"TERMINATED\", \"TEXT\", \"THAN\", \"THEN\", \"TIME\", \"TIMESTAMP\", \"TIMESTAMPADD\", \"TIMESTAMPDIFF\",\n        \"TINYBLOB\", \"TINYINT\", \"TINYTEXT\", \"TO\", \"TRAILING\", \"TRANSACTION\", \"TRIGGER\", \"TRIGGERS\", \"TRUE\", \"TRUNCATE\", \"TYPE\", \"TYPES\", \"UNCOMMITTED\", \"UNDEFINED\", \"UNDO\",\n        \"UNDOFILE\", \"UNDO_BUFFER_SIZE\", \"UNICODE\", \"UNINSTALL\", \"UNION\", \"UNIQUE\", \"UNKNOWN\", \"UNLOCK\", \"UNSIGNED\", \"UNTIL\", \"UPDATE\", \"UPGRADE\", \"USAGE\", \"USE\", \"USER\",\n        \"USER_RESOURCES\", \"USE_FRM\", \"USING\", \"UTC_DATE\", \"UTC_TIME\", \"UTC_TIMESTAMP\", \"VALIDATION\", \"VALUE\", \"VALUES\", \"VARBINARY\", \"VARCHAR\", \"VARCHARACTER\", \"VARIABLES\",\n        \"VARYING\", \"VIEW\", \"VIRTUAL\", \"WAIT\", \"WARNINGS\", \"WEEK\", \"WEIGHT_STRING\", \"WHEN\", \"WHERE\", \"WHILE\", \"WITH\", \"WITHOUT\", \"WORK\", \"WRAPPER\", \"WRITE\", \"X509\", \"XA\",\n        \"XID\", \"XML\", \"XOR\", \"YEAR\", \"YEAR_MONTH\", \"ZEROFILL\"\n    ],\n    operators: [\n        \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\n    ],\n    builtinFunctions: [\n        \"ABS\", \"ACOS\", \"ADDDATE\", \"ADDTIME\", \"AES_DECRYPT\", \"AES_ENCRYPT\", \"ANY_VALUE\", \"Area\", \"AsBinary\", \"AsWKB\", \"ASCII\", \"ASIN\",\n        \"AsText\", \"AsWKT\", \"ASYMMETRIC_DECRYPT\", \"ASYMMETRIC_DERIVE\", \"ASYMMETRIC_ENCRYPT\", \"ASYMMETRIC_SIGN\", \"ASYMMETRIC_VERIFY\",\n        \"ATAN\", \"ATAN2\", \"ATAN\", \"AVG\", \"BENCHMARK\", \"BIN\", \"BIT_AND\", \"BIT_COUNT\", \"BIT_LENGTH\", \"BIT_OR\", \"BIT_XOR\", \"Buffer\", \"CAST\",\n        \"CEIL\", \"CEILING\", \"Centroid\", \"CHAR\", \"CHAR_LENGTH\", \"CHARACTER_LENGTH\", \"CHARSET\", \"COALESCE\", \"COERCIBILITY\", \"COLLATION\",\n        \"COMPRESS\", \"CONCAT\", \"CONCAT_WS\", \"CONNECTION_ID\", \"Contains\", \"CONV\", \"CONVERT\", \"CONVERT_TZ\", \"ConvexHull\", \"COS\", \"COT\",\n        \"COUNT\", \"CRC32\", \"CREATE_ASYMMETRIC_PRIV_KEY\", \"CREATE_ASYMMETRIC_PUB_KEY\", \"CREATE_DH_PARAMETERS\", \"CREATE_DIGEST\", \"Crosses\",\n        \"CURDATE\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"CURRENT_USER\", \"CURTIME\", \"DATABASE\", \"DATE\", \"DATE_ADD\",\n        \"DATE_FORMAT\", \"DATE_SUB\", \"DATEDIFF\", \"DAY\", \"DAYNAME\", \"DAYOFMONTH\", \"DAYOFWEEK\", \"DAYOFYEAR\", \"DECODE\", \"DEFAULT\", \"DEGREES\",\n        \"DES_DECRYPT\", \"DES_ENCRYPT\", \"Dimension\", \"Disjoint\", \"Distance\", \"ELT\", \"ENCODE\", \"ENCRYPT\", \"EndPoint\", \"Envelope\", \"Equals\",\n        \"EXP\", \"EXPORT_SET\", \"ExteriorRing\", \"EXTRACT\", \"ExtractValue\", \"FIELD\", \"FIND_IN_SET\", \"FLOOR\", \"FORMAT\", \"FOUND_ROWS\", \"FROM_BASE64\",\n        \"FROM_DAYS\", \"FROM_UNIXTIME\", \"GeomCollFromText\", \"GeometryCollectionFromText\", \"GeomCollFromWKB\", \"GeometryCollectionFromWKB\",\n        \"GeometryCollection\", \"GeometryN\", \"GeometryType\", \"GeomFromText\", \"GeometryFromText\", \"GeomFromWKB\", \"GeometryFromWKB\", \"GET_FORMAT\",\n        \"GET_LOCK\", \"GLength\", \"GREATEST\", \"GROUP_CONCAT\", \"GTID_SUBSET\", \"GTID_SUBTRACT\", \"HEX\", \"HOUR\", \"IF\", \"IFNULL\", \"INET_ATON\",\n        \"INET_NTOA\", \"INET6_ATON\", \"INET6_NTOA\", \"INSERT\", \"INSTR\", \"InteriorRingN\", \"Intersects\", \"INTERVAL\", \"IS_FREE_LOCK\", \"IS_IPV4\",\n        \"IS_IPV4_COMPAT\", \"IS_IPV4_MAPPED\", \"IS_IPV6\", \"IS_USED_LOCK\", \"IsClosed\", \"IsEmpty\", \"ISNULL\", \"IsSimple\", \"JSON_APPEND\", \"JSON_ARRAY\",\n        \"JSON_ARRAY_APPEND\", \"JSON_ARRAY_INSERT\", \"JSON_CONTAINS\", \"JSON_CONTAINS_PATH\", \"JSON_DEPTH\", \"JSON_EXTRACT\", \"JSON_INSERT\", \"JSON_KEYS\",\n        \"JSON_LENGTH\", \"JSON_MERGE\", \"JSON_MERGE_PRESERVE\", \"JSON_OBJECT\", \"JSON_QUOTE\", \"JSON_REMOVE\", \"JSON_REPLACE\", \"JSON_SEARCH\", \"JSON_SET\",\n        \"JSON_TYPE\", \"JSON_UNQUOTE\", \"JSON_VALID\", \"LAST_INSERT_ID\", \"LCASE\", \"LEAST\", \"LEFT\", \"LENGTH\", \"LineFromText\", \"LineStringFromText\",\n        \"LineFromWKB\", \"LineStringFromWKB\", \"LineString\", \"LN\", \"LOAD_FILE\", \"LOCALTIME\", \"LOCALTIMESTAMP\", \"LOCATE\", \"LOG\", \"LOG10\", \"LOG2\",\n        \"LOWER\", \"LPAD\", \"LTRIM\", \"MAKE_SET\", \"MAKEDATE\", \"MAKETIME\", \"MASTER_POS_WAIT\", \"MAX\", \"MBRContains\", \"MBRCoveredBy\", \"MBRCovers\",\n        \"MBRDisjoint\", \"MBREqual\", \"MBREquals\", \"MBRIntersects\", \"MBROverlaps\", \"MBRTouches\", \"MBRWithin\", \"MD5\", \"MICROSECOND\", \"MID\",\n        \"MIN\", \"MINUTE\", \"MLineFromText\", \"MultiLineStringFromText\", \"MLineFromWKB\", \"MultiLineStringFromWKB\", \"MOD\", \"MONTH\", \"MONTHNAME\",\n        \"MPointFromText\", \"MultiPointFromText\", \"MPointFromWKB\", \"MultiPointFromWKB\", \"MPolyFromText\", \"MultiPolygonFromText\", \"MPolyFromWKB\",\n        \"MultiPolygonFromWKB\", \"MultiLineString\", \"MultiPoint\", \"MultiPolygon\", \"NAME_CONST\", \"NOT IN\", \"NOW\", \"NULLIF\", \"NumGeometries\",\n        \"NumInteriorRings\", \"NumPoints\", \"OCT\", \"OCTET_LENGTH\", \"OLD_PASSWORD\", \"ORD\", \"Overlaps\", \"PASSWORD\", \"PERIOD_ADD\", \"PERIOD_DIFF\",\n        \"PI\", \"Point\", \"PointFromText\", \"PointFromWKB\", \"PointN\", \"PolyFromText\", \"PolygonFromText\", \"PolyFromWKB\", \"PolygonFromWKB\", \"Polygon\",\n        \"POSITION\", \"POW\", \"POWER\", \"PROCEDURE ANALYSE\", \"QUARTER\", \"QUOTE\", \"RADIANS\", \"RAND\", \"RANDOM_BYTES\", \"RELEASE_ALL_LOCKS\", \"RELEASE_LOCK\",\n        \"REPEAT\", \"REPLACE\", \"REVERSE\", \"RIGHT\", \"ROUND\", \"ROW_COUNT\", \"RPAD\", \"RTRIM\", \"SCHEMA\", \"SEC_TO_TIME\", \"SECOND\", \"SESSION_USER\", \"SHA1\",\n        \"SHA\", \"SHA2\", \"SIGN\", \"SIN\", \"SLEEP\", \"SOUNDEX\", \"SPACE\", \"SQRT\", \"SRID\", \"ST_Area\", \"ST_AsBinary\", \"ST_AsWKB\", \"ST_AsGeoJSON\", \"ST_AsText\",\n        \"ST_AsWKT\", \"ST_Buffer\", \"ST_Buffer_Strategy\", \"ST_Centroid\", \"ST_Contains\", \"ST_ConvexHull\", \"ST_Crosses\", \"ST_Difference\", \"ST_Dimension\",\n        \"ST_Disjoint\", \"ST_Distance\", \"ST_Distance_Sphere\", \"ST_EndPoint\", \"ST_Envelope\", \"ST_Equals\", \"ST_ExteriorRing\", \"ST_GeoHash\",\n        \"ST_GeomCollFromText\", \"ST_GeometryCollectionFromText\", \"ST_GeomCollFromTxt\", \"ST_GeomCollFromWKB\", \"ST_GeometryCollectionFromWKB\",\n        \"ST_GeometryN\", \"ST_GeometryType\", \"ST_GeomFromGeoJSON\", \"ST_GeomFromText\", \"ST_GeometryFromText\", \"ST_GeomFromWKB\", \"ST_GeometryFromWKB\",\n        \"ST_InteriorRingN\", \"ST_Intersection\", \"ST_Intersects\", \"ST_IsClosed\", \"ST_IsEmpty\", \"ST_IsSimple\", \"ST_IsValid\", \"ST_LatFromGeoHash\",\n        \"ST_Length\", \"ST_LineFromText\", \"ST_LineStringFromText\", \"ST_LineFromWKB\", \"ST_LineStringFromWKB\", \"ST_LongFromGeoHash\", \"ST_MakeEnvelope\",\n        \"ST_MLineFromText\", \"ST_MultiLineStringFromText\", \"ST_MLineFromWKB\", \"ST_MultiLineStringFromWKB\", \"ST_MPointFromText\", \"ST_MultiPointFromText\",\n        \"ST_MPointFromWKB\", \"ST_MultiPointFromWKB\", \"ST_MPolyFromText\", \"ST_MultiPolygonFromText\", \"ST_MPolyFromWKB\", \"ST_MultiPolygonFromWKB\",\n        \"ST_NumGeometries\", \"ST_NumInteriorRing\", \"ST_NumInteriorRings\", \"ST_NumPoints\", \"ST_Overlaps\", \"ST_PointFromGeoHash\", \"ST_PointFromText\",\n        \"ST_PointFromWKB\", \"ST_PointN\", \"ST_PolyFromText\", \"ST_PolygonFromText\", \"ST_PolyFromWKB\", \"ST_PolygonFromWKB\", \"ST_Simplify\", \"ST_SRID\",\n        \"ST_StartPoint\", \"ST_SymDifference\", \"ST_Touches\", \"ST_Union\", \"ST_Validate\", \"ST_Within\", \"ST_X\", \"ST_Y\", \"StartPoint\", \"STD\", \"STDDEV\",\n        \"STDDEV_POP\", \"STDDEV_SAMP\", \"STR_TO_DATE\", \"STRCMP\", \"SUBDATE\", \"SUBSTR\", \"SUBSTRING\", \"SUBSTRING_INDEX\", \"SUBTIME\", \"SUM\", \"SYSDATE\",\n        \"SYSTEM_USER\", \"TAN\", \"TIME\", \"TIME_FORMAT\", \"TIME_TO_SEC\", \"TIMEDIFF\", \"TIMESTAMP\", \"TIMESTAMPADD\", \"TIMESTAMPDIFF\", \"TO_BASE64\", \"TO_DAYS\",\n        \"TO_SECONDS\", \"Touches\", \"TRIM\", \"TRUNCATE\", \"UCASE\", \"UNCOMPRESS\", \"UNCOMPRESSED_LENGTH\", \"UNHEX\", \"UNIX_TIMESTAMP\", \"UpdateXML\", \"UPPER\",\n        \"USER\", \"UTC_DATE\", \"UTC_TIME\", \"UTC_TIMESTAMP\", \"UUID\", \"UUID_SHORT\", \"VALIDATE_PASSWORD_STRENGTH\", \"VALUES\", \"VAR_POP\", \"VAR_SAMP\", \"VARIANCE\",\n        \"VERSION\", \"WAIT_FOR_EXECUTED_GTID_SET\", \"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS\", \"WEEK\", \"WEEKDAY\", \"WEEKOFYEAR\", \"WEIGHT_STRING\", \"Within\",\n        \"X\", \"Y\", \"YEAR\", \"YEARWEEK\"\n    ],\n    builtinVariables: [],\n    tokenizer: {\n        root: [\n            { include: '@comments' },\n            { include: '@whitespace' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            { include: '@complexIdentifiers' },\n            { include: '@scopes' },\n            [/[;,.]/, 'delimiter'],\n            [/[()]/, '@brackets'],\n            [/[\\w@]+/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@operators': 'operator',\n                        '@builtinVariables': 'predefined',\n                        '@builtinFunctions': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            [/[<>=!%&+\\-*/|~^]/, 'operator'],\n        ],\n        whitespace: [\n            [/\\s+/, 'white']\n        ],\n        comments: [\n            [/--+.*/, 'comment'],\n            [/#+.*/, 'comment'],\n            [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\n        ],\n        comment: [\n            [/[^*/]+/, 'comment'],\n            // Not supporting nested comments, as nested comments seem to not be standard?\n            // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\n            // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\n            [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\n            [/./, 'comment']\n        ],\n        numbers: [\n            [/0[xX][0-9a-fA-F]*/, 'number'],\n            [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\n            [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\n        ],\n        strings: [\n            [/'/, { token: 'string', next: '@string' }],\n            [/\"/, { token: 'string.double', next: '@stringDouble' }]\n        ],\n        string: [\n            [/[^']+/, 'string'],\n            [/''/, 'string'],\n            [/'/, { token: 'string', next: '@pop' }],\n        ],\n        stringDouble: [\n            [/[^\"]+/, 'string.double'],\n            [/\"\"/, 'string.double'],\n            [/\"/, { token: 'string.double', next: '@pop' }]\n        ],\n        complexIdentifiers: [\n            [/`/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\n        ],\n        quotedIdentifier: [\n            [/[^`]+/, 'identifier'],\n            [/``/, 'identifier'],\n            [/`/, { token: 'identifier.quote', next: '@pop' }]\n        ],\n        scopes: []\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [['[', ']'], ['(', ')'], ['{', '}']],\n    autoClosingPairs: [\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.msdax',\n    ignoreCase: true,\n    brackets: [\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '{', close: '}', token: 'delimiter.brackets' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    keywords: [\n        // Query keywords\n        'VAR',\n        'RETURN',\n        'NOT',\n        'EVALUATE',\n        'DATATABLE',\n        'ORDER',\n        'BY',\n        'START',\n        'AT',\n        'DEFINE',\n        'MEASURE',\n        'ASC',\n        'DESC',\n        'IN',\n        // Datatable types\n        'BOOLEAN',\n        'DOUBLE',\n        'INTEGER',\n        'DATETIME',\n        'CURRENCY',\n        'STRING'\n    ],\n    functions: [\n        // Relational\n        'CLOSINGBALANCEMONTH', 'CLOSINGBALANCEQUARTER', 'CLOSINGBALANCEYEAR', 'DATEADD', 'DATESBETWEEN',\n        'DATESINPERIOD', 'DATESMTD', 'DATESQTD', 'DATESYTD', 'ENDOFMONTH',\n        'ENDOFQUARTER', 'ENDOFYEAR', 'FIRSTDATE', 'FIRSTNONBLANK', 'LASTDATE',\n        'LASTNONBLANK', 'NEXTDAY', 'NEXTMONTH', 'NEXTQUARTER', 'NEXTYEAR',\n        'OPENINGBALANCEMONTH', 'OPENINGBALANCEQUARTER', 'OPENINGBALANCEYEAR', 'PARALLELPERIOD', 'PREVIOUSDAY',\n        'PREVIOUSMONTH', 'PREVIOUSQUARTER', 'PREVIOUSYEAR', 'SAMEPERIODLASTYEAR', 'STARTOFMONTH',\n        'STARTOFQUARTER', 'STARTOFYEAR', 'TOTALMTD', 'TOTALQTD', 'TOTALYTD',\n        'ADDCOLUMNS', 'ADDMISSINGITEMS', 'ALL', 'ALLEXCEPT', 'ALLNOBLANKROW',\n        'ALLSELECTED', 'CALCULATE', 'CALCULATETABLE', 'CALENDAR', 'CALENDARAUTO',\n        'CROSSFILTER', 'CROSSJOIN', 'CURRENTGROUP', 'DATATABLE', 'DETAILROWS',\n        'DISTINCT', 'EARLIER', 'EARLIEST', 'EXCEPT', 'FILTER',\n        'FILTERS', 'GENERATE', 'GENERATEALL', 'GROUPBY', 'IGNORE',\n        'INTERSECT', 'ISONORAFTER', 'KEEPFILTERS', 'LOOKUPVALUE', 'NATURALINNERJOIN',\n        'NATURALLEFTOUTERJOIN', 'RELATED', 'RELATEDTABLE', 'ROLLUP', 'ROLLUPADDISSUBTOTAL',\n        'ROLLUPGROUP', 'ROLLUPISSUBTOTAL', 'ROW', 'SAMPLE', 'SELECTCOLUMNS',\n        'SUBSTITUTEWITHINDEX', 'SUMMARIZE', 'SUMMARIZECOLUMNS', 'TOPN', 'TREATAS',\n        'UNION', 'USERELATIONSHIP', 'VALUES', 'SUM', 'SUMX',\n        'PATH', 'PATHCONTAINS', 'PATHITEM', 'PATHITEMREVERSE', 'PATHLENGTH',\n        'AVERAGE', 'AVERAGEA', 'AVERAGEX', 'COUNT', 'COUNTA',\n        'COUNTAX', 'COUNTBLANK', 'COUNTROWS', 'COUNTX', 'DISTINCTCOUNT',\n        'DIVIDE', 'GEOMEAN', 'GEOMEANX', 'MAX', 'MAXA',\n        'MAXX', 'MEDIAN', 'MEDIANX', 'MIN', 'MINA',\n        'MINX', 'PERCENTILE.EXC', 'PERCENTILE.INC', 'PERCENTILEX.EXC', 'PERCENTILEX.INC',\n        'PRODUCT', 'PRODUCTX', 'RANK.EQ', 'RANKX', 'STDEV.P',\n        'STDEV.S', 'STDEVX.P', 'STDEVX.S', 'VAR.P', 'VAR.S',\n        'VARX.P', 'VARX.S', 'XIRR', 'XNPV',\n        // Scalar\n        'DATE', 'DATEDIFF', 'DATEVALUE', 'DAY', 'EDATE',\n        'EOMONTH', 'HOUR', 'MINUTE', 'MONTH', 'NOW',\n        'SECOND', 'TIME', 'TIMEVALUE', 'TODAY', 'WEEKDAY',\n        'WEEKNUM', 'YEAR', 'YEARFRAC', 'CONTAINS', 'CONTAINSROW',\n        'CUSTOMDATA', 'ERROR', 'HASONEFILTER', 'HASONEVALUE', 'ISBLANK',\n        'ISCROSSFILTERED', 'ISEMPTY', 'ISERROR', 'ISEVEN', 'ISFILTERED',\n        'ISLOGICAL', 'ISNONTEXT', 'ISNUMBER', 'ISODD', 'ISSUBTOTAL',\n        'ISTEXT', 'USERNAME', 'USERPRINCIPALNAME', 'AND', 'FALSE',\n        'IF', 'IFERROR', 'NOT', 'OR', 'SWITCH',\n        'TRUE', 'ABS', 'ACOS', 'ACOSH', 'ACOT',\n        'ACOTH', 'ASIN', 'ASINH', 'ATAN', 'ATANH',\n        'BETA.DIST', 'BETA.INV', 'CEILING', 'CHISQ.DIST', 'CHISQ.DIST.RT',\n        'CHISQ.INV', 'CHISQ.INV.RT', 'COMBIN', 'COMBINA', 'CONFIDENCE.NORM',\n        'CONFIDENCE.T', 'COS', 'COSH', 'COT', 'COTH',\n        'CURRENCY', 'DEGREES', 'EVEN', 'EXP', 'EXPON.DIST',\n        'FACT', 'FLOOR', 'GCD', 'INT', 'ISO.CEILING',\n        'LCM', 'LN', 'LOG', 'LOG10', 'MOD',\n        'MROUND', 'ODD', 'PERMUT', 'PI', 'POISSON.DIST',\n        'POWER', 'QUOTIENT', 'RADIANS', 'RAND', 'RANDBETWEEN',\n        'ROUND', 'ROUNDDOWN', 'ROUNDUP', 'SIGN', 'SIN',\n        'SINH', 'SQRT', 'SQRTPI', 'TAN', 'TANH',\n        'TRUNC', 'BLANK', 'CONCATENATE', 'CONCATENATEX', 'EXACT',\n        'FIND', 'FIXED', 'FORMAT', 'LEFT', 'LEN',\n        'LOWER', 'MID', 'REPLACE', 'REPT', 'RIGHT',\n        'SEARCH', 'SUBSTITUTE', 'TRIM', 'UNICHAR', 'UNICODE',\n        'UPPER', 'VALUE'\n    ],\n    tokenizer: {\n        root: [\n            { include: '@comments' },\n            { include: '@whitespace' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            { include: '@complexIdentifiers' },\n            [/[;,.]/, 'delimiter'],\n            [/[({})]/, '@brackets'],\n            [/[a-z_][a-zA-Z0-9_]*/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@functions': 'keyword',\n                        '@default': 'identifier'\n                    }\n                }],\n            [/[<>=!%&+\\-*/|~^]/, 'operator'],\n        ],\n        whitespace: [\n            [/\\s+/, 'white']\n        ],\n        comments: [\n            [/\\/\\/+.*/, 'comment'],\n            [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\n        ],\n        comment: [\n            [/[^*/]+/, 'comment'],\n            [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\n            [/./, 'comment']\n        ],\n        numbers: [\n            [/0[xX][0-9a-fA-F]*/, 'number'],\n            [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\n            [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\n        ],\n        strings: [\n            [/N\"/, { token: 'string', next: '@string' }],\n            [/\"/, { token: 'string', next: '@string' }]\n        ],\n        string: [\n            [/[^\"]+/, 'string'],\n            [/\"\"/, 'string'],\n            [/\"/, { token: 'string', next: '@pop' }]\n        ],\n        complexIdentifiers: [\n            [/\\[/, { token: 'identifier.quote', next: '@bracketedIdentifier' }],\n            [/'/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\n        ],\n        bracketedIdentifier: [\n            [/[^\\]]+/, 'identifier'],\n            [/]]/, 'identifier'],\n            [/]/, { token: 'identifier.quote', next: '@pop' }]\n        ],\n        quotedIdentifier: [\n            [/[^']+/, 'identifier'],\n            [/''/, 'identifier'],\n            [/'/, { token: 'identifier.quote', next: '@pop' }]\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '--',\n        blockComment: ['--[[', ']]'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.lua',\n    keywords: [\n        'and', 'break', 'do', 'else', 'elseif',\n        'end', 'false', 'for', 'function', 'goto', 'if',\n        'in', 'local', 'nil', 'not', 'or',\n        'repeat', 'return', 'then', 'true', 'until',\n        'while'\n    ],\n    brackets: [\n        { token: 'delimiter.bracket', open: '{', close: '}' },\n        { token: 'delimiter.array', open: '[', close: ']' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\n    ],\n    operators: [\n        '+', '-', '*', '/', '%', '^', '#', '==', '~=', '<=', '>=', '<', '>', '=',\n        ';', ':', ',', '.', '..', '...'\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // keys\n            [/(,)(\\s*)([a-zA-Z_]\\w*)(\\s*)(:)(?!:)/, ['delimiter', '', 'key', '', 'delimiter']],\n            [/({)(\\s*)([a-zA-Z_]\\w*)(\\s*)(:)(?!:)/, ['@brackets', '', 'key', '', 'delimiter']],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }],\n            // numbers\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\n            [/\\d+?/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings: recover on non-terminated strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', '@string.\\''],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/--\\[([=]*)\\[/, 'comment', '@comment.$1'],\n            [/--.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\]]+/, 'comment'],\n            [/\\]([=]*)\\]/, {\n                    cases: {\n                        '$1==$S2': { token: 'comment', next: '@pop' },\n                        '@default': 'comment'\n                    }\n                }],\n            [/./, 'comment']\n        ],\n        string: [\n            [/[^\\\\\"']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }]\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '#'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.ini',\n    // we include these common regular expressions\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // sections\n            [/^\\[[^\\]]*\\]/, 'metatag'],\n            // keys\n            [/(^\\w+)(\\s*)(\\=)/, ['key', '', 'delimiter']],\n            // whitespace\n            { include: '@whitespace' },\n            // numbers\n            [/\\d+/, 'number'],\n            // strings: recover on non-terminated strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', '@string.\\''],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/^\\s*[#;].*$/, 'comment'],\n        ],\n        string: [\n            [/[^\\\\\"']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }]\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.dockerfile',\n    instructions: /FROM|MAINTAINER|RUN|EXPOSE|ENV|ADD|ARG|VOLUME|LABEL|USER|WORKDIR|COPY|CMD|STOPSIGNAL|SHELL|HEALTHCHECK|ENTRYPOINT/,\n    instructionAfter: /ONBUILD/,\n    variableAfter: /ENV/,\n    variable: /\\${?[\\w]+}?/,\n    tokenizer: {\n        root: [\n            { include: '@whitespace' },\n            { include: '@comment' },\n            [/(@instructionAfter)(\\s+)/, ['keyword', { token: '', next: '@instructions' }]],\n            ['', 'keyword', '@instructions']\n        ],\n        instructions: [\n            [/(@variableAfter)(\\s+)([\\w]+)/, ['keyword', '', { token: 'variable', next: '@arguments' }]],\n            [/(@instructions)/, 'keyword', '@arguments']\n        ],\n        arguments: [\n            { include: '@whitespace' },\n            { include: '@strings' },\n            [/(@variable)/, {\n                    cases: {\n                        '@eos': { token: 'variable', next: '@popall' },\n                        '@default': 'variable'\n                    }\n                }],\n            [/\\\\/, {\n                    cases: {\n                        '@eos': '',\n                        '@default': ''\n                    }\n                }],\n            [/./, {\n                    cases: {\n                        '@eos': { token: '', next: '@popall' },\n                        '@default': ''\n                    }\n                }],\n        ],\n        // Deal with white space, including comments\n        whitespace: [\n            [/\\s+/, {\n                    cases: {\n                        '@eos': { token: '', next: '@popall' },\n                        '@default': ''\n                    }\n                }],\n        ],\n        comment: [\n            [/(^#.*$)/, 'comment', '@popall']\n        ],\n        // Recognize strings, including those broken across lines with \\ (but not without)\n        strings: [\n            [/'$/, 'string', '@popall'],\n            [/'/, 'string', '@stringBody'],\n            [/\"$/, 'string', '@popall'],\n            [/\"/, 'string', '@dblStringBody']\n        ],\n        stringBody: [\n            [/[^\\\\\\$']/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/\\\\./, 'string.escape'],\n            [/'$/, 'string', '@popall'],\n            [/'/, 'string', '@pop'],\n            [/(@variable)/, 'variable'],\n            [/\\\\$/, 'string'],\n            [/$/, 'string', '@popall']\n        ],\n        dblStringBody: [\n            [/[^\\\\\\$\"]/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/\\\\./, 'string.escape'],\n            [/\"$/, 'string', '@popall'],\n            [/\"/, 'string', '@pop'],\n            [/(@variable)/, 'variable'],\n            [/\\\\$/, 'string'],\n            [/$/, 'string', '@popall']\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    brackets: [],\n    autoClosingPairs: [],\n    surroundingPairs: []\n};\nexport var language = {\n    // Set defaultToken to invalid to see what you do not tokenize yet\n    // defaultToken: 'invalid',\n    keywords: [],\n    typeKeywords: [],\n    tokenPostfix: '.csp',\n    operators: [],\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    tokenizer: {\n        root: [\n            [/child-src/, 'string.quote'],\n            [/connect-src/, 'string.quote'],\n            [/default-src/, 'string.quote'],\n            [/font-src/, 'string.quote'],\n            [/frame-src/, 'string.quote'],\n            [/img-src/, 'string.quote'],\n            [/manifest-src/, 'string.quote'],\n            [/media-src/, 'string.quote'],\n            [/object-src/, 'string.quote'],\n            [/script-src/, 'string.quote'],\n            [/style-src/, 'string.quote'],\n            [/worker-src/, 'string.quote'],\n            [/base-uri/, 'string.quote'],\n            [/plugin-types/, 'string.quote'],\n            [/sandbox/, 'string.quote'],\n            [/disown-opener/, 'string.quote'],\n            [/form-action/, 'string.quote'],\n            [/frame-ancestors/, 'string.quote'],\n            [/report-uri/, 'string.quote'],\n            [/report-to/, 'string.quote'],\n            [/upgrade-insecure-requests/, 'string.quote'],\n            [/block-all-mixed-content/, 'string.quote'],\n            [/require-sri-for/, 'string.quote'],\n            [/reflected-xss/, 'string.quote'],\n            [/referrer/, 'string.quote'],\n            [/policy-uri/, 'string.quote'],\n            [/'self'/, 'string.quote'],\n            [/'unsafe-inline'/, 'string.quote'],\n            [/'unsafe-eval'/, 'string.quote'],\n            [/'strict-dynamic'/, 'string.quote'],\n            [/'unsafe-hashed-attributes'/, 'string.quote']\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '<', close: '>' },\n        { open: '\\'', close: '\\'' },\n        { open: '\"', close: '\"' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.cs',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '<', close: '>', token: 'delimiter.angle' }\n    ],\n    keywords: [\n        'extern', 'alias', 'using', 'bool', 'decimal', 'sbyte', 'byte', 'short',\n        'ushort', 'int', 'uint', 'long', 'ulong', 'char', 'float', 'double',\n        'object', 'dynamic', 'string', 'assembly', 'is', 'as', 'ref',\n        'out', 'this', 'base', 'new', 'typeof', 'void', 'checked', 'unchecked',\n        'default', 'delegate', 'var', 'const', 'if', 'else', 'switch', 'case',\n        'while', 'do', 'for', 'foreach', 'in', 'break', 'continue', 'goto',\n        'return', 'throw', 'try', 'catch', 'finally', 'lock', 'yield', 'from',\n        'let', 'where', 'join', 'on', 'equals', 'into', 'orderby', 'ascending',\n        'descending', 'select', 'group', 'by', 'namespace', 'partial', 'class',\n        'field', 'event', 'method', 'param', 'property', 'public', 'protected',\n        'internal', 'private', 'abstract', 'sealed', 'static', 'struct', 'readonly',\n        'volatile', 'virtual', 'override', 'params', 'get', 'set', 'add', 'remove',\n        'operator', 'true', 'false', 'implicit', 'explicit', 'interface', 'enum',\n        'null', 'async', 'await', 'fixed', 'sizeof', 'stackalloc', 'unsafe', 'nameof',\n        'when'\n    ],\n    namespaceFollows: [\n        'namespace', 'using',\n    ],\n    parenFollows: [\n        'if', 'for', 'while', 'switch', 'foreach', 'using', 'catch', 'when'\n    ],\n    operators: [\n        '=', '??', '||', '&&', '|', '^', '&', '==', '!=', '<=', '>=', '<<',\n        '+', '-', '*', '/', '%', '!', '~', '++', '--', '+=',\n        '-=', '*=', '/=', '%=', '&=', '|=', '^=', '<<=', '>>=', '>>', '=>'\n    ],\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    // escape sequences\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/\\@?[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@namespaceFollows': { token: 'keyword.$0', next: '@namespace' },\n                        '@keywords': { token: 'keyword.$0', next: '@qualified' },\n                        '@default': { token: 'identifier', next: '@qualified' }\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // delimiters and operators\n            [/}/, {\n                    cases: {\n                        '$S2==interpolatedstring': { token: 'string.quote', next: '@pop' },\n                        '$S2==litinterpstring': { token: 'string.quote', next: '@pop' },\n                        '@default': '@brackets'\n                    }\n                }],\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }],\n            // numbers\n            [/[0-9_]*\\.[0-9_]+([eE][\\-+]?\\d+)?[fFdD]?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]+/, 'number.hex'],\n            [/0[bB][01_]+/, 'number.hex'],\n            [/[0-9_]+/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, { token: 'string.quote', next: '@string' }],\n            [/\\$\\@\"/, { token: 'string.quote', next: '@litinterpstring' }],\n            [/\\@\"/, { token: 'string.quote', next: '@litstring' }],\n            [/\\$\"/, { token: 'string.quote', next: '@interpolatedstring' }],\n            // characters\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        qualified: [\n            [/[a-zA-Z_][\\w]*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            [/\\./, 'delimiter'],\n            ['', '', '@pop'],\n        ],\n        namespace: [\n            { include: '@whitespace' },\n            [/[A-Z]\\w*/, 'namespace'],\n            [/[\\.=]/, 'delimiter'],\n            ['', '', '@pop'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            // [/\\/\\*/,    'comment', '@push' ],    // no nested comments :-(\n            ['\\\\*/', 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, { token: 'string.quote', next: '@pop' }]\n        ],\n        litstring: [\n            [/[^\"]+/, 'string'],\n            [/\"\"/, 'string.escape'],\n            [/\"/, { token: 'string.quote', next: '@pop' }]\n        ],\n        litinterpstring: [\n            [/[^\"{]+/, 'string'],\n            [/\"\"/, 'string.escape'],\n            [/{{/, 'string.escape'],\n            [/}}/, 'string.escape'],\n            [/{/, { token: 'string.quote', next: 'root.litinterpstring' }],\n            [/\"/, { token: 'string.quote', next: '@pop' }]\n        ],\n        interpolatedstring: [\n            [/[^\\\\\"{]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/{{/, 'string.escape'],\n            [/}}/, 'string.escape'],\n            [/{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\n            [/\"/, { token: 'string.quote', next: '@pop' }]\n        ],\n        whitespace: [\n            [/^[ \\t\\v\\f]*#((r)|(load))(?=\\s)/, 'directive.csx'],\n            [/^[ \\t\\v\\f]*#\\w.*$/, 'namespace.cpp'],\n            [/[ \\t\\v\\f\\r\\n]+/, ''],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n    },\n};\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The diagnostic's serverity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.title);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n})(TextEdit || (TextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits) {\n        this.edits = edits;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\n        this.edits.push(TextEdit.insert(position, newText));\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\n        this.edits.push(TextEdit.replace(range, newText));\n    };\n    TextEditChangeImpl.prototype.delete = function (range) {\n        this.edits.push(TextEdit.del(range));\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            return this._workspaceEdit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (VersionedTextDocumentIdentifier.is(key)) {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    documentChanges: []\n                };\n            }\n            if (!this._workspaceEdit.documentChanges) {\n                throw new Error('Workspace edit is not configured for versioned document changes.');\n            }\n            var textDocument = key;\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    changes: Object.create(null)\n                };\n            }\n            if (!this._workspaceEdit.changes) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    return WorkspaceChange;\n}());\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n})(MarkedString || (MarkedString = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n    ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrance.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containg the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics) {\n        return { diagnostics: diagnostics };\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data))\n            result.data = data;\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * A document link is a range in a text document that links to an internal or external resource, like another\n * text document or a web site.\n */\nvar DocumentLink = /** @class */ (function () {\n    function DocumentLink() {\n    }\n    return DocumentLink;\n}());\nexport { DocumentLink };\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target) {\n        return { range: range, target: target };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return 0;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Ovelapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nexport var TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = null;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = null;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === null) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The diagnostic's serverity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.title);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n})(TextEdit || (TextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits) {\n        this.edits = edits;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\n        this.edits.push(TextEdit.insert(position, newText));\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\n        this.edits.push(TextEdit.replace(range, newText));\n    };\n    TextEditChangeImpl.prototype.delete = function (range) {\n        this.edits.push(TextEdit.del(range));\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            return this._workspaceEdit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (VersionedTextDocumentIdentifier.is(key)) {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    documentChanges: []\n                };\n            }\n            if (!this._workspaceEdit.documentChanges) {\n                throw new Error('Workspace edit is not configured for versioned document changes.');\n            }\n            var textDocument = key;\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    changes: Object.create(null)\n                };\n            }\n            if (!this._workspaceEdit.changes) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    return WorkspaceChange;\n}());\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n})(MarkedString || (MarkedString = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n    ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrance.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containg the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics) {\n        return { diagnostics: diagnostics };\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data))\n            result.data = data;\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * A document link is a range in a text document that links to an internal or external resource, like another\n * text document or a web site.\n */\nvar DocumentLink = /** @class */ (function () {\n    function DocumentLink() {\n    }\n    return DocumentLink;\n}());\nexport { DocumentLink };\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target) {\n        return { range: range, target: target };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return 0;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Ovelapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nexport var TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = null;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = null;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === null) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n// Allow for running under nodejs/requirejs in tests\nvar _monaco = (typeof monaco === 'undefined' ? self.monaco : monaco);\nvar EMPTY_ELEMENTS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n    comments: {\n        blockComment: ['<!--', '-->']\n    },\n    brackets: [\n        ['<!--', '-->'],\n        ['<', '>'],\n        ['{', '}'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' }\n    ],\n    surroundingPairs: [\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '<', close: '>' },\n    ],\n    onEnterRules: [\n        {\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n            afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n            action: { indentAction: _monaco.languages.IndentAction.IndentOutdent }\n        },\n        {\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n            action: { indentAction: _monaco.languages.IndentAction.Indent }\n        }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*<!--\\\\s*#region\\\\b.*-->\"),\n            end: new RegExp(\"^\\\\s*<!--\\\\s*#endregion\\\\b.*-->\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.html',\n    ignoreCase: true,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [/<!DOCTYPE/, 'metatag', '@doctype'],\n            [/<!--/, 'comment', '@comment'],\n            [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)(\\s*)(\\/>)/, ['delimiter', 'tag', '', 'delimiter']],\n            [/(<)(script)/, ['delimiter', { token: 'tag', next: '@script' }]],\n            [/(<)(style)/, ['delimiter', { token: 'tag', next: '@style' }]],\n            [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)/, ['delimiter', { token: 'tag', next: '@otherTag' }]],\n            [/(<\\/)((?:[\\w\\-]+:)?[\\w\\-]+)/, ['delimiter', { token: 'tag', next: '@otherTag' }]],\n            [/</, 'delimiter'],\n            [/[^<]+/],\n        ],\n        doctype: [\n            [/[^>]+/, 'metatag.content'],\n            [/>/, 'metatag', '@pop'],\n        ],\n        comment: [\n            [/-->/, 'comment', '@pop'],\n            [/[^-]+/, 'comment.content'],\n            [/./, 'comment.content']\n        ],\n        otherTag: [\n            [/\\/?>/, 'delimiter', '@pop'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n        ],\n        // -- BEGIN <script> tags handling\n        // After <script\n        script: [\n            [/type/, 'attribute.name', '@scriptAfterType'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/>/, { token: 'delimiter', next: '@scriptEmbedded', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/(<\\/)(script\\s*)(>)/, ['delimiter', 'tag', { token: 'delimiter', next: '@pop' }]]\n        ],\n        // After <script ... type\n        scriptAfterType: [\n            [/=/, 'delimiter', '@scriptAfterTypeEquals'],\n            [/>/, { token: 'delimiter', next: '@scriptEmbedded', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <script ... type =\n        scriptAfterTypeEquals: [\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\n            [/>/, { token: 'delimiter', next: '@scriptEmbedded', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <script ... type = $S2\n        scriptWithCustomType: [\n            [/>/, { token: 'delimiter', next: '@scriptEmbedded.$S2', nextEmbedded: '$S2' }],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        scriptEmbedded: [\n            [/<\\/script/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\n            [/[^<]+/, '']\n        ],\n        // -- END <script> tags handling\n        // -- BEGIN <style> tags handling\n        // After <style\n        style: [\n            [/type/, 'attribute.name', '@styleAfterType'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/>/, { token: 'delimiter', next: '@styleEmbedded', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/(<\\/)(style\\s*)(>)/, ['delimiter', 'tag', { token: 'delimiter', next: '@pop' }]]\n        ],\n        // After <style ... type\n        styleAfterType: [\n            [/=/, 'delimiter', '@styleAfterTypeEquals'],\n            [/>/, { token: 'delimiter', next: '@styleEmbedded', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <style ... type =\n        styleAfterTypeEquals: [\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\n            [/>/, { token: 'delimiter', next: '@styleEmbedded', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <style ... type = $S2\n        styleWithCustomType: [\n            [/>/, { token: 'delimiter', next: '@styleEmbedded.$S2', nextEmbedded: '$S2' }],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        styleEmbedded: [\n            [/<\\/style/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\n            [/[^<]+/, '']\n        ],\n    },\n};\n"],"sourceRoot":""}