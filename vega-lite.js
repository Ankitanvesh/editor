(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{108:function(e,t,n){"use strict";function i(e,t){return e.parent===t.parent?1:2}function r(e,t){return e+t.x}function o(e,t){return Math.max(e,t.y)}var a=function(){var e=i,t=1,n=1,a=!1;function s(i){var s,l=0;i.eachAfter(function(t){var n=t.children;n?(t.x=function(e){return e.reduce(r,0)/e.length}(n),t.y=function(e){return 1+e.reduce(o,0)}(n)):(t.x=s?l+=e(t,s):0,t.y=0,s=t)});var u=function(e){for(var t;t=e.children;)e=t[0];return e}(i),c=function(e){for(var t;t=e.children;)e=t[t.length-1];return e}(i),d=u.x-e(u,c)/2,f=c.x+e(c,u)/2;return i.eachAfter(a?function(e){e.x=(e.x-i.x)*t,e.y=(i.y-e.y)*n}:function(e){e.x=(e.x-d)/(f-d)*t,e.y=(1-(i.y?e.y/i.y:1))*n})}return s.separation=function(t){return arguments.length?(e=t,s):e},s.size=function(e){return arguments.length?(a=!1,t=+e[0],n=+e[1],s):a?null:[t,n]},s.nodeSize=function(e){return arguments.length?(a=!0,t=+e[0],n=+e[1],s):a?[t,n]:null},s};function s(e){var t=0,n=e.children,i=n&&n.length;if(i)for(;--i>=0;)t+=n[i].value;else t=1;e.value=t}function l(e,t){var n,i,r,o,a,s=new f(e),l=+e.value&&(s.value=e.value),c=[s];for(null==t&&(t=u);n=c.pop();)if(l&&(n.value=+n.data.value),(r=t(n.data))&&(a=r.length))for(n.children=new Array(a),o=a-1;o>=0;--o)c.push(i=n.children[o]=new f(r[o])),i.parent=n,i.depth=n.depth+1;return s.eachBefore(d)}function u(e){return e.children}function c(e){e.data=e.data.data}function d(e){var t=0;do{e.height=t}while((e=e.parent)&&e.height<++t)}function f(e){this.data=e,this.depth=this.height=0,this.parent=null}f.prototype=l.prototype={constructor:f,count:function(){return this.eachAfter(s)},each:function(e){var t,n,i,r,o=this,a=[o];do{for(t=a.reverse(),a=[];o=t.pop();)if(e(o),n=o.children)for(i=0,r=n.length;i<r;++i)a.push(n[i])}while(a.length);return this},eachAfter:function(e){for(var t,n,i,r=this,o=[r],a=[];r=o.pop();)if(a.push(r),t=r.children)for(n=0,i=t.length;n<i;++n)o.push(t[n]);for(;r=a.pop();)e(r);return this},eachBefore:function(e){for(var t,n,i=this,r=[i];i=r.pop();)if(e(i),t=i.children)for(n=t.length-1;n>=0;--n)r.push(t[n]);return this},sum:function(e){return this.eachAfter(function(t){for(var n=+e(t.data)||0,i=t.children,r=i&&i.length;--r>=0;)n+=i[r].value;t.value=n})},sort:function(e){return this.eachBefore(function(t){t.children&&t.children.sort(e)})},path:function(e){for(var t=this,n=function(e,t){if(e===t)return e;var n=e.ancestors(),i=t.ancestors(),r=null;for(e=n.pop(),t=i.pop();e===t;)r=e,e=n.pop(),t=i.pop();return r}(t,e),i=[t];t!==n;)t=t.parent,i.push(t);for(var r=i.length;e!==n;)i.splice(r,0,e),e=e.parent;return i},ancestors:function(){for(var e=this,t=[e];e=e.parent;)t.push(e);return t},descendants:function(){var e=[];return this.each(function(t){e.push(t)}),e},leaves:function(){var e=[];return this.eachBefore(function(t){t.children||e.push(t)}),e},links:function(){var e=this,t=[];return e.each(function(n){n!==e&&t.push({source:n.parent,target:n})}),t},copy:function(){return l(this).eachBefore(c)}};var h=Array.prototype.slice;var p=function(e){for(var t,n,i=0,r=(e=function(e){for(var t,n,i=e.length;i;)n=Math.random()*i--|0,t=e[i],e[i]=e[n],e[n]=t;return e}(h.call(e))).length,o=[];i<r;)t=e[i],n&&y(n,t)?++i:(n=v(o=g(o,t)),i=0);return n};function g(e,t){var n,i;if(b(t,e))return[t];for(n=0;n<e.length;++n)if(m(t,e[n])&&b(_(e[n],t),e))return[e[n],t];for(n=0;n<e.length-1;++n)for(i=n+1;i<e.length;++i)if(m(_(e[n],e[i]),t)&&m(_(e[n],t),e[i])&&m(_(e[i],t),e[n])&&b(x(e[n],e[i],t),e))return[e[n],e[i],t];throw new Error}function m(e,t){var n=e.r-t.r,i=t.x-e.x,r=t.y-e.y;return n<0||n*n<i*i+r*r}function y(e,t){var n=e.r-t.r+1e-6,i=t.x-e.x,r=t.y-e.y;return n>0&&n*n>i*i+r*r}function b(e,t){for(var n=0;n<t.length;++n)if(!y(e,t[n]))return!1;return!0}function v(e){switch(e.length){case 1:return{x:(t=e[0]).x,y:t.y,r:t.r};case 2:return _(e[0],e[1]);case 3:return x(e[0],e[1],e[2])}var t}function _(e,t){var n=e.x,i=e.y,r=e.r,o=t.x,a=t.y,s=t.r,l=o-n,u=a-i,c=s-r,d=Math.sqrt(l*l+u*u);return{x:(n+o+l/d*c)/2,y:(i+a+u/d*c)/2,r:(d+r+s)/2}}function x(e,t,n){var i=e.x,r=e.y,o=e.r,a=t.x,s=t.y,l=t.r,u=n.x,c=n.y,d=n.r,f=i-a,h=i-u,p=r-s,g=r-c,m=l-o,y=d-o,b=i*i+r*r-o*o,v=b-a*a-s*s+l*l,_=b-u*u-c*c+d*d,x=h*p-f*g,w=(p*_-g*v)/(2*x)-i,k=(g*m-p*y)/x,D=(h*v-f*_)/(2*x)-r,A=(f*y-h*m)/x,O=k*k+A*A-1,C=2*(o+w*k+D*A),T=w*w+D*D-o*o,S=-(O?(C+Math.sqrt(C*C-4*O*T))/(2*O):T/C);return{x:i+w+k*S,y:r+D+A*S,r:S}}function w(e,t,n){var i,r,o,a,s=e.x-t.x,l=e.y-t.y,u=s*s+l*l;u?(r=t.r+n.r,r*=r,a=e.r+n.r,r>(a*=a)?(i=(u+a-r)/(2*u),o=Math.sqrt(Math.max(0,a/u-i*i)),n.x=e.x-i*s-o*l,n.y=e.y-i*l+o*s):(i=(u+r-a)/(2*u),o=Math.sqrt(Math.max(0,r/u-i*i)),n.x=t.x+i*s-o*l,n.y=t.y+i*l+o*s)):(n.x=t.x+n.r,n.y=t.y)}function k(e,t){var n=e.r+t.r-1e-6,i=t.x-e.x,r=t.y-e.y;return n>0&&n*n>i*i+r*r}function D(e){var t=e._,n=e.next._,i=t.r+n.r,r=(t.x*n.r+n.x*t.r)/i,o=(t.y*n.r+n.y*t.r)/i;return r*r+o*o}function A(e){this._=e,this.next=null,this.previous=null}function O(e){if(!(r=e.length))return 0;var t,n,i,r,o,a,s,l,u,c,d;if((t=e[0]).x=0,t.y=0,!(r>1))return t.r;if(n=e[1],t.x=-n.r,n.x=t.r,n.y=0,!(r>2))return t.r+n.r;w(n,t,i=e[2]),t=new A(t),n=new A(n),i=new A(i),t.next=i.previous=n,n.next=t.previous=i,i.next=n.previous=t;e:for(s=3;s<r;++s){w(t._,n._,i=e[s]),i=new A(i),l=n.next,u=t.previous,c=n._.r,d=t._.r;do{if(c<=d){if(k(l._,i._)){n=l,t.next=n,n.previous=t,--s;continue e}c+=l._.r,l=l.next}else{if(k(u._,i._)){(t=u).next=n,n.previous=t,--s;continue e}d+=u._.r,u=u.previous}}while(l!==u.next);for(i.previous=t,i.next=n,t.next=n.previous=n=i,o=D(t);(i=i.next)!==n;)(a=D(i))<o&&(t=i,o=a);n=t.next}for(t=[n._],i=n;(i=i.next)!==n;)t.push(i._);for(i=p(t),s=0;s<r;++s)(t=e[s]).x-=i.x,t.y-=i.y;return i.r}function C(e){if("function"!=typeof e)throw new Error;return e}function T(){return 0}var S=function(e){return function(){return e}};function F(e){return Math.sqrt(e.value)}var j=function(){var e=null,t=1,n=1,i=T;function r(r){return r.x=t/2,r.y=n/2,e?r.eachBefore(E(e)).eachAfter($(i,.5)).eachBefore(M(1)):r.eachBefore(E(F)).eachAfter($(T,1)).eachAfter($(i,r.r/Math.min(t,n))).eachBefore(M(Math.min(t,n)/(2*r.r))),r}return r.radius=function(t){return arguments.length?(e=null==(n=t)?null:C(n),r):e;var n},r.size=function(e){return arguments.length?(t=+e[0],n=+e[1],r):[t,n]},r.padding=function(e){return arguments.length?(i="function"==typeof e?e:S(+e),r):i},r};function E(e){return function(t){t.children||(t.r=Math.max(0,+e(t)||0))}}function $(e,t){return function(n){if(i=n.children){var i,r,o,a=i.length,s=e(n)*t||0;if(s)for(r=0;r<a;++r)i[r].r+=s;if(o=O(i),s)for(r=0;r<a;++r)i[r].r-=s;n.r=o+s}}}function M(e){return function(t){var n=t.parent;t.r*=e,n&&(t.x=n.x+e*t.x,t.y=n.y+e*t.y)}}var z=function(e){e.x0=Math.round(e.x0),e.y0=Math.round(e.y0),e.x1=Math.round(e.x1),e.y1=Math.round(e.y1)},N=function(e,t,n,i,r){for(var o,a=e.children,s=-1,l=a.length,u=e.value&&(i-t)/e.value;++s<l;)(o=a[s]).y0=n,o.y1=r,o.x0=t,o.x1=t+=o.value*u},B=function(){var e=1,t=1,n=0,i=!1;function r(r){var o=r.height+1;return r.x0=r.y0=n,r.x1=e,r.y1=t/o,r.eachBefore(function(e,t){return function(i){i.children&&N(i,i.x0,e*(i.depth+1)/t,i.x1,e*(i.depth+2)/t);var r=i.x0,o=i.y0,a=i.x1-n,s=i.y1-n;a<r&&(r=a=(r+a)/2),s<o&&(o=s=(o+s)/2),i.x0=r,i.y0=o,i.x1=a,i.y1=s}}(t,o)),i&&r.eachBefore(z),r}return r.round=function(e){return arguments.length?(i=!!e,r):i},r.size=function(n){return arguments.length?(e=+n[0],t=+n[1],r):[e,t]},r.padding=function(e){return arguments.length?(n=+e,r):n},r},P="$",I={depth:-1},L={};function q(e){return e.id}function R(e){return e.parentId}var U=function(){var e=q,t=R;function n(n){var i,r,o,a,s,l,u,c=n.length,h=new Array(c),p={};for(r=0;r<c;++r)i=n[r],s=h[r]=new f(i),null!=(l=e(i,r,n))&&(l+="")&&(p[u=P+(s.id=l)]=u in p?L:s);for(r=0;r<c;++r)if(s=h[r],null!=(l=t(n[r],r,n))&&(l+="")){if(!(a=p[P+l]))throw new Error("missing: "+l);if(a===L)throw new Error("ambiguous: "+l);a.children?a.children.push(s):a.children=[s],s.parent=a}else{if(o)throw new Error("multiple roots");o=s}if(!o)throw new Error("no root");if(o.parent=I,o.eachBefore(function(e){e.depth=e.parent.depth+1,--c}).eachBefore(d),o.parent=null,c>0)throw new Error("cycle");return o}return n.id=function(t){return arguments.length?(e=C(t),n):e},n.parentId=function(e){return arguments.length?(t=C(e),n):t},n};function W(e,t){return e.parent===t.parent?1:2}function V(e){var t=e.children;return t?t[0]:e.t}function H(e){var t=e.children;return t?t[t.length-1]:e.t}function Y(e,t,n){var i=n/(t.i-e.i);t.c-=i,t.s+=n,e.c+=i,t.z+=n,t.m+=n}function G(e,t,n){return e.a.parent===t.parent?e.a:n}function J(e,t){this._=e,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=t}J.prototype=Object.create(f.prototype);var X=function(){var e=W,t=1,n=1,i=null;function r(r){var l=function(e){for(var t,n,i,r,o,a=new J(e,0),s=[a];t=s.pop();)if(i=t._.children)for(t.children=new Array(o=i.length),r=o-1;r>=0;--r)s.push(n=t.children[r]=new J(i[r],r)),n.parent=t;return(a.parent=new J(null,0)).children=[a],a}(r);if(l.eachAfter(o),l.parent.m=-l.z,l.eachBefore(a),i)r.eachBefore(s);else{var u=r,c=r,d=r;r.eachBefore(function(e){e.x<u.x&&(u=e),e.x>c.x&&(c=e),e.depth>d.depth&&(d=e)});var f=u===c?1:e(u,c)/2,h=f-u.x,p=t/(c.x+f+h),g=n/(d.depth||1);r.eachBefore(function(e){e.x=(e.x+h)*p,e.y=e.depth*g})}return r}function o(t){var n=t.children,i=t.parent.children,r=t.i?i[t.i-1]:null;if(n){!function(e){for(var t,n=0,i=0,r=e.children,o=r.length;--o>=0;)(t=r[o]).z+=n,t.m+=n,n+=t.s+(i+=t.c)}(t);var o=(n[0].z+n[n.length-1].z)/2;r?(t.z=r.z+e(t._,r._),t.m=t.z-o):t.z=o}else r&&(t.z=r.z+e(t._,r._));t.parent.A=function(t,n,i){if(n){for(var r,o=t,a=t,s=n,l=o.parent.children[0],u=o.m,c=a.m,d=s.m,f=l.m;s=H(s),o=V(o),s&&o;)l=V(l),(a=H(a)).a=t,(r=s.z+d-o.z-u+e(s._,o._))>0&&(Y(G(s,t,i),t,r),u+=r,c+=r),d+=s.m,u+=o.m,f+=l.m,c+=a.m;s&&!H(a)&&(a.t=s,a.m+=d-c),o&&!V(l)&&(l.t=o,l.m+=u-f,i=t)}return i}(t,r,t.parent.A||i[0])}function a(e){e._.x=e.z+e.parent.m,e.m+=e.parent.m}function s(e){e.x*=t,e.y=e.depth*n}return r.separation=function(t){return arguments.length?(e=t,r):e},r.size=function(e){return arguments.length?(i=!1,t=+e[0],n=+e[1],r):i?null:[t,n]},r.nodeSize=function(e){return arguments.length?(i=!0,t=+e[0],n=+e[1],r):i?[t,n]:null},r},Q=function(e,t,n,i,r){for(var o,a=e.children,s=-1,l=a.length,u=e.value&&(r-n)/e.value;++s<l;)(o=a[s]).x0=t,o.x1=i,o.y0=n,o.y1=n+=o.value*u},K=(1+Math.sqrt(5))/2;function Z(e,t,n,i,r,o){for(var a,s,l,u,c,d,f,h,p,g,m,y=[],b=t.children,v=0,_=0,x=b.length,w=t.value;v<x;){l=r-n,u=o-i;do{c=b[_++].value}while(!c&&_<x);for(d=f=c,m=c*c*(g=Math.max(u/l,l/u)/(w*e)),p=Math.max(f/m,m/d);_<x;++_){if(c+=s=b[_].value,s<d&&(d=s),s>f&&(f=s),m=c*c*g,(h=Math.max(f/m,m/d))>p){c-=s;break}p=h}y.push(a={value:c,dice:l<u,children:b.slice(v,_)}),a.dice?N(a,n,i,r,w?i+=u*c/w:o):Q(a,n,i,w?n+=l*c/w:r,o),w-=c,v=_}return y}var ee=function e(t){function n(e,n,i,r,o){Z(t,e,n,i,r,o)}return n.ratio=function(t){return e((t=+t)>1?t:1)},n}(K),te=function(){var e=ee,t=!1,n=1,i=1,r=[0],o=T,a=T,s=T,l=T,u=T;function c(e){return e.x0=e.y0=0,e.x1=n,e.y1=i,e.eachBefore(d),r=[0],t&&e.eachBefore(z),e}function d(t){var n=r[t.depth],i=t.x0+n,c=t.y0+n,d=t.x1-n,f=t.y1-n;d<i&&(i=d=(i+d)/2),f<c&&(c=f=(c+f)/2),t.x0=i,t.y0=c,t.x1=d,t.y1=f,t.children&&(n=r[t.depth+1]=o(t)/2,i+=u(t)-n,c+=a(t)-n,(d-=s(t)-n)<i&&(i=d=(i+d)/2),(f-=l(t)-n)<c&&(c=f=(c+f)/2),e(t,i,c,d,f))}return c.round=function(e){return arguments.length?(t=!!e,c):t},c.size=function(e){return arguments.length?(n=+e[0],i=+e[1],c):[n,i]},c.tile=function(t){return arguments.length?(e=C(t),c):e},c.padding=function(e){return arguments.length?c.paddingInner(e).paddingOuter(e):c.paddingInner()},c.paddingInner=function(e){return arguments.length?(o="function"==typeof e?e:S(+e),c):o},c.paddingOuter=function(e){return arguments.length?c.paddingTop(e).paddingRight(e).paddingBottom(e).paddingLeft(e):c.paddingTop()},c.paddingTop=function(e){return arguments.length?(a="function"==typeof e?e:S(+e),c):a},c.paddingRight=function(e){return arguments.length?(s="function"==typeof e?e:S(+e),c):s},c.paddingBottom=function(e){return arguments.length?(l="function"==typeof e?e:S(+e),c):l},c.paddingLeft=function(e){return arguments.length?(u="function"==typeof e?e:S(+e),c):u},c},ne=function(e,t,n,i,r){var o,a,s=e.children,l=s.length,u=new Array(l+1);for(u[0]=a=o=0;o<l;++o)u[o+1]=a+=s[o].value;!function e(t,n,i,r,o,a,l){if(t>=n-1){var c=s[t];return c.x0=r,c.y0=o,c.x1=a,void(c.y1=l)}var d=u[t],f=i/2+d,h=t+1,p=n-1;for(;h<p;){var g=h+p>>>1;u[g]<f?h=g+1:p=g}f-u[h-1]<u[h]-f&&t+1<h&&--h;var m=u[h]-d,y=i-m;if(a-r>l-o){var b=(r*y+a*m)/i;e(t,h,m,r,o,b,l),e(h,n,y,b,o,a,l)}else{var v=(o*y+l*m)/i;e(t,h,m,r,o,a,v),e(h,n,y,r,v,a,l)}}(0,l,e.value,t,n,i,r)},ie=function(e,t,n,i,r){(1&e.depth?Q:N)(e,t,n,i,r)},re=function e(t){function n(e,n,i,r,o){if((a=e._squarify)&&a.ratio===t)for(var a,s,l,u,c,d=-1,f=a.length,h=e.value;++d<f;){for(l=(s=a[d]).children,u=s.value=0,c=l.length;u<c;++u)s.value+=l[u].value;s.dice?N(s,n,i,r,i+=(o-i)*s.value/h):Q(s,n,i,n+=(r-n)*s.value/h,o),h-=s.value}else e._squarify=a=Z(t,e,n,i,r,o),a.ratio=t}return n.ratio=function(t){return e((t=+t)>1?t:1)},n}(K);n.d(t,"a",function(){return a}),n.d(t,"b",function(){return l}),n.d(t,"c",function(){return j}),n.d(t,"d",function(){return B}),n.d(t,"e",function(){return U}),n.d(t,"f",function(){return X}),n.d(t,"g",function(){return te}),n.d(t,"h",function(){return ne}),n.d(t,"i",function(){return N}),n.d(t,"k",function(){return Q}),n.d(t,"l",function(){return ie}),n.d(t,"m",function(){return ee}),n.d(t,"j",function(){return re})},119:function(e,t,n){"use strict";var i=Math.PI,r=2*i,o=r-1e-6;function a(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function s(){return new a}a.prototype=s.prototype={constructor:a,moveTo:function(e,t){this._+="M"+(this._x0=this._x1=+e)+","+(this._y0=this._y1=+t)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(e,t){this._+="L"+(this._x1=+e)+","+(this._y1=+t)},quadraticCurveTo:function(e,t,n,i){this._+="Q"+ +e+","+ +t+","+(this._x1=+n)+","+(this._y1=+i)},bezierCurveTo:function(e,t,n,i,r,o){this._+="C"+ +e+","+ +t+","+ +n+","+ +i+","+(this._x1=+r)+","+(this._y1=+o)},arcTo:function(e,t,n,r,o){e=+e,t=+t,n=+n,r=+r,o=+o;var a=this._x1,s=this._y1,l=n-e,u=r-t,c=a-e,d=s-t,f=c*c+d*d;if(o<0)throw new Error("negative radius: "+o);if(null===this._x1)this._+="M"+(this._x1=e)+","+(this._y1=t);else if(f>1e-6)if(Math.abs(d*l-u*c)>1e-6&&o){var h=n-a,p=r-s,g=l*l+u*u,m=h*h+p*p,y=Math.sqrt(g),b=Math.sqrt(f),v=o*Math.tan((i-Math.acos((g+f-m)/(2*y*b)))/2),_=v/b,x=v/y;Math.abs(_-1)>1e-6&&(this._+="L"+(e+_*c)+","+(t+_*d)),this._+="A"+o+","+o+",0,0,"+ +(d*h>c*p)+","+(this._x1=e+x*l)+","+(this._y1=t+x*u)}else this._+="L"+(this._x1=e)+","+(this._y1=t);else;},arc:function(e,t,n,a,s,l){e=+e,t=+t;var u=(n=+n)*Math.cos(a),c=n*Math.sin(a),d=e+u,f=t+c,h=1^l,p=l?a-s:s-a;if(n<0)throw new Error("negative radius: "+n);null===this._x1?this._+="M"+d+","+f:(Math.abs(this._x1-d)>1e-6||Math.abs(this._y1-f)>1e-6)&&(this._+="L"+d+","+f),n&&(p<0&&(p=p%r+r),p>o?this._+="A"+n+","+n+",0,1,"+h+","+(e-u)+","+(t-c)+"A"+n+","+n+",0,1,"+h+","+(this._x1=d)+","+(this._y1=f):p>1e-6&&(this._+="A"+n+","+n+",0,"+ +(p>=i)+","+h+","+(this._x1=e+n*Math.cos(s))+","+(this._y1=t+n*Math.sin(s))))},rect:function(e,t,n,i){this._+="M"+(this._x0=this._x1=+e)+","+(this._y0=this._y1=+t)+"h"+ +n+"v"+ +i+"h"+-n+"Z"},toString:function(){return this._}};var l=s;n.d(t,"a",function(){return l})},122:function(e,t,n){"use strict";var i=n(33);function r(e){if(0<=e.y&&e.y<100){var t=new Date(-1,e.m,e.d,e.H,e.M,e.S,e.L);return t.setFullYear(e.y),t}return new Date(e.y,e.m,e.d,e.H,e.M,e.S,e.L)}function o(e){if(0<=e.y&&e.y<100){var t=new Date(Date.UTC(-1,e.m,e.d,e.H,e.M,e.S,e.L));return t.setUTCFullYear(e.y),t}return new Date(Date.UTC(e.y,e.m,e.d,e.H,e.M,e.S,e.L))}function a(e){return{y:e,m:0,d:1,H:0,M:0,S:0,L:0}}var s,l,u,c,d,f={"-":"",_:" ",0:"0"},h=/^\s*\d+/,p=/^%/,g=/[\\^$*+?|[\]().{}]/g;function m(e,t,n){var i=e<0?"-":"",r=(i?-e:e)+"",o=r.length;return i+(o<n?new Array(n-o+1).join(t)+r:r)}function y(e){return e.replace(g,"\\$&")}function b(e){return new RegExp("^(?:"+e.map(y).join("|")+")","i")}function v(e){for(var t={},n=-1,i=e.length;++n<i;)t[e[n].toLowerCase()]=n;return t}function _(e,t,n){var i=h.exec(t.slice(n,n+1));return i?(e.w=+i[0],n+i[0].length):-1}function x(e,t,n){var i=h.exec(t.slice(n,n+1));return i?(e.u=+i[0],n+i[0].length):-1}function w(e,t,n){var i=h.exec(t.slice(n,n+2));return i?(e.U=+i[0],n+i[0].length):-1}function k(e,t,n){var i=h.exec(t.slice(n,n+2));return i?(e.V=+i[0],n+i[0].length):-1}function D(e,t,n){var i=h.exec(t.slice(n,n+2));return i?(e.W=+i[0],n+i[0].length):-1}function A(e,t,n){var i=h.exec(t.slice(n,n+4));return i?(e.y=+i[0],n+i[0].length):-1}function O(e,t,n){var i=h.exec(t.slice(n,n+2));return i?(e.y=+i[0]+(+i[0]>68?1900:2e3),n+i[0].length):-1}function C(e,t,n){var i=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(t.slice(n,n+6));return i?(e.Z=i[1]?0:-(i[2]+(i[3]||"00")),n+i[0].length):-1}function T(e,t,n){var i=h.exec(t.slice(n,n+2));return i?(e.m=i[0]-1,n+i[0].length):-1}function S(e,t,n){var i=h.exec(t.slice(n,n+2));return i?(e.d=+i[0],n+i[0].length):-1}function F(e,t,n){var i=h.exec(t.slice(n,n+3));return i?(e.m=0,e.d=+i[0],n+i[0].length):-1}function j(e,t,n){var i=h.exec(t.slice(n,n+2));return i?(e.H=+i[0],n+i[0].length):-1}function E(e,t,n){var i=h.exec(t.slice(n,n+2));return i?(e.M=+i[0],n+i[0].length):-1}function $(e,t,n){var i=h.exec(t.slice(n,n+2));return i?(e.S=+i[0],n+i[0].length):-1}function M(e,t,n){var i=h.exec(t.slice(n,n+3));return i?(e.L=+i[0],n+i[0].length):-1}function z(e,t,n){var i=h.exec(t.slice(n,n+6));return i?(e.L=Math.floor(i[0]/1e3),n+i[0].length):-1}function N(e,t,n){var i=p.exec(t.slice(n,n+1));return i?n+i[0].length:-1}function B(e,t,n){var i=h.exec(t.slice(n));return i?(e.Q=+i[0],n+i[0].length):-1}function P(e,t,n){var i=h.exec(t.slice(n));return i?(e.Q=1e3*+i[0],n+i[0].length):-1}function I(e,t){return m(e.getDate(),t,2)}function L(e,t){return m(e.getHours(),t,2)}function q(e,t){return m(e.getHours()%12||12,t,2)}function R(e,t){return m(1+i.a.count(Object(i.k)(e),e),t,3)}function U(e,t){return m(e.getMilliseconds(),t,3)}function W(e,t){return U(e,t)+"000"}function V(e,t){return m(e.getMonth()+1,t,2)}function H(e,t){return m(e.getMinutes(),t,2)}function Y(e,t){return m(e.getSeconds(),t,2)}function G(e){var t=e.getDay();return 0===t?7:t}function J(e,t){return m(i.h.count(Object(i.k)(e),e),t,2)}function X(e,t){var n=e.getDay();return e=n>=4||0===n?Object(i.i)(e):i.i.ceil(e),m(i.i.count(Object(i.k)(e),e)+(4===Object(i.k)(e).getDay()),t,2)}function Q(e){return e.getDay()}function K(e,t){return m(i.e.count(Object(i.k)(e),e),t,2)}function Z(e,t){return m(e.getFullYear()%100,t,2)}function ee(e,t){return m(e.getFullYear()%1e4,t,4)}function te(e){var t=e.getTimezoneOffset();return(t>0?"-":(t*=-1,"+"))+m(t/60|0,"0",2)+m(t%60,"0",2)}function ne(e,t){return m(e.getUTCDate(),t,2)}function ie(e,t){return m(e.getUTCHours(),t,2)}function re(e,t){return m(e.getUTCHours()%12||12,t,2)}function oe(e,t){return m(1+i.l.count(Object(i.v)(e),e),t,3)}function ae(e,t){return m(e.getUTCMilliseconds(),t,3)}function se(e,t){return ae(e,t)+"000"}function le(e,t){return m(e.getUTCMonth()+1,t,2)}function ue(e,t){return m(e.getUTCMinutes(),t,2)}function ce(e,t){return m(e.getUTCSeconds(),t,2)}function de(e){var t=e.getUTCDay();return 0===t?7:t}function fe(e,t){return m(i.s.count(Object(i.v)(e),e),t,2)}function he(e,t){var n=e.getUTCDay();return e=n>=4||0===n?Object(i.t)(e):i.t.ceil(e),m(i.t.count(Object(i.v)(e),e)+(4===Object(i.v)(e).getUTCDay()),t,2)}function pe(e){return e.getUTCDay()}function ge(e,t){return m(i.p.count(Object(i.v)(e),e),t,2)}function me(e,t){return m(e.getUTCFullYear()%100,t,2)}function ye(e,t){return m(e.getUTCFullYear()%1e4,t,4)}function be(){return"+0000"}function ve(){return"%"}function _e(e){return+e}function xe(e){return Math.floor(+e/1e3)}s=function(e){var t=e.dateTime,n=e.date,s=e.time,l=e.periods,u=e.days,c=e.shortDays,d=e.months,h=e.shortMonths,p=b(l),g=v(l),m=b(u),y=v(u),we=b(c),ke=v(c),De=b(d),Ae=v(d),Oe=b(h),Ce=v(h),Te={a:function(e){return c[e.getDay()]},A:function(e){return u[e.getDay()]},b:function(e){return h[e.getMonth()]},B:function(e){return d[e.getMonth()]},c:null,d:I,e:I,f:W,H:L,I:q,j:R,L:U,m:V,M:H,p:function(e){return l[+(e.getHours()>=12)]},Q:_e,s:xe,S:Y,u:G,U:J,V:X,w:Q,W:K,x:null,X:null,y:Z,Y:ee,Z:te,"%":ve},Se={a:function(e){return c[e.getUTCDay()]},A:function(e){return u[e.getUTCDay()]},b:function(e){return h[e.getUTCMonth()]},B:function(e){return d[e.getUTCMonth()]},c:null,d:ne,e:ne,f:se,H:ie,I:re,j:oe,L:ae,m:le,M:ue,p:function(e){return l[+(e.getUTCHours()>=12)]},Q:_e,s:xe,S:ce,u:de,U:fe,V:he,w:pe,W:ge,x:null,X:null,y:me,Y:ye,Z:be,"%":ve},Fe={a:function(e,t,n){var i=we.exec(t.slice(n));return i?(e.w=ke[i[0].toLowerCase()],n+i[0].length):-1},A:function(e,t,n){var i=m.exec(t.slice(n));return i?(e.w=y[i[0].toLowerCase()],n+i[0].length):-1},b:function(e,t,n){var i=Oe.exec(t.slice(n));return i?(e.m=Ce[i[0].toLowerCase()],n+i[0].length):-1},B:function(e,t,n){var i=De.exec(t.slice(n));return i?(e.m=Ae[i[0].toLowerCase()],n+i[0].length):-1},c:function(e,n,i){return $e(e,t,n,i)},d:S,e:S,f:z,H:j,I:j,j:F,L:M,m:T,M:E,p:function(e,t,n){var i=p.exec(t.slice(n));return i?(e.p=g[i[0].toLowerCase()],n+i[0].length):-1},Q:B,s:P,S:$,u:x,U:w,V:k,w:_,W:D,x:function(e,t,i){return $e(e,n,t,i)},X:function(e,t,n){return $e(e,s,t,n)},y:O,Y:A,Z:C,"%":N};function je(e,t){return function(n){var i,r,o,a=[],s=-1,l=0,u=e.length;for(n instanceof Date||(n=new Date(+n));++s<u;)37===e.charCodeAt(s)&&(a.push(e.slice(l,s)),null!=(r=f[i=e.charAt(++s)])?i=e.charAt(++s):r="e"===i?" ":"0",(o=t[i])&&(i=o(n,r)),a.push(i),l=s+1);return a.push(e.slice(l,s)),a.join("")}}function Ee(e,t){return function(n){var r,s,l=a(1900);if($e(l,e,n+="",0)!=n.length)return null;if("Q"in l)return new Date(l.Q);if("p"in l&&(l.H=l.H%12+12*l.p),"V"in l){if(l.V<1||l.V>53)return null;"w"in l||(l.w=1),"Z"in l?(s=(r=o(a(l.y))).getUTCDay(),r=s>4||0===s?i.p.ceil(r):Object(i.p)(r),r=i.l.offset(r,7*(l.V-1)),l.y=r.getUTCFullYear(),l.m=r.getUTCMonth(),l.d=r.getUTCDate()+(l.w+6)%7):(s=(r=t(a(l.y))).getDay(),r=s>4||0===s?i.e.ceil(r):Object(i.e)(r),r=i.a.offset(r,7*(l.V-1)),l.y=r.getFullYear(),l.m=r.getMonth(),l.d=r.getDate()+(l.w+6)%7)}else("W"in l||"U"in l)&&("w"in l||(l.w="u"in l?l.u%7:"W"in l?1:0),s="Z"in l?o(a(l.y)).getUTCDay():t(a(l.y)).getDay(),l.m=0,l.d="W"in l?(l.w+6)%7+7*l.W-(s+5)%7:l.w+7*l.U-(s+6)%7);return"Z"in l?(l.H+=l.Z/100|0,l.M+=l.Z%100,o(l)):t(l)}}function $e(e,t,n,i){for(var r,o,a=0,s=t.length,l=n.length;a<s;){if(i>=l)return-1;if(37===(r=t.charCodeAt(a++))){if(r=t.charAt(a++),!(o=Fe[r in f?t.charAt(a++):r])||(i=o(e,n,i))<0)return-1}else if(r!=n.charCodeAt(i++))return-1}return i}return Te.x=je(n,Te),Te.X=je(s,Te),Te.c=je(t,Te),Se.x=je(n,Se),Se.X=je(s,Se),Se.c=je(t,Se),{format:function(e){var t=je(e+="",Te);return t.toString=function(){return e},t},parse:function(e){var t=Ee(e+="",r);return t.toString=function(){return e},t},utcFormat:function(e){var t=je(e+="",Se);return t.toString=function(){return e},t},utcParse:function(e){var t=Ee(e,o);return t.toString=function(){return e},t}}}({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}),l=s.format,u=s.parse,c=s.utcFormat,d=s.utcParse;Date.prototype.toISOString||c("%Y-%m-%dT%H:%M:%S.%LZ");+new Date("2000-01-01T00:00:00.000Z")||d("%Y-%m-%dT%H:%M:%S.%LZ");n.d(t,"a",function(){return l}),n.d(t,"b",function(){return u}),n.d(t,"c",function(){return c}),n.d(t,"d",function(){return d})},14:function(e,t,n){"use strict";var i=function(e,t,n){return e.fields=t||[],e.fname=n,e};var r=function(e){throw Error(e)},o=function(e){var t,n,i,o=[],a=null,s=0,l=e.length,u="";function c(){o.push(u+e.substring(t,n)),u="",t=n+1}for(e+="",t=n=0;n<l;++n)if("\\"===(i=e[n]))u+=e.substring(t,n),t=++n;else if(i===a)c(),a=null,s=-1;else{if(a)continue;t===s&&'"'===i?(t=n+1,a=i):t===s&&"'"===i?(t=n+1,a=i):"."!==i||s?"["===i?(n>t&&c(),s=t=n+1):"]"===i&&(s||r("Access path missing open bracket: "+e),s>0&&c(),s=0,t=n+1):n>t?c():t=n+1}return s&&r("Access path missing closing bracket: "+e),a&&r("Access path missing closing quote: "+e),n>t&&(n++,c()),o},a=Array.isArray,s=function(e){return e===Object(e)},l=function(e){return"string"==typeof e};function u(e){return a(e)?"["+e.map(u)+"]":s(e)||l(e)?JSON.stringify(e).replace("\u2028","\\u2028").replace("\u2029","\\u2029"):e}var c,d,f,h,p=[],g=(f=o(c="id"),h="return _["+f.map(u).join("][")+"];",i(Function("_",h),[c=1===f.length?f[0]:c],d||c),i(function(e){return e},p,"identity"));i(function(){return 0},p,"zero"),i(function(){return 1},p,"one"),i(function(){return!0},p,"true"),i(function(){return!1},p,"false");function m(e,t,n){var i=[t].concat([].slice.call(n));console[e].apply(console,i)}var y=function(e){var t=e||0;return{level:function(e){return arguments.length?(t=+e,this):t},error:function(){return t>=1&&m("error","ERROR",arguments),this},warn:function(){return t>=2&&m("warn","WARN",arguments),this},info:function(){return t>=3&&m("log","INFO",arguments),this},debug:function(){return t>=4&&m("log","DEBUG",arguments),this}}};var b=function(e){return null!=e?a(e)?e:[e]:[]},v=function(e){return"function"==typeof e},_=function(e){return"boolean"==typeof e},x=function(e){return"number"==typeof e};var w=function(e){for(var t={},n=0,i=e.length;n<i;++n)t[e[n]]=!0;return t};n.d(t,"d",function(){return g}),n.d(t,"k",function(){return y}),n.d(t,"a",function(){return 2}),n.d(t,"b",function(){return b}),n.d(t,"c",function(){return r}),n.d(t,"e",function(){return a}),n.d(t,"f",function(){return _}),n.d(t,"g",function(){return v}),n.d(t,"h",function(){return x}),n.d(t,"i",function(){return s}),n.d(t,"j",function(){return l}),n.d(t,"l",function(){return o}),n.d(t,"m",function(){return u}),n.d(t,"n",function(){return w})},143:function(e,t,n){"use strict";n.r(t);var i=n(74);function r(e,t,n,i,r){var o=e*e,a=o*e;return((1-3*e+3*o-a)*t+(4-6*o+3*a)*n+(1+3*e+3*o-3*a)*i+a*r)/6}var o=function(e){var t=e.length-1;return function(n){var i=n<=0?n=0:n>=1?(n=1,t-1):Math.floor(n*t),o=e[i],a=e[i+1],s=i>0?e[i-1]:2*o-a,l=i<t-1?e[i+2]:2*a-o;return r((n-i/t)*t,s,o,a,l)}},a=function(e){var t=e.length;return function(n){var i=Math.floor(((n%=1)<0?++n:n)*t),o=e[(i+t-1)%t],a=e[i%t],s=e[(i+1)%t],l=e[(i+2)%t];return r((n-i/t)*t,o,a,s,l)}},s=function(e){return function(){return e}};function l(e,t){return function(n){return e+n*t}}function u(e,t){var n=t-e;return n?l(e,n>180||n<-180?n-360*Math.round(n/360):n):s(isNaN(e)?t:e)}function c(e){return 1==(e=+e)?d:function(t,n){return n-t?function(e,t,n){return e=Math.pow(e,n),t=Math.pow(t,n)-e,n=1/n,function(i){return Math.pow(e+i*t,n)}}(t,n,e):s(isNaN(t)?n:t)}}function d(e,t){var n=t-e;return n?l(e,n):s(isNaN(e)?t:e)}var f=function e(t){var n=c(t);function r(e,t){var r=n((e=Object(i.f)(e)).r,(t=Object(i.f)(t)).r),o=n(e.g,t.g),a=n(e.b,t.b),s=d(e.opacity,t.opacity);return function(t){return e.r=r(t),e.g=o(t),e.b=a(t),e.opacity=s(t),e+""}}return r.gamma=e,r}(1);function h(e){return function(t){var n,r,o=t.length,a=new Array(o),s=new Array(o),l=new Array(o);for(n=0;n<o;++n)r=Object(i.f)(t[n]),a[n]=r.r||0,s[n]=r.g||0,l[n]=r.b||0;return a=e(a),s=e(s),l=e(l),r.opacity=1,function(e){return r.r=a(e),r.g=s(e),r.b=l(e),r+""}}}var p=h(o),g=h(a),m=function(e,t){var n,i=t?t.length:0,r=e?Math.min(i,e.length):0,o=new Array(r),a=new Array(i);for(n=0;n<r;++n)o[n]=C(e[n],t[n]);for(;n<i;++n)a[n]=t[n];return function(e){for(n=0;n<r;++n)a[n]=o[n](e);return a}},y=function(e,t){var n=new Date;return t-=e=+e,function(i){return n.setTime(e+t*i),n}},b=function(e,t){return t-=e=+e,function(n){return e+t*n}},v=function(e,t){var n,i={},r={};for(n in null!==e&&"object"==typeof e||(e={}),null!==t&&"object"==typeof t||(t={}),t)n in e?i[n]=C(e[n],t[n]):r[n]=t[n];return function(e){for(n in i)r[n]=i[n](e);return r}},_=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,x=new RegExp(_.source,"g");var w,k,D,A,O=function(e,t){var n,i,r,o=_.lastIndex=x.lastIndex=0,a=-1,s=[],l=[];for(e+="",t+="";(n=_.exec(e))&&(i=x.exec(t));)(r=i.index)>o&&(r=t.slice(o,r),s[a]?s[a]+=r:s[++a]=r),(n=n[0])===(i=i[0])?s[a]?s[a]+=i:s[++a]=i:(s[++a]=null,l.push({i:a,x:b(n,i)})),o=x.lastIndex;return o<t.length&&(r=t.slice(o),s[a]?s[a]+=r:s[++a]=r),s.length<2?l[0]?function(e){return function(t){return e(t)+""}}(l[0].x):function(e){return function(){return e}}(t):(t=l.length,function(e){for(var n,i=0;i<t;++i)s[(n=l[i]).i]=n.x(e);return s.join("")})},C=function(e,t){var n,r=typeof t;return null==t||"boolean"===r?s(t):("number"===r?b:"string"===r?(n=Object(i.a)(t))?(t=n,f):O:t instanceof i.a?f:t instanceof Date?y:Array.isArray(t)?m:"function"!=typeof t.valueOf&&"function"!=typeof t.toString||isNaN(t)?v:b)(e,t)},T=function(e){var t=e.length;return function(n){return e[Math.max(0,Math.min(t-1,Math.floor(n*t)))]}},S=function(e,t){var n=u(+e,+t);return function(e){var t=n(e);return t-360*Math.floor(t/360)}},F=function(e,t){return t-=e=+e,function(n){return Math.round(e+t*n)}},j=180/Math.PI,E={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},$=function(e,t,n,i,r,o){var a,s,l;return(a=Math.sqrt(e*e+t*t))&&(e/=a,t/=a),(l=e*n+t*i)&&(n-=e*l,i-=t*l),(s=Math.sqrt(n*n+i*i))&&(n/=s,i/=s,l/=s),e*i<t*n&&(e=-e,t=-t,l=-l,a=-a),{translateX:r,translateY:o,rotate:Math.atan2(t,e)*j,skewX:Math.atan(l)*j,scaleX:a,scaleY:s}};function M(e,t,n,i){function r(e){return e.length?e.pop()+" ":""}return function(o,a){var s=[],l=[];return o=e(o),a=e(a),function(e,i,r,o,a,s){if(e!==r||i!==o){var l=a.push("translate(",null,t,null,n);s.push({i:l-4,x:b(e,r)},{i:l-2,x:b(i,o)})}else(r||o)&&a.push("translate("+r+t+o+n)}(o.translateX,o.translateY,a.translateX,a.translateY,s,l),function(e,t,n,o){e!==t?(e-t>180?t+=360:t-e>180&&(e+=360),o.push({i:n.push(r(n)+"rotate(",null,i)-2,x:b(e,t)})):t&&n.push(r(n)+"rotate("+t+i)}(o.rotate,a.rotate,s,l),function(e,t,n,o){e!==t?o.push({i:n.push(r(n)+"skewX(",null,i)-2,x:b(e,t)}):t&&n.push(r(n)+"skewX("+t+i)}(o.skewX,a.skewX,s,l),function(e,t,n,i,o,a){if(e!==n||t!==i){var s=o.push(r(o)+"scale(",null,",",null,")");a.push({i:s-4,x:b(e,n)},{i:s-2,x:b(t,i)})}else 1===n&&1===i||o.push(r(o)+"scale("+n+","+i+")")}(o.scaleX,o.scaleY,a.scaleX,a.scaleY,s,l),o=a=null,function(e){for(var t,n=-1,i=l.length;++n<i;)s[(t=l[n]).i]=t.x(e);return s.join("")}}}var z=M(function(e){return"none"===e?E:(w||(w=document.createElement("DIV"),k=document.documentElement,D=document.defaultView),w.style.transform=e,e=D.getComputedStyle(k.appendChild(w),null).getPropertyValue("transform"),k.removeChild(w),e=e.slice(7,-1).split(","),$(+e[0],+e[1],+e[2],+e[3],+e[4],+e[5]))},"px, ","px)","deg)"),N=M(function(e){return null==e?E:(A||(A=document.createElementNS("http://www.w3.org/2000/svg","g")),A.setAttribute("transform",e),(e=A.transform.baseVal.consolidate())?(e=e.matrix,$(e.a,e.b,e.c,e.d,e.e,e.f)):E)},", ",")",")"),B=Math.SQRT2;function P(e){return((e=Math.exp(e))+1/e)/2}var I=function(e,t){var n,i,r=e[0],o=e[1],a=e[2],s=t[0],l=t[1],u=t[2],c=s-r,d=l-o,f=c*c+d*d;if(f<1e-12)i=Math.log(u/a)/B,n=function(e){return[r+e*c,o+e*d,a*Math.exp(B*e*i)]};else{var h=Math.sqrt(f),p=(u*u-a*a+4*f)/(2*a*2*h),g=(u*u-a*a-4*f)/(2*u*2*h),m=Math.log(Math.sqrt(p*p+1)-p),y=Math.log(Math.sqrt(g*g+1)-g);i=(y-m)/B,n=function(e){var t,n=e*i,s=P(m),l=a/(2*h)*(s*(t=B*n+m,((t=Math.exp(2*t))-1)/(t+1))-function(e){return((e=Math.exp(e))-1/e)/2}(m));return[r+l*c,o+l*d,a*s/P(B*n+m)]}}return n.duration=1e3*i,n};function L(e){return function(t,n){var r=e((t=Object(i.d)(t)).h,(n=Object(i.d)(n)).h),o=d(t.s,n.s),a=d(t.l,n.l),s=d(t.opacity,n.opacity);return function(e){return t.h=r(e),t.s=o(e),t.l=a(e),t.opacity=s(e),t+""}}}var q=L(u),R=L(d);function U(e,t){var n=d((e=Object(i.e)(e)).l,(t=Object(i.e)(t)).l),r=d(e.a,t.a),o=d(e.b,t.b),a=d(e.opacity,t.opacity);return function(t){return e.l=n(t),e.a=r(t),e.b=o(t),e.opacity=a(t),e+""}}function W(e){return function(t,n){var r=e((t=Object(i.c)(t)).h,(n=Object(i.c)(n)).h),o=d(t.c,n.c),a=d(t.l,n.l),s=d(t.opacity,n.opacity);return function(e){return t.h=r(e),t.c=o(e),t.l=a(e),t.opacity=s(e),t+""}}}var V=W(u),H=W(d);function Y(e){return function t(n){function r(t,r){var o=e((t=Object(i.b)(t)).h,(r=Object(i.b)(r)).h),a=d(t.s,r.s),s=d(t.l,r.l),l=d(t.opacity,r.opacity);return function(e){return t.h=o(e),t.s=a(e),t.l=s(Math.pow(e,n)),t.opacity=l(e),t+""}}return n=+n,r.gamma=t,r}(1)}var G=Y(u),J=Y(d);function X(e,t){for(var n=0,i=t.length-1,r=t[0],o=new Array(i<0?0:i);n<i;)o[n]=e(r,r=t[++n]);return function(e){var t=Math.max(0,Math.min(i-1,Math.floor(e*=i)));return o[t](e-t)}}var Q=function(e,t){for(var n=new Array(t),i=0;i<t;++i)n[i]=e(i/(t-1));return n};n.d(t,"interpolate",function(){return C}),n.d(t,"interpolateArray",function(){return m}),n.d(t,"interpolateBasis",function(){return o}),n.d(t,"interpolateBasisClosed",function(){return a}),n.d(t,"interpolateDate",function(){return y}),n.d(t,"interpolateDiscrete",function(){return T}),n.d(t,"interpolateHue",function(){return S}),n.d(t,"interpolateNumber",function(){return b}),n.d(t,"interpolateObject",function(){return v}),n.d(t,"interpolateRound",function(){return F}),n.d(t,"interpolateString",function(){return O}),n.d(t,"interpolateTransformCss",function(){return z}),n.d(t,"interpolateTransformSvg",function(){return N}),n.d(t,"interpolateZoom",function(){return I}),n.d(t,"interpolateRgb",function(){return f}),n.d(t,"interpolateRgbBasis",function(){return p}),n.d(t,"interpolateRgbBasisClosed",function(){return g}),n.d(t,"interpolateHsl",function(){return q}),n.d(t,"interpolateHslLong",function(){return R}),n.d(t,"interpolateLab",function(){return U}),n.d(t,"interpolateHcl",function(){return V}),n.d(t,"interpolateHclLong",function(){return H}),n.d(t,"interpolateCubehelix",function(){return G}),n.d(t,"interpolateCubehelixLong",function(){return J}),n.d(t,"piecewise",function(){return X}),n.d(t,"quantize",function(){return Q})},144:function(e,t,n){"use strict";n.r(t);var i={};n.r(i),n.d(i,"AGGREGATE_OPS",function(){return S}),n.d(i,"isAggregateOp",function(){return F}),n.d(i,"COUNTING_OPS",function(){return j}),n.d(i,"isCountingAggregateOp",function(){return E}),n.d(i,"isMinMaxOp",function(){return $}),n.d(i,"SUM_OPS",function(){return M}),n.d(i,"SHARED_DOMAIN_OPS",function(){return z}),n.d(i,"SHARED_DOMAIN_OP_INDEX",function(){return N});var r={};n.r(r),n.d(r,"AXIS_PARTS",function(){return B}),n.d(r,"AXIS_PROPERTY_TYPE",function(){return P}),n.d(r,"isAxisProperty",function(){return R}),n.d(r,"VG_AXIS_PROPERTIES",function(){return U}),n.d(r,"AXIS_PROPERTIES",function(){return W});var o={};n.r(o),n.d(o,"Channel",function(){return V}),n.d(o,"X",function(){return Y}),n.d(o,"Y",function(){return G}),n.d(o,"X2",function(){return J}),n.d(o,"Y2",function(){return X}),n.d(o,"LATITUDE",function(){return Q}),n.d(o,"LATITUDE2",function(){return K}),n.d(o,"LONGITUDE",function(){return Z}),n.d(o,"LONGITUDE2",function(){return ee}),n.d(o,"FACET",function(){return te}),n.d(o,"ROW",function(){return ne}),n.d(o,"COLUMN",function(){return ie}),n.d(o,"SHAPE",function(){return re}),n.d(o,"SIZE",function(){return oe}),n.d(o,"COLOR",function(){return ae}),n.d(o,"FILL",function(){return se}),n.d(o,"STROKE",function(){return le}),n.d(o,"TEXT",function(){return ue}),n.d(o,"DETAIL",function(){return ce}),n.d(o,"KEY",function(){return de}),n.d(o,"ORDER",function(){return fe}),n.d(o,"OPACITY",function(){return he}),n.d(o,"FILLOPACITY",function(){return pe}),n.d(o,"STROKEOPACITY",function(){return ge}),n.d(o,"STROKEWIDTH",function(){return me}),n.d(o,"TOOLTIP",function(){return ye}),n.d(o,"HREF",function(){return be}),n.d(o,"GEOPOSITION_CHANNEL_INDEX",function(){return ve}),n.d(o,"GEOPOSITION_CHANNELS",function(){return _e}),n.d(o,"isColorChannel",function(){return we}),n.d(o,"FACET_CHANNELS",function(){return De}),n.d(o,"CHANNELS",function(){return Oe}),n.d(o,"SINGLE_DEF_CHANNELS",function(){return Fe}),n.d(o,"isChannel",function(){return je}),n.d(o,"isSecondaryRangeChannel",function(){return Ee}),n.d(o,"getMainRangeChannel",function(){return $e}),n.d(o,"UNIT_CHANNELS",function(){return Me}),n.d(o,"NONPOSITION_CHANNELS",function(){return We}),n.d(o,"POSITION_SCALE_CHANNELS",function(){return He}),n.d(o,"NONPOSITION_SCALE_CHANNELS",function(){return et}),n.d(o,"isNonPositionScaleChannel",function(){return tt}),n.d(o,"supportLegend",function(){return nt}),n.d(o,"SCALE_CHANNELS",function(){return rt}),n.d(o,"isScaleChannel",function(){return ot}),n.d(o,"supportMark",function(){return at}),n.d(o,"rangeType",function(){return st});var a={};n.r(a),n.d(a,"isDateTime",function(){return pt}),n.d(a,"MONTHS",function(){return gt}),n.d(a,"SHORT_MONTHS",function(){return mt}),n.d(a,"DAYS",function(){return yt}),n.d(a,"SHORT_DAYS",function(){return bt}),n.d(a,"dateTimeExpr",function(){return vt});var s={};n.r(s),n.d(s,"TimeUnit",function(){return wt}),n.d(s,"TIMEUNIT_PARTS",function(){return Dt}),n.d(s,"isLocalSingleTimeUnit",function(){return At}),n.d(s,"isUtcSingleTimeUnit",function(){return Ct}),n.d(s,"isUTCTimeUnit",function(){return Ft}),n.d(s,"getLocalTimeUnit",function(){return jt}),n.d(s,"TIMEUNITS",function(){return $t}),n.d(s,"isTimeUnit",function(){return Mt}),n.d(s,"convert",function(){return Nt}),n.d(s,"getTimeUnitParts",function(){return Pt}),n.d(s,"containsTimeUnit",function(){return It}),n.d(s,"fieldExpr",function(){return Lt}),n.d(s,"getDateTimeComponents",function(){return qt}),n.d(s,"formatExpression",function(){return Rt}),n.d(s,"normalizeTimeUnit",function(){return Ut});var l={};n.r(l),n.d(l,"Type",function(){return Wt}),n.d(l,"TYPE_INDEX",function(){return Vt}),n.d(l,"isType",function(){return Ht}),n.d(l,"QUANTITATIVE",function(){return Yt}),n.d(l,"ORDINAL",function(){return Gt}),n.d(l,"TEMPORAL",function(){return Jt}),n.d(l,"NOMINAL",function(){return Xt}),n.d(l,"GEOJSON",function(){return Qt}),n.d(l,"getFullName",function(){return Kt});var u={};n.r(u),n.d(u,"isConditionalSelection",function(){return Zt}),n.d(u,"isRepeatRef",function(){return en}),n.d(u,"toFieldDefBase",function(){return tn}),n.d(u,"isSortableFieldDef",function(){return nn}),n.d(u,"isConditionalDef",function(){return rn}),n.d(u,"hasConditionalFieldDef",function(){return on}),n.d(u,"hasConditionalValueDef",function(){return an}),n.d(u,"isFieldDef",function(){return sn}),n.d(u,"isTypedFieldDef",function(){return ln}),n.d(u,"isStringFieldDef",function(){return un}),n.d(u,"isValueDef",function(){return cn}),n.d(u,"isScaleFieldDef",function(){return dn}),n.d(u,"isPositionFieldDef",function(){return fn}),n.d(u,"isMarkPropFieldDef",function(){return hn}),n.d(u,"isTextFieldDef",function(){return pn}),n.d(u,"vgField",function(){return gn}),n.d(u,"isDiscrete",function(){return mn}),n.d(u,"isContinuous",function(){return yn}),n.d(u,"isCount",function(){return bn}),n.d(u,"verbalTitleFormatter",function(){return vn}),n.d(u,"functionalTitleFormatter",function(){return _n}),n.d(u,"defaultTitleFormatter",function(){return xn}),n.d(u,"setTitleFormatter",function(){return kn}),n.d(u,"resetTitleFormatter",function(){return Dn}),n.d(u,"title",function(){return An}),n.d(u,"getGuide",function(){return On}),n.d(u,"defaultTitle",function(){return Cn}),n.d(u,"format",function(){return Tn}),n.d(u,"defaultType",function(){return Sn}),n.d(u,"getFieldDef",function(){return Fn}),n.d(u,"getTypedFieldDef",function(){return jn}),n.d(u,"normalize",function(){return En}),n.d(u,"normalizeFieldDef",function(){return $n}),n.d(u,"normalizeBin",function(){return Mn}),n.d(u,"channelCompatibility",function(){return Nn}),n.d(u,"isNumberFieldDef",function(){return Bn}),n.d(u,"isTimeFieldDef",function(){return Pn}),n.d(u,"valueExpr",function(){return In}),n.d(u,"valueArray",function(){return Ln}),n.d(u,"binRequiresRange",function(){return qn});var c={};n.r(c),n.d(c,"binToString",function(){return Rn}),n.d(c,"isBinning",function(){return Un}),n.d(c,"isBinned",function(){return Wn}),n.d(c,"isBinParams",function(){return Vn}),n.d(c,"autoMaxBins",function(){return Hn});var d={};n.r(d),n.d(d,"Mark",function(){return Yn}),n.d(d,"AREA",function(){return Gn}),n.d(d,"BAR",function(){return Jn}),n.d(d,"LINE",function(){return Xn}),n.d(d,"POINT",function(){return Qn}),n.d(d,"TEXT",function(){return Kn}),n.d(d,"TICK",function(){return Zn}),n.d(d,"TRAIL",function(){return ei}),n.d(d,"RECT",function(){return ti}),n.d(d,"RULE",function(){return ni}),n.d(d,"GEOSHAPE",function(){return ii}),n.d(d,"CIRCLE",function(){return ri}),n.d(d,"SQUARE",function(){return oi}),n.d(d,"isMark",function(){return si}),n.d(d,"isPathMark",function(){return li}),n.d(d,"PRIMITIVE_MARKS",function(){return ui}),n.d(d,"isMarkDef",function(){return ci}),n.d(d,"isPrimitiveMark",function(){return fi}),n.d(d,"STROKE_CONFIG",function(){return hi}),n.d(d,"FILL_CONFIG",function(){return pi}),n.d(d,"FILL_STROKE_CONFIG",function(){return gi}),n.d(d,"VL_ONLY_MARK_CONFIG_PROPERTIES",function(){return mi}),n.d(d,"VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX",function(){return yi}),n.d(d,"defaultMarkConfig",function(){return bi}),n.d(d,"defaultBarConfig",function(){return vi}),n.d(d,"defaultTickConfig",function(){return _i}),n.d(d,"getMarkType",function(){return xi});var f={};n.r(f),n.d(f,"channelHasField",function(){return Di}),n.d(f,"isAggregate",function(){return Ai}),n.d(f,"extractTransformsFromEncoding",function(){return Oi}),n.d(f,"markChannelCompatible",function(){return Ci}),n.d(f,"normalizeEncoding",function(){return Ti}),n.d(f,"isRanged",function(){return Si}),n.d(f,"fieldDefs",function(){return Fi}),n.d(f,"forEach",function(){return ji}),n.d(f,"reduce",function(){return Ei});var h={};n.r(h),n.d(h,"add",function(){return ir}),n.d(h,"remove",function(){return rr}),n.d(h,"getAllCompositeMarks",function(){return or});var p={};n.r(p),n.d(p,"defaultLegendConfig",function(){return lr}),n.d(p,"LEGEND_PROPERTIES",function(){return dr}),n.d(p,"VG_LEGEND_PROPERTIES",function(){return fr});var g={};n.r(g),n.d(g,"ScaleType",function(){return hr}),n.d(g,"SCALE_TYPES",function(){return gr}),n.d(g,"scaleCompatible",function(){return mr}),n.d(g,"scaleTypePrecedence",function(){return br}),n.d(g,"CONTINUOUS_TO_CONTINUOUS_SCALES",function(){return vr}),n.d(g,"CONTINUOUS_TO_DISCRETE_SCALES",function(){return xr}),n.d(g,"CONTINUOUS_DOMAIN_SCALES",function(){return kr}),n.d(g,"DISCRETE_DOMAIN_SCALES",function(){return Ar}),n.d(g,"TIME_SCALE_TYPES",function(){return Cr}),n.d(g,"hasDiscreteDomain",function(){return Tr}),n.d(g,"hasContinuousDomain",function(){return Sr}),n.d(g,"isContinuousToContinuous",function(){return Fr}),n.d(g,"isContinuousToDiscrete",function(){return jr}),n.d(g,"defaultScaleConfig",function(){return Er}),n.d(g,"isExtendedScheme",function(){return $r}),n.d(g,"isSelectionDomain",function(){return Mr}),n.d(g,"SCALE_PROPERTIES",function(){return Nr}),n.d(g,"NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES",function(){return Ur}),n.d(g,"SCALE_TYPE_INDEX",function(){return Wr}),n.d(g,"scaleTypeSupportProperty",function(){return Vr}),n.d(g,"channelScalePropertyIncompatability",function(){return Hr}),n.d(g,"scaleTypeSupportDataType",function(){return Yr}),n.d(g,"channelSupportScaleType",function(){return Gr}),n.d(g,"getSupportedScaleType",function(){return Jr});var m={};n.r(m),n.d(m,"defaultViewConfig",function(){return Zr}),n.d(m,"isVgScheme",function(){return eo}),n.d(m,"defaultConfig",function(){return to}),n.d(m,"initConfig",function(){return no}),n.d(m,"stripAndRedirectConfig",function(){return ao});var y={};n.r(y),n.d(y,"isUrlData",function(){return lo}),n.d(y,"isInlineData",function(){return uo}),n.d(y,"isNamedData",function(){return co}),n.d(y,"MAIN",function(){return fo}),n.d(y,"RAW",function(){return ho});var b={};n.r(b),n.d(b,"HEADER_TITLE_PROPERTIES_MAP",function(){return po}),n.d(b,"HEADER_LABEL_PROPERTIES_MAP",function(){return go}),n.d(b,"HEADER_TITLE_PROPERTIES",function(){return mo}),n.d(b,"HEADER_LABEL_PROPERTIES",function(){return yo});var v={};n.r(v),n.d(v,"isStackOffset",function(){return Oo}),n.d(v,"STACKABLE_MARKS",function(){return Co}),n.d(v,"STACK_BY_DEFAULT_MARKS",function(){return To}),n.d(v,"stack",function(){return So});var _={};n.r(_),n.d(_,"DEFAULT_SORT_OP",function(){return Lo}),n.d(_,"isSortByEncoding",function(){return qo}),n.d(_,"isSortField",function(){return Ro}),n.d(_,"isSortArray",function(){return Uo});var x={};n.r(x),n.d(x,"isAnyConcatSpec",function(){return bo}),n.d(x,"isHConcatSpec",function(){return xo}),n.d(x,"isVConcatSpec",function(){return _o}),n.d(x,"isFacetSpec",function(){return xt}),n.d(x,"isLayerSpec",function(){return wo}),n.d(x,"isRepeatSpec",function(){return ko}),n.d(x,"isUnitSpec",function(){return wi});var w={};n.r(w),n.d(w,"isFilter",function(){return na}),n.d(w,"isImputeSequence",function(){return ia}),n.d(w,"isLookup",function(){return ra}),n.d(w,"isSample",function(){return oa}),n.d(w,"isWindow",function(){return aa}),n.d(w,"isJoinAggregate",function(){return sa}),n.d(w,"isFlatten",function(){return la}),n.d(w,"isCalculate",function(){return ua}),n.d(w,"isBin",function(){return ca}),n.d(w,"isImpute",function(){return da}),n.d(w,"isTimeUnit",function(){return fa}),n.d(w,"isAggregate",function(){return ha}),n.d(w,"isStack",function(){return pa}),n.d(w,"isFold",function(){return ga}),n.d(w,"normalizeTransform",function(){return ma});var k={};n.r(k),n.d(k,"DEFAULT_REQUIRED_CHANNEL_MAP",function(){return ya}),n.d(k,"DEFAULT_SUPPORTED_CHANNEL_TYPE",function(){return ba}),n.d(k,"getEncodingMappingError",function(){return va});var D={};n.r(D),n.d(D,"symbols",function(){return $c}),n.d(D,"gradient",function(){return Mc}),n.d(D,"labels",function(){return zc});var A=n(254),O=n(14),C=n(3);const T={argmax:1,argmin:1,average:1,count:1,distinct:1,max:1,mean:1,median:1,min:1,missing:1,q1:1,q3:1,ci0:1,ci1:1,stderr:1,stdev:1,stdevp:1,sum:1,valid:1,values:1,variance:1,variancep:1},S=Object(C.flagKeys)(T);function F(e){return!!T[e]}const j=["count","valid","missing","distinct"];function E(e){return e&&Object(C.contains)(j,e)}function $(e){return e&&Object(C.contains)(["min","max"],e)}const M=["count","sum","distinct","valid","missing"],z=["mean","average","median","q1","q3","min","max"],N=Object(O.n)(z),B=["domain","grid","labels","ticks","title"],P={grid:"grid",gridColor:"grid",gridDash:"grid",gridOpacity:"grid",gridScale:"grid",gridWidth:"grid",orient:"main",bandPosition:"both",domain:"main",domainColor:"main",domainOpacity:"main",domainWidth:"main",format:"main",labelAlign:"main",labelAngle:"main",labelBaseline:"main",labelBound:"main",labelColor:"main",labelFlush:"main",labelFlushOffset:"main",labelFont:"main",labelFontSize:"main",labelFontWeight:"main",labelLimit:"main",labelOpacity:"main",labelOverlap:"main",labelPadding:"main",labels:"main",maxExtent:"main",minExtent:"main",offset:"main",position:"main",tickColor:"main",tickExtra:"main",tickOffset:"both",tickOpacity:"main",tickRound:"main",ticks:"main",tickSize:"main",title:"main",titleAlign:"main",titleAngle:"main",titleBaseline:"main",titleColor:"main",titleFont:"main",titleFontSize:"main",titleFontWeight:"main",titleLimit:"main",titleOpacity:"main",titlePadding:"main",titleX:"main",titleY:"main",tickWidth:"both",tickCount:"both",values:"both",scale:"both",zindex:"both"},I={orient:1,bandPosition:1,domain:1,domainColor:1,domainOpacity:1,domainWidth:1,format:1,grid:1,gridColor:1,gridDash:1,gridOpacity:1,gridWidth:1,labelAlign:1,labelAngle:1,labelBaseline:1,labelBound:1,labelColor:1,labelFlush:1,labelFlushOffset:1,labelFont:1,labelFontSize:1,labelFontStyle:1,labelFontWeight:1,labelLimit:1,labelOpacity:1,labelOverlap:1,labelPadding:1,labels:1,labelSeparation:1,maxExtent:1,minExtent:1,offset:1,position:1,tickColor:1,tickCount:1,tickExtra:1,tickMinStep:1,tickOffset:1,tickOpacity:1,tickRound:1,ticks:1,tickSize:1,tickWidth:1,title:1,titleAlign:1,titleAngle:1,titleBaseline:1,titleColor:1,titleFont:1,titleFontSize:1,titleFontStyle:1,titleFontWeight:1,titleLimit:1,titleOpacity:1,titlePadding:1,titleX:1,titleY:1,values:1,zindex:1},L=Object.assign({},I,{encoding:1}),q=Object.assign({gridScale:1,scale:1},I,{encode:1});function R(e){return!!L[e]}const U=Object(C.flagKeys)(q),W=Object(C.flagKeys)(L);var V;function H(e,t){var n={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(i=Object.getOwnPropertySymbols(e);r<i.length;r++)t.indexOf(i[r])<0&&(n[i[r]]=e[i[r]])}return n}!function(e){e.ROW="row",e.COLUMN="column",e.FACET="facet",e.X="x",e.Y="y",e.X2="x2",e.Y2="y2",e.LATITUDE="latitude",e.LONGITUDE="longitude",e.LATITUDE2="latitude2",e.LONGITUDE2="longitude2",e.COLOR="color",e.FILL="fill",e.STROKE="stroke",e.SHAPE="shape",e.SIZE="size",e.OPACITY="opacity",e.FILLOPACITY="fillOpacity",e.STROKEOPACITY="strokeOpacity",e.STROKEWIDTH="strokeWidth",e.TEXT="text",e.ORDER="order",e.DETAIL="detail",e.KEY="key",e.TOOLTIP="tooltip",e.HREF="href"}(V||(V={}));const Y=V.X,G=V.Y,J=V.X2,X=V.Y2,Q=V.LATITUDE,K=V.LATITUDE2,Z=V.LONGITUDE,ee=V.LONGITUDE2,te=V.FACET,ne=V.ROW,ie=V.COLUMN,re=V.SHAPE,oe=V.SIZE,ae=V.COLOR,se=V.FILL,le=V.STROKE,ue=V.TEXT,ce=V.DETAIL,de=V.KEY,fe=V.ORDER,he=V.OPACITY,pe=V.FILLOPACITY,ge=V.STROKEOPACITY,me=V.STROKEWIDTH,ye=V.TOOLTIP,be=V.HREF,ve={longitude:1,longitude2:1,latitude:1,latitude2:1},_e=Object(C.flagKeys)(ve),xe=Object.assign({x:1,y:1,x2:1,y2:1},ve,{color:1,fill:1,stroke:1,opacity:1,fillOpacity:1,strokeOpacity:1,strokeWidth:1,size:1,shape:1,order:1,text:1,detail:1,key:1,tooltip:1,href:1});function we(e){return"color"===e||"fill"===e||"stroke"===e}const ke={row:1,column:1,facet:1},De=Object(C.flagKeys)(ke),Ae=Object.assign({},xe,ke),Oe=Object(C.flagKeys)(Ae),{order:Ce,detail:Te}=Ae,Se=H(Ae,["order","detail"]),Fe=Object(C.flagKeys)(Se);function je(e){return!!Ae[e]}function Ee(e){return $e(e)!==e}function $e(e){switch(e){case"x2":return"x";case"y2":return"y";case"latitude2":return"latitude";case"longitude2":return"longitude"}return e}const Me=Object(C.flagKeys)(xe),{x:ze,y:Ne,x2:Be,y2:Pe,latitude:Ie,longitude:Le,latitude2:qe,longitude2:Re}=xe,Ue=H(xe,["x","y","x2","y2","latitude","longitude","latitude2","longitude2"]),We=Object(C.flagKeys)(Ue),Ve={x:1,y:1},He=Object(C.flagKeys)(Ve),{text:Ye,tooltip:Ge,href:Je,detail:Xe,key:Qe,order:Ke}=Ue,Ze=H(Ue,["text","tooltip","href","detail","key","order"]),et=Object(C.flagKeys)(Ze);function tt(e){return!!Ue[e]}function nt(e){switch(e){case ae:case se:case le:case oe:case re:case he:return!0;case pe:case ge:case me:return!1}}const it=Object.assign({},Ve,Ze),rt=Object(C.flagKeys)(it);function ot(e){return!!it[e]}function at(e,t){return function(e){switch(e){case ae:case se:case le:case ce:case de:case ye:case be:case fe:case he:case pe:case ge:case me:case te:case ne:case ie:return{point:"always",tick:"always",rule:"always",circle:"always",square:"always",bar:"always",rect:"always",line:"always",trail:"always",area:"always",text:"always",geoshape:"always"};case Y:case G:case Q:case Z:return{point:"always",tick:"always",rule:"always",circle:"always",square:"always",bar:"always",rect:"always",line:"always",trail:"always",area:"always",text:"always"};case J:case X:case K:case ee:return{rule:"always",bar:"always",rect:"always",area:"always",circle:"binned",point:"binned",square:"binned",tick:"binned"};case oe:return{point:"always",tick:"always",rule:"always",circle:"always",square:"always",bar:"always",text:"always",line:"always",trail:"always"};case re:return{point:"always",geoshape:"always"};case ue:return{text:"always"}}}(e)[t]}function st(e){switch(e){case Y:case G:case oe:case me:case he:case pe:case ge:case J:case X:return;case te:case ne:case ie:case re:case ue:case ye:case be:return"discrete";case ae:case se:case le:return"flexible";case Q:case Z:case K:case ee:case ce:case de:case fe:return}throw new Error("rangeType not implemented for "+e)}const lt=Object(O.k)(O.a);let ut=lt;function ct(){return ut=lt}function dt(...e){ut.warn.apply(ut,arguments)}var ft;!function(e){e.INVALID_SPEC="Invalid spec",e.FIT_NON_SINGLE='Autosize "fit" only works for single views and layered views.',e.CANNOT_FIX_RANGE_STEP_WITH_FIT='Cannot use a fixed value of "rangeStep" when "autosize" is "fit".',e.cannotProjectOnChannelWithoutField=function(e){return`Cannot project a selection on encoding channel "${e}", which has no field.`},e.nearestNotSupportForContinuous=function(e){return`The "nearest" transform is not supported for ${e} marks.`},e.selectionNotSupported=function(e){return`Selection not supported for ${e} yet`},e.selectionNotFound=function(e){return`Cannot find a selection named "${e}"`},e.SCALE_BINDINGS_CONTINUOUS="Scale bindings are currently only supported for scales with unbinned, continuous domains.",e.NO_INIT_SCALE_BINDINGS="Selections bound to scales cannot be separately initialized.",e.noSuchRepeatedValue=function(e){return`Unknown repeated value "${e}".`},e.COLUMNS_NOT_SUPPORTED_BY_REPEAT_ROWCOL='The "columns" property cannot be used when "repeat" has nested row/column.',e.CONCAT_CANNOT_SHARE_AXIS="Axes cannot be shared in concatenated views yet (https://github.com/vega/vega-lite/issues/2415).",e.REPEAT_CANNOT_SHARE_AXIS="Axes cannot be shared in repeated views yet (https://github.com/vega/vega-lite/issues/2415).",e.FACET_1D_CANNOT_SHARE_AXIS="Axes cannot be shared in facet views without row/column yet (https://github.com/vega/vega-lite/issues/4543).",e.cannotSetTitleAnchor=function(e){return`Cannot set title "anchor" for a ${e} spec`},e.unrecognizedParse=function(e){return`Unrecognized parse "${e}".`},e.differentParse=function(e,t,n){return`An ancestor parsed field "${e}" as ${n} but a child wants to parse the field as ${t}.`},e.invalidTransformIgnored=function(e){return`Ignoring an invalid transform: ${Object(C.stringify)(e)}.`},e.NO_FIELDS_NEEDS_AS='If "from.fields" is not specified, "as" has to be a string that specifies the key to be used for the data from the secondary source.',e.encodingOverridden=function(e){return`Layer's shared ${e.join(",")} channel ${1===e.length?"is":"are"} overriden`},e.projectionOverridden=function(e){const{parentProjection:t,projection:n}=e;return`Layer's shared projection ${Object(C.stringify)(t)} is overridden by a child projection ${Object(C.stringify)(n)}.`},e.primitiveChannelDef=function(e,t,n){return`Channel ${e} is a ${t}. Converted to {value: ${Object(C.stringify)(n)}}.`},e.invalidFieldType=function(e){return`Invalid field type "${e}"`},e.nonZeroScaleUsedWithLengthMark=function(e,t,n){return`A ${n.scaleType?`${n.scaleType} scale`:n.zeroFalse?"scale with zero=false":"scale with custom domain that excludes zero"} is used to encode ${e}'s ${t}. This can be misleading as the ${"x"===t?"width":"height"} of the ${e} can be arbitrary based on the scale domain. You may want to use point mark instead.`},e.invalidFieldTypeForCountAggregate=function(e,t){return`Invalid field type "${e}" for aggregate: "${t}", using "quantitative" instead.`},e.invalidAggregate=function(e){return`Invalid aggregation operator "${e}"`},e.missingFieldType=function(e,t){return`Missing type for channel "${e}", using "${t}" instead.`},e.droppingColor=function(e,t){const{fill:n,stroke:i}=t;return`Dropping color ${e} as the plot also has `+(n&&i?"fill and stroke":n?"fill":"stroke")},e.emptyFieldDef=function(e,t){return`Dropping ${Object(C.stringify)(e)} from channel "${t}" since it does not contain data field or value.`},e.latLongDeprecated=function(e,t,n){return`${e}-encoding with type ${t} is deprecated. Replacing with ${n}-encoding.`},e.LINE_WITH_VARYING_SIZE="Line marks cannot encode size with a non-groupby field. You may want to use trail marks instead.",e.incompatibleChannel=function(e,t,n){return`${e} dropped as it is incompatible with "${t}"${n?` when ${n}`:""}.`},e.invalidEncodingChannel=function(e){return`${e}-encoding is dropped as ${e} is not a valid encoding channel.`},e.facetChannelShouldBeDiscrete=function(e){return`${e} encoding should be discrete (ordinal / nominal / binned).`},e.facetChannelDropped=function(e){return`Facet encoding dropped as ${e.join(" and ")} ${e.length>1?"are":"is"} also specified.`},e.discreteChannelCannotEncode=function(e,t){return`Using discrete channel "${e}" to encode "${t}" field can be misleading as it does not encode ${"ordinal"===t?"order":"magnitude"}.`},e.BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL="Bar mark should not be used with point scale when rangeStep is null. Please use band scale instead.",e.lineWithRange=function(e,t){return`Line mark is for continuous lines and thus cannot be used with ${e&&t?"x2 and y2":e?"x2":"y2"}. We will use the rule mark (line segments) instead.`},e.orientOverridden=function(e,t){return`Specified orient "${e}" overridden with "${t}"`},e.CANNOT_UNION_CUSTOM_DOMAIN_WITH_FIELD_DOMAIN="custom domain scale cannot be unioned with default field-based domain",e.cannotUseScalePropertyWithNonColor=function(e){return`Cannot use the scale property "${e}" with non-color channel.`},e.unaggregateDomainHasNoEffectForRawField=function(e){return`Using unaggregated domain with raw field has no effect (${Object(C.stringify)(e)}).`},e.unaggregateDomainWithNonSharedDomainOp=function(e){return`Unaggregated domain not applicable for "${e}" since it produces values outside the origin domain of the source data.`},e.unaggregatedDomainWithLogScale=function(e){return`Unaggregated domain is currently unsupported for log scale (${Object(C.stringify)(e)}).`},e.cannotApplySizeToNonOrientedMark=function(e){return`Cannot apply size to non-oriented mark "${e}".`},e.rangeStepDropped=function(e){return`rangeStep for "${e}" is dropped as top-level ${"x"===e?"width":"height"} is provided.`},e.scaleTypeNotWorkWithChannel=function(e,t,n){return`Channel "${e}" does not work with "${t}" scale. We are using "${n}" scale instead.`},e.scaleTypeNotWorkWithFieldDef=function(e,t){return`FieldDef does not work with "${e}" scale. We are using "${t}" scale instead.`},e.scalePropertyNotWorkWithScaleType=function(e,t,n){return`${n}-scale's "${t}" is dropped as it does not work with ${e} scale.`},e.scaleTypeNotWorkWithMark=function(e,t){return`Scale type "${t}" does not work with mark "${e}".`},e.mergeConflictingProperty=function(e,t,n,i){return`Conflicting ${t.toString()} property "${e.toString()}" (${Object(C.stringify)(n)} and ${Object(C.stringify)(i)}).  Using ${Object(C.stringify)(n)}.`},e.independentScaleMeansIndependentGuide=function(e){return`Setting the scale to be independent for "${e}" means we also have to set the guide (axis or legend) to be independent.`},e.domainSortDropped=function(e){return`Dropping sort property ${Object(C.stringify)(e)} as unioned domains only support boolean or op 'count'.`},e.UNABLE_TO_MERGE_DOMAINS="Unable to merge domains",e.MORE_THAN_ONE_SORT="Domains that should be unioned has conflicting sort properties. Sort will be set to true.",e.INVALID_CHANNEL_FOR_AXIS="Invalid channel for axis.",e.cannotStackRangedMark=function(e){return`Cannot stack "${e}" if there is already "${e}2"`},e.cannotStackNonLinearScale=function(e){return`Cannot stack non-linear scale (${e})`},e.stackNonSummativeAggregate=function(e){return`Stacking is applied even though the aggregate function is non-summative ("${e}")`},e.invalidTimeUnit=function(e,t){return`Invalid ${e}: ${Object(C.stringify)(t)}`},e.dayReplacedWithDate=function(e){return`Time unit "${e}" is not supported. We are replacing it with ${e.replace("day","date")}.`},e.droppedDay=function(e){return`Dropping day from datetime ${Object(C.stringify)(e)} as day cannot be combined with other units.`},e.errorBarCenterAndExtentAreNotNeeded=function(e,t){return`${t?"extent ":""}${t&&e?"and ":""}${e?"center ":""}${t&&e?"are ":"is "}not needed when data are aggregated.`},e.errorBarCenterIsUsedWithWrongExtent=function(e,t,n){return`${e} is not usually used with ${t} for ${n}.`},e.errorBarContinuousAxisHasCustomizedAggregate=function(e,t){return`Continuous axis should not have customized aggregation function ${e}; ${t} already agregates the axis.`},e.errorBarCenterIsNotNeeded=function(e,t){return`Center is not needed to be specified in ${t} when extent is ${e}.`},e.errorBand1DNotSupport=function(e){return`1D error band does not support ${e}`},e.channelRequiredForBinned=function(e){return`Channel ${e} is required for "binned" bin`},e.domainRequiredForThresholdScale=function(e){return`Domain for ${e} is required for threshold scale`}}(ft||(ft={}));const ht=2006;function pt(e){return!!(e&&(e.year||e.quarter||e.month||e.date||e.day||e.hours||e.minutes||e.seconds||e.milliseconds))}const gt=["january","february","march","april","may","june","july","august","september","october","november","december"],mt=gt.map(e=>e.substr(0,3)),yt=["sunday","monday","tuesday","wednesday","thursday","friday","saturday"],bt=yt.map(e=>e.substr(0,3));function vt(e,t=!1){const n=[];if(t&&void 0!==e.day&&Object(C.keys)(e).length>1&&(dt(ft.droppedDay(e)),delete(e=Object(C.duplicate)(e)).day),void 0!==e.year?n.push(e.year):void 0!==e.day?n.push(ht):n.push(0),void 0!==e.month){const i=t?function(e){if(Object(O.h)(e))return(e-1).toString();{const t=e.toLowerCase(),n=gt.indexOf(t);if(-1!==n)return n+"";const i=t.substr(0,3),r=mt.indexOf(i);if(-1!==r)return r+"";throw new Error(ft.invalidTimeUnit("month",e))}}(e.month):e.month;n.push(i)}else if(void 0!==e.quarter){const i=t?function(e){if(Object(O.h)(e))return e>4&&dt(ft.invalidTimeUnit("quarter",e)),(e-1).toString();throw new Error(ft.invalidTimeUnit("quarter",e))}(e.quarter):e.quarter;n.push(i+"*3")}else n.push(0);if(void 0!==e.date)n.push(e.date);else if(void 0!==e.day){const i=t?function(e){if(Object(O.h)(e))return e%7+"";{const t=e.toLowerCase(),n=yt.indexOf(t);if(-1!==n)return n+"";const i=t.substr(0,3),r=bt.indexOf(i);if(-1!==r)return r+"";throw new Error(ft.invalidTimeUnit("day",e))}}(e.day):e.day;n.push(i+"+1")}else n.push(1);for(const t of["hours","minutes","seconds","milliseconds"])void 0!==e[t]?n.push(e[t]):n.push(0);return e.utc?`utc(${n.join(", ")})`:`datetime(${n.join(", ")})`}function _t(e){return!!e.row||!!e.column}function xt(e){return void 0!==e.facet}var wt;!function(e){e.YEAR="year",e.MONTH="month",e.DAY="day",e.DATE="date",e.HOURS="hours",e.MINUTES="minutes",e.SECONDS="seconds",e.MILLISECONDS="milliseconds",e.YEARMONTH="yearmonth",e.YEARMONTHDATE="yearmonthdate",e.YEARMONTHDATEHOURS="yearmonthdatehours",e.YEARMONTHDATEHOURSMINUTES="yearmonthdatehoursminutes",e.YEARMONTHDATEHOURSMINUTESSECONDS="yearmonthdatehoursminutesseconds",e.MONTHDATE="monthdate",e.MONTHDATEHOURS="monthdatehours",e.HOURSMINUTES="hoursminutes",e.HOURSMINUTESSECONDS="hoursminutesseconds",e.MINUTESSECONDS="minutesseconds",e.SECONDSMILLISECONDS="secondsmilliseconds",e.QUARTER="quarter",e.YEARQUARTER="yearquarter",e.QUARTERMONTH="quartermonth",e.YEARQUARTERMONTH="yearquartermonth",e.UTCYEAR="utcyear",e.UTCMONTH="utcmonth",e.UTCDAY="utcday",e.UTCDATE="utcdate",e.UTCHOURS="utchours",e.UTCMINUTES="utcminutes",e.UTCSECONDS="utcseconds",e.UTCMILLISECONDS="utcmilliseconds",e.UTCYEARMONTH="utcyearmonth",e.UTCYEARMONTHDATE="utcyearmonthdate",e.UTCYEARMONTHDATEHOURS="utcyearmonthdatehours",e.UTCYEARMONTHDATEHOURSMINUTES="utcyearmonthdatehoursminutes",e.UTCYEARMONTHDATEHOURSMINUTESSECONDS="utcyearmonthdatehoursminutesseconds",e.UTCMONTHDATE="utcmonthdate",e.UTCMONTHDATEHOURS="utcmonthdatehours",e.UTCHOURSMINUTES="utchoursminutes",e.UTCHOURSMINUTESSECONDS="utchoursminutesseconds",e.UTCMINUTESSECONDS="utcminutesseconds",e.UTCSECONDSMILLISECONDS="utcsecondsmilliseconds",e.UTCQUARTER="utcquarter",e.UTCYEARQUARTER="utcyearquarter",e.UTCQUARTERMONTH="utcquartermonth",e.UTCYEARQUARTERMONTH="utcyearquartermonth"}(wt||(wt={}));const kt={year:1,quarter:1,month:1,day:1,date:1,hours:1,minutes:1,seconds:1,milliseconds:1},Dt=Object(C.flagKeys)(kt);function At(e){return!!kt[e]}const Ot={utcyear:1,utcquarter:1,utcmonth:1,utcday:1,utcdate:1,utchours:1,utcminutes:1,utcseconds:1,utcmilliseconds:1};function Ct(e){return!!Ot[e]}const Tt={utcyearquarter:1,utcyearquartermonth:1,utcyearmonth:1,utcyearmonthdate:1,utcyearmonthdatehours:1,utcyearmonthdatehoursminutes:1,utcyearmonthdatehoursminutesseconds:1,utcquartermonth:1,utcmonthdate:1,utcmonthdatehours:1,utchoursminutes:1,utchoursminutesseconds:1,utcminutesseconds:1,utcsecondsmilliseconds:1},St=Object.assign({},Ot,Tt);function Ft(e){return!!St[e]}function jt(e){return e.substr(3)}const Et=Object.assign({},kt,Ot,{yearquarter:1,yearquartermonth:1,yearmonth:1,yearmonthdate:1,yearmonthdatehours:1,yearmonthdatehoursminutes:1,yearmonthdatehoursminutesseconds:1,quartermonth:1,monthdate:1,monthdatehours:1,hoursminutes:1,hoursminutesseconds:1,minutesseconds:1,secondsmilliseconds:1},Tt),$t=Object(C.flagKeys)(Et);function Mt(e){return!!Et[e]}const zt={year:"setFullYear",month:"setMonth",date:"setDate",hours:"setHours",minutes:"setMinutes",seconds:"setSeconds",milliseconds:"setMilliseconds",quarter:null,day:null};function Nt(e,t){const n=Ft(e),i=n?new Date(Date.UTC(1972,0,1,0,0,0,0)):new Date(1972,0,1,0,0,0,0);for(const r of Dt)if(It(e,r))switch(r){case wt.DAY:throw new Error("Cannot convert to TimeUnits containing 'day'");case wt.QUARTER:{const{getDateMethod:e,setDateMethod:r}=Bt("month",n);i[r](3*Math.floor(t[e]()/3));break}default:const{getDateMethod:e,setDateMethod:o}=Bt(r,n);i[o](t[e]())}return i}function Bt(e,t){const n=zt[e];return{setDateMethod:t?"setUTC"+n.substr(3):n,getDateMethod:"get"+(t?"UTC":"")+n.substr(3)}}function Pt(e){return Dt.reduce((t,n)=>It(e,n)?[...t,n]:t,[])}function It(e,t){const n=e.indexOf(t);return n>-1&&(t!==wt.SECONDS||0===n||"i"!==e.charAt(n-1))}function Lt(e,t){const n=Object(C.accessPathWithDatum)(t),i=Ft(e)?"utc":"";return vt(Dt.reduce((t,r)=>(It(e,r)&&(t[r]=function(e){return e===wt.QUARTER?`(${i}quarter(${n})-1)`:`${i}${e}(${n})`}(r)),t),{}))}function qt(e,t){if(!e)return;const n=[],i=It(e,wt.YEAR);It(e,wt.MONTH)&&n.push(!1!==t?"%b":"%B"),It(e,wt.DAY)?n.push(t?"%a":"%A"):It(e,wt.DATE)&&n.push("%d"+(i?",":"")),i&&n.push(t?"%y":"%Y");const r=[];It(e,wt.HOURS)&&r.push("%H"),It(e,wt.MINUTES)&&r.push("%M"),It(e,wt.SECONDS)&&r.push("%S"),It(e,wt.MILLISECONDS)&&r.push("%L");const o=[];return n.length>0&&o.push(n.join(" ")),r.length>0&&o.push(r.join(":")),o}function Rt(e,t,n,i){if(!e)return;const r=qt(e,n);let o="";return It(e,wt.QUARTER)&&(o=`'Q' + quarter(${t})`),r.length>0&&(o&&(o+=" + ' ' + "),o+=i?`utcFormat(${t}, '${r.join(" ")}')`:`timeFormat(${t}, '${r.join(" ")}')`),o||void 0}function Ut(e){return"day"!==e&&e.indexOf("day")>=0?(dt(ft.dayReplacedWithDate(e)),e.replace("day","date")):e}var Wt;!function(e){e.QUANTITATIVE="quantitative",e.ORDINAL="ordinal",e.TEMPORAL="temporal",e.NOMINAL="nominal",e.GEOJSON="geojson"}(Wt||(Wt={}));const Vt={quantitative:1,ordinal:1,temporal:1,nominal:1,geojson:1};function Ht(e){return!!Vt[e]}const Yt=Wt.QUANTITATIVE,Gt=Wt.ORDINAL,Jt=Wt.TEMPORAL,Xt=Wt.NOMINAL,Qt=Wt.GEOJSON;function Kt(e){if(e)switch(e=e.toLowerCase()){case"q":case Yt:return"quantitative";case"t":case Jt:return"temporal";case"o":case Gt:return"ordinal";case"n":case Xt:return"nominal";case Qt:return"geojson"}}function Zt(e){return e.selection}function en(e){return e&&!Object(O.j)(e)&&"repeat"in e}function tn(e){const{field:t,timeUnit:n,bin:i,aggregate:r}=e;return Object.assign({},n?{timeUnit:n}:{},i?{bin:i}:{},r?{aggregate:r}:{},{field:t})}function nn(e){return ln(e)&&!!e.sort}function rn(e){return!!e&&!!e.condition}function on(e){return!!e&&!!e.condition&&!Object(O.e)(e.condition)&&sn(e.condition)}function an(e){return!!e&&!!e.condition&&(Object(O.e)(e.condition)||cn(e.condition))}function sn(e){return!(!e||!e.field&&"count"!==e.aggregate)}function ln(e){return!!e&&(!!e.field&&!!e.type||"count"===e.aggregate)}function un(e){return sn(e)&&Object(O.j)(e.field)}function cn(e){return e&&"value"in e&&void 0!==e.value}function dn(e){return!(!e||!e.scale&&!e.sort)}function fn(e){return!(!e||!e.axis&&!e.stack&&!e.impute)}function hn(e){return!!e&&!!e.legend}function pn(e){return!!e&&!!e.format}function gn(e,t={}){let n=e.field;const i=t.prefix;let r=t.suffix;if(bn(e))n=Object(C.internalField)("count");else{let i;t.nofn||(!function(e){return!!e.op}(e)?Un(e.bin)?(i=Rn(e.bin),r=(t.binSuffix||"")+(t.suffix||"")):e.aggregate?i=String(e.aggregate):e.timeUnit&&(i=String(e.timeUnit)):i=e.op),i&&(n=n?`${i}_${n}`:i)}return r&&(n=`${n}_${r}`),i&&(n=`${i}_${n}`),t.forAs?n:t.expr?Object(C.flatAccessWithDatum)(n,t.expr):Object(C.replacePathInField)(n)}function mn(e){switch(e.type){case"nominal":case"ordinal":case"geojson":return!0;case"quantitative":return!!e.bin;case"temporal":return!1}throw new Error(ft.invalidFieldType(e.type))}function yn(e){return!mn(e)}function bn(e){return"count"===e.aggregate}function vn(e,t){const{field:n,bin:i,timeUnit:r,aggregate:o}=e;if("count"===o)return t.countTitle;if(Un(i))return`${n} (binned)`;if(r){return`${n} (${Pt(r).join("-")})`}return o?`${Object(C.titlecase)(o)} of ${n}`:n}function _n(e,t){const n=e.aggregate||e.timeUnit||Un(e.bin)&&"bin";return n?n.toUpperCase()+"("+e.field+")":e.field}const xn=(e,t)=>{switch(t.fieldTitle){case"plain":return e.field;case"functional":return _n(e);default:return vn(e,t)}};let wn=xn;function kn(e){wn=e}function Dn(){kn(xn)}function An(e,t,{allowDisabling:n}){const i=(On(e)||{}).title;return n?Object(C.getFirstDefined)(i,e.title,Cn(e,t)):i||e.title||Cn(e,t)}function On(e){return fn(e)&&e.axis?e.axis:hn(e)&&e.legend?e.legend:(t=e)&&t.header&&e.header?e.header:void 0;var t}function Cn(e,t){return wn(e,t)}function Tn(e){if(pn(e)&&e.format)return e.format;return(On(e)||{}).format}function Sn(e,t){if(e.timeUnit)return"temporal";if(Un(e.bin))return"quantitative";switch(st(t)){case"continuous":return"quantitative";case"discrete":case"flexible":return"nominal";default:return"quantitative"}}function Fn(e){return sn(e)?e:on(e)?e.condition:void 0}function jn(e){return sn(e)?e:on(e)?e.condition:void 0}function En(e,t){if(Object(O.j)(e)||Object(O.h)(e)||Object(O.f)(e)){const n=Object(O.j)(e)?"string":Object(O.h)(e)?"number":"boolean";return dt(ft.primitiveChannelDef(t,n,e)),{value:e}}return sn(e)?$n(e,t):on(e)?Object.assign({},e,{condition:$n(e.condition,t)}):e}function $n(e,t){if(e.aggregate&&!F(e.aggregate)){const{aggregate:t}=e,n=H(e,["aggregate"]);dt(ft.invalidAggregate(e.aggregate)),e=n}if(e.timeUnit&&(e=Object.assign({},e,{timeUnit:Ut(e.timeUnit)})),Un(e.bin)&&(e=Object.assign({},e,{bin:Mn(e.bin,t)})),Wn(e.bin)&&!Object(C.contains)(He,t)&&dt(`Channel ${t} should not be used with "binned" bin`),ln(e)){const t=Kt(e.type);e.type!==t&&(e=Object.assign({},e,{type:t})),"quantitative"!==e.type&&E(e.aggregate)&&(dt(ft.invalidFieldTypeForCountAggregate(e.type,e.aggregate)),e=Object.assign({},e,{type:"quantitative"}))}else if(!Ee(t)){const n=Sn(e,t);dt(ft.missingFieldType(t,n)),e=Object.assign({},e,{type:n})}if(ln(e)){const{compatible:n,warning:i}=Nn(e,t);n||dt(i)}return e}function Mn(e,t){return Object(O.f)(e)?{maxbins:Hn(t)}:"binned"===e?{binned:!0}:e.maxbins||e.step?e:Object.assign({},e,{maxbins:Hn(t)})}const zn={compatible:!0};function Nn(e,t){const n=e.type;if("geojson"===n&&"shape"!==t)return{compatible:!1,warning:`Channel ${t} should not be used with a geojson data.`};switch(t){case"row":case"column":case"facet":return yn(e)?{compatible:!1,warning:ft.facetChannelShouldBeDiscrete(t)}:zn;case"x":case"y":case"color":case"fill":case"stroke":case"text":case"detail":case"key":case"tooltip":case"href":return zn;case"longitude":case"longitude2":case"latitude":case"latitude2":return n!==Yt?{compatible:!1,warning:`Channel ${t} should be used with a quantitative field only, not ${e.type} field.`}:zn;case"opacity":case"fillOpacity":case"strokeOpacity":case"strokeWidth":case"size":case"x2":case"y2":return"nominal"!==n||e.sort?zn:{compatible:!1,warning:`Channel ${t} should not be used with an unsorted discrete field.`};case"shape":return Object(C.contains)(["ordinal","nominal","geojson"],e.type)?zn:{compatible:!1,warning:"Shape channel should be used with only either discrete or geojson data."};case"order":return"nominal"!==e.type||"sort"in e?zn:{compatible:!1,warning:"Channel order is inappropriate for nominal field, which has no inherent order."}}throw new Error("channelCompatability not implemented for channel "+t)}function Bn(e){return"quantitative"===e.type||Un(e.bin)}function Pn(e){return"temporal"===e.type||!!e.timeUnit}function In(e,{timeUnit:t,type:n,time:i,undefinedIfExprNotRequired:r}){let o;return pt(e)?o=vt(e,!0):(Object(O.j)(e)||Object(O.h)(e))&&(t||"temporal"===n)&&(o=At(t)?vt({[t]:e},!0):Ct(t)?In(e,{timeUnit:jt(t)}):`datetime(${JSON.stringify(e)})`),o?i?`time(${o})`:o:r?void 0:JSON.stringify(e)}function Ln(e,t){const{timeUnit:n,type:i}=e;return t.map(e=>{const t=In(e,{timeUnit:n,type:i,undefinedIfExprNotRequired:!0});return void 0!==t?{signal:t}:e})}function qn(e,t){return Un(e.bin)?ot(t)&&Object(C.contains)(["ordinal","nominal"],e.type):(console.warn("Only use this method with binned field defs"),!1)}function Rn(e){return Object(O.f)(e)&&(e=Mn(e,void 0)),"bin"+Object(C.keys)(e).map(t=>Object(C.varName)(`_${t}_${e[t]}`)).join("")}function Un(e){return!0===e||Vn(e)&&!e.binned}function Wn(e){return"binned"===e||Vn(e)&&e.binned}function Vn(e){return Object(O.i)(e)}function Hn(e){switch(e){case ne:case ie:case oe:case ae:case se:case le:case me:case he:case pe:case ge:case re:return 6;default:return 10}}var Yn;!function(e){e.AREA="area",e.BAR="bar",e.LINE="line",e.POINT="point",e.RECT="rect",e.RULE="rule",e.TEXT="text",e.TICK="tick",e.TRAIL="trail",e.CIRCLE="circle",e.SQUARE="square",e.GEOSHAPE="geoshape"}(Yn||(Yn={}));const Gn=Yn.AREA,Jn=Yn.BAR,Xn=Yn.LINE,Qn=Yn.POINT,Kn=Yn.TEXT,Zn=Yn.TICK,ei=Yn.TRAIL,ti=Yn.RECT,ni=Yn.RULE,ii=Yn.GEOSHAPE,ri=Yn.CIRCLE,oi=Yn.SQUARE,ai={area:1,bar:1,line:1,point:1,text:1,tick:1,trail:1,rect:1,geoshape:1,rule:1,circle:1,square:1};function si(e){return!!ai[e]}function li(e){return Object(C.contains)(["line","area","trail"],e)}const ui=Object(C.flagKeys)(ai);function ci(e){return e.type}const di=Object(O.n)(ui);function fi(e){return(ci(e)?e.type:e)in di}const hi=["stroke","strokeWidth","strokeDash","strokeDashOffset","strokeOpacity","strokeJoin","strokeMiterLimit"],pi=["fill","fillOpacity"],gi=[].concat(hi,pi),mi=["filled","color","tooltip"],yi={area:["line","point"],bar:["binSpacing","continuousBandSize","discreteBandSize"],line:["point"],text:["shortTimeLabels"],tick:["bandSize","thickness"]},bi={color:"#4c78a8",tooltip:{content:"encoding"}},vi={binSpacing:1,continuousBandSize:5},_i={thickness:1};function xi(e){return ci(e)?e.type:e}function wi(e){return!!e.mark}class ki{constructor(e,t){this.name=e,this.run=t}hasMatchingType(e,t){return!!wi(e)&&xi(e.mark)===this.name}}function Di(e,t){const n=e&&e[t];return!!n&&(Object(O.e)(n)?Object(C.some)(n,e=>!!e.field):sn(n)||on(n))}function Ai(e){return Object(C.some)(Oe,t=>{if(Di(e,t)){const n=e[t];if(Object(O.e)(n))return Object(C.some)(n,e=>!!e.aggregate);{const e=Fn(n);return e&&!!e.aggregate}}return!1})}function Oi(e,t){const n=[],i=[],r=[],o=[],a={};return ji(e,(s,l)=>{if(sn(s)){const{field:u,aggregate:c,timeUnit:d,bin:f}=s,h=H(s,["field","aggregate","timeUnit","bin"]);if(c||d||f){const e=On(s),p=e&&e.title,g=gn(s,{forAs:!0}),m=Object.assign({},p?[]:{title:An(s,t,{allowDisabling:!0})},h,{field:g}),y=l===V.X||l===V.Y;if(c&&F(c)){const e={op:c,as:g};u&&(e.field=u),o.push(e)}else if(ln(s)&&Un(f)){if(i.push({bin:f,field:u,as:g}),n.push(gn(s,{binSuffix:"end"})),qn(s,l)&&n.push(gn(s,{binSuffix:"range"})),y){const e={field:g+"_end"};a[l+"2"]=e}m.bin="binned",Ee(l)||(m.type=Wt.QUANTITATIVE)}else if(d){r.push({timeUnit:d,field:u,as:g});const e=qt(d,t.axis.shortTimeLabels).join(" ");tt(l)?m.legend=Object.assign({format:e},m.legend):y?m.axis=Object.assign({format:e},m.axis):"text"!==l&&"tooltip"!==l||(m.format=m.format||e)}c||n.push(g),a[l]=m}else n.push(u),a[l]=e[l]}else a[l]=e[l]}),{bins:i,timeUnits:r,aggregate:o,groupby:n,encoding:a}}function Ci(e,t,n){const i=at(t,n);if(!i)return!1;if("binned"===i){const n=e["x2"===t?"x":"y"];return!(!sn(n)||!sn(e[t])||"binned"!==n.bin)}return!0}function Ti(e,t){return Object(C.keys)(e).reduce((n,i)=>{if(!je(i))return dt(ft.invalidEncodingChannel(i)),n;if(!Ci(e,i,t))return dt(ft.incompatibleChannel(i,t)),n;if("size"===i&&"line"===t){const t=jn(e[i]);if(t&&t.aggregate)return dt(ft.LINE_WITH_VARYING_SIZE),n}if("color"===i&&("fill"in e||"stroke"in e))return dt(ft.droppingColor("encoding",{fill:"fill"in e,stroke:"stroke"in e})),n;const r=e[i];if("detail"===i||"order"===i&&!Object(O.e)(r)&&!cn(r)||"tooltip"===i&&Object(O.e)(r))r&&(n[i]=(Object(O.e)(r)?r:[r]).reduce((e,t)=>(sn(t)?e.push($n(t,i)):dt(ft.emptyFieldDef(t,i)),e),[]));else{if("tooltip"===i&&null===r)n[i]=null;else if(!sn(r)&&!cn(r)&&!rn(r))return dt(ft.emptyFieldDef(r,i)),n;n[i]=En(r,i)}return n},{})}function Si(e){return e&&(!!e.x&&!!e.x2||!!e.y&&!!e.y2)}function Fi(e){const t=[];for(const n of Object(C.keys)(e))if(Di(e,n)){const i=e[n];(Object(O.e)(i)?i:[i]).forEach(e=>{sn(e)?t.push(e):on(e)&&t.push(e.condition)})}return t}function ji(e,t,n){if(e)for(const i of Object(C.keys)(e)){const r=e[i];Object(O.e)(r)?r.forEach(e=>{t.call(n,e,i)}):t.call(n,r,i)}}function Ei(e,t,n,i){return e?Object(C.keys)(e).reduce((n,r)=>{const o=e[r];return Object(O.e)(o)?o.reduce((e,n)=>t.call(i,e,n,r),n):t.call(i,n,o,r)},n):n}function $i(e,t,n,i=!0){return{tooltip:[...e.map(({fieldPrefix:e,titlePrefix:n})=>({field:e+t.field,type:t.type,title:n+(i?" of "+t.field:"")})),...Fi(n)]}}function Mi(e,t,n,i,r){const{scale:o,axis:a}=n;return({partName:s,mark:l,positionPrefix:u,endPositionPrefix:c,extraEncoding:d={}})=>{const f=a&&void 0!==a.title?void 0:void 0!==n.title?n.title:n.field;return zi(e,s,r,{mark:l,encoding:Object.assign({[t]:Object.assign({field:u+"_"+n.field,type:n.type},f?{title:f}:{},o?{scale:o}:{},a?{axis:a}:{})},Object(O.j)(c)?{[t+"2"]:{field:c+"_"+n.field,type:n.type}}:{},i,d)})}}function zi(e,t,n,i){const{clip:r,color:o,opacity:a}=e,s=e.type;return e[t]||void 0===e[t]&&n[t]?[Object.assign({},i,{mark:Object.assign({},n[t],r?{clip:r}:{},o?{color:o}:{},a?{opacity:a}:{},ci(i.mark)?i.mark:{type:i.mark},{style:`${s}-${t}`},Object(O.f)(e[t])?{}:e[t])})]:[]}function Ni(e,t,n){const{encoding:i}=e,r="vertical"===t?"y":"x",o=i[r],a=i[r+"2"],s=i[r+"Error"],l=i[r+"Error2"];return{continuousAxisChannelDef:Bi(o,n),continuousAxisChannelDef2:Bi(a,n),continuousAxisChannelDefError:Bi(s,n),continuousAxisChannelDefError2:Bi(l,n),continuousAxis:r}}function Bi(e,t){if(sn(e)&&e&&e.aggregate){const{aggregate:n}=e,i=H(e,["aggregate"]);return n!==t&&dt(ft.errorBarContinuousAxisHasCustomizedAggregate(n,t)),i}return e}function Pi(e,t){const{mark:n,encoding:i}=e;if(sn(i.x)&&yn(i.x)){if(sn(i.y)&&yn(i.y)){if(void 0===i.x.aggregate&&i.y.aggregate===t)return"vertical";if(void 0===i.y.aggregate&&i.x.aggregate===t)return"horizontal";if(i.x.aggregate===t&&i.y.aggregate===t)throw new Error("Both x and y cannot have aggregate");return ci(n)&&n.orient?n.orient:"vertical"}return"horizontal"}if(sn(i.y)&&yn(i.y))return"vertical";throw new Error("Need a valid continuous axis for "+t+"s")}const Ii="boxplot",Li=Object(C.keys)({box:1,median:1,outliers:1,rule:1,ticks:1}),qi=new ki(Ii,Ui);function Ri(e){return Object(O.h)(e)?"tukey":e}function Ui(e,{config:t}){const{mark:n,encoding:i,selection:r,projection:o}=e,a=H(e,["mark","encoding","selection","projection"]),s=ci(n)?n:{type:n};r&&dt(ft.selectionNotSupported("boxplot"));const l=s.extent||t.boxplot.extent,u=Object(C.getFirstDefined)(s.size,t.boxplot.size),c=Ri(l),{transform:d,continuousAxisChannelDef:f,continuousAxis:h,groupby:p,encodingWithoutContinuousAxis:g,ticksOrient:m}=function(e,t,n){const i=Pi(e,Ii),{continuousAxisChannelDef:r,continuousAxis:o}=Ni(e,i,Ii),a=r.field,s=Ri(t),l=[...Wi(a),{op:"median",field:a,as:"mid_box_"+a},{op:"min",field:a,as:("min-max"===s?"lower_whisker_":"min_")+a},{op:"max",field:a,as:("min-max"===s?"upper_whisker_":"max_")+a}],u="min-max"===s||"tukey"===s?[]:[{calculate:`datum.upper_box_${a} - datum.lower_box_${a}`,as:"iqr_"+a},{calculate:`min(datum.upper_box_${a} + datum.iqr_${a} * ${t}, datum.max_${a})`,as:"upper_whisker_"+a},{calculate:`max(datum.lower_box_${a} - datum.iqr_${a} * ${t}, datum.min_${a})`,as:"lower_whisker_"+a}],c=e.encoding,d=o,f=(c[d],H(c,["symbol"==typeof d?d:d+""])),{bins:h,timeUnits:p,aggregate:g,groupby:m,encoding:y}=Oi(f,n);return{transform:[...h,...p,{aggregate:[...g,...l],groupby:m},...u],groupby:m,continuousAxisChannelDef:r,continuousAxis:o,encodingWithoutContinuousAxis:y,ticksOrient:"vertical"===i?"horizontal":"vertical"}}(e,l,t),{color:y,size:b}=g,v=H(g,["color","size"]),_=e=>Mi(s,h,f,e,t.boxplot),x=_(v),w=_(g),k=_(Object.assign({},v,b?{size:b}:{})),D=$i([{fieldPrefix:"min-max"===c?"upper_whisker_":"max_",titlePrefix:"Max"},{fieldPrefix:"upper_box_",titlePrefix:"Q3"},{fieldPrefix:"mid_box_",titlePrefix:"Median"},{fieldPrefix:"lower_box_",titlePrefix:"Q1"},{fieldPrefix:"min-max"===c?"lower_whisker_":"min_",titlePrefix:"Min"}],f,g),A={type:"tick",color:"black",opacity:1,orient:m},T="min-max"===c?D:$i([{fieldPrefix:"upper_whisker_",titlePrefix:"Upper Whisker"},{fieldPrefix:"lower_whisker_",titlePrefix:"Lower Whisker"}],f,g),S=[...x({partName:"rule",mark:"rule",positionPrefix:"lower_whisker",endPositionPrefix:"lower_box",extraEncoding:T}),...x({partName:"rule",mark:"rule",positionPrefix:"upper_box",endPositionPrefix:"upper_whisker",extraEncoding:T}),...x({partName:"ticks",mark:A,positionPrefix:"lower_whisker",extraEncoding:T}),...x({partName:"ticks",mark:A,positionPrefix:"upper_whisker",extraEncoding:T})],F=[..."tukey"!==c?S:[],...w({partName:"box",mark:Object.assign({type:"bar"},u?{size:u}:{}),positionPrefix:"lower_box",endPositionPrefix:"upper_box",extraEncoding:D}),...k({partName:"median",mark:Object.assign({type:"tick"},Object(O.i)(t.boxplot.median)&&t.boxplot.median.color?{color:t.boxplot.median.color}:{},u?{size:u}:{},{orient:m}),positionPrefix:"mid_box",extraEncoding:D})];let j;if("min-max"!==c){const e="datum.lower_box_"+f.field,n="datum.upper_box_"+f.field,i=`(${n} - ${e})`,r=`${e} - ${l} * ${i}`,o=`${n} + ${l} * ${i}`,a=`datum.${f.field}`,u={joinaggregate:Wi(f.field),groupby:p};let d=void 0;"tukey"===c&&(d={transform:[{filter:`(${r} <= ${a}) && (${a} <= ${o})`},{aggregate:[{op:"min",field:f.field,as:"lower_whisker_"+f.field},{op:"max",field:f.field,as:"upper_whisker_"+f.field},{op:"min",field:"lower_box_"+f.field,as:"lower_box_"+f.field},{op:"max",field:"upper_box_"+f.field,as:"upper_box_"+f.field}],groupby:p}],layer:S});const g=zi(s,"outliers",t.boxplot,{transform:[{filter:`(${a} < ${r}) || (${a} > ${o})`}],mark:"point",encoding:Object.assign({[h]:{field:f.field,type:f.type}},v)})[0];g&&d?j={transform:[u],layer:[g,d]}:g?(j=g).transform.unshift(u):d&&(j=d).transform.unshift(u)}return j?Object.assign({},a,{layer:[...j?[j]:[],{transform:d,layer:F}]}):Object.assign({},a,{transform:(a.transform||[]).concat(d),layer:F})}function Wi(e){return[{op:"q1",field:e,as:"lower_box_"+e},{op:"q3",field:e,as:"upper_box_"+e}]}const Vi="errorbar",Hi=Object(C.keys)({ticks:1,rule:1}),Yi=new ki(Vi,Gi);function Gi(e,{config:t}){const{transform:n,continuousAxisChannelDef:i,continuousAxis:r,encodingWithoutContinuousAxis:o,ticksOrient:a,markDef:s,outerSpec:l,tooltipEncoding:u}=Xi(e,Vi,t),c=Mi(s,r,i,o,t.errorbar),d={type:"tick",orient:a};return Object.assign({},l,{transform:n,layer:[...c({partName:"ticks",mark:d,positionPrefix:"lower",extraEncoding:u}),...c({partName:"ticks",mark:d,positionPrefix:"upper",extraEncoding:u}),...c({partName:"rule",mark:"rule",positionPrefix:"lower",endPositionPrefix:"upper",extraEncoding:u})]})}function Ji(e,t){const{encoding:n}=e;if(function(e){return(sn(e.x)||sn(e.y))&&!sn(e.x2)&&!sn(e.y2)&&!sn(e.xError)&&!sn(e.xError2)&&!sn(e.yError)&&!sn(e.yError2)}(n))return{orient:Pi(e,t),inputType:"raw"};const i=function(e){return sn(e.x2)||sn(e.y2)}(n),r=function(e){return sn(e.xError)||sn(e.xError2)||sn(e.yError)||sn(e.yError2)}(n),o=n.x,a=n.y;if(i){if(r)throw new Error(t+" cannot be both type aggregated-upper-lower and aggregated-error");const e=n.x2,i=n.y2;if(sn(e)&&sn(i))throw new Error(t+" cannot have both x2 and y2");if(sn(e)){if(sn(o)&&yn(o))return{orient:"horizontal",inputType:"aggregated-upper-lower"};throw new Error("Both x and x2 have to be quantitative in "+t)}if(sn(i)){if(sn(a)&&yn(a))return{orient:"vertical",inputType:"aggregated-upper-lower"};throw new Error("Both y and y2 have to be quantitative in "+t)}throw new Error("No ranged axis")}{const e=n.xError,i=n.xError2,r=n.yError,s=n.yError2;if(sn(i)&&!sn(e))throw new Error(t+" cannot have xError2 without xError");if(sn(s)&&!sn(r))throw new Error(t+" cannot have yError2 without yError");if(sn(e)&&sn(r))throw new Error(t+" cannot have both xError and yError with both are quantiative");if(sn(e)){if(sn(o)&&yn(o))return{orient:"horizontal",inputType:"aggregated-error"};throw new Error("All x, xError, and xError2 (if exist) have to be quantitative")}if(sn(r)){if(sn(a)&&yn(a))return{orient:"vertical",inputType:"aggregated-error"};throw new Error("All y, yError, and yError2 (if exist) have to be quantitative")}throw new Error("No ranged axis")}}function Xi(e,t,n){const{mark:i,encoding:r,selection:o,projection:a}=e,s=H(e,["mark","encoding","selection","projection"]),l=ci(i)?i:{type:i};o&&dt(ft.selectionNotSupported(t));const{orient:u,inputType:c}=Ji(e,t),{continuousAxisChannelDef:d,continuousAxisChannelDef2:f,continuousAxisChannelDefError:h,continuousAxisChannelDefError2:p,continuousAxis:g}=Ni(e,u,t),{errorBarSpecificAggregate:m,postAggregateCalculates:y,tooltipSummary:b,tooltipTitleWithFieldName:v}=function(e,t,n,i,r,o,a,s){let l=[],u=[];const c=t.field;let d,f=!1;if("raw"===o){const t=e.center?e.center:e.extent?"iqr"===e.extent?"median":"mean":s.errorbar.center,n=e.extent?e.extent:"mean"===t?"stderr":"iqr";if("median"===t!=("iqr"===n)&&dt(ft.errorBarCenterIsUsedWithWrongExtent(t,n,a)),"stderr"===n||"stdev"===n)l=[{op:n,field:c,as:"extent_"+c},{op:t,field:c,as:"center_"+c}],u=[{calculate:`datum.center_${c} + datum.extent_${c}`,as:"upper_"+c},{calculate:`datum.center_${c} - datum.extent_${c}`,as:"lower_"+c}],d=[{fieldPrefix:"center_",titlePrefix:Object(C.titlecase)(t)},{fieldPrefix:"upper_",titlePrefix:Qi(t,n,"+")},{fieldPrefix:"lower_",titlePrefix:Qi(t,n,"-")}],f=!0;else{let t,i,r;e.center&&e.extent&&dt(ft.errorBarCenterIsNotNeeded(e.extent,a)),"ci"===n?(t="mean",i="ci0",r="ci1"):(t="median",i="q1",r="q3"),l=[{op:i,field:c,as:"lower_"+c},{op:r,field:c,as:"upper_"+c},{op:t,field:c,as:"center_"+c}],d=[{fieldPrefix:"upper_",titlePrefix:An({field:c,aggregate:r,type:"quantitative"},s,{allowDisabling:!1})},{fieldPrefix:"lower_",titlePrefix:An({field:c,aggregate:i,type:"quantitative"},s,{allowDisabling:!1})},{fieldPrefix:"center_",titlePrefix:An({field:c,aggregate:t,type:"quantitative"},s,{allowDisabling:!1})}]}}else{(e.center||e.extent)&&dt(ft.errorBarCenterAndExtentAreNotNeeded(e.center,e.extent)),"aggregated-upper-lower"===o?(d=[],u=[{calculate:`datum.${n.field}`,as:"upper_"+c},{calculate:`datum.${c}`,as:"lower_"+c}]):"aggregated-error"===o&&(d=[{fieldPrefix:"",titlePrefix:c}],u=[{calculate:`datum.${c} + datum.${i.field}`,as:"upper_"+c}],r?u.push({calculate:`datum.${c} + datum.${r.field}`,as:"lower_"+c}):u.push({calculate:`datum.${c} - datum.${i.field}`,as:"lower_"+c}));for(const e of u)d.push({fieldPrefix:e.as.substring(0,6),titlePrefix:e.calculate.replace(new RegExp("datum.","g"),"")})}return{postAggregateCalculates:u,errorBarSpecificAggregate:l,tooltipSummary:d,tooltipTitleWithFieldName:f}}(l,d,f,h,p,c,t,n),_=g,x=(r[_],"x"===g?"x2":"y2"),w=(r[x],"x"===g?"xError":"yError"),k=(r[w],"x"===g?"xError2":"yError2"),D=(r[k],H(r,["symbol"==typeof _?_:_+"","symbol"==typeof x?x:x+"","symbol"==typeof w?w:w+"","symbol"==typeof k?k:k+""])),{bins:A,timeUnits:O,aggregate:T,groupby:S,encoding:F}=Oi(D,n),j=[...T,...m],E="raw"!==c?[]:S,$=$i(b,d,F,v);return{transform:[...s.transform||[],...A,...O,...j.length?[{aggregate:j,groupby:E}]:[],...y],groupby:E,continuousAxisChannelDef:d,continuousAxis:g,encodingWithoutContinuousAxis:F,ticksOrient:"vertical"===u?"horizontal":"vertical",markDef:l,outerSpec:s,tooltipEncoding:$}}function Qi(e,t,n){return Object(C.titlecase)(e)+" "+n+" "+t}const Ki="errorband",Zi=Object(C.keys)({band:1,borders:1}),er=new ki(Ki,tr);function tr(e,{config:t}){const{transform:n,continuousAxisChannelDef:i,continuousAxis:r,encodingWithoutContinuousAxis:o,markDef:a,outerSpec:s,tooltipEncoding:l}=Xi(e,Ki,t),u=Mi(a,r,i,o,t.errorband),c=void 0!==e.encoding.x&&void 0!==e.encoding.y;let d={type:c?"area":"rect"},f={type:c?"line":"rule"};const h=Object.assign({},a.interpolate?{interpolate:a.interpolate}:{},a.tension&&a.interpolate?{interpolate:a.tension}:{});return c?(d=Object.assign({},d,h),f=Object.assign({},f,h)):a.interpolate?dt(ft.errorBand1DNotSupport("interpolate")):a.tension&&dt(ft.errorBand1DNotSupport("tension")),Object.assign({},s,{transform:n,layer:[...u({partName:"band",mark:d,positionPrefix:"lower",endPositionPrefix:"upper",extraEncoding:l}),...u({partName:"borders",mark:f,positionPrefix:"lower",extraEncoding:l}),...u({partName:"borders",mark:f,positionPrefix:"upper",extraEncoding:l})]})}const nr={};function ir(e,t,n){const i=new ki(e,t);nr[e]={normalizer:i,parts:n}}function rr(e){delete nr[e]}function or(){return Object(C.keys)(nr)}ir(Ii,Ui,Li),ir(Vi,Gi,Hi),ir(Ki,tr,Zi);const ar=["shortTimeLabels"],sr=["gradientHorizontalMaxLength","gradientHorizontalMinLength","gradientVerticalMaxLength","gradientVerticalMinLength"],lr={gradientHorizontalMaxLength:200,gradientHorizontalMinLength:100,gradientVerticalMaxLength:200,gradientVerticalMinLength:64},ur={clipHeight:1,columnPadding:1,columns:1,cornerRadius:1,direction:1,fillColor:1,format:1,gradientLength:1,gradientOpacity:1,gradientStrokeColor:1,gradientStrokeWidth:1,gradientThickness:1,gridAlign:1,labelAlign:1,labelBaseline:1,labelColor:1,labelFont:1,labelFontSize:1,labelFontStyle:1,labelFontWeight:1,labelLimit:1,labelOffset:1,labelOpacity:1,labelOverlap:1,labelPadding:1,labelSeparation:1,offset:1,orient:1,padding:1,rowPadding:1,strokeColor:1,symbolFillColor:1,symbolOffset:1,symbolOpacity:1,symbolSize:1,symbolStrokeColor:1,symbolStrokeWidth:1,symbolType:1,tickCount:1,tickMinStep:1,title:1,titleAlign:1,titleBaseline:1,titleColor:1,titleFont:1,titleFontSize:1,titleFontStyle:1,titleFontWeight:1,titleLimit:1,titleOpacity:1,titlePadding:1,type:1,values:1,zindex:1},cr=Object.assign({},ur,{opacity:1,shape:1,stroke:1,fill:1,size:1,strokeWidth:1,encode:1}),dr=Object(C.flagKeys)(ur),fr=Object(C.flagKeys)(cr);var hr;!function(e){e.LINEAR="linear",e.LOG="log",e.POW="pow",e.SQRT="sqrt",e.SYMLOG="symlog",e.TIME="time",e.UTC="utc",e.QUANTILE="quantile",e.QUANTIZE="quantize",e.THRESHOLD="threshold",e.BIN_ORDINAL="bin-ordinal",e.ORDINAL="ordinal",e.POINT="point",e.BAND="band"}(hr||(hr={}));const pr={linear:"numeric",log:"numeric",pow:"numeric",sqrt:"numeric",symlog:"numeric",time:"time",utc:"time",ordinal:"ordinal","bin-ordinal":"bin-ordinal",point:"ordinal-position",band:"ordinal-position",quantile:"discretizing",quantize:"discretizing",threshold:"discretizing"},gr=Object(C.keys)(pr);function mr(e,t){const n=pr[e],i=pr[t];return n===i||"ordinal-position"===n&&"time"===i||"ordinal-position"===i&&"time"===n}const yr={linear:0,log:1,pow:1,sqrt:1,symlog:1,time:0,utc:0,point:10,band:11,ordinal:0,"bin-ordinal":0,quantile:0,quantize:0,threshold:0};function br(e){return yr[e]}const vr=["linear","log","pow","sqrt","symlog","time","utc"],_r=Object(O.n)(vr),xr=["quantile","quantize","threshold"],wr=Object(O.n)(xr),kr=vr.concat(["quantile","quantize","threshold"]),Dr=Object(O.n)(kr),Ar=["ordinal","bin-ordinal","point","band"],Or=Object(O.n)(Ar),Cr=["time","utc"];function Tr(e){return e in Or}function Sr(e){return e in Dr}function Fr(e){return e in _r}function jr(e){return e in wr}const Er={textXRangeStep:90,rangeStep:20,pointPadding:.5,barBandPaddingInner:.1,rectBandPaddingInner:0,minBandSize:2,minFontSize:8,maxFontSize:40,minOpacity:.3,maxOpacity:.8,minSize:9,minStrokeWidth:1,maxStrokeWidth:4,quantileCount:4,quantizeCount:4};function $r(e){return e&&!!e.name}function Mr(e){return e&&e.selection}const zr={type:1,domain:1,range:1,rangeStep:1,scheme:1,bins:1,reverse:1,round:1,clamp:1,nice:1,base:1,exponent:1,constant:1,interpolate:1,zero:1,padding:1,paddingInner:1,paddingOuter:1},Nr=Object(C.flagKeys)(zr),{type:Br,domain:Pr,range:Ir,rangeStep:Lr,scheme:qr}=zr,Rr=H(zr,["type","domain","range","rangeStep","scheme"]),Ur=Object(C.flagKeys)(Rr),Wr=function(){const e={};for(const t of Oe)for(const n of Object(C.keys)(Vt))for(const i of gr){const r=Xr(t,n);Gr(t,i)&&Yr(i,n)&&(e[r]=e[r]||[],e[r].push(i))}return e}();function Vr(e,t){switch(t){case"type":case"domain":case"reverse":case"range":return!0;case"scheme":case"interpolate":return!Object(C.contains)(["point","band","identity"],e);case"bins":return!Object(C.contains)(["point","band","identity","ordinal"],e);case"round":return Fr(e)||"band"===e||"point"===e;case"padding":return Fr(e)||Object(C.contains)(["point","band"],e);case"paddingOuter":case"rangeStep":return Object(C.contains)(["point","band"],e);case"paddingInner":return"band"===e;case"clamp":return Fr(e);case"nice":return Fr(e)||"quantize"===e||"threshold"===e;case"exponent":return"pow"===e;case"base":return"log"===e;case"constant":return"symlog"===e;case"zero":return Sr(e)&&!Object(C.contains)(["log","time","utc","threshold","quantile"],e)}throw new Error(`Invalid scale property ${t}.`)}function Hr(e,t){switch(t){case"interpolate":case"scheme":return we(e)?void 0:ft.cannotUseScalePropertyWithNonColor(e);case"type":case"bins":case"domain":case"range":case"base":case"exponent":case"constant":case"nice":case"padding":case"paddingInner":case"paddingOuter":case"rangeStep":case"reverse":case"round":case"clamp":case"zero":return}throw new Error(`Invalid scale property "${t}".`)}function Yr(e,t){return Object(C.contains)([Wt.ORDINAL,Wt.NOMINAL],t)?void 0===e||Tr(e):t===Wt.TEMPORAL?Object(C.contains)([hr.TIME,hr.UTC,void 0],e):t!==Wt.QUANTITATIVE||Object(C.contains)([hr.LOG,hr.POW,hr.SQRT,hr.SYMLOG,hr.QUANTILE,hr.QUANTIZE,hr.THRESHOLD,hr.LINEAR,void 0],e)}function Gr(e,t){switch(e){case V.X:case V.Y:return Fr(t)||Object(C.contains)(["band","point"],t);case V.SIZE:case V.STROKEWIDTH:case V.OPACITY:case V.FILLOPACITY:case V.STROKEOPACITY:return Fr(t)||jr(t)||Object(C.contains)(["band","point"],t);case V.COLOR:case V.FILL:case V.STROKE:return"band"!==t;case V.SHAPE:return"ordinal"===t}return!1}function Jr(e,t){return Wr[Xr(e,t)]}function Xr(e,t){return e+"_"+t}const Qr="_vgsid_";function Kr(e){const{anchor:t,frame:n,offset:i,orient:r,color:o}=e,a=H(e,["anchor","frame","offset","orient","color"]);return{mark:Object.assign({},a,o?{fill:o}:{}),nonMark:Object.assign({},t?{anchor:t}:{},n?{frame:n}:{},i?{offset:i}:{},r?{orient:r}:{})}}const Zr={width:200,height:200};function eo(e){return e&&!!e.scheme}const to={padding:5,timeFormat:"%b %d, %Y",countTitle:"Count of Records",invalidValues:"filter",view:Zr,mark:bi,area:{},bar:vi,circle:{},geoshape:{},line:{},point:{},rect:{},rule:{color:"black"},square:{},text:{color:"black"},tick:_i,trail:{},boxplot:{size:14,extent:1.5,box:{},median:{color:"white"},outliers:{},rule:{},ticks:null},errorbar:{center:"mean",rule:!0,ticks:!1},errorband:{band:{opacity:.3},borders:!1},scale:Er,projection:{},axis:{},axisX:{},axisY:{minExtent:30},axisLeft:{},axisRight:{},axisTop:{},axisBottom:{},axisBand:{},legend:lr,selection:{single:{on:"click",fields:[Qr],resolve:"global",empty:"all"},multi:{on:"click",fields:[Qr],toggle:"event.shiftKey",resolve:"global",empty:"all"},interval:{on:"[mousedown, window:mouseup] > window:mousemove!",encodings:["x","y"],translate:"[mousedown, window:mouseup] > window:mousemove!",zoom:"wheel!",mark:{fill:"#333",fillOpacity:.125,stroke:"white"},resolve:"global"}},style:{},title:{}};function no(e){return Object(C.mergeDeep)(Object(C.duplicate)(to),e)}const io=["view",...ui],ro=["padding","numberFormat","timeFormat","countTitle","stack","scale","selection","invalidValues","overlay"],oo=Object.assign({view:["width","height"]},yi);function ao(e){e=Object(C.duplicate)(e);for(const t of ro)delete e[t];if(e.axis)for(const t of ar)delete e.axis[t];if(e.legend){for(const t of ar)delete e.legend[t];for(const t of sr)delete e.legend[t]}if(e.mark)for(const t of mi)delete e.mark[t];for(const t of io){for(const n of mi)delete e[t][n];const n=oo[t];if(n)for(const i of n)delete e[t][i];so(e,t)}for(const t of or())delete e[t];so(e,"title","group-title");for(const t in e)Object(O.i)(e[t])&&0===Object(C.keys)(e[t]).length&&delete e[t];return Object(C.keys)(e).length>0?e:void 0}function so(e,t,n,i){const r="title"===t?Kr(e.title).mark:i?e[t][i]:e[t];"view"===t&&(n="cell");const o=Object.assign({},r,e.style[t]);Object(C.keys)(o).length>0&&(e.style[n||t]=o),i||delete e[t]}function lo(e){return!!e.url}function uo(e){return!!e.values}function co(e){return!!e.name&&!lo(e)&&!uo(e)}const fo="main",ho="raw",po={titleAnchor:"anchor",titleAngle:"angle",titleBaseline:"baseline",titleColor:"color",titleFont:"font",titleFontSize:"fontSize",titleFontWeight:"fontWeight",titleLimit:"limit",titlePadding:"offset"},go={labelAngle:"angle",labelColor:"color",labelFont:"font",labelFontSize:"fontSize",labelLimit:"limit",labelPadding:"offset"},mo=Object(C.keys)(po),yo=Object(C.keys)(go);function bo(e){return _o(e)||xo(e)||vo(e)}function vo(e){return void 0!==e.concat}function _o(e){return void 0!==e.vconcat}function xo(e){return void 0!==e.hconcat}function wo(e){return void 0!==e.layer}function ko(e){return void 0!==e.repeat}class Do{map(e,t){return xt(e)?this.mapFacet(e,t):ko(e)?this.mapRepeat(e,t):xo(e)?this.mapHConcat(e,t):_o(e)?this.mapVConcat(e,t):vo(e)?this.mapConcat(e,t):this.mapLayerOrUnit(e,t)}mapLayerOrUnit(e,t){if(wo(e))return this.mapLayer(e,t);if(wi(e))return this.mapUnit(e,t);throw new Error(ft.INVALID_SPEC)}mapLayer(e,t){return Object.assign({},e,{layer:e.layer.map(e=>this.mapLayerOrUnit(e,t))})}mapHConcat(e,t){return Object.assign({},e,{hconcat:e.hconcat.map(e=>this.map(e,t))})}mapVConcat(e,t){return Object.assign({},e,{vconcat:e.vconcat.map(e=>this.map(e,t))})}mapConcat(e,t){const{concat:n}=e,i=H(e,["concat"]);return Object.assign({},i,{concat:n.map(e=>this.map(e,t))})}mapFacet(e,t){return Object.assign({},e,{spec:this.map(e.spec,t)})}mapRepeat(e,t){return Object.assign({},e,{spec:this.map(e.spec,t)})}}const Ao={zero:1,center:1,normalize:1};function Oo(e){return!!Ao[e]}const Co=[Jn,Gn,ni,Qn,ri,oi,Xn,Kn,Zn],To=[Jn,Gn];function So(e,t,n){const i=ci(e)?e.type:e;if(!Object(C.contains)(Co,i))return null;const r=function(e){const t=e.x,n=e.y;if(sn(t)&&sn(n))if("quantitative"===t.type&&"quantitative"===n.type){if(t.stack)return"x";if(n.stack)return"y";if(!!t.aggregate!=!!n.aggregate)return t.aggregate?"x":"y"}else{if("quantitative"===t.type)return"x";if("quantitative"===n.type)return"y"}else{if(sn(t)&&"quantitative"===t.type)return"x";if(sn(n)&&"quantitative"===n.type)return"y"}}(t);if(!r)return null;const o=t[r],a=un(o)?gn(o,{}):void 0,s="x"===r?"y":"x",l=t[s],u=un(l)?gn(l,{}):void 0,c=We.reduce((e,n)=>{if("tooltip"!==n&&Di(t,n)){const i=t[n];(Object(O.e)(i)?i:[i]).forEach(t=>{const i=jn(t);if(i.aggregate)return;const r=un(i)?gn(i,{}):void 0;(!r||r!==u&&r!==a)&&e.push({channel:n,fieldDef:i})})}return e},[]);if(0===c.length)return null;let d;return(d=void 0!==o.stack?o.stack:Object(C.contains)(To,i)?Object(C.getFirstDefined)(n,"zero"):n)&&Oo(d)?(o.scale&&o.scale.type&&o.scale.type!==hr.LINEAR&&dt(ft.cannotStackNonLinearScale(o.scale.type)),Di(t,r===Y?J:X)?(void 0!==o.stack&&dt(ft.cannotStackRangedMark(r)),null):(o.aggregate&&!Object(C.contains)(M,o.aggregate)&&dt(ft.stackNonSummativeAggregate(o.aggregate)),{groupbyChannel:l?s:void 0,fieldChannel:r,impute:li(i),stackBy:c,offset:d})):null}function Fo(e){const{point:t,line:n}=e,i=H(e,["point","line"]);return Object(C.keys)(i).length>1?i:i.type}function jo(e){for(const t of["line","area","rule","trail"])e[t]&&(e=Object.assign({},e,{[t]:Object(C.omit)(e[t],["point","line"])}));return e}function Eo(e,t={},n){return"transparent"===e.point?{opacity:0}:e.point?Object(O.i)(e.point)?e.point:{}:void 0!==e.point?null:t.point||n.shape?Object(O.i)(t.point)?t.point:{}:void 0}function $o(e,t={}){return e.line?!0===e.line?{}:e.line:void 0!==e.line?null:t.line?!0===t.line?{}:t.line:void 0}class Mo{constructor(){this.name="path-overlay"}hasMatchingType(e,t){if(wi(e)){const{mark:n,encoding:i}=e,r=ci(n)?n:{type:n};switch(r.type){case"line":case"rule":case"trail":return!!Eo(r,t[r.type],i);case"area":return!!Eo(r,t[r.type],i)||!!$o(r,t[r.type])}}return!1}run(e,t,n){const{config:i}=t,{selection:r,projection:o,encoding:a,mark:s}=e,l=H(e,["selection","projection","encoding","mark"]),u=ci(s)?s:{type:s},c=Eo(u,i[u.type],a),d="area"===u.type&&$o(u,i[u.type]),f=[Object.assign({},r?{selection:r}:{},{mark:Fo(Object.assign({},u,"area"===u.type?{opacity:.7}:{})),encoding:Object(C.omit)(a,["shape"])})],h=So(u,a,i?i.stack:void 0);let p=a;if(h){const{fieldChannel:e,offset:t}=h;p=Object.assign({},a,{[e]:Object.assign({},a[e],t?{stack:t}:{})})}return d&&f.push(Object.assign({},o?{projection:o}:{},{mark:Object.assign({type:"line"},Object(C.pick)(u,["clip","interpolate","tension"]),d),encoding:p})),c&&f.push(Object.assign({},o?{projection:o}:{},{mark:Object.assign({type:"point",opacity:1,filled:!0},Object(C.pick)(u,["clip"]),c),encoding:p})),n(Object.assign({},l,{layer:f}),Object.assign({},t,{config:jo(i)}))}}class zo{constructor(){this.name="RuleForRangedLine"}hasMatchingType(e){if(wi(e)){const{encoding:t,mark:n}=e;return!("line"!==n||!t.x2&&!t.y2)}return!1}run(e,t,n){const{encoding:i}=e;return dt(ft.lineWithRange(!!i.x2,!!i.y2)),n(Object.assign({},e,{mark:"rule"}),t)}}function No(e){const{parentEncoding:t,encoding:n}=e;if(t&&n){const e=Object(C.keys)(t).reduce((e,t)=>(n[t]&&e.push(t),e),[]);e.length>0&&dt(ft.encodingOverridden(e))}const i=Object.assign({},t||{},n||{});return Object(C.keys)(i).length>0?i:void 0}function Bo(e){const{parentProjection:t,projection:n}=e;return t&&n&&dt(ft.projectionOverridden({parentProjection:t,projection:n})),n||t}function Po(e,t){return void 0===t&&(t=no(e.config)),function(e,t={}){return Io.map(e,{config:t})}(e,t)}const Io=new class extends Do{constructor(){super(...arguments),this.nonFacetUnitNormalizers=[qi,Yi,er,new Mo,new zo]}map(e,t){if(wi(e)){const n=Di(e.encoding,ne),i=Di(e.encoding,ie),r=Di(e.encoding,te);if(n||i||r)return this.mapFacetedUnit(e,t)}return super.map(e,t)}mapUnit(e,t){const{parentEncoding:n,parentProjection:i}=t;if(n||i)return this.mapUnitWithParentEncodingOrProjection(e,t);const r=this.mapLayerOrUnit.bind(this);for(const n of this.nonFacetUnitNormalizers)if(n.hasMatchingType(e,t.config))return n.run(e,t,r);return e}mapRepeat(e,t){const{repeat:n}=e;return!Object(O.e)(n)&&e.columns&&(e=Object(C.omit)(e,["columns"]),dt(ft.COLUMNS_NOT_SUPPORTED_BY_REPEAT_ROWCOL)),Object.assign({},e,{spec:this.map(e.spec,t)})}mapUnitWithParentEncodingOrProjection(e,t){const{encoding:n,projection:i}=e,{parentEncoding:r,parentProjection:o,config:a}=t,s=Bo({parentProjection:o,projection:i}),l=No({parentEncoding:r,encoding:n});return this.mapUnit(Object.assign({},e,s?{projection:s}:{},l?{encoding:l}:{}),{config:a})}mapFacetedUnit(e,t){const n=e.encoding,{row:i,column:r,facet:o}=n,a=H(n,["row","column","facet"]),{mark:s,width:l,projection:u,height:c,selection:d,encoding:f}=e,h=H(e,["mark","width","projection","height","selection","encoding"]);return o&&(i||r)&&dt(ft.facetChannelDropped([...i?[ne]:[],...r?[ie]:[]])),Object.assign({},h,{facet:i||r?Object.assign({},i?{row:i}:{},r?{column:r}:{}):o,spec:this.mapUnit(Object.assign({},u?{projection:u}:{},{mark:s},l?{width:l}:{},c?{height:c}:{},{encoding:a},d?{selection:d}:{}),t)})}mapLayer(e,t){var{parentEncoding:n,parentProjection:i}=t,r=H(t,["parentEncoding","parentProjection"]);const{encoding:o,projection:a}=e,s=H(e,["encoding","projection"]),l=Object.assign({},r,{parentEncoding:No({parentEncoding:n,encoding:o}),parentProjection:Bo({parentProjection:i,projection:a})});return super.mapLayer(s,l)}};const Lo="mean";function qo(e){return!!e&&!!e.encoding}function Ro(e){return!(!e||"count"!==e.op&&!e.field)}function Uo(e){return!!e&&Object(O.e)(e)}var Wo=n(152);function Vo(e){return e&&!!e.field&&void 0!==e.equal}function Ho(e){return e&&!!e.field&&void 0!==e.lt}function Yo(e){return e&&!!e.field&&void 0!==e.lte}function Go(e){return e&&!!e.field&&void 0!==e.gt}function Jo(e){return e&&!!e.field&&void 0!==e.gte}function Xo(e){return!!(e&&e.field&&Object(O.e)(e.range)&&2===e.range.length)}function Qo(e){return e&&!!e.field&&(Object(O.e)(e.oneOf)||Object(O.e)(e.in))}function Ko(e){return Qo(e)||Vo(e)||Xo(e)||Ho(e)||Go(e)||Yo(e)||Jo(e)}function Zo(e,t){return In(e,{timeUnit:t,time:!0})}function ea(e,t=!0){const{field:n,timeUnit:i}=e,r=i?"time("+Lt(i,n)+")":gn(e,{expr:"datum"});if(Vo(e))return r+"==="+Zo(e.equal,i);if(Ho(e)){return`${r}<${Zo(e.lt,i)}`}if(Go(e)){return`${r}>${Zo(e.gt,i)}`}if(Yo(e)){return`${r}<=${Zo(e.lte,i)}`}if(Jo(e)){return`${r}>=${Zo(e.gte,i)}`}if(Qo(e))return`indexof([${function(e,t){return e.map(e=>Zo(e,t))}(e.oneOf,i).join(",")}], ${r}) !== -1`;if(function(e){return e&&!!e.field&&void 0!==e.valid}(e))return e.valid?`${r}!==null&&!isNaN(${r})`:`${r}===null||isNaN(${r})`;if(Xo(e)){const n=e.range[0],o=e.range[1];if(null!==n&&null!==o&&t)return"inrange("+r+", ["+Zo(n,i)+", "+Zo(o,i)+"])";const a=[];return null!==n&&a.push(`${r} >= ${Zo(n,i)}`),null!==o&&a.push(`${r} <= ${Zo(o,i)}`),a.length>0?a.join(" && "):"true"}throw new Error(`Invalid field predicate: ${JSON.stringify(e)}`)}function ta(e){return Ko(e)&&e.timeUnit?Object.assign({},e,{timeUnit:Ut(e.timeUnit)}):e}function na(e){return void 0!==e.filter}function ia(e){return e&&void 0!==e.start&&void 0!==e.stop}function ra(e){return void 0!==e.lookup}function oa(e){return void 0!==e.sample}function aa(e){return void 0!==e.window}function sa(e){return void 0!==e.joinaggregate}function la(e){return void 0!==e.flatten}function ua(e){return void 0!==e.calculate}function ca(e){return!!e.bin}function da(e){return void 0!==e.impute}function fa(e){return void 0!==e.timeUnit}function ha(e){return void 0!==e.aggregate}function pa(e){return void 0!==e.stack}function ga(e){return void 0!==e.fold}function ma(e){return e.map(e=>na(e)?{filter:Object(Wo.e)(e.filter,ta)}:e)}const ya={text:["text"],line:["x","y"],trail:["x","y"],area:["x","y"]},ba={bar:Object(O.n)(["row","column","x","y","size","color","fill","stroke","detail"]),line:Object(O.n)(["row","column","x","y","color","fill","stroke","color","detail"]),trail:Object(O.n)(["row","column","x","y","color","fill","stroke","color","detail","size"]),area:Object(O.n)(["row","column","x","y","color","fill","stroke","detail"]),tick:Object(O.n)(["row","column","x","y","color","fill","stroke","detail"]),circle:Object(O.n)(["row","column","x","y","color","fill","stroke","size","detail"]),square:Object(O.n)(["row","column","x","y","color","fill","stroke","size","detail"]),point:Object(O.n)(["row","column","x","y","color","fill","stroke","size","detail","shape"]),geoshape:Object(O.n)(["row","column","color","fill","stroke","detail","shape"]),text:Object(O.n)(["row","column","size","color","fill","stroke","text"])};function va(e,t=ya,n=ba){const i=ci(e.mark)?e.mark.type:e.mark,r=e.encoding,o=t[i],a=n[i];for(const e in o)if(!(o[e]in r))return'Missing encoding channel "'+o[e]+'" for mark "'+i+'"';for(const e in r)if(!a[e])return'Encoding channel "'+e+'" is not supported by mark type "'+i+'"';return i!==Jn||r.x||r.y?null:"Missing both x and y for bar"}function _a(e){return Object(O.j)(e)?{type:e}:e||{}}const xa=["background","padding"];function wa(e){return xa.reduce((t,n)=>(e&&void 0!==e[n]&&(t[n]=e[n]),t),{})}const ka=20,Da=Object(C.flagKeys)({align:1,bounds:1,center:1,columns:1,spacing:1});function Aa(e){return!!e.signal}function Oa(e){return!!e.step}function Ca(e){return!Object(O.e)(e)&&("field"in e&&"data"in e)}const Ta=Object(C.flagKeys)({opacity:1,fill:1,fillOpacity:1,stroke:1,strokeCap:1,strokeWidth:1,strokeOpacity:1,strokeDash:1,strokeDashOffset:1,strokeJoin:1,strokeMiterLimit:1,size:1,shape:1,interpolate:1,tension:1,orient:1,align:1,baseline:1,text:1,dir:1,dx:1,dy:1,ellipsis:1,limit:1,radius:1,theta:1,angle:1,font:1,fontSize:1,fontWeight:1,fontStyle:1,cursor:1,href:1,tooltip:1,cornerRadius:1});function Sa(e,t,n,i={header:!1}){const r=e.combine(),{orient:o,scale:a,title:s,zindex:l}=r,u=H(r,["orient","scale","title","zindex"]);if(Object(C.keys)(u).forEach(e=>{const n=P[e];n&&n!==t&&"both"!==n&&delete u[e]}),"grid"===t){if(!u.grid)return;if(u.encode){const{grid:e}=u.encode;u.encode=Object.assign({},e?{grid:e}:{}),0===Object(C.keys)(u.encode).length&&delete u.encode}return Object.assign({scale:a,orient:o},u,{domain:!1,labels:!1,maxExtent:0,minExtent:0,ticks:!1,zindex:Object(C.getFirstDefined)(l,0)})}{if(!i.header&&e.mainExtracted)return;if(u.encode){for(const t of B)e.hasAxisPart(t)||delete u.encode[t];0===Object(C.keys)(u.encode).length&&delete u.encode}const t=function(e,t){return Object(O.e)(e)?e.map(e=>Cn(e,t)).join(", "):e}(s,n);return Object.assign({scale:a,orient:o,grid:!1},t?{title:t}:{},u,{zindex:Object(C.getFirstDefined)(l,1)})}}function Fa(e){return[].concat(e.type,e.style||[])}function ja(e,t,n,{skipGeneralMarkConfig:i=!1}={}){return Object(C.getFirstDefined)(Ea(e,t,n.style),n[t.type][e],i?void 0:n.mark[e])}function Ea(e,t,n){const i=Fa(t);let r;for(const t of i){const i=n[t],o=e;i&&void 0!==i[o]&&(r=i[o])}return r}function $a(e,t,n,i){const r=Ma(e,t,i);if(Un(e.bin)){return{signal:Ba(gn(e,{expr:n}),gn(e,{expr:n,binSuffix:"end"}),r,i)}}if("quantitative"===e.type)return{signal:`${za(gn(e,{expr:n,binSuffix:"range"}),r)}`};if(Pn(e)){const r=dn(e)&&e.scale&&e.scale.type===hr.UTC;return{signal:Pa(gn(e,{expr:n}),e.timeUnit,t,i.text.shortTimeLabels,i.timeFormat,r,!0)}}return{signal:`''+${gn(e,{expr:n})}`}}function Ma(e,t,n){if(!Pn(e))return t||(e.type===Yt?n.numberFormat:void 0)}function za(e,t){return`format(${e}, "${t||""}")`}function Na(e,t,n){return za(e,t||n.numberFormat)}function Ba(e,t,n,i){return`${e} === null || isNaN(${e}) ? "null" : ${Na(e,n,i)} + " - " + ${Na(t,n,i)}`}function Pa(e,t,n,i,r,o,a=!1){return!t||n?(n=n||r)||a?`${o?"utc":"time"}Format(${e}, '${n}')`:void 0:Rt(t,e,i,o)}function Ia(e,t){return(Object(O.e)(e)?e:[e]).reduce((e,n)=>(e.field.push(gn(n,t)),e.order.push(n.sort||"ascending"),e),{field:[],order:[]})}function La(e,t){const n=[...e];return t.forEach(e=>{for(const t of n)if(Object(C.stringify)(t)===Object(C.stringify)(e))return;n.push(e)}),n}function qa(e,t){return e!==t&&t?e?e+", "+t:t:e}function Ra(e,t){if(Object(O.e)(e.value)&&Object(O.e)(t.value))return{explicit:e.explicit,value:La(e.value,t.value)};if(!Object(O.e)(e.value)&&!Object(O.e)(t.value))return{explicit:e.explicit,value:qa(e.value,t.value)};throw new Error("It should never reach here")}class Ua{constructor(e,t){this.debugName=t,this._children=[],this._parent=null,e&&(this.parent=e)}clone(){throw new Error("Cannot clone node")}hash(){return void 0===this._hash&&(this._hash=Object(C.uniqueId)()),this._hash}producedFields(){return new Set}dependentFields(){return new Set}get parent(){return this._parent}set parent(e){this._parent=e,e.addChild(this)}get children(){return this._children}numChildren(){return this._children.length}addChild(e,t){this._children.indexOf(e)>-1?console.warn("Attempt to add the same child twice."):void 0!==t?this._children.splice(t,0,e):this._children.push(e)}removeChild(e){const t=this._children.indexOf(e);return this._children.splice(t,1),t}remove(){let e=this._parent.removeChild(this);for(const t of this._children)t._parent=this._parent,this._parent.addChild(t,e++)}insertAsParentOf(e){const t=e.parent;t.removeChild(this),this.parent=t,e.parent=this}swapWithParent(){const e=this._parent,t=e.parent;for(const t of this._children)t.parent=e;this._children=[],e.removeChild(this),e.parent.removeChild(e),this.parent=t,e.parent=this}}class Wa extends Ua{constructor(e,t,n,i){super(e,t),this.type=n,this.refCounts=i,this._source=this._name=t,!this.refCounts||this._name in this.refCounts||(this.refCounts[this._name]=0)}clone(){const e=new this.constructor;return e.debugName="clone_"+this.debugName,e._source=this._source,e._name="clone_"+this._name,e.type=this.type,e.refCounts=this.refCounts,e.refCounts[e._name]=0,e}getSource(){return this.refCounts[this._name]++,this._source}isRequired(){return!!this.refCounts[this._name]}setSource(e){this._source=e}}var Va,Ha,Ya,Ga,Ja,Xa="RawCode",Qa="Literal",Ka="Property",Za="Identifier",es="ArrayExpression",ts="BinaryExpression",ns="CallExpression",is="ConditionalExpression",rs="LogicalExpression",os="MemberExpression",as="ObjectExpression",ss="UnaryExpression";function ls(e){this.type=e}ls.prototype.visit=function(e){var t,n,i;if(e(this))return 1;for(n=0,i=(t=function(e){switch(e.type){case es:return e.elements;case ts:case rs:return[e.left,e.right];case ns:var t=e.arguments.slice();return t.unshift(e.callee),t;case is:return[e.test,e.consequent,e.alternate];case os:return[e.object,e.property];case as:return e.properties;case Ka:return[e.key,e.value];case ss:return[e.argument];case Za:case Qa:case Xa:default:return[]}}(this)).length;n<i;++n)if(t[n].visit(e))return 1};var us=1,cs=2,ds=3,fs=4,hs=5,ps=6,gs=7,ms=8;(Va={})[us]="Boolean",Va[cs]="<end>",Va[ds]="Identifier",Va[fs]="Keyword",Va[hs]="Null",Va[ps]="Numeric",Va[gs]="Punctuator",Va[ms]="String",Va[9]="RegularExpression";var ys="ArrayExpression",bs="BinaryExpression",vs="CallExpression",_s="ConditionalExpression",xs="Identifier",ws="Literal",ks="LogicalExpression",Ds="MemberExpression",As="ObjectExpression",Os="Property",Cs="UnaryExpression",Ts="Unexpected token %0",Ss="Unexpected number",Fs="Unexpected string",js="Unexpected identifier",Es="Unexpected reserved word",$s="Unexpected end of input",Ms="Invalid regular expression",zs="Invalid regular expression: missing /",Ns="Octal literals are not allowed in strict mode.",Bs="Duplicate data property in object literal not allowed in strict mode",Ps="ILLEGAL",Is="Disabled.",Ls=new RegExp("[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]"),qs=new RegExp("[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]");function Rs(e,t){if(!e)throw new Error("ASSERT: "+t)}function Us(e){return e>=48&&e<=57}function Ws(e){return"0123456789abcdefABCDEF".indexOf(e)>=0}function Vs(e){return"01234567".indexOf(e)>=0}function Hs(e){return 32===e||9===e||11===e||12===e||160===e||e>=5760&&[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279].indexOf(e)>=0}function Ys(e){return 10===e||13===e||8232===e||8233===e}function Gs(e){return 36===e||95===e||e>=65&&e<=90||e>=97&&e<=122||92===e||e>=128&&Ls.test(String.fromCharCode(e))}function Js(e){return 36===e||95===e||e>=65&&e<=90||e>=97&&e<=122||e>=48&&e<=57||92===e||e>=128&&qs.test(String.fromCharCode(e))}var Xs={if:1,in:1,do:1,var:1,for:1,new:1,try:1,let:1,this:1,else:1,case:1,void:1,with:1,enum:1,while:1,break:1,catch:1,throw:1,const:1,yield:1,class:1,super:1,return:1,typeof:1,delete:1,switch:1,export:1,import:1,public:1,static:1,default:1,finally:1,extends:1,package:1,private:1,function:1,continue:1,debugger:1,interface:1,protected:1,instanceof:1,implements:1};function Qs(){for(var e;Ya<Ga&&(Hs(e=Ha.charCodeAt(Ya))||Ys(e));)++Ya}function Ks(e){var t,n,i,r=0;for(n="u"===e?4:2,t=0;t<n;++t)Ya<Ga&&Ws(Ha[Ya])?(i=Ha[Ya++],r=16*r+"0123456789abcdef".indexOf(i.toLowerCase())):pl({},Ts,Ps);return String.fromCharCode(r)}function Zs(){var e,t,n,i;for(t=0,"}"===(e=Ha[Ya])&&pl({},Ts,Ps);Ya<Ga&&Ws(e=Ha[Ya++]);)t=16*t+"0123456789abcdef".indexOf(e.toLowerCase());return(t>1114111||"}"!==e)&&pl({},Ts,Ps),t<=65535?String.fromCharCode(t):(n=55296+(t-65536>>10),i=56320+(t-65536&1023),String.fromCharCode(n,i))}function el(){var e,t;for(e=Ha.charCodeAt(Ya++),t=String.fromCharCode(e),92===e&&(117!==Ha.charCodeAt(Ya)&&pl({},Ts,Ps),++Ya,(e=Ks("u"))&&"\\"!==e&&Gs(e.charCodeAt(0))||pl({},Ts,Ps),t=e);Ya<Ga&&Js(e=Ha.charCodeAt(Ya));)++Ya,t+=String.fromCharCode(e),92===e&&(t=t.substr(0,t.length-1),117!==Ha.charCodeAt(Ya)&&pl({},Ts,Ps),++Ya,(e=Ks("u"))&&"\\"!==e&&Js(e.charCodeAt(0))||pl({},Ts,Ps),t+=e);return t}function tl(){var e,t;return e=Ya,{type:1===(t=92===Ha.charCodeAt(Ya)?el():function(){var e,t;for(e=Ya++;Ya<Ga;){if(92===(t=Ha.charCodeAt(Ya)))return Ya=e,el();if(!Js(t))break;++Ya}return Ha.slice(e,Ya)}()).length?ds:Xs.hasOwnProperty(t)?fs:"null"===t?hs:"true"===t||"false"===t?us:ds,value:t,start:e,end:Ya}}function nl(){var e,t,n,i,r=Ya,o=Ha.charCodeAt(Ya),a=Ha[Ya];switch(o){case 46:case 40:case 41:case 59:case 44:case 123:case 125:case 91:case 93:case 58:case 63:case 126:return++Ya,{type:gs,value:String.fromCharCode(o),start:r,end:Ya};default:if(61===(e=Ha.charCodeAt(Ya+1)))switch(o){case 43:case 45:case 47:case 60:case 62:case 94:case 124:case 37:case 38:case 42:return Ya+=2,{type:gs,value:String.fromCharCode(o)+String.fromCharCode(e),start:r,end:Ya};case 33:case 61:return Ya+=2,61===Ha.charCodeAt(Ya)&&++Ya,{type:gs,value:Ha.slice(r,Ya),start:r,end:Ya}}}return">>>="===(i=Ha.substr(Ya,4))?{type:gs,value:i,start:r,end:Ya+=4}:">>>"===(n=i.substr(0,3))||"<<="===n||">>="===n?{type:gs,value:n,start:r,end:Ya+=3}:a===(t=n.substr(0,2))[1]&&"+-<>&|".indexOf(a)>=0||"=>"===t?{type:gs,value:t,start:r,end:Ya+=2}:"<>=!+-*%&|^/".indexOf(a)>=0?{type:gs,value:a,start:r,end:++Ya}:void pl({},Ts,Ps)}function il(){var e,t,n;if(Rs(Us((n=Ha[Ya]).charCodeAt(0))||"."===n,"Numeric literal must start with a decimal digit or a decimal point"),t=Ya,e="","."!==n){if(e=Ha[Ya++],n=Ha[Ya],"0"===e){if("x"===n||"X"===n)return++Ya,function(e){for(var t="";Ya<Ga&&Ws(Ha[Ya]);)t+=Ha[Ya++];return 0===t.length&&pl({},Ts,Ps),Gs(Ha.charCodeAt(Ya))&&pl({},Ts,Ps),{type:ps,value:parseInt("0x"+t,16),start:e,end:Ya}}(t);if(Vs(n))return function(e){for(var t="0"+Ha[Ya++];Ya<Ga&&Vs(Ha[Ya]);)t+=Ha[Ya++];return(Gs(Ha.charCodeAt(Ya))||Us(Ha.charCodeAt(Ya)))&&pl({},Ts,Ps),{type:ps,value:parseInt(t,8),octal:!0,start:e,end:Ya}}(t);n&&Us(n.charCodeAt(0))&&pl({},Ts,Ps)}for(;Us(Ha.charCodeAt(Ya));)e+=Ha[Ya++];n=Ha[Ya]}if("."===n){for(e+=Ha[Ya++];Us(Ha.charCodeAt(Ya));)e+=Ha[Ya++];n=Ha[Ya]}if("e"===n||"E"===n)if(e+=Ha[Ya++],"+"!==(n=Ha[Ya])&&"-"!==n||(e+=Ha[Ya++]),Us(Ha.charCodeAt(Ya)))for(;Us(Ha.charCodeAt(Ya));)e+=Ha[Ya++];else pl({},Ts,Ps);return Gs(Ha.charCodeAt(Ya))&&pl({},Ts,Ps),{type:ps,value:parseFloat(e),start:t,end:Ya}}function rl(){var e,t,n,i;return Ja=null,Qs(),e=Ya,t=function(){var e,t,n,i;for(Rs("/"===(e=Ha[Ya]),"Regular expression literal must start with a slash"),t=Ha[Ya++],n=!1,i=!1;Ya<Ga;)if(t+=e=Ha[Ya++],"\\"===e)Ys((e=Ha[Ya++]).charCodeAt(0))&&pl({},zs),t+=e;else if(Ys(e.charCodeAt(0)))pl({},zs);else if(n)"]"===e&&(n=!1);else{if("/"===e){i=!0;break}"["===e&&(n=!0)}return i||pl({},zs),{value:t.substr(1,t.length-2),literal:t}}(),n=function(){var e,t,n;for(t="",n="";Ya<Ga&&Js((e=Ha[Ya]).charCodeAt(0));)++Ya,"\\"===e&&Ya<Ga?pl({},Ts,Ps):(n+=e,t+=e);return n.search(/[^gimuy]/g)>=0&&pl({},Ms,n),{value:n,literal:t}}(),i=function(e,t){var n=e;t.indexOf("u")>=0&&(n=n.replace(/\\u\{([0-9a-fA-F]+)\}/g,function(e,t){if(parseInt(t,16)<=1114111)return"x";pl({},Ms)}).replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,"x"));try{new RegExp(n)}catch(e){pl({},Ms)}try{return new RegExp(e,t)}catch(e){return null}}(t.value,n.value),{literal:t.literal+n.literal,value:i,regex:{pattern:t.value,flags:n.value},start:e,end:Ya}}function ol(){var e;return Qs(),Ya>=Ga?{type:cs,start:Ya,end:Ya}:Gs(e=Ha.charCodeAt(Ya))?tl():40===e||41===e||59===e?nl():39===e||34===e?function(){var e,t,n,i,r="",o=!1;for(Rs("'"===(e=Ha[Ya])||'"'===e,"String literal must starts with a quote"),t=Ya,++Ya;Ya<Ga;){if((n=Ha[Ya++])===e){e="";break}if("\\"===n)if((n=Ha[Ya++])&&Ys(n.charCodeAt(0)))"\r"===n&&"\n"===Ha[Ya]&&++Ya;else switch(n){case"u":case"x":"{"===Ha[Ya]?(++Ya,r+=Zs()):r+=Ks(n);break;case"n":r+="\n";break;case"r":r+="\r";break;case"t":r+="\t";break;case"b":r+="\b";break;case"f":r+="\f";break;case"v":r+="\v";break;default:Vs(n)?(0!==(i="01234567".indexOf(n))&&(o=!0),Ya<Ga&&Vs(Ha[Ya])&&(o=!0,i=8*i+"01234567".indexOf(Ha[Ya++]),"0123".indexOf(n)>=0&&Ya<Ga&&Vs(Ha[Ya])&&(i=8*i+"01234567".indexOf(Ha[Ya++]))),r+=String.fromCharCode(i)):r+=n}else{if(Ys(n.charCodeAt(0)))break;r+=n}}return""!==e&&pl({},Ts,Ps),{type:ms,value:r,octal:o,start:t,end:Ya}}():46===e?Us(Ha.charCodeAt(Ya+1))?il():nl():Us(e)?il():nl()}function al(){var e;return Ya=(e=Ja).end,Ja=ol(),Ya=e.end,e}function sl(){var e;e=Ya,Ja=ol(),Ya=e}function ll(e,t,n){var i=new ls("||"===e||"&&"===e?ks:bs);return i.operator=e,i.left=t,i.right=n,i}function ul(e,t){var n=new ls(vs);return n.callee=e,n.arguments=t,n}function cl(e){var t=new ls(xs);return t.name=e,t}function dl(e){var t=new ls(ws);return t.value=e.value,t.raw=Ha.slice(e.start,e.end),e.regex&&("//"===t.raw&&(t.raw="/(?:)/"),t.regex=e.regex),t}function fl(e,t,n){var i=new ls(Ds);return i.computed="["===e,i.object=t,i.property=n,i.computed||(n.member=!0),i}function hl(e,t,n){var i=new ls(Os);return i.key=t,i.value=n,i.kind=e,i}function pl(e,t){var n,i=Array.prototype.slice.call(arguments,2),r=t.replace(/%(\d)/g,function(e,t){return Rs(t<i.length,"Message reference must be in range"),i[t]});throw(n=new Error(r)).index=Ya,n.description=r,n}function gl(e){e.type===cs&&pl(e,$s),e.type===ps&&pl(e,Ss),e.type===ms&&pl(e,Fs),e.type===ds&&pl(e,js),e.type===fs&&pl(e,Es),pl(e,Ts,e.value)}function ml(e){var t=al();t.type===gs&&t.value===e||gl(t)}function yl(e){return Ja.type===gs&&Ja.value===e}function bl(e){return Ja.type===fs&&Ja.value===e}function vl(){var e=[];for(Ya=Ja.start,ml("[");!yl("]");)yl(",")?(al(),e.push(null)):(e.push(jl()),yl("]")||ml(","));return al(),function(e){var t=new ls(ys);return t.elements=e,t}(e)}function _l(){var e;return Ya=Ja.start,(e=al()).type===ms||e.type===ps?(e.octal&&pl(e,Ns),dl(e)):cl(e.value)}function xl(){var e,t,n;return Ya=Ja.start,(e=Ja).type===ds?(n=_l(),ml(":"),hl("init",n,jl())):e.type!==cs&&e.type!==gs?(t=_l(),ml(":"),hl("init",t,jl())):void gl(e)}function wl(){var e,t,n=[],i={},r=String;for(Ya=Ja.start,ml("{");!yl("}");)t="$"+((e=xl()).key.type===xs?e.key.name:r(e.key.value)),Object.prototype.hasOwnProperty.call(i,t)?pl({},Bs):i[t]=!0,n.push(e),yl("}")||ml(",");return ml("}"),function(e){var t=new ls(As);return t.properties=e,t}(n)}var kl={if:1,this:1};function Dl(){var e,t,n;if(yl("("))return function(){var e;return ml("("),e=El(),ml(")"),e}();if(yl("["))return vl();if(yl("{"))return wl();if(e=Ja.type,Ya=Ja.start,e===ds||kl[Ja.value])n=cl(al().value);else if(e===ms||e===ps)Ja.octal&&pl(Ja,Ns),n=dl(al());else{if(e===fs)throw new Error(Is);e===us?((t=al()).value="true"===t.value,n=dl(t)):e===hs?((t=al()).value=null,n=dl(t)):yl("/")||yl("/=")?(n=dl(rl()),sl()):gl(al())}return n}function Al(){var e=[];if(ml("("),!yl(")"))for(;Ya<Ga&&(e.push(jl()),!yl(")"));)ml(",");return ml(")"),e}function Ol(){var e;return Ya=Ja.start,function(e){return e.type===ds||e.type===fs||e.type===us||e.type===hs}(e=al())||gl(e),cl(e.value)}function Cl(){var e;return ml("["),e=El(),ml("]"),e}function Tl(){var e=function(){var e;for(e=Dl();;)if(yl("."))ml("."),e=fl(".",e,Ol());else if(yl("("))e=ul(e,Al());else{if(!yl("["))break;e=fl("[",e,Cl())}return e}();if(Ja.type===gs&&(yl("++")||yl("--")))throw new Error(Is);return e}function Sl(){var e,t,n,i,r;if(Ja.type!==gs&&Ja.type!==fs)t=Tl();else{if(yl("++")||yl("--"))throw new Error(Is);if(yl("+")||yl("-")||yl("~")||yl("!"))e=al(),t=Sl(),n=e.value,i=t,(r=new ls(Cs)).operator=n,r.argument=i,r.prefix=!0,t=r;else{if(bl("delete")||bl("void")||bl("typeof"))throw new Error(Is);t=Tl()}}return t}function Fl(e){var t=0;if(e.type!==gs&&e.type!==fs)return 0;switch(e.value){case"||":t=1;break;case"&&":t=2;break;case"|":t=3;break;case"^":t=4;break;case"&":t=5;break;case"==":case"!=":case"===":case"!==":t=6;break;case"<":case">":case"<=":case">=":case"instanceof":case"in":t=7;break;case"<<":case">>":case">>>":t=8;break;case"+":case"-":t=9;break;case"*":case"/":case"%":t=11}return t}function jl(){var e,t;return e=function(){var e,t,n,i,r,o,a,s,l,u;if(e=Ja,l=Sl(),0===(r=Fl(i=Ja)))return l;for(i.prec=r,al(),t=[e,Ja],o=[l,i,a=Sl()];(r=Fl(Ja))>0;){for(;o.length>2&&r<=o[o.length-2].prec;)a=o.pop(),s=o.pop().value,l=o.pop(),t.pop(),n=ll(s,l,a),o.push(n);(i=al()).prec=r,o.push(i),t.push(Ja),n=Sl(),o.push(n)}for(n=o[u=o.length-1],t.pop();u>1;)t.pop(),n=ll(o[u-1].value,o[u-2],n),u-=2;return n}(),yl("?")&&(al(),t=jl(),ml(":"),e=function(e,t,n){var i=new ls(_s);return i.test=e,i.consequent=t,i.alternate=n,i}(e,t,jl())),e}function El(){var e=jl();if(yl(","))throw new Error(Is);return e}var $l=function(e){Ya=0,Ga=(Ha=e).length,Ja=null,sl();var t=El();if(Ja.type!==cs)throw new Error("Unexpect token after expression.");return t};function Ml(e){const t=$l(e),n=new Set;return t.visit(e=>{"MemberExpression"===e.type&&function e(t){return"MemberExpression"===t.object.type?e(t.object):"datum"===t.object.name}(e)&&n.add(function e(t){const n=[];return"Identifier"===t.type?[t.name]:"Literal"===t.type?[t.value]:("MemberExpression"===t.type&&(n.push(...e(t.object)),n.push(...e(t.property))),n)}(e).slice(1).join("."))}),n}class zl extends Ua{constructor(e,t){super(e),this.transform=t,this._dependentFields=Ml(this.transform.calculate)}clone(){return new zl(null,Object(C.duplicate)(this.transform))}static parseAllForSortIndex(e,t){return t.forEachFieldDef((t,n)=>{if(dn(t)&&Uo(t.sort)){const{field:i,timeUnit:r}=t,o=t.sort,a=o.map((e,t)=>`${ea({field:i,timeUnit:r,equal:e})} ? ${t} : `).join("")+o.length;e=new zl(e,{calculate:a,as:Nl(t,n,{forAs:!0})})}}),e}producedFields(){return new Set([this.transform.as])}dependentFields(){return this._dependentFields}assemble(){return{type:"formula",expr:this.transform.calculate,as:this.transform.as}}hash(){return`Calculate ${Object(C.hash)(this.transform)}`}}function Nl(e,t,n){return gn(e,Object.assign({prefix:t,suffix:"sort_index"},n||{}))}const Bl=["row","column"],Pl=["header","footer"];function Il(e,t){const n=e.component.layoutHeaders[t].title,i=e.config?e.config:void 0,r=e.component.layoutHeaders[t].facetFieldDef?e.component.layoutHeaders[t].facetFieldDef:void 0;return{name:`${t}-title`,type:"group",role:`${"facet"===t?"column":t}-title`,title:Object.assign({text:n,offset:10},"row"===t?{orient:"left"}:{},{style:"guide-title"},Wl(i,r,mo,po))}}function Ll(e,t){const n=e.component.layoutHeaders[t],i=[];for(const r of Pl)if(n[r])for(const o of n[r])i.push(Ul(e,t,r,n,o));return i}function ql(e,t){const{sort:n}=e;return Ro(n)?{field:gn(n,{expr:"datum"}),order:n.order||"ascending"}:Object(O.e)(n)?{field:Nl(e,t,{expr:"datum"}),order:"ascending"}:{field:gn(e,{expr:"datum"}),order:n||"ascending"}}function Rl(e,t,n){const{header:i={}}=e,{format:r,labelAngle:o}=i,a=Object.assign({},(90+(s=((s=o)%360+360)%360))%180==0?{}:s<90||270<s?{align:{value:"right"}}:135<=s&&s<225?{align:{value:"left"}}:{});var s;return Object.assign({text:$a(e,r,"parent",n),offset:10},"row"===t?{orient:"left"}:{},{style:"guide-label"},void 0!==o?{angle:o}:{},function(e){return 45<=(e=(e%360+360)%360)&&e<=135?{baseline:"top"}:{baseline:"middle"}}(o),Wl(n,e,yo,go),Object(C.keys)(a).length>0?{encode:{update:a}}:{})}function Ul(e,t,n,i,r){if(r){let o=null;const{facetFieldDef:a}=i,s=e.config?e.config:void 0;a&&r.labels&&(o=Rl(a,t,s));const l=r.axes,u=l&&l.length>0;if(o||u){const s="row"===t?"height":"width";return Object.assign({name:e.getName(`${t}_${n}`),type:"group",role:`${t}-${n}`},i.facetFieldDef?{from:{data:e.getName(t+"_domain")},sort:ql(a,t)}:{},o?{title:o}:{},r.sizeSignal?{encode:{update:{[s]:r.sizeSignal}}}:{},u?{axes:l}:{})}}return null}function Wl(e,t,n,i){const r={};for(const o of n)e&&e.header&&e.header[o]&&(r[i[o]]=e.header[o]),t&&t.header&&t.header[o]&&(r[i[o]]=t.header[o]);return r}function Vl(e){return[...Hl(e,"width"),...Hl(e,"height")]}function Hl(e,t){const n="width"===t?"x":"y",i=e.component.layoutSize.get(t);if(!i||"merged"===i)return[];const r=e.getSizeSignalRef(t).signal;if("range-step"===i){const t=e.getScaleComponent(n);if(t){const i=t.get("type"),o=t.get("range");if(Tr(i)&&Oa(o)){const i=e.scaleName(n);if(Wd(e.parent)){if("independent"===e.parent.component.resolve.scale[n])return[Yl(i,o)]}return[Yl(i,o),{name:r,update:Gl(i,t,`domain('${i}').length`)}]}}throw new Error("layout size is range step although there is no rangeStep.")}return[{name:r,value:i}]}function Yl(e,t){return{name:e+"_step",value:t.step}}function Gl(e,t,n){const i=t.get("type"),r=t.get("padding"),o=Object(C.getFirstDefined)(t.get("paddingOuter"),r);let a=t.get("paddingInner");return`bandspace(${n}, ${a="band"===i?void 0!==a?a:r:1}, ${o}) * ${e}_step`}var Jl,Xl,Ql=function(e,t,n){return Jl=t||Kl,Xl=n||lu,cu(e.trim()).map(du)},Kl="view",Zl="[",eu="]",tu="{",nu="}",iu=":",ru=",",ou="@",au=">",su=/[[\]{}]/,lu={"*":1,arc:1,area:1,group:1,image:1,line:1,path:1,rect:1,rule:1,shape:1,symbol:1,text:1,trail:1};function uu(e,t,n,i,r){for(var o,a=0,s=e.length;t<s;++t){if(o=e[t],!a&&o===n)return t;r&&r.indexOf(o)>=0?--a:i&&i.indexOf(o)>=0&&++a}return t}function cu(e){for(var t=[],n=0,i=e.length,r=0;r<i;)r=uu(e,r,ru,Zl+tu,eu+nu),t.push(e.substring(n,r).trim()),n=++r;if(0===t.length)throw"Empty event selector: "+e;return t}function du(e){return"["===e[0]?function(e){var t,n,i=e.length,r=1;if((r=uu(e,r,eu,Zl,eu))===i)throw"Empty between selector: "+e;if(2!==(t=cu(e.substring(1,r))).length)throw"Between selector must have two elements: "+e;if((e=e.slice(r+1).trim())[0]!==au)throw"Expected '>' after between selector: "+e;if(t=t.map(du),(n=du(e.slice(1).trim())).between)return{between:t,stream:n};n.between=t;return n}(e):function(e){var t,n,i={source:Jl},r=[],o=[0,0],a=0,s=0,l=e.length,u=0;if(e[l-1]===nu){if(!((u=e.lastIndexOf(tu))>=0))throw"Unmatched right brace: "+e;try{o=function(e){var t=e.split(ru);if(!e.length||t.length>2)throw e;return t.map(function(t){var n=+t;if(n!=n)throw e;return n})}(e.substring(u+1,l-1))}catch(t){throw"Invalid throttle specification: "+e}e=e.slice(0,u).trim(),l=e.length,u=0}if(!l)throw e;e[0]===ou&&(a=++u);(t=uu(e,u,iu))<l&&(r.push(e.substring(s,t).trim()),s=u=++t);if((u=uu(e,u,Zl))===l)r.push(e.substring(s,l).trim());else if(r.push(e.substring(s,u).trim()),n=[],(s=++u)===l)throw"Unmatched left bracket: "+e;for(;u<l;){if((u=uu(e,u,eu))===l)throw"Unmatched left bracket: "+e;if(n.push(e.substring(s,u).trim()),u<l-1&&e[++u]!==Zl)throw"Expected left bracket: "+e;s=++u}if(!(l=r.length)||su.test(r[l-1]))throw"Invalid event selector: "+e;l>1?(i.type=r[1],a?i.markname=r[0].slice(1):(c=r[0],Xl.hasOwnProperty(c)?i.marktype=r[0]:i.source=r[0])):i.type=r[0];var c;"!"===i.type.slice(-1)&&(i.consume=!0,i.type=i.type.slice(0,-1));null!=n&&(i.filter=n);o[0]&&(i.throttle=o[0]);o[1]&&(i.debounce=o[1]);return i}(e)}class fu extends Ua{constructor(e,t){super(e),this.formula=t}clone(){return new fu(null,Object(C.duplicate)(this.formula))}static makeFromEncoding(e,t){const n=t.reduceFieldDef((e,t)=>{if(t.timeUnit){const n=gn(t,{forAs:!0});e[n]={as:n,timeUnit:t.timeUnit,field:t.field}}return e},{});return 0===Object(C.keys)(n).length?null:new fu(e,n)}static makeFromTransform(e,t){return new fu(e,{[t.field]:{as:t.as,timeUnit:t.timeUnit,field:t.field}})}merge(e){this.formula=Object.assign({},this.formula,e.formula),e.remove()}producedFields(){return new Set(Object(C.vals)(this.formula).map(e=>e.as))}dependentFields(){return new Set(Object(C.vals)(this.formula).map(e=>e.field))}hash(){return`TimeUnit ${Object(C.hash)(this.formula)}`}assemble(){return Object(C.vals)(this.formula).map(e=>({type:"formula",as:e.as,expr:Lt(e.timeUnit,e.field)}))}}var hu={has:e=>"interval"===e.type&&"global"===e.resolve&&e.bind&&"scales"===e.bind,parse:(e,t,n)=>{const i=Object(C.varName)(n.name),r=n.scales=[];for(const t of n.project){const n=t.channel;if(!ot(n))continue;const o=e.getScaleComponent(n),a=o?o.get("type"):void 0;if(o&&Sr(a)){if(o.set("domainRaw",{signal:Object(C.accessPathWithDatum)(t.field,i)},!0),r.push(n),e.repeater&&e.repeater.row===e.repeater.column){e.getScaleComponent(n===Y?G:Y).set("domainRaw",{signal:Object(C.accessPathWithDatum)(t.field,i)},!0)}}else dt(ft.SCALE_BINDINGS_CONTINUOUS)}},topLevelSignals:(e,t,n)=>{const i=t.scales.filter(e=>!n.filter(n=>n.name===Wu(t,e,"data")).length).map(e=>({channel:e,signal:Wu(t,e,"data")}));if(!e.parent||!i.length)return n;const r=n.filter(e=>e.name===t.name)[0],o=r.update;if(o.indexOf(Bu)>=0)r.update="{"+i.map(e=>`${Object(O.m)(t.fields[e.channel])}: ${e.signal}`).join(", ")+"}";else for(const e of i){const n=`, ${Object(O.m)(t.fields[e.channel])}: ${e.signal}`;o.indexOf(n)<0&&(r.update=o.substring(0,o.length-1)+n+"}")}return n.concat(i.map(e=>({name:e.signal})))},signals:(e,t,n)=>{if(e.parent)for(const e of t.scales){const i=n.filter(n=>n.name===Wu(t,e,"data"))[0];i.push="outer",delete i.value,delete i.update}return n}};function pu(e,t){return`domain(${Object(O.m)(e.scaleName(t))})`}const gu="_fields";const mu="_scale_trigger";var yu={signals:(e,t)=>{const n=t.name,i=n+Mu+gu,r=hu.has(t),o=[],a=[],s=[];if(t.translate&&!r){const e=`!event.item || event.item.mark.name !== ${Object(O.m)(n+"_brush")}`;bu(t,(t,n)=>{const i=n.between[0].filter||(n.between[0].filter=[]);i.indexOf(e)<0&&i.push(e)})}t.project.forEach((n,i)=>{const r=n.channel;if(r!==Y&&r!==G)return void dt("Interval selections only support x and y encoding channels.");const l=function(e,t,n,i){const r=Wu(t,n,"visual"),o=Wu(t,n,"data"),a=t.init&&t.init[i],s=hu.has(t),l=Object(O.m)(e.scaleName(n)),u=e.getScaleComponent(n),c=u?u.get("type"):void 0,d=e=>`scale(${l}, ${e})`,f=e.getSizeSignalRef(n===Y?"width":"height").signal,h=`${n}(unit)`,p=bu(t,(e,t)=>[...e,{events:t.between[0],update:`[${h}, ${h}]`},{events:t,update:`[${r}[0], clamp(${h}, 0, ${f})]`}]);return p.push({events:{signal:t.name+mu},update:Sr(c)?`[${d(`${o}[0]`)}, ${d(`${o}[1]`)}]`:"[0, 0]"}),s?[{name:o,on:[]}]:[Object.assign({name:r},a?{init:Hu(a,d)}:{value:[]},{on:p}),Object.assign({name:o},a?{init:Hu(a)}:{},{on:[{events:{signal:r},update:`${r}[0] === ${r}[1] ? null : invert(${l}, ${r})`}]})]}(e,t,r,i),u=Wu(t,r,"data"),c=Wu(t,r,"visual"),d=Object(O.m)(e.scaleName(r)),f=Sr(e.getScaleComponent(r).get("type"))?"+":"";o.push(...l),a.push(u),s.push({scaleName:e.scaleName(r),expr:`(!isArray(${u}) || `+`(${f}invert(${d}, ${c})[0] === ${f}${u}[0] && `+`${f}invert(${d}, ${c})[1] === ${f}${u}[1]))`})}),r||o.push({name:n+mu,update:s.map(e=>e.expr).join(" && ")+` ? ${n+mu} : {}`});const l=t.init,u=`unit: ${Ru(e)}, fields: ${i}, values`;return o.concat(Object.assign({name:n+Mu},l?{init:`{${u}: ${Hu(l)}}`}:{},{on:[{events:a.map(e=>({signal:e})),update:a.join(" && ")+` ? {${u}: [${a}]} : null`}]}))},modifyExpr:(e,t)=>{return t.name+Mu+", "+("global"===t.resolve?"true":`{unit: ${Ru(e)}}`)},marks:(e,t,n)=>{const i=t.name,{xi:r,yi:o}=Vu(t),a=`data(${Object(O.m)(t.name+$u)})`;if(hu.has(t))return n;const s={x:null!==r?{signal:`${i}_x[0]`}:{value:0},y:null!==o?{signal:`${i}_y[0]`}:{value:0},x2:null!==r?{signal:`${i}_x[1]`}:{field:{group:"width"}},y2:null!==o?{signal:`${i}_y[1]`}:{field:{group:"height"}}};if("global"===t.resolve)for(const t of Object(C.keys)(s))s[t]=[Object.assign({test:`${a}.length && ${a}[0].unit === ${Ru(e)}`},s[t]),{value:0}];const l=t.mark,{fill:u,fillOpacity:c}=l,d=H(l,["fill","fillOpacity"]),f=Object(C.keys)(d).reduce((e,t)=>(e[t]=[{test:[null!==r&&`${i}_x[0] !== ${i}_x[1]`,null!=o&&`${i}_y[0] !== ${i}_y[1]`].filter(e=>e).join(" && "),value:d[t]},{value:null}],e),{});return[{name:i+"_brush_bg",type:"rect",clip:!0,encode:{enter:{fill:{value:u},fillOpacity:{value:c}},update:s}},...n,{name:i+"_brush",type:"rect",clip:!0,encode:{enter:{fill:{value:"transparent"}},update:Object.assign({},s,f)}}]}};function bu(e,t){return e.events.reduce((e,n)=>n.between?t(e,n):(dt(`${n} is not an ordered event stream for interval selections`),e),[])}function vu(e,t){const n=t.name,i=n+Mu+gu,r=t.project,o="(item().isVoronoi ? datum.datum : datum)",a=r.map(t=>{const n=e.fieldDef(t.channel);return n&&n.bin?`[${Object(C.accessPathWithDatum)(e.vgField(t.channel,{}),o)}, `+`${Object(C.accessPathWithDatum)(e.vgField(t.channel,{binSuffix:"end"}),o)}]`:`${Object(C.accessPathWithDatum)(t.field,o)}`}).join(", "),s=`unit: ${Ru(e)}, fields: ${i}, values`,l=[{name:n+Mu,on:[{events:t.events,update:`datum && item().mark.marktype !== 'group' ? {${s}: [${a}]} : null`,force:!0}]}];if(t.init){const e=t.init.map(e=>{const t=Hu(e);return`{${s}: ${t}}`});l.push({name:`${n}_init`,init:`modify(${Object(O.m)(t.name+$u)}, [${e}])`})}return l}var _u={signals:vu,modifyExpr:(e,t)=>{return t.name+Mu+", "+("global"===t.resolve?"null":`{unit: ${Ru(e)}}`)}};var xu={signals:vu,modifyExpr:(e,t)=>{return t.name+Mu+", "+("global"===t.resolve?"true":`{unit: ${Ru(e)}}`)}};var wu={has:e=>"interval"!==e.type&&e.nearest,marks:(e,t,n)=>{const{x:i,y:r}=Vu(t),o=e.mark;if(li(o))return dt(ft.nearestNotSupportForContinuous(o)),n;const a={name:e.getName("voronoi"),type:"path",from:{data:e.getName("marks")},encode:{enter:{fill:{value:"transparent"},strokeWidth:{value:.35},stroke:{value:"transparent"},isVoronoi:{value:!0}}},transform:[{type:"voronoi",x:{expr:i||!i&&!r?"datum.datum.x || 0":"0"},y:{expr:r||!i&&!r?"datum.datum.y || 0":"0"},size:[e.getSizeSignalRef("width"),e.getSizeSignalRef("height")]}]};let s=0,l=!1;return n.forEach((t,n)=>{const i=t.name||"";i===e.component.mark[0].name?s=n:i.indexOf("voronoi")>=0&&(l=!0)}),l||n.splice(s+1,0,a),n}};const ku="_translate_anchor",Du="_translate_delta",Au={has:e=>"interval"===e.type&&e.translate,signals:(e,t,n)=>{const i=t.name,r=hu.has(t),o=i+ku,{x:a,y:s}=Vu(t);let l=Ql(t.translate,"scope");return r||(l=l.map(e=>(e.between[0].markname=i+"_brush",e))),n.push({name:o,value:{},on:[{events:l.map(e=>e.between[0]),update:"{x: x(unit), y: y(unit)"+(null!==a?", extent_x: "+(r?pu(e,Y):`slice(${Wu(t,"x","visual")})`):"")+(null!==s?", extent_y: "+(r?pu(e,G):`slice(${Wu(t,"y","visual")})`):"")+"}"}]},{name:i+Du,value:{},on:[{events:l,update:`{x: ${o}.x - x(unit), y: ${o}.y - y(unit)}`}]}),null!==a&&Ou(e,t,Y,"width",n),null!==s&&Ou(e,t,G,"height",n),n}};function Ou(e,t,n,i,r){const o=t.name,a=hu.has(t),s=r.filter(e=>e.name===Wu(t,n,a?"data":"visual"))[0],l=o+ku,u=o+Du,c=e.getSizeSignalRef(i).signal,d=e.getScaleComponent(n),f=d.get("type"),h=`${l}.extent_${n}`,p=`${a?"log"===f?"panLog":"pow"===f?"panPow":"panLinear":"panLinear"}(${h}, ${`${a&&n===Y?"-":""}${u}.${n} / `+(a?`${c}`:`span(${h})`)}`+(a&&"pow"===f?`, ${d.get("exponent")||1}`:"")+")";s.on.push({events:{signal:u},update:a?p:`clampRange(${p}, 0, ${c})`})}const Cu="_zoom_anchor",Tu="_zoom_delta",Su={has:e=>"interval"===e.type&&e.zoom,signals:(e,t,n)=>{const i=t.name,r=hu.has(t),o=i+Tu,{x:a,y:s}=Vu(t),l=Object(O.m)(e.scaleName(Y)),u=Object(O.m)(e.scaleName(G));let c=Ql(t.zoom,"scope");return r||(c=c.map(e=>(e.markname=i+"_brush",e))),n.push({name:i+Cu,on:[{events:c,update:r?"{"+[l?`x: invert(${l}, x(unit))`:"",u?`y: invert(${u}, y(unit))`:""].filter(e=>!!e).join(", ")+"}":"{x: x(unit), y: y(unit)}"}]},{name:o,on:[{events:c,force:!0,update:"pow(1.001, event.deltaY * pow(16, event.deltaMode))"}]}),null!==a&&Fu(e,t,"x","width",n),null!==s&&Fu(e,t,"y","height",n),n}};function Fu(e,t,n,i,r){const o=t.name,a=hu.has(t),s=r.filter(e=>e.name===Wu(t,n,a?"data":"visual"))[0],l=e.getSizeSignalRef(i).signal,u=e.getScaleComponent(n),c=u.get("type"),d=a?pu(e,n):s.name,f=o+Tu,h=`${a?"log"===c?"zoomLog":"pow"===c?"zoomPow":"zoomLinear":"zoomLinear"}(${d}, ${`${o}${Cu}.${n}`}, ${f}`+(a&&"pow"===c?`, ${u.get("exponent")||1}`:"")+")";s.on.push({events:{signal:f},update:a?h:`clampRange(${h}, 0, ${l})`})}const ju={project:{has:e=>{const t=e;return void 0!==t.fields||void 0!==t.encodings},parse:(e,t,n)=>{const i={},r={},o=n.project||(n.project=[]);n.fields={},t.fields&&o.push(...t.fields.map(e=>({field:e,type:"E"})));for(const a of t.encodings||[]){const t=e.fieldDef(a);if(t){let s=t.field;if(t.timeUnit&&(i[s=e.vgField(a)]={as:s,field:t.field,timeUnit:t.timeUnit}),!r[s]){let i="E";if("interval"===n.type){Sr(e.getScaleComponent(a).get("type"))&&(i="R")}else t.bin&&(i="R-RE");o.push(r[s]={field:s,channel:a,type:i})}n.fields[a]=s}else dt(ft.cannotProjectOnChannelWithoutField(a))}if(t.init)if(hu.has(n))dt(ft.NO_INIT_SCALE_BINDINGS);else{function a(e){return o.map(t=>void 0!==e[t.channel]?e[t.channel]:e[t.field])}if(function(e){return"interval"===e.type}(t))n.init=a(t.init);else{const e=Object(O.e)(t.init)?t.init:[t.init];n.init=e.map(a)}}Object(C.keys)(i).length&&(n.timeUnit=new fu(null,i))},signals:(e,t,n)=>{const i=t.name+Mu+gu;return n.filter(e=>e.name===i).length?n:n.concat({name:i,value:t.project})}},toggle:{has:e=>"multi"===e.type&&e.toggle,signals:(e,t,n)=>n.concat({name:t.name+"_toggle",value:!1,on:[{events:t.events,update:t.toggle}]}),modifyExpr:(e,t,n)=>{const i=t.name+Mu,r=t.name+"_toggle";return`${r} ? null : ${i}, `+("global"===t.resolve?`${r} ? null : true, `:`${r} ? null : {unit: ${Ru(e)}}, `)+`${r} ? ${i} : null`}},scales:hu,translate:Au,zoom:Su,inputs:{has:e=>"single"===e.type&&"global"===e.resolve&&e.bind&&"scales"!==e.bind,topLevelSignals:(e,t,n)=>{const i=t.name,r=t.project,o=t.bind,a=t.init&&t.init[0],s=wu.has(t)?"(item().isVoronoi ? datum.datum : datum)":"datum";return r.forEach((e,r)=>{const l=Object(C.varName)(`${i}_${e.field}`);n.filter(e=>e.name===l).length||n.unshift(Object.assign({name:l},a?{init:Hu(a[r])}:{value:null},{on:[{events:t.events,update:`datum && item().mark.marktype !== 'group' ? ${Object(C.accessPathWithDatum)(e.field,s)} : null`}],bind:o[e.field]||o[e.channel]||o}))}),n},signals:(e,t,n)=>{const i=t.name,r=t.project,o=n.filter(e=>e.name===i+Mu)[0],a=i+Mu+gu,s=r.map(e=>Object(C.varName)(`${i}_${e.field}`)),l=s.map(e=>`${e} !== null`).join(" && ");return s.length&&(o.update=`${l} ? {fields: ${a}, values: [${s.join(", ")}]} : null`),delete o.value,delete o.on,n}},nearest:wu};function Eu(e,t){for(const n in ju)ju[n].has(e)&&t(ju[n])}const $u="_store",Mu="_tuple",zu="_modify",Nu="_selection_domain_",Bu="vlSelectionResolve";function Pu(e,t){return Lu(e,(n,i)=>{t=i.marks?i.marks(e,n,t):t,Eu(n,i=>{i.marks&&(t=i.marks(e,n,t))})}),t}function Iu(e,t,n){const i=[];const r=Object(C.logicalExpr)(t,function(t){const r=Object(C.varName)(t),o=e.getSelectionComponent(r,t),a=Object(O.m)(r+$u);if(o.timeUnit){const t=n||e.component.data.raw,i=o.timeUnit.clone();t.parent?i.insertAsParentOf(t):t.parent=i}return"none"!==o.empty&&i.push(a),`vlSelectionTest(${a}, datum`+("global"===o.resolve?")":`, ${Object(O.m)(o.resolve)})`)});return(i.length?"!("+i.map(e=>`length(data(${e}))`).join(" || ")+") || ":"")+`(${r})`}function Lu(e,t){const n=e.component.selection;for(const e in n)if(n.hasOwnProperty(e)){const i=n[e];t(i,qu(i.type))}}function qu(e){switch(e){case"single":return xu;case"multi":return _u;case"interval":return yu}return null}function Ru(e){let t=Object(O.m)(e.name);const n=function(e){let t=e.parent;for(;t&&!Wd(t);)t=t.parent;return t}(e);if(n){const{facet:e}=n;for(const i of De)e[i]&&(t+=` + '__facet_${i}_' + (${Object(C.accessPathWithDatum)(n.vgField(i),"facet")})`)}return t}function Uu(e){let t=!1;return Lu(e,e=>{t=t||e.project.some(e=>e.field===Qr)}),t}function Wu(e,t,n){const i=e._signalNames||(e._signalNames={});if(i[t]&&i[t][n])return i[t][n];i[t]=i[t]||{};const r=Object(C.varName)(e.name+"_"+("visual"===n?t:e.fields[t]));let o=r,a=1;for(;i[o];)o=`${r}_${a++}`;return i[o]=i[t][n]=o}function Vu(e){let t=null,n=null,i=null,r=null;return e.project.forEach((e,o)=>{e.channel===Y?(t=e,n=o):e.channel===G&&(i=e,r=o)}),{x:t,xi:n,y:i,yi:r}}function Hu(e,t=O.d){if(Object(O.e)(e)){return`[${e.map(e=>Hu(e,t)).join(", ")}]`}return pt(e)?t(vt(e)):t(JSON.stringify(e))}function Yu(e,t,n){return Object(C.logicalExpr)(t,t=>Object(O.j)(t)?t:function(e){return e&&e.selection}(t)?Iu(e,t.selection,n):ea(t))}function Gu(e,t){const n=t[e+"Offset"];if(n)return n}function Ju(e,t,n,i){return Xu(e,t,{binSuffix:"start"===n?void 0:"end"},i?{offset:i}:{})}function Xu(e,t,n,i){const r=Object.assign({},t?{scale:t}:{},{field:gn(e,n)});return i?Object.assign({},r,i):r}function Qu(e,t=!0){return{scale:e,band:t}}function Ku(e,t,n){return{signal:`scale("${e}", (${gn(t,{expr:"datum"})} + ${void 0!==n?gn(n,{expr:"datum"}):gn(t,{binSuffix:"end",expr:"datum"})}) / 2)`}}function Zu(e,t,n,i,r,o,a){if(t){if(sn(t)){if(ln(t)){if(Un(t.bin))return Object(C.contains)([Y,G],e)&&t.type===Yt?o&&o.impute?Xu(t,i,{binSuffix:"mid"}):Ku(i,t):Xu(t,i,qn(t,e)?{binSuffix:"range"}:{});if(Wn(t.bin)){if(sn(n))return Ku(i,t,n);{const t=e===Y?J:X;dt(ft.channelRequiredForBinned(t))}}}if(r){const e=r.get("type");if(Tr(e))return"band"===e?Xu(t,i,{binSuffix:"range"},{band:.5}):Xu(t,i,{binSuffix:"range"})}return Xu(t,i,{})}if(cn(t)){const n=t.value;return Object(C.contains)(["x","x2"],e)&&"width"===n?{field:{group:"width"}}:Object(C.contains)(["y","y2"],e)&&"height"===n?{field:{group:"height"}}:{value:n}}}return Object(O.g)(a)?a():a}function ec(e,t){const n=[],i={};function r(r,o){const a=$e(o);o!==a&&(r=Object.assign({},r,{type:e[a].type}));const s=An(r,t,{allowDisabling:!1}),l=tc(r,t).signal;i[s]||n.push(`${Object(O.m)(s)}: ${l}`),i[s]=!0}return ji(e,(e,t)=>{sn(e)?r(e,t):on(e)&&r(e.condition,t)}),n.length?{signal:`{${n.join(", ")}}`}:void 0}function tc(e,t){if(e){if(cn(e))return{value:e.value};if(ln(e))return $a(e,Tn(e),"datum",t)}}function nc(e){return Object.assign({},e,{mult:.5})}function ic(e,t,n,i,r){return()=>{if(Object(O.j)(e)){if(n){const e=i.get("type");if(Object(C.contains)([hr.LOG,hr.TIME,hr.UTC],e))"bar"!==r&&"area"!==r||dt(ft.nonZeroScaleUsedWithLengthMark(r,t,{scaleType:e}));else{if(function(e){if(!1!==e.get("zero"))return!0;const t=e.domains;return!!Object(O.e)(t)&&Object(C.some)(t,e=>Object(O.e)(e)&&2===e.length&&e[0]<=0&&e[1]>=0)}(i))return{scale:n,value:0};"bar"!==r&&"area"!==r||dt(ft.nonZeroScaleUsedWithLengthMark(r,t,{zeroFalse:!1===i.explicit.zero}))}}return"zeroOrMin"===e?"x"===t?{value:0}:{field:{group:"height"}}:"x"===t?{field:{group:"width"}}:{value:0}}return e}}function rc(e){return"transparent"!==e&&null!=e}function oc(e){const{markDef:t,encoding:n,config:i}=e,{filled:r,type:o}=t,a={fill:ja("fill",t,i),stroke:ja("stroke",t,i),color:ja("color",t,i)},s=Object(C.contains)(["bar","point","circle","square","geoshape"],o)?"transparent":void 0,l=Object(C.getFirstDefined)(t.fill,a.fill,s),u=Object(C.getFirstDefined)(t.stroke,a.stroke),c=r?"fill":"stroke",d=Object.assign({},l?{fill:{value:l}}:{},u?{stroke:{value:u}}:{});return n.fill||n.stroke?(t.color&&dt(ft.droppingColor("property",{fill:"fill"in n,stroke:"stroke"in n})),Object.assign({},cc("fill",e,{defaultValue:Object(C.getFirstDefined)(l,s)}),cc("stroke",e,{defaultValue:u}))):n.color?Object.assign({},d,cc("color",e,{vgChannel:c,defaultValue:Object(C.getFirstDefined)(t[c],t.color,a[c],a.color,r?s:void 0)})):rc(t.fill)||rc(t.stroke)?(t.color&&dt(ft.droppingColor("property",{fill:"fill"in t,stroke:"stroke"in t})),d):t.color?Object.assign({},d,{[c]:{value:t.color}}):rc(a.fill)||rc(a.stroke)?d:a.color?Object.assign({},s?{fill:{value:"transparent"}}:{},{[c]:{value:a.color}}):{}}function ac(e,t){const{fill:n,stroke:i}=oc(e);return Object.assign({},function(e,t){return Ta.reduce((n,i)=>(void 0!==e[i]&&"ignore"!==t[i]&&(n[i]={value:e[i]}),n),{})}(e.markDef,t),sc(e,"fill",n),sc(e,"stroke",i),cc("opacity",e),cc("fillOpacity",e),cc("strokeOpacity",e),cc("strokeWidth",e),function(e){const{encoding:t,markDef:n,config:i}=e,r=t.tooltip;return Object(O.e)(r)?{tooltip:ec({tooltip:r},i)}:dc(e,r,"tooltip",r=>{const o=tc(r,e.config);if(o)return o;if(null===r)return;const a=Object(C.getFirstDefined)(n.tooltip,ja("tooltip",n,i));return Object(O.j)(a)?{value:a}:Object(O.i)(a)?"encoding"===a.content?ec(t,i):{signal:"datum"}:void 0})}(e),fc(e,"href"))}function sc(e,t,n){const{config:i,mark:r}=e;if(i.invalidValues&&n&&!li(r)){const i=lc(e,{invalid:!0,channels:rt});if(i)return{[t]:[{test:i,value:null},...Object(O.b)(n)]}}return n?{[t]:n}:{}}function lc(e,{invalid:t=!1,channels:n}){const i=n.reduce((t,n)=>{const i=e.getScaleComponent(n);if(i){const r=i.get("type"),o=e.vgField(n,{expr:"datum"});o&&Sr(r)&&(t[o]=!0)}return t},{}),r=Object(C.keys)(i);if(r.length>0){const e=t?"||":"&&";return r.map(n=>{return`${n} ${t?"===":"!=="} null ${e} ${t?"":"!"}isNaN(${n})`}).join(` ${e} `)}}function uc(e){if("filter"===e.config.invalidValues){const t=lc(e,{channels:["x","y"]});if(t)return{defined:{signal:t}}}return{}}function cc(e,t,n={}){const{markDef:i,encoding:r}=t,{vgChannel:o=e}=n,{defaultValue:a=i[o]}=n,s=n.defaultRef||(void 0!==a?{value:a}:void 0),l=r[e];return dc(t,l,o,n=>Zu(e,n,void 0,t.scaleName(e),t.getScaleComponent(e),null,s))}function dc(e,t,n,i){const r=t&&t.condition,o=i(t);if(r){return{[n]:[...(Object(O.e)(r)?r:[r]).map(t=>{const n=i(t),r=Zt(t)?Iu(e,t.selection):Yu(e,t.test);return Object.assign({test:r},n)}),...void 0!==o?[o]:[]]}}return void 0!==o?{[n]:o}:{}}function fc(e,t="text"){const n=e.encoding[t];return dc(e,n,t,t=>tc(t,e.config))}function hc(e,t,n){const i=n.scaleName(t),r="x"===t?"width":"height";if(n.encoding.size||void 0!==n.markDef.size){if(n.markDef.orient){const o={[t+"c"]:Xu(e,i,{},{band:.5})};if(jn(n.encoding.size))return Object.assign({},o,cc("size",n,{vgChannel:r}));if(cn(n.encoding.size))return Object.assign({},o,cc("size",n,{vgChannel:r}));if(void 0!==n.markDef.size)return Object.assign({},o,{[r]:{value:n.markDef.size}})}else dt(ft.cannotApplySizeToNonOrientedMark(n.markDef.type))}return{[t]:Xu(e,i,{binSuffix:"range"}),[r]:Qu(i)}}function pc(e,t,n,i){const r="x"===e?"xc":"yc",o="x"===e?"width":"height";return Object.assign({},mc(e,t,n,r),cc("size",t,{defaultRef:i,vgChannel:o}))}function gc(e,t,n,i,r,o){const a={x:o?r:0,x2:o?0:r,y:o?0:r,y2:o?r:0},s=n===Y?J:X;return Un(e.bin)?{[s]:Ju(e,i,"start",a[`${n}2`]),[n]:Ju(e,i,"end",a[n])}:Wn(e.bin)&&sn(t)?{[s]:Xu(e,i,{},{offset:a[`${n}2`]}),[n]:Xu(t,i,{},{offset:a[n]})}:void dt(ft.channelRequiredForBinned(s))}function mc(e,t,n,i){const{encoding:r,mark:o,stack:a}=t,s=r[e],l=r[e===Y?J:X],u=t.scaleName(e),c=t.getScaleComponent(e),d=Gu(e,t.markDef);return{[i||e]:s||!r.latitude&&!r.longitude?Object.assign({},function(e,t,n,i,r,o,a){return sn(t)&&o&&e===o.fieldChannel?Xu(t,i,{suffix:"end"}):Zu(e,t,n,i,r,o,a)}(e,s,l,u,c,a,ic(n,e,u,c,o)),d?{offset:d}:{}):{field:t.getName(e)}}}function yc(e,t,n){const{encoding:i,mark:r,stack:o}=e,a="x2"===n?"x":"y",s=i[a],l=e.scaleName(a),u=e.getScaleComponent(a),c=Gu(n,e.markDef),d=s||!i.latitude&&!i.longitude?Object.assign({},function(e,t,n,i,r,o,a){return sn(t)&&o&&e.charAt(0)===o.fieldChannel.charAt(0)?Xu(t,i,{suffix:"start"}):Zu(e,n,void 0,i,r,o,a)}(n,s,i[n],l,u,o,ic(t,a,l,u,r)),c?{offset:c}:{}):{field:e.getName(n)};return{[n]:d}}function bc(e,t){return Object(C.keys)(e).reduce((n,i)=>{const r=e[i];return Object.assign({},n,dc(t,r,i,e=>({value:e.value})))},{})}function vc(e,t){if(Yd(t)||Wd(t))return"shared";if(Hd(t)||Vd(t))return Object(C.contains)(He,e)?"independent":"shared";throw new Error("invalid model type for resolve")}function _c(e,t){const n=e.scale[t],i=Object(C.contains)(He,t)?"axis":"legend";return"independent"===n?("shared"===e[i][t]&&dt(ft.independentScaleMeansIndependentGuide(t)),"independent"):e[i][t]||"shared"}class xc{constructor(e={},t={}){this.explicit=e,this.implicit=t}clone(){return new xc(Object(C.duplicate)(this.explicit),Object(C.duplicate)(this.implicit))}combine(){return Object.assign({},this.explicit,this.implicit)}get(e){return Object(C.getFirstDefined)(this.explicit[e],this.implicit[e])}getWithExplicit(e){return void 0!==this.explicit[e]?{explicit:!0,value:this.explicit[e]}:void 0!==this.implicit[e]?{explicit:!1,value:this.implicit[e]}:{explicit:!1,value:void 0}}setWithExplicit(e,t){void 0!==t.value&&this.set(e,t.value,t.explicit)}set(e,t,n){return delete this[n?"implicit":"explicit"][e],this[n?"explicit":"implicit"][e]=t,this}copyKeyFromSplit(e,t){void 0!==t.explicit[e]?this.set(e,t.explicit[e],!0):void 0!==t.implicit[e]&&this.set(e,t.implicit[e],!1)}copyKeyFromObject(e,t){void 0!==t[e]&&this.set(e,t[e],!0)}copyAll(e){for(const t of Object(C.keys)(e.combine())){const n=e.getWithExplicit(t);this.setWithExplicit(t,n)}}}function wc(e){return{explicit:!0,value:e}}function kc(e){return{explicit:!1,value:e}}function Dc(e){return(t,n,i,r)=>{const o=e(t.value,n.value);return o>0?t:o<0?n:Ac(t,n,i,r)}}function Ac(e,t,n,i){return e.explicit&&t.explicit&&dt(ft.mergeConflictingProperty(n,i,e.value,t.value)),e}function Oc(e,t,n,i,r=Ac){return void 0===e||void 0===e.value?t:e.explicit&&!t.explicit?e:t.explicit&&!e.explicit?t:Object(C.stringify)(e.value)===Object(C.stringify)(t.value)?e:r(e,t,n,i)}class Cc extends xc{}function Tc(e){const{legend:t}=e;return Object(C.getFirstDefined)(t.type,Sc(e))}function Sc({channel:e,timeUnit:t,scaleType:n,alwaysReturn:i}){if(we(e)){if(Object(C.contains)(["quarter","month","day"],t))return"symbol";if(Fr(n))return i?"gradient":void 0}return i?"symbol":void 0}function Fc({legend:e,legendConfig:t,timeUnit:n,channel:i,scaleType:r}){const o=Object(C.getFirstDefined)(e.orient,t.orient,"right"),a=Tc({legend:e,channel:i,timeUnit:n,scaleType:r,alwaysReturn:!0});return Object(C.getFirstDefined)(e.direction,t[a?"gradientDirection":"symbolDirection"],function(e,t){switch(e){case"top":case"bottom":return"horizontal";case"left":case"right":case"none":case void 0:return;default:return"gradient"===t?"horizontal":void 0}}(o,a))}function jc(e,t,n,i){return{signal:`clamp(${e.getSizeSignalRef(t).signal}, ${n}, ${i})`}}function Ec(e,t,n){const i=t.getScaleComponent(n).get("type");return Object(C.getFirstDefined)(e.get("type"),Sc({channel:n,scaleType:i,alwaysReturn:!0}))}function $c(e,t,n,i,r){if("symbol"!==Ec(r,n,i))return;let o=Object.assign({},function(e,t,n){for(const i of n){const n=ja(i,t.markDef,t.config);void 0!==n&&(e[i]={value:n})}return e}({},n,gi),oc(n));switch(n.mark){case Jn:case Zn:case Kn:o.shape={value:"square"};break;case ri:case oi:o.shape={value:n.mark}}const{markDef:a,encoding:s}=n,l=a.filled,u=Nc(s.opacity)||a.opacity;if(o.fill)if("fill"===i||l&&i===ae)delete o.fill;else if(o.fill.field)r.get("symbolFillColor")?delete o.fill:(o.fill={value:"black"},o.fillOpacity={value:u||1});else if(Object(O.e)(o.fill)){const e=Bc(s.fill||s.color)||a.fill||l&&a.color;e&&(o.fill={value:e})}if(o.stroke)if("stroke"===i||!l&&i===ae)delete o.stroke;else if(o.stroke.field)delete o.stroke;else if(Object(O.e)(o.stroke)){const e=Object(C.getFirstDefined)(Bc(s.stroke||s.color),a.stroke,l?a.color:void 0);e&&(o.stroke={value:e})}if(i!==re){const e=Bc(s.shape)||a.shape;e&&(o.shape={value:e})}return i!==he&&u&&(o.opacity={value:u}),o=Object.assign({},o,t),Object(C.keys)(o).length>0?o:void 0}function Mc(e,t,n,i,r){if("gradient"!==Ec(r,n,i))return;let o={};const a=Nc(n.encoding.opacity)||n.markDef.opacity;return a&&(o.opacity={value:a}),o=Object.assign({},o,t),Object(C.keys)(o).length>0?o:void 0}function zc(e,t,n,i,r){const o=n.legend(i),a=n.config;let s={};if(Pn(e)){const r=n.getScaleComponent(i).get("type")===hr.UTC,s=Pa("datum.value",e.timeUnit,o.format,a.legend.shortTimeLabels,a.timeFormat,r);t=Object.assign({},s?{text:{signal:s}}:{},t)}return s=Object.assign({},s,t),Object(C.keys)(s).length>0?s:void 0}function Nc(e){return Pc(e,(e,t)=>Math.max(e,t.value))}function Bc(e){return Pc(e,(e,t)=>Object(C.getFirstDefined)(e,t.value))}function Pc(e,t){return an(e)?(Object(O.e)(e.condition)?e.condition:[e.condition]).reduce(t,e.value):cn(e)?e.value:void 0}function Ic(e){Ud(e)?e.component.legends=function(e){const{encoding:t}=e;return[ae,se,le,me,oe,re,he,pe,ge].reduce((n,i)=>{const r=t[i];return!e.legend(i)||!e.getScaleComponent(i)||sn(r)&&i===re&&r.type===Qt||(n[i]=function(e,t){const n=e.fieldDef(t),i=e.legend(t),r=new Cc({},function(e,t){const n=e.scaleName(ae);if("color"===t)return e.markDef.filled?{fill:n}:{stroke:n};return{[t]:e.scaleName(t)}}(e,t));for(const o of dr){const a=qc(o,i,t,e);if(void 0!==a){const t=Lc(a,o,i,n);(t||void 0===e.config.legend[o])&&r.set(o,a,t)}}const o=i.encoding||{},a=["labels","legend","title","symbols","gradient"].reduce((i,a)=>{const s=bc(o[a]||{},e),l=D[a]?D[a](n,s,e,t,r):s;return void 0!==l&&Object(C.keys)(l).length>0&&(i[a]={update:l}),i},{});Object(C.keys)(a).length>0&&r.set("encode",a,!!i.encoding);return r}(e,i)),n},{})}(e):e.component.legends=function(e){const{legends:t,resolve:n}=e.component;for(const i of e.children)Ic(i),Object(C.keys)(i.component.legends).forEach(r=>{n.legend[r]=_c(e.component.resolve,r),"shared"===n.legend[r]&&(t[r]=Rc(t[r],i.component.legends[r]),t[r]||(n.legend[r]="independent",delete t[r]))});return Object(C.keys)(t).forEach(t=>{for(const i of e.children)i.component.legends[t]&&"shared"===n.legend[t]&&delete i.component.legends[t]}),t}(e)}function Lc(e,t,n,i){switch(t){case"values":return!!n.values;case"title":if("title"===t&&e===i.title)return!0}return e===n[t]}function qc(e,t,n,i){const{encoding:r}=i,o=jn(r[n]),a=i.config.legend,{timeUnit:s}=o,l=i.getScaleComponent(n).get("type");switch(e){case"format":return Ma(o,t.format,i.config);case"title":return An(o,i.config,{allowDisabling:!0})||void 0;case"type":return Tc({legend:t,channel:n,timeUnit:s,scaleType:l,alwaysReturn:!1});case"direction":return Fc({legend:t,legendConfig:a,timeUnit:s,channel:n,scaleType:l});case"labelOverlap":return Object(C.getFirstDefined)(t.labelOverlap,function(e){if(Object(C.contains)(["quantile","threshold","log"],e))return"greedy"}(l));case"gradientLength":return Object(C.getFirstDefined)(t.gradientLength,a.gradientLength,function({legend:e,legendConfig:t,model:n,channel:i,scaleType:r}){const{gradientHorizontalMaxLength:o,gradientHorizontalMinLength:a,gradientVerticalMaxLength:s,gradientVerticalMinLength:l}=t;if("horizontal"===Fc({legend:e,legendConfig:t,channel:i,scaleType:r})){const i=Object(C.getFirstDefined)(e.orient,t.orient);return"top"===i||"bottom"===i?jc(n,"width",a,o):a}return jc(n,"height",l,s)}({model:i,legend:t,legendConfig:a,channel:n,scaleType:l}));case"values":return function(e,t){const n=e.values;if(n)return Ln(t,n)}(t,o)}return t[e]}function Rc(e,t){if(!e)return t.clone();const n=e.getWithExplicit("orient"),i=t.getWithExplicit("orient");if(n.explicit&&i.explicit&&n.value!==i.value)return;let r=!1;for(const n of fr){const i=Oc(e.getWithExplicit(n),t.getWithExplicit(n),n,"legend",(e,t)=>{switch(n){case"title":return Ra(e,t);case"type":return r=!0,kc("symbol")}return Ac(e,t,n,"legend")});e.setWithExplicit(n,i)}return r&&(((e.implicit||{}).encode||{}).gradient&&Object(C.deleteNestedProperty)(e.implicit,["encode","gradient"]),((e.explicit||{}).encode||{}).gradient&&Object(C.deleteNestedProperty)(e.explicit,["encode","gradient"])),e}function Uc(e){const t=e.component.legends,n={};for(const i of Object(C.keys)(t)){const r=e.getScaleComponent(i),o=Object(C.stringify)(r.domains);if(n[o])for(const e of n[o]){Rc(e,t[i])||n[o].push(t[i])}else n[o]=[t[i].clone()]}return Object(C.flatten)(Object(C.vals)(n)).map(e=>{const t=e.combine();if(t.encode&&t.encode.symbols){const e=t.encode.symbols.update;!e.fill||"transparent"===e.fill.value||e.stroke||t.stroke||(e.stroke={value:"transparent"})}return t})}function Wc(e){return Yd(e)||Hd(e)||Vd(e)?function(e){return e.children.reduce((e,t)=>e.concat(t.assembleProjections()),Vc(e))}(e):Vc(e)}function Vc(e){const t=e.component.projection;if(!t||t.merged)return[];const n=t.combine(),{name:i}=n,r=H(n,["name"]),o={signal:`[${t.size.map(e=>e.signal).join(", ")}]`},a=t.data.reduce((t,n)=>{const i=Aa(n)?n.signal:`data('${e.lookupDataSource(n)}')`;return Object(C.contains)(t,i)||t.push(i),t},[]);if(a.length<=0)throw new Error("Projection's fit didn't find any data sources");return[Object.assign({name:i,size:o,fit:{signal:a.length>1?`[${a.join(", ")}]`:a[0]}},r)]}const Hc=["type","clipAngle","clipExtent","center","rotate","precision","coefficient","distance","fraction","lobes","parallel","radius","ratio","spacing","tilt"];class Yc extends xc{constructor(e,t,n,i){super(Object.assign({},t),{name:e}),this.specifiedProjection=t,this.size=n,this.data=i,this.merged=!1}}function Gc(e){Ud(e)?e.component.projection=function(e){const{specifiedProjection:t,config:n,hasProjection:i}=e;if(i){const i=[];return[[Z,Q],[ee,K]].forEach(t=>{(e.channelHasField(t[0])||e.channelHasField(t[1]))&&i.push({signal:e.getName(`geojson_${i.length}`)})}),e.channelHasField(re)&&e.fieldDef(re).type===Qt&&i.push({signal:e.getName(`geojson_${i.length}`)}),0===i.length&&i.push(e.requestDataName(fo)),new Yc(e.projectionName(!0),Object.assign({},n.projection||{},t||{}),[e.getSizeSignalRef("width"),e.getSizeSignalRef("height")],i)}return}(e):e.component.projection=function(e){if(0===e.children.length)return;let t;const n=Object(C.every)(e.children,e=>{Gc(e);const n=e.component.projection;if(n){if(t){const e=function(e,t){const n=Object(C.every)(Hc,n=>!e.explicit.hasOwnProperty(n)&&!t.explicit.hasOwnProperty(n)||!(!e.explicit.hasOwnProperty(n)||!t.explicit.hasOwnProperty(n)||Object(C.stringify)(e.get(n))!==Object(C.stringify)(t.get(n))));if(Object(C.stringify)(e.size)===Object(C.stringify)(t.size)){if(n)return e;if(Object(C.stringify)(e.explicit)===Object(C.stringify)({}))return t;if(Object(C.stringify)(t.explicit)===Object(C.stringify)({}))return e}return null}(t,n);return e&&(t=e),!!e}return t=n,!0}return!0});if(t&&n){const n=e.projectionName(!0),i=new Yc(n,t.specifiedProjection,t.size,Object(C.duplicate)(t.data));return e.children.forEach(e=>{e.component.projection&&(i.data.push(...e.component.projection.data),e.renameProjection(e.component.projection.get("name"),n),e.component.projection.merged=!0)}),i}return}(e)}function Jc(e){for(const t of e){for(const e of t.children)if(e.parent!==t)return console.error("Dataflow graph is inconsistent.",parent,e),!1;if(!Jc(t.children))return!1}return!0}class Xc extends Ua{constructor(e){super(null);const t=(e=e||{name:"source"}).format?Object.assign({},Object(C.omit)(e.format,["parse"])):{};if(uo(e))this._data={values:e.values};else if(lo(e)){if(this._data={url:e.url},!t.type){let n=/(?:\.([^.]+))?$/.exec(e.url)[1];Object(C.contains)(["json","csv","tsv","dsv","topojson"],n)||(n="json"),t.type=n}}else co(e)&&(this._data={});e.name&&(this._name=e.name),t&&Object(C.keys)(t).length>0&&(this._data.format=t)}get data(){return this._data}hasName(){return!!this._name}get dataName(){return this._name}set dataName(e){this._name=e}set parent(e){throw new Error("Source nodes have to be roots.")}remove(){throw new Error("Source nodes are roots and cannot be removed.")}hash(){throw new Error("Cannot hash sources")}assemble(){return Object.assign({name:this._name},this._data,{transform:[]})}}class Qc{constructor(){this._mutated=!1}setMutated(){this._mutated=!0}get mutatedFlag(){return this._mutated}}class Kc extends Qc{constructor(){super(),this._continue=!1}setContinue(){this._continue=!0}get continueFlag(){return this._continue}get flags(){return{continueFlag:this.continueFlag,mutatedFlag:this.mutatedFlag}}set flags({continueFlag:e,mutatedFlag:t}){e&&this.setContinue(),t&&this.setMutated()}optimizeNextFromLeaves(e){if(e instanceof Xc)return!1;const t=e.parent,{continueFlag:n}=this.run(e);return n&&this.optimizeNextFromLeaves(t),this.mutatedFlag}}class Zc extends Qc{}class ed extends Ua{constructor(e,t,n){super(e),this.dimensions=t,this.measures=n}clone(){return new ed(null,new Set(this.dimensions),Object(C.duplicate)(this.measures))}get groupBy(){return this.dimensions}static makeFromEncoding(e,t){let n=!1;t.forEachFieldDef(e=>{e.aggregate&&(n=!0)});const i={},r=new Set;return n?(t.forEachFieldDef((e,n)=>{const{aggregate:o,field:a}=e;o?"count"===o?(i["*"]=i["*"]||{},i["*"].count=new Set([gn(e,{forAs:!0})])):(i[a]=i[a]||{},i[a][o]=new Set([gn(e,{forAs:!0})]),ot(n)&&"unaggregated"===t.scaleDomain(n)&&(i[a].min=new Set([gn({field:a,aggregate:"min"},{forAs:!0})]),i[a].max=new Set([gn({field:a,aggregate:"max"},{forAs:!0})]))):function(e,t,n){ln(n)&&Un(n.bin)?(e.add(gn(n,{})),e.add(gn(n,{binSuffix:"end"})),qn(n,t)&&e.add(gn(n,{binSuffix:"range"}))):e.add(gn(n))}(r,n,e)}),r.size+Object(C.keys)(i).length===0?null:new ed(e,r,i)):null}static makeFromTransform(e,t){const n=new Set,i={};for(const e of t.aggregate){const{op:t,field:n,as:r}=e;t&&("count"===t?(i["*"]=i["*"]||{},i["*"].count=new Set([r||gn(e,{forAs:!0})])):(i[n]=i[n]||{},i[n][t]=new Set([r||gn(e,{forAs:!0})])))}for(const e of t.groupby||[])n.add(e);return n.size+Object(C.keys)(i).length===0?null:new ed(e,n,i)}merge(e){return Object(C.setEqual)(this.dimensions,e.dimensions)?(function(e,t){for(const n of Object(C.keys)(t)){const i=t[n];for(const t of Object(C.keys)(i))n in e?e[n][t]=new Set([...e[n][t]||[],...i[t]]):e[n]={[t]:i[t]}}}(this.measures,e.measures),!0):(function(...e){ut.debug.apply(ut,arguments)}("different dimensions, cannot merge"),!1)}addDimensions(e){e.forEach(this.dimensions.add,this.dimensions)}dependentFields(){return new Set([...this.dimensions,...Object(C.keys)(this.measures)])}producedFields(){const e=new Set;for(const t of Object(C.keys)(this.measures))for(const n of Object(C.keys)(this.measures[t])){const i=this.measures[t][n];0===i.size?e.add(`${n}_${t}`):i.forEach(e.add,e)}return e}hash(){return`Aggregate ${Object(C.hash)({dimensions:this.dimensions,measures:this.measures})}`}assemble(){const e=[],t=[],n=[];for(const i of Object(C.keys)(this.measures))for(const r of Object(C.keys)(this.measures[i]))for(const o of this.measures[i][r])n.push(o),e.push(r),t.push("*"===i?null:Object(C.replacePathInField)(i));return{type:"aggregate",groupby:[...this.dimensions],ops:e,fields:t,as:n}}}class td extends Ua{constructor(e,t,n,i){super(e),this.model=t,this.name=n,this.data=i;for(const e of De){const n=t.facet[e];if(n){const{bin:i,sort:r}=n;this[e]=Object.assign({name:t.getName(`${e}_domain`),fields:[gn(n),...Un(i)?[gn(n,{binSuffix:"end"})]:[]]},Ro(r)?{sortField:r}:Object(O.e)(r)?{sortIndexField:Nl(n,e)}:{})}}this.childModel=t.child}hash(){let e="Facet";for(const t of De)this[t]&&(e+=` ${t.charAt(0)}:${Object(C.hash)(this[t])}`);return e}get fields(){const e=[];for(const t of De)this[t]&&this[t].fields&&e.push(...this[t].fields);return e}getSource(){return this.name}getChildIndependentFieldsWithStep(){const e={};for(const t of["x","y"]){const n=this.childModel.component.scales[t];if(n&&!n.merged){const i=n.get("type"),r=n.get("range");if(Tr(i)&&Oa(r)){const n=Dd(Ad(this.childModel,t));n?e[t]=n:dt("Unknown field for ${channel}.  Cannot calculate view size.")}}}return e}assembleRowColumnData(e,t,n){const i="row"===e?"y":"x",r=[],o=[],a=[];n[i]&&(t?(r.push(`distinct_${n[i]}`),o.push("max")):(r.push(n[i]),o.push("distinct")),a.push(`distinct_${n[i]}`));const{sortField:s,sortIndexField:l}=this[e];if(s){const{op:e=Lo,field:t}=s;r.push(t),o.push(e),a.push(gn(s,{forAs:!0}))}else l&&(r.push(l),o.push("max"),a.push(l));return{name:this[e].name,source:t||this.data,transform:[Object.assign({type:"aggregate",groupby:this[e].fields},r.length?{fields:r,ops:o,as:a}:{})]}}assemble(){const e=[];let t=null;const n=this.getChildIndependentFieldsWithStep();if(this.column&&this.row&&(n.x||n.y)){t=`cross_${this.column.name}_${this.row.name}`;const i=[].concat(n.x||[],n.y||[]),r=i.map(()=>"distinct");e.push({name:t,source:this.data,transform:[{type:"aggregate",groupby:this.fields,fields:i,ops:r}]})}for(const i of[ie,ne])this[i]&&e.push(this.assembleRowColumnData(i,t,n));return e}}class nd extends Ua{clone(){return new nd(null,Object(C.duplicate)(this._parse))}constructor(e,t){super(e),this._parse=t}hash(){return`Parse ${Object(C.hash)(this._parse)}`}static makeExplicit(e,t,n){let i={};const r=t.data;return r&&r.format&&r.format.parse&&(i=r.format.parse),this.makeWithAncestors(e,i,{},n)}static makeImplicitFromFilterTransform(e,t,n){const i={};return Object(Wo.a)(t.filter,e=>{if(Ko(e)){let t=null;Vo(e)?t=e.equal:Xo(e)?t=e.range[0]:Qo(e)&&(t=(e.oneOf||e.in)[0]),t&&(pt(t)?i[e.field]="date":Object(O.h)(t)?i[e.field]="number":Object(O.j)(t)&&(i[e.field]="string")),e.timeUnit&&(i[e.field]="date")}}),0===Object(C.keys)(i).length?null:this.makeWithAncestors(e,{},i,n)}static makeImplicitFromEncoding(e,t,n){const i={};function r(e){Pn(e)?i[e.field]="date":Bn(e)&&$(e.aggregate)?i[e.field]="number":Object(C.accessPathDepth)(e.field)>1?e.field in i||(i[e.field]="flatten"):dn(e)&&Ro(e.sort)&&Object(C.accessPathDepth)(e.sort.field)>1&&(e.sort.field in i||(i[e.sort.field]="flatten"))}return(Ud(t)||Wd(t))&&t.forEachFieldDef((e,n)=>{if(ln(e))r(e);else{const i=$e(n);if(i===n)throw new Error(`Non-secondary channel ${n} must have type in its field definition ${JSON.stringify(e)}`);{const n=t.fieldDef(i);r(Object.assign({},e,{type:n.type}))}}}),this.makeWithAncestors(e,{},i,n)}static makeWithAncestors(e,t,n,i){for(const e of Object(C.keys)(n)){const t=i.getWithExplicit(e);void 0!==t.value&&(t.explicit||t.value===n[e]||"derived"===t.value||"flatten"===n[e]?delete n[e]:dt(ft.differentParse(e,n[e],t.value)))}for(const e of Object(C.keys)(t)){const n=i.get(e);void 0!==n&&(n===t[e]?delete t[e]:dt(ft.differentParse(e,t[e],n)))}const r=new xc(t,n);i.copyAll(r);const o={};for(const e of Object(C.keys)(r.combine())){const t=r.get(e);null!==t&&(o[e]=t)}return 0===Object(C.keys)(o).length||i.parseNothing?null:new nd(e,o)}get parse(){return this._parse}merge(e){this._parse=Object.assign({},this._parse,e.parse),e.remove()}assembleFormatParse(){const e={};for(const t of Object(C.keys)(this._parse)){const n=this._parse[t];1===Object(C.accessPathDepth)(t)&&(e[t]=n)}return e}producedFields(){return new Set(Object(C.keys)(this._parse))}dependentFields(){return new Set(Object(C.keys)(this._parse))}assembleTransforms(e=!1){return Object(C.keys)(this._parse).filter(t=>!e||Object(C.accessPathDepth)(t)>1).map(e=>{const t=function(e,t){const n=Object(C.accessPathWithDatum)(e);if("number"===t)return`toNumber(${n})`;if("boolean"===t)return`toBoolean(${n})`;if("string"===t)return`toString(${n})`;if("date"===t)return`toDate(${n})`;if("flatten"===t)return n;if(0===t.indexOf("date:"))return`timeParse(${n},${t.slice(5,t.length)})`;if(0===t.indexOf("utc:"))return`utcParse(${n},${t.slice(4,t.length)})`;return dt(ft.unrecognizedParse(t)),null}(e,this._parse[e]);return t?{type:"formula",expr:t,as:Object(C.removePathFromField)(e)}:null}).filter(e=>null!==e)}}class id extends Ua{constructor(e,t){super(e),this.transform=t}clone(){return new id(null,Object(C.duplicate)(this.transform))}addDimensions(e){this.transform.groupby=Object(C.unique)(this.transform.groupby.concat(e),e=>e)}dependentFields(){const e=new Set;return this.transform.groupby.forEach(t=>e.add(t)),this.transform.joinaggregate.map(e=>e.field).filter(e=>void 0!==e).forEach(t=>e.add(t)),e}producedFields(){return new Set(this.transform.joinaggregate.map(this.getDefaultName))}getDefaultName(e){return e.as||gn(e)}hash(){return`JoinAggregateTransform ${Object(C.hash)(this.transform)}`}assemble(){const e=[],t=[],n=[];for(const i of this.transform.joinaggregate)t.push(i.op),n.push(this.getDefaultName(i)),e.push(void 0===i.field?null:i.field);const i=this.transform.groupby;return Object.assign({type:"joinaggregate",as:n,ops:t,fields:e},void 0!==i?{groupby:i}:{})}}class rd extends Ua{clone(){return new rd(null,Object(C.duplicate)(this._stack))}constructor(e,t){super(e),this._stack=t}static makeFromTransform(e,t){const{stack:n,groupby:i,as:r,offset:o="zero"}=t,a=[],s=[];if(void 0!==t.sort)for(const e of t.sort)a.push(e.field),s.push(Object(C.getFirstDefined)(e.order,"ascending"));const l={field:a,order:s};let u;return u=function(e){return Object(O.e)(e)&&e.every(e=>Object(O.j)(e))&&e.length>1}(r)?r:Object(O.j)(r)?[r,r+"_end"]:[t.stack+"_start",t.stack+"_end"],new rd(e,{stackField:n,groupby:i,offset:o,sort:l,facetby:[],as:u})}static makeFromEncoding(e,t){const n=t.stack,{encoding:i}=t;if(!n)return null;let r;if(n.groupbyChannel){r=jn(i[n.groupbyChannel])}const o=function(e){return e.stack.stackBy.reduce((e,t)=>{const n=gn(t.fieldDef);return n&&e.push(n),e},[])}(t),a=t.encoding.order;let s;return s=Object(O.e)(a)||sn(a)?Ia(a):o.reduce((e,t)=>(e.field.push(t),e.order.push("descending"),e),{field:[],order:[]}),new rd(e,{dimensionFieldDef:r,stackField:t.vgField(n.fieldChannel),facetby:[],stackby:o,sort:s,offset:n.offset,impute:n.impute,as:[t.vgField(n.fieldChannel,{suffix:"start",forAs:!0}),t.vgField(n.fieldChannel,{suffix:"end",forAs:!0})]})}get stack(){return this._stack}addDimensions(e){this._stack.facetby.push(...e)}dependentFields(){const e=new Set;e.add(this._stack.stackField),this.getGroupbyFields().forEach(e.add),this._stack.facetby.forEach(e.add);const t=this._stack.sort.field;return Object(O.e)(t)?t.forEach(e.add):e.add(t),e}producedFields(){return new Set(this._stack.as)}hash(){return`Stack ${Object(C.hash)(this._stack)}`}getGroupbyFields(){const{dimensionFieldDef:e,impute:t,groupby:n}=this._stack;return e?e.bin?t?[gn(e,{binSuffix:"mid"})]:[gn(e,{}),gn(e,{binSuffix:"end"})]:[gn(e)]:n||[]}assemble(){const e=[],{facetby:t,dimensionFieldDef:n,stackField:i,stackby:r,sort:o,offset:a,impute:s,as:l}=this._stack;return s&&n&&(n.bin&&e.push({type:"formula",expr:"("+gn(n,{expr:"datum"})+"+"+gn(n,{expr:"datum",binSuffix:"end"})+")/2",as:gn(n,{binSuffix:"mid",forAs:!0})}),e.push({type:"impute",field:i,groupby:[...r,...t],key:gn(n,{binSuffix:"mid"}),method:"value",value:0})),e.push({type:"stack",groupby:[...this.getGroupbyFields(),...t],field:i,sort:o,as:l,offset:a}),e}}class od extends Ua{constructor(e,t){super(e),this.transform=t}clone(){return new od(null,Object(C.duplicate)(this.transform))}addDimensions(e){this.transform.groupby=Object(C.unique)(this.transform.groupby.concat(e),e=>e)}dependentFields(){const e=new Set;return this.transform.groupby.forEach(t=>e.add(t)),this.transform.sort.forEach(t=>e.add(t.field)),this.transform.window.map(e=>e.field).filter(e=>void 0!==e).forEach(t=>e.add(t)),e}producedFields(){return new Set(this.transform.window.map(this.getDefaultName))}getDefaultName(e){return e.as||gn(e)}hash(){return`WindowTransform ${Object(C.hash)(this.transform)}`}assemble(){const e=[],t=[],n=[],i=[];for(const r of this.transform.window)t.push(r.op),n.push(this.getDefaultName(r)),i.push(void 0===r.param?null:r.param),e.push(void 0===r.field?null:r.field);const r=this.transform.frame,o=this.transform.groupby;if(r&&null===r[0]&&null===r[1]&&t.every(e=>F(e)))return Object.assign({type:"joinaggregate",as:n,ops:t,fields:e},void 0!==o?{groupby:o}:{});const a=[],s=[];if(void 0!==this.transform.sort)for(const e of this.transform.sort)a.push(e.field),s.push(e.order||"ascending");const l={field:a,order:s},u=this.transform.ignorePeers;return Object.assign({type:"window",params:i,as:n,ops:t,fields:e,sort:l},void 0!==u?{ignorePeers:u}:{},void 0!==o?{groupby:o}:{},void 0!==r?{frame:r}:{})}}class ad extends Kc{run(e){const t=e.parent;if(e instanceof nd){if(t instanceof Xc)return this.flags;if(t.numChildren()>1)return this.setContinue(),this.flags;if(t instanceof nd)this.setMutated(),t.merge(e);else{if(Object(C.fieldIntersection)(t.producedFields(),e.dependentFields()))return this.setContinue(),this.flags;this.setMutated(),e.swapWithParent()}}return this.setContinue(),this.flags}}class sd extends Zc{mergeNodes(e,t){const n=t.shift();for(const i of t)e.removeChild(i),i.parent=n,i.remove()}run(e){const t=e.children.map(e=>e.hash()),n={};for(let i=0;i<t.length;i++)void 0===n[t[i]]?n[t[i]]=[e.children[i]]:n[t[i]].push(e.children[i]);for(const t of Object(C.keys)(n))n[t].length>1&&(this.setMutated(),this.mergeNodes(e,n[t]));for(const t of e.children)this.run(t);return this.mutatedFlag}}class ld extends Kc{run(e){return e instanceof Wa||e.numChildren()>0||e instanceof td?this.flags:(this.setMutated(),e.remove(),this.flags)}}class ud extends Kc{constructor(){super(...arguments),this.fields=new Set}run(e){if(this.setContinue(),e instanceof fu){const t=e.producedFields();Object(C.hasIntersection)(t,this.fields)?(this.setMutated(),e.remove()):this.fields=new Set([...this.fields,...t])}return this.flags}}function cd(e){if(e instanceof td)if(1!==e.numChildren()||e.children[0]instanceof Wa){const n=e.model.component.data.main;!function e(t){if(t instanceof Wa&&t.type===fo&&1===t.numChildren()){const n=t.children[0];n instanceof td||(n.swapWithParent(),e(t))}}(n);const i=(t=e,function e(n){if(!(n instanceof td)){const i=n.clone();if(i instanceof Wa){const e=pd+i.getSource();i.setSource(e),t.model.component.data.outputNodes[e]=i}else(i instanceof ed||i instanceof rd||i instanceof od||i instanceof id)&&i.addDimensions(t.fields);return Object(C.flatten)(n.children.map(e)).forEach(e=>e.parent=i),[i]}return Object(C.flatten)(n.children.map(e))}),r=Object(C.flatten)(e.children.map(i));for(const e of r)e.parent=n}else{const t=e.children[0];(t instanceof ed||t instanceof rd||t instanceof od||t instanceof id)&&t.addDimensions(e.fields),t.swapWithParent(),cd(e)}else e.children.map(cd);var t}class dd extends Zc{run(e){e instanceof Wa&&!e.isRequired()&&(this.setMutated(),e.remove());for(const t of e.children)this.run(t);return this.mutatedFlag}}class fd extends Kc{run(e){const t=e.parent,n=t.children.filter(e=>e instanceof nd);if(n.length>1){const e={};for(const t of n){const n=t.parse;for(const t of Object(C.keys)(n))void 0===e[t]?e[t]=n[t]:e[t]!==n[t]&&delete e[t]}if(0!==Object(C.keys)(e).length){this.setMutated();const i=new nd(t,e);for(const r of n){for(const t of Object(C.keys)(e))delete r.parse[t];t.removeChild(r),r.parent=i,0===Object(C.keys)(r.parse).length&&r.remove()}}}return this.setContinue(),this.flags}}class hd extends Kc{run(e){const t=e.parent,n=t.children.filter(e=>e instanceof ed),i={};for(const e of n){const t=Object(C.hash)(Object(C.keys)(e.groupBy).sort());t in i||(i[t]=[]),i[t].push(e)}for(const e of Object(C.keys)(i)){const n=i[e];if(n.length>1){const e=n.pop();for(const i of n)e.merge(i)&&(t.removeChild(i),i.parent=e,i.remove(),this.setMutated())}}return this.setContinue(),this.flags}}const pd="scale_",gd=5;function md(e){const t=[];return e.forEach(function e(n){0===n.numChildren()?t.push(n):n.children.forEach(e)}),t}function yd(e){return e}function bd(e,t,n){return t.map(t=>{const n=new e;return n instanceof Kc?n.optimizeNextFromLeaves(t):n.run(t)}).some(yd)||n}function vd(e){let t=e.sources,n=!1;return n=bd(dd,t,n),t=t.filter(e=>e.numChildren()>0),n=bd(ld,md(t),n),t=t.filter(e=>e.numChildren()>0),n=bd(ad,md(t),n),n=bd(ud,md(t),n),n=bd(fd,md(t),n),n=bd(hd,md(t),n),n=bd(sd,t,n),e.sources=t,n}function _d(e){Ud(e)?function(e){const t=e.specifiedScales,n=e.component.scales;C.keys(n).forEach(i=>{const r=t[i],o=r?r.domain:void 0,a=function(e,t){const n=e.getScaleComponent(t).get("type"),i=function(e,t,n,i){if("unaggregated"===e){const{valid:e,reason:i}=kd(t,n);if(!e)return void dt(i)}else if(void 0===e&&i.useUnaggregatedDomain){const{valid:e}=kd(t,n);if(e)return"unaggregated"}return e}(e.scaleDomain(t),e.fieldDef(t),n,e.config.scale);i!==e.scaleDomain(t)&&(e.specifiedScales[t]=Object.assign({},e.specifiedScales[t],{domain:i}));if("x"===t&&e.channelHasField("x2"))return e.channelHasField("x")?xd(n,i,e,"x").concat(xd(n,i,e,"x2")):xd(n,i,e,"x2");if("y"===t&&e.channelHasField("y2"))return e.channelHasField("y")?xd(n,i,e,"y").concat(xd(n,i,e,"y2")):xd(n,i,e,"y2");return xd(n,i,e,t)}(e,i),s=n[i];if(s.domains=a,Mr(o)&&s.set("domainRaw",{signal:Nu+C.hash(o)},!0),e.component.data.isFaceted){let t=e;for(;!Wd(t)&&t.parent;)t=t.parent;const n=t.component.resolve.scale[i];if("shared"===n)for(const e of a)Ca(e)&&(e.data=pd+e.data.replace(pd,""))}})}(e):function(e){for(const t of e.children)_d(t);const t=e.component.scales;C.keys(t).forEach(n=>{let i,r=null;for(const t of e.children){const e=t.component.scales[n];if(e){i=void 0===i?e.domains:i.concat(e.domains);const t=e.get("domainRaw");r&&t&&r.signal!==t.signal&&dt("The same selection must be used to override scale domains in a layered view."),r=t}}t[n].domains=i,r&&t[n].set("domainRaw",r,!0)})}(e)}function xd(e,t,n,i){const r=n.fieldDef(i);if(t&&"unaggregated"!==t&&!Mr(t)){const{type:e,timeUnit:n}=r;return"temporal"===e||n?function(e,t,n){return e.map(e=>({signal:`{data: ${In(e,{timeUnit:n,type:t})}}`}))}(t,e,n):[t]}const o=n.stack;if(o&&i===o.fieldChannel){if("normalize"===o.offset)return[[0,1]];const e=n.requestDataName(fo);return[{data:e,field:n.vgField(i,{suffix:"start"})},{data:e,field:n.vgField(i,{suffix:"end"})}]}const a=ot(i)?function(e,t,n){if(!Tr(n))return;const i=e.fieldDef(t),r=i.sort;if(Uo(r))return{op:"min",field:Nl(i,t),order:"ascending"};const o=null!==e.stack;if(Ro(r))return wd(r,o);if(qo(r)){const{encoding:t,order:n}=r,{aggregate:i,field:a}=e.fieldDef(t),s={op:i,field:a,order:n};return wd(s,o)}if("descending"===r)return{op:"min",field:e.vgField(t),order:"descending"};if(C.contains(["ascending",void 0],r))return!0;return}(n,i,e):void 0;if("unaggregated"===t){const e=n.requestDataName(fo),{field:t}=r;return[{data:e,field:gn({field:t,aggregate:"min"})},{data:e,field:gn({field:t,aggregate:"max"})}]}if(Un(r.bin)){if(Tr(e))return"bin-ordinal"===e?[]:[{data:C.isBoolean(a)?n.requestDataName(fo):n.requestDataName(ho),field:n.vgField(i,qn(r,i)?{binSuffix:"range"}:{}),sort:!0!==a&&Object(O.i)(a)?a:{field:n.vgField(i,{}),op:"min"}}];if(Un(r.bin)){const e=n.getName(gn(r,{suffix:"bins"}));return[{signal:`[${e}.start, ${e}.stop]`}]}return[{data:n.requestDataName(fo),field:n.vgField(i,{})}]}return a?[{data:C.isBoolean(a)?n.requestDataName(fo):n.requestDataName(ho),field:n.vgField(i),sort:a}]:[{data:n.requestDataName(fo),field:n.vgField(i)}]}function wd(e,t){const{op:n,field:i,order:r}=e;return Object.assign({op:n||(t?"sum":Lo)},i?{field:C.replacePathInField(i)}:{},r?{order:r}:{})}function kd(e,t){return e.aggregate?N[e.aggregate]?"quantitative"===e.type&&"log"===t?{valid:!1,reason:ft.unaggregatedDomainWithLogScale(e)}:{valid:!0}:{valid:!1,reason:ft.unaggregateDomainWithNonSharedDomainOp(e.aggregate)}:{valid:!1,reason:ft.unaggregateDomainHasNoEffectForRawField(e)}}function Dd(e){if(Ca(e)&&Object(O.j)(e.field))return e.field;if(function(e){return!Object(O.e)(e)&&"fields"in e&&!("data"in e)}(e)){let t;for(const n of e.fields)if(Ca(n)&&Object(O.j)(n.field))if(t){if(t!==n.field)return dt("Detected faceted independent scales that union domain of multiple fields from different data sources.  We will use the first field.  The result view size may be incorrect."),t}else t=n.field;return dt("Detected faceted independent scales that union domain of identical fields from different source detected.  We will assume that this is the same field from a different fork of the same data source.  However, if this is not case, the result view size maybe incorrect."),t}if(function(e){return!Object(O.e)(e)&&"fields"in e&&"data"in e}(e)){dt("Detected faceted independent scales that union domain of multiple fields from the same data source.  We will use the first field.  The result view size may be incorrect.");const t=e.fields[0];return Object(O.j)(t)?t:void 0}}function Ad(e,t){return function(e){const t=C.unique(e.map(e=>{if(Ca(e)){const{sort:t}=e;return H(e,["sort"])}return e}),C.hash),n=C.unique(e.map(e=>{if(Ca(e)){const t=e.sort;return void 0===t||C.isBoolean(t)||("count"===t.op&&delete t.field,"ascending"===t.order&&delete t.order),t}}).filter(e=>void 0!==e),C.hash);if(0===t.length)return;if(1===t.length){const t=e[0];if(Ca(t)&&n.length>0){let e=n[0];return n.length>1&&(dt(ft.MORE_THAN_ONE_SORT),e=!0),Object.assign({},t,{sort:e})}return t}const i=C.unique(n.map(e=>C.isBoolean(e)?e:"count"===e.op?e:(dt(ft.domainSortDropped(e)),!0)),C.hash);let r;1===i.length?r=i[0]:i.length>1&&(dt(ft.MORE_THAN_ONE_SORT),r=!0);const o=C.unique(e.map(e=>Ca(e)?e.data:null),e=>e);if(1===o.length&&null!==o[0])return Object.assign({data:o[0],fields:t.map(e=>e.field)},r?{sort:r}:{});return Object.assign({fields:t},r?{sort:r}:{})}(e.component.scales[t].domains.map(t=>(Ca(t)&&(t.data=e.lookupDataSource(t.data)),t)))}function Od(e){return Object(C.keys)(e.component.scales).reduce((t,n)=>{const i=e.component.scales[n];if(i.merged)return t;const r=i.combine();let{domainRaw:o}=r;const{name:a,type:s,domainRaw:l,range:u}=r,c=H(r,["name","type","domainRaw","range"]),d=function(e,t,n){if(("x"===n||"y"===n)&&Oa(e))return{step:{signal:t+"_step"}};return e}(r.range,a,n);o&&function(e){return e.signal.indexOf(Nu)>=0}(o)&&(o=function(e,t){const n=JSON.parse(t.signal.replace(Nu,"")),i=Object(C.varName)(n.selection),r=n.encoding;let o=n.field,a=e.component.selection&&e.component.selection[i];if(!a){if(a=e.getSelectionComponent(i,n.selection),r||o){if(r&&!o){const e=a.project.filter(e=>e.channel===r);!e.length||e.length>1?(o=a.project[0].field,dt((e.length?"Multiple ":"No ")+`matching ${Object(O.m)(r)} encoding found for selection ${Object(O.m)(n.selection)}. `+`Using "field": ${Object(O.m)(o)}.`)):o=e[0].field}}else o=a.project[0].field,a.project.length>1&&dt('A "field" or "encoding" must be specified when using a selection as a scale domain. '+`Using "field": ${Object(O.m)(o)}.`);return{signal:Object(C.accessPathWithDatum)(o,i)}}return dt('Use "bind": "scales" to setup a binding for scales and selections within the same view.'),{signal:"null"}}(e,o));const f=Ad(e,n);return t.push(Object.assign({name:a,type:s},f?{domain:f}:{},o?{domainRaw:o}:{},{range:d},c)),t},[])}class Cd extends xc{constructor(e,t){super({},{name:e}),this.merged=!1,this.domains=[],this.setWithExplicit("type",t)}}class Td{constructor(e){this.exprGenerator=e}get signal(){return this.exprGenerator()}toJSON(){return{signal:this.signal}}static fromName(e,t){return new Td(()=>e(t))}}const Sd=["range","rangeStep","scheme"];function Fd(e){return"x"===e?"width":"y"===e?"height":void 0}function jd(e){const t=e.component.scales;rt.forEach(n=>{const i=t[n];if(!i)return;const r=e.getScaleComponent(n),o=e.specifiedScales[n],a=e.fieldDef(n),s=Fd(n);let l=s?!!e.component.layoutSize.get(s):void 0;const u=r.get("type"),c=C.contains(["point","band"],u)||!!o.rangeStep;s&&e.fit&&!l&&c&&(dt(ft.CANNOT_FIX_RANGE_STEP_WITH_FIT),l=!0);const d=function(e){const t=[];for(const n of He){const i=Ed(e,n);void 0!==i&&t.push(i)}return t}(e),f=function(e,t,n,i,r,o,a,s,l,u,c){const d=l||null===r.rangeStep;for(const t of Sd)if(void 0!==r[t]){const i=Vr(n,t),o=Hr(e,t);if(i)if(o)dt(o);else switch(t){case"range":return wc(r[t]);case"scheme":return wc($d(r[t]));case"rangeStep":const n=r[t];if(null!==n){if(!l)return wc({step:n});dt(ft.rangeStepDropped(e))}}else dt(ft.scalePropertyNotWorkWithScaleType(n,t,e))}return kc(function(e,t,n,i,r,o,a,s,l,u,c){switch(e){case Y:case G:if(C.contains(["point","band"],n)&&!u)if(e===Y&&"text"===a){if(r.scale.textXRangeStep)return{step:r.scale.textXRangeStep}}else if(r.scale.rangeStep)return{step:r.scale.rangeStep};return e===G&&Sr(n)?[Td.fromName(t,s),0]:[0,Td.fromName(t,s)];case oe:const d=function(e,t,n){if(t)return 0;switch(e){case"bar":case"tick":return n.scale.minBandSize;case"line":case"trail":case"rule":return n.scale.minStrokeWidth;case"text":return n.scale.minFontSize;case"point":case"square":case"circle":return n.scale.minSize}throw new Error(ft.incompatibleChannel("size",e))}(a,o,r),f=function(e,t,n){const i=n.scale;switch(e){case"bar":case"tick":if(void 0!==n.scale.maxBandSize)return n.scale.maxBandSize;const r=zd(t,n.scale);return Object(O.h)(r)?r-1:new Td(()=>`${r.signal} - 1`);case"line":case"trail":case"rule":return n.scale.maxStrokeWidth;case"text":return n.scale.maxFontSize;case"point":case"square":case"circle":if(n.scale.maxSize)return n.scale.maxSize;const o=zd(t,i);return Object(O.h)(o)?Math.pow(Md*o,2):new Td(()=>`pow(${Md} * ${o.signal}, 2)`)}throw new Error(ft.incompatibleChannel("size",e))}(a,l,r);return jr(n)?function(e,t,n){const i=()=>{const i=Aa(t)?t.signal:t,r=`(${i} - ${e}) / (${n} - 1)`;return`sequence(${e}, ${t} + ${r}, ${r})`};return Aa(t)?new Td(i):{signal:i()}}(d,f,function(e,t,n,i){switch(e){case"quantile":return t.scale.quantileCount;case"quantize":return t.scale.quantizeCount;case"threshold":return void 0!==n&&Object(O.e)(n)?n.length+1:(dt(ft.domainRequiredForThresholdScale(i)),3)}}(n,r,c,e)):[d,f];case me:return[r.scale.minStrokeWidth,r.scale.maxStrokeWidth];case re:return"symbol";case ae:case se:case le:return"ordinal"===n?"nominal"===i?"category":"ordinal":"rect"===a||"geoshape"===a?"heatmap":"ramp";case he:case pe:case ge:return[r.scale.minOpacity,r.scale.maxOpacity]}throw new Error(`Scale range undefined for channel ${e}`)}(e,t,n,i,o,a,s,u,c,d,r.domain))}(n,e.getSignalName.bind(e),u,a.type,o,e.config,i.get("zero"),e.mark,l,e.getName(s),d);i.setWithExplicit("range",f)})}function Ed(e,t){const n=e.getScaleComponent(t);if(!n)return;const i=n.get("type"),r=e.fieldDef(t);if(Tr(i)){const e=n&&n.get("range");if(e&&Oa(e)&&Object(O.h)(e.step))return e.step}else if(r&&r.bin&&Un(r.bin)){const n=e.getName(gn(r,{suffix:"bins"})),i=`(${n}.stop - ${n}.start) / ${n}.step`,o=Fd(t),a=e.getName(o);return new Td(()=>`${e.getSignalName(a)} / (${e.getSignalName(i)})`)}}function $d(e){return $r(e)?Object.assign({scheme:e.name},C.omit(e,["name"])):{scheme:e}}const Md=.95;function zd(e,t){if(e.length>0){let t=1/0;for(const n of e)Aa(n)?t=void 0:void 0!==t&&n<t&&(t=n);return void 0!==t?t:new Td(()=>{return`min(${e.map(e=>Aa(e)?e.signal:e).join(", ")})`})}return t.rangeStep?t.rangeStep:21}function Nd(e,t){Ud(e)?function(e,t){const n=e.component.scales;Object(C.keys)(n).forEach(i=>{const r=e.specifiedScales[i],o=n[i],a=e.getScaleComponent(i),s=e.fieldDef(i),l=e.config,u=r[t],c=a.get("type"),d=Vr(c,t),f=Hr(i,t);if(void 0!==u&&(d?f&&dt(f):dt(ft.scalePropertyNotWorkWithScaleType(c,t,i))),d&&void 0===f)if(void 0!==u)o.copyKeyFromObject(t,r);else{const n=function(e,t,n,i,r,o,a,s,l,u){const c=u.scale;switch(e){case"bins":return function(e,t,n){const i=t.bin;if(Un(i))return new Td(()=>e.getName(gn(t,{suffix:"bins"})));if(Wn(i)&&Vn(i)&&void 0!==i.step)return{step:i.step};return}(t,i);case"interpolate":return function(e){if(Object(C.contains)([ae,se,le],e))return"hcl";return}(n);case"nice":return function(e,t,n){if(n.bin||C.contains([hr.TIME,hr.UTC],e))return;return!!C.contains([Y,G],t)||void 0}(r,n,i);case"padding":return function(e,t,n,i,r,o){if(C.contains([Y,G],e)){if(Fr(t)){if(void 0!==n.continuousPadding)return n.continuousPadding;const{type:t,orient:a}=r;if("bar"===t&&!i.bin&&("vertical"===a&&"x"===e||"horizontal"===a&&"y"===e))return o.continuousBandSize}if(t===hr.POINT)return n.pointPadding}return}(n,r,c,i,l,u.bar);case"paddingInner":return function(e,t,n,i){if(void 0!==e)return;if(C.contains([Y,G],t)){const{bandPaddingInner:e,barBandPaddingInner:t,rectBandPaddingInner:r}=i;return Object(C.getFirstDefined)(e,"bar"===n?t:r)}return}(o,n,l.type,c);case"paddingOuter":return function(e,t,n,i,r,o){if(void 0!==e)return;if(C.contains([Y,G],t)&&n===hr.BAND){const{bandPaddingOuter:e,barBandPaddingOuter:t,rectBandPaddingOuter:n}=o;return Object(C.getFirstDefined)(e,"bar"===i?t:n,r/2)}return}(o,n,r,l.type,a,c);case"reverse":return function(e,t){if(Sr(e)&&"descending"===t)return!0;return}(r,i.sort);case"zero":return function(e,t,n,i,r){if(n&&"unaggregated"!==n)return!1;if("size"===e&&"quantitative"===t.type&&!jr(r))return!0;if(!t.bin&&C.contains([Y,G],e)){const{orient:t,type:n}=i;return!Object(C.contains)(["bar","area","line","trail"],n)||!("horizontal"===t&&"y"===e||"vertical"===t&&"x"===e)}return!1}(n,i,s,l,r)}return c[e]}(t,e,i,s,a.get("type"),a.get("padding"),a.get("paddingInner"),r.domain,e.markDef,l);void 0!==n&&o.set(t,n,!1)}})}(e,t):Pd(e,t)}function Bd(e){Ud(e)?jd(e):Pd(e,"range")}function Pd(e,t){const n=e.component.scales;for(const n of e.children)"range"===t?Bd(n):Nd(n,t);Object(C.keys)(n).forEach(i=>{let r;for(const n of e.children){const e=n.component.scales[i];if(e){r=Oc(r,e.getWithExplicit(t),t,"scale",Dc((e,n)=>{switch(t){case"range":return e.step&&n.step?e.step-n.step:0}return 0}))}}n[i].setWithExplicit(t,r)})}function Id(e,t,n,i,r){const o=function(e,t,n,i,r){switch(t.type){case"nominal":case"ordinal":if(we(e)||"discrete"===st(e))return"shape"===e&&"ordinal"===t.type&&dt(ft.discreteChannelCannotEncode(e,"ordinal")),"ordinal";if(C.contains(["x","y"],e)){if(C.contains(["rect","bar","rule"],n))return"band";if("bar"===n)return"band"}return"point";case"temporal":return we(e)?"time":"discrete"===st(e)?(dt(ft.discreteChannelCannotEncode(e,"temporal")),"ordinal"):"time";case"quantitative":return we(e)?Un(t.bin)?"bin-ordinal":"linear":"discrete"===st(e)?(dt(ft.discreteChannelCannotEncode(e,"quantitative")),"ordinal"):"linear";case"geojson":return}throw new Error(ft.invalidFieldType(t.type))}(t,n,i),{type:a}=e;return ot(t)?void 0!==a?Gr(t,a)?Yr(a,n.type)?a:(dt(ft.scaleTypeNotWorkWithFieldDef(a,o)),o):(dt(ft.scaleTypeNotWorkWithChannel(t,a,o)),o):o:null}function Ld(e){Ud(e)?e.component.scales=function(e){const{encoding:t,config:n,mark:i}=e;return rt.reduce((r,o)=>{let a,s;const l=t[o];if(sn(l)&&i===ii&&o===re&&l.type===Qt)return r;if(sn(l)?(a=l,s=l.scale):on(l)&&(a=l.condition,s=l.condition.scale),a&&null!==s&&!1!==s){const t=Id(s=s||{},o,a,i,n.scale);r[o]=new Cd(e.scaleName(o+"",!0),{value:t,explicit:s.type===t})}return r},{})}(e):e.component.scales=function(e){const t=e.component.scales={},n={},i=e.component.resolve;for(const t of e.children)Ld(t),Object(C.keys)(t.component.scales).forEach(r=>{if(i.scale[r]=i.scale[r]||vc(r,e),"shared"===i.scale[r]){const e=n[r],o=t.component.scales[r].getWithExplicit("type");e?mr(e.value,o.value)?n[r]=Oc(e,o,"type","scale",qd):(i.scale[r]="independent",delete n[r]):n[r]=o}});return Object(C.keys)(n).forEach(i=>{const r=e.scaleName(i,!0),o=n[i];t[i]=new Cd(r,o);for(const t of e.children){const e=t.component.scales[i];e&&(t.renameScale(e.get("name"),r),e.merged=!0)}}),t}(e)}const qd=Dc((e,t)=>br(e)-br(t));class Rd{constructor(){this.nameMap={}}rename(e,t){this.nameMap[e]=t}has(e){return void 0!==this.nameMap[e]}get(e){for(;this.nameMap[e]&&e!==this.nameMap[e];)e=this.nameMap[e];return e}}function Ud(e){return e&&"unit"===e.type}function Wd(e){return e&&"facet"===e.type}function Vd(e){return e&&"repeat"===e.type}function Hd(e){return e&&"concat"===e.type}function Yd(e){return e&&"layer"===e.type}class Gd{constructor(e,t,n,i,r,o,a){this.parent=t,this.config=i,this.repeater=r,this.view=a,this.children=[],this.correctDataNames=(e=>(e.from&&e.from.data&&(e.from.data=this.lookupDataSource(e.from.data)),e.from&&e.from.facet&&e.from.facet.data&&(e.from.facet.data=this.lookupDataSource(e.from.facet.data)),e)),this.parent=t,this.config=i,this.repeater=r,this.name=e.name||n,this.title=Object(O.j)(e.title)?{text:e.title}:e.title,this.scaleNameMap=t?t.scaleNameMap:new Rd,this.projectionNameMap=t?t.projectionNameMap:new Rd,this.signalNameMap=t?t.signalNameMap:new Rd,this.data=e.data,this.description=e.description,this.transforms=ma(e.transform||[]),this.layout=wi(e)||wo(e)?{}:function(e){const t={};for(const n of Da)void 0!==e[n]&&(t[n]=e[n]);return t}(e),this.component={data:{sources:t?t.component.data.sources:[],outputNodes:t?t.component.data.outputNodes:{},outputNodeRefCounts:t?t.component.data.outputNodeRefCounts:{},isFaceted:xt(e)||t&&t.component.data.isFaceted&&!e.data},layoutSize:new xc,layoutHeaders:{row:{},column:{},facet:{}},mark:null,resolve:Object.assign({scale:{},axis:{},legend:{}},o?Object(C.duplicate)(o):{}),selection:null,scales:null,projection:null,axes:{},legends:{}}}get width(){return this.getSizeSignalRef("width")}get height(){return this.getSizeSignalRef("height")}initSize(e){const{width:t,height:n}=e;t&&this.component.layoutSize.set("width",t,!0),n&&this.component.layoutSize.set("height",n,!0)}parse(){this.parseScale(),this.parseLayoutSize(),this.renameTopLevelLayoutSizeSignal(),this.parseSelection(),this.parseProjection(),this.parseData(),this.parseAxisAndHeader(),this.parseLegend(),this.parseMarkGroup()}parseScale(){!function(e){Ld(e),_d(e);for(const t of Ur)Nd(e,t);Bd(e)}(this)}parseProjection(){Gc(this)}renameTopLevelLayoutSizeSignal(){"width"!==this.getName("width")&&this.renameSignal(this.getName("width"),"width"),"height"!==this.getName("height")&&this.renameSignal(this.getName("height"),"height")}parseLegend(){Ic(this)}assembleGroupStyle(){if("unit"===this.type||"layer"===this.type)return this.view&&this.view.style||"cell"}assembleEncodeFromView(e){const{style:t}=e,n=H(e,["style"]),i={};for(const e in n)if(n.hasOwnProperty(e)){const t=n[e];void 0!==t&&(i[e]={value:t})}return i}assembleGroupEncodeEntry(e){let t=void 0;return this.view&&(t=this.assembleEncodeFromView(this.view)),e||"unit"!==this.type&&"layer"!==this.type?t:Object.assign({width:this.getSizeSignalRef("width"),height:this.getSizeSignalRef("height")},t||{})}assembleLayout(){if(!this.layout)return;const e=this.layout,{spacing:t={}}=e,n=H(e,["spacing"]);return Object.assign({padding:Object(O.h)(t)?t:{row:t.row||ka,column:t.column||ka}},this.assembleDefaultLayout(),n)}assembleDefaultLayout(){return{}}assembleHeaderMarks(){const{layoutHeaders:e}=this.component;let t=[];for(const n of De)e[n].title&&t.push(Il(this,n));for(const e of Bl)t=t.concat(Ll(this,e));return t}assembleAxes(){return function(e,t){const{x:n=[],y:i=[]}=e;return[...n.map(e=>Sa(e,"main",t)),...n.map(e=>Sa(e,"grid",t)),...i.map(e=>Sa(e,"main",t)),...i.map(e=>Sa(e,"grid",t))].filter(e=>e)}(this.component.axes,this.config)}assembleLegends(){return Uc(this)}assembleProjections(){return Wc(this)}assembleTitle(){const e=this.title||{},{encoding:t}=e,n=H(e,["encoding"]),i=Object.assign({},Kr(this.config.title).nonMark,n,t?{encode:{update:t}}:{});if(i.text)return Object(C.contains)(["unit","layer"],this.type)||(i.anchor&&"start"!==i.anchor&&dt(ft.cannotSetTitleAnchor(this.type)),i.anchor="start"),Object(C.contains)(["middle",void 0],i.anchor)&&void 0===i.frame&&(i.frame="group"),Object(C.keys)(i).length>0?i:void 0}assembleGroup(e=[]){const t={};(e=e.concat(this.assembleSelectionSignals())).length>0&&(t.signals=e);const n=this.assembleLayout();n&&(t.layout=n),t.marks=[].concat(this.assembleHeaderMarks(),this.assembleMarks());const i=!this.parent||Wd(this.parent)?function e(t){return Yd(t)||Hd(t)||Vd(t)?t.children.reduce((t,n)=>t.concat(e(n)),Od(t)):Od(t)}(this):[];i.length>0&&(t.scales=i);const r=this.assembleAxes();r.length>0&&(t.axes=r);const o=this.assembleLegends();return o.length>0&&(t.legends=o),t}hasDescendantWithFieldOnChannel(e){for(const t of this.children)if(Ud(t)){if(t.channelHasField(e))return!0}else if(t.hasDescendantWithFieldOnChannel(e))return!0;return!1}getName(e){return Object(C.varName)((this.name?this.name+"_":"")+e)}requestDataName(e){const t=this.getName(e),n=this.component.data.outputNodeRefCounts;return n[t]=(n[t]||0)+1,t}getSizeSignalRef(e){if(Wd(this.parent)){const t="width"===e?"x":"y",n=this.component.scales[t];if(n&&!n.merged){const e=n.get("type"),i=n.get("range");if(Tr(e)&&Oa(i)){const e=n.get("name"),i=Dd(Ad(this,t));if(i){return{signal:Gl(e,n,gn({aggregate:"distinct",field:i},{expr:"datum"}))}}return dt("Unknown field for ${channel}.  Cannot calculate view size."),null}}}return{signal:this.signalNameMap.get(this.getName(e))}}lookupDataSource(e){const t=this.component.data.outputNodes[e];return t?t.getSource():e}getSignalName(e){return this.signalNameMap.get(e)}renameSignal(e,t){this.signalNameMap.rename(e,t)}renameScale(e,t){this.scaleNameMap.rename(e,t)}renameProjection(e,t){this.projectionNameMap.rename(e,t)}scaleName(e,t){return t?this.getName(e):je(e)&&ot(e)&&this.component.scales[e]||this.scaleNameMap.has(this.getName(e))?this.scaleNameMap.get(this.getName(e)):void 0}projectionName(e){return e?this.getName("projection"):this.component.projection&&!this.component.projection.merged||this.projectionNameMap.has(this.getName("projection"))?this.projectionNameMap.get(this.getName("projection")):void 0}getScaleComponent(e){if(!this.component.scales)throw new Error("getScaleComponent cannot be called before parseScale().  Make sure you have called parseScale or use parseUnitModelWithScale().");const t=this.component.scales[e];return t&&!t.merged?t:this.parent?this.parent.getScaleComponent(e):void 0}getSelectionComponent(e,t){let n=this.component.selection[e];if(!n&&this.parent&&(n=this.parent.getSelectionComponent(e,t)),!n)throw new Error(ft.selectionNotFound(t));return n}}class Jd extends Gd{vgField(e,t={}){const n=this.fieldDef(e);if(n)return gn(n,t)}reduceFieldDef(e,t,n){return Ei(this.getMapping(),(t,n,i)=>{const r=Fn(n);return r?e(t,r,i):t},t,n)}forEachFieldDef(e,t){ji(this.getMapping(),(t,n)=>{const i=Fn(t);i&&e(i,n)},t)}}function Xd(e,t,n){let i;i=function(e){return"as"in e}(e)?Object(O.j)(e.as)?[e.as,`${e.as}_end`]:[e.as[0],e.as[1]]:[gn(e,{forAs:!0}),gn(e,{binSuffix:"end",forAs:!0})];const r=Mn(t,void 0)||{},o=function(e,t){return`${Rn(e)}_${t}`}(r,e.field),{signal:a,extentSignal:s}=function(e,t){return{signal:e.getName(`${t}_bins`),extentSignal:e.getName(`${t}_extent`)}}(n,o);return{key:o,binComponent:Object.assign({bin:r,field:e.field,as:i},a?{signal:a}:{},s?{extentSignal:s}:{})}}class Qd extends Ua{constructor(e,t){super(e),this.bins=t}clone(){return new Qd(null,Object(C.duplicate)(this.bins))}static makeFromEncoding(e,t){const n=t.reduceFieldDef((e,n,i)=>{if(ln(n)&&Un(n.bin)){const{key:r,binComponent:o}=Xd(n,n.bin,t);e[r]=Object.assign({},o,e[r],function(e,t,n,i){if(qn(t,n)){const r=Ud(e)&&(e.axis(n)||e.legend(n))||{},o=gn(t,{expr:"datum"}),a=gn(t,{expr:"datum",binSuffix:"end"});return{formulaAs:gn(t,{binSuffix:"range",forAs:!0}),formula:Ba(o,a,r.format,i)}}return{}}(t,n,i,t.config))}return e},{});return 0===Object(C.keys)(n).length?null:new Qd(e,n)}static makeFromTransform(e,t,n){const{key:i,binComponent:r}=Xd(t,t.bin,n);return new Qd(e,{[i]:r})}merge(e){this.bins=Object.assign({},this.bins,e.bins),e.remove()}producedFields(){return new Set(Object(C.flatten)(Object(C.vals)(this.bins).map(e=>e.as)))}dependentFields(){return new Set(Object(C.vals)(this.bins).map(e=>e.field))}hash(){return`Bin ${Object(C.hash)(this.bins)}`}assemble(){return Object(C.flatten)(Object(C.vals)(this.bins).map(e=>{const t=[],n=Object.assign({type:"bin",field:e.field,as:e.as,signal:e.signal},e.bin);return!e.bin.extent&&e.extentSignal&&(t.push({type:"extent",field:e.field,signal:e.extentSignal}),n.extent={signal:e.extentSignal}),t.push(n),e.formula&&t.push({type:"formula",expr:e.formula,as:e.formulaAs}),t}))}}class Kd extends Ua{constructor(e,t,n){super(e),this.model=t,this.filter=n,this.expr=Yu(this.model,this.filter,this),this._dependentFields=Ml(this.expr)}clone(){return new Kd(null,this.model,Object(C.duplicate)(this.filter))}dependentFields(){return this._dependentFields}assemble(){return{type:"filter",expr:this.expr}}hash(){return`Filter ${this.expr}`}}class Zd extends Ua{constructor(e,t){super(e),this.transform=t,this.transform=Object(C.duplicate)(t);const{flatten:n,as:i=[]}=this.transform;this.transform.as=n.map((e,t)=>i[t]||e)}clone(){return new Zd(this.parent,Object(C.duplicate)(this.transform))}producedFields(){return new Set(this.transform.as)}hash(){return`FlattenTransform ${Object(C.hash)(this.transform)}`}assemble(){const{flatten:e,as:t}=this.transform;return{type:"flatten",fields:e,as:t}}}class ef extends Ua{constructor(e,t){super(e),this.transform=t,this.transform=Object(C.duplicate)(t);const n=this.transform.as||[void 0,void 0];this.transform.as=[n[0]||"key",n[1]||"value"]}clone(){return new ef(null,Object(C.duplicate)(this.transform))}producedFields(){return new Set(this.transform.as)}hash(){return`FoldTransform ${Object(C.hash)(this.transform)}`}assemble(){const{fold:e,as:t}=this.transform;return{type:"fold",fields:e,as:t}}}class tf extends Ua{constructor(e,t,n,i){super(e),this.fields=t,this.geojson=n,this.signal=i}clone(){return new tf(null,Object(C.duplicate)(this.fields),this.geojson,this.signal)}static parseAll(e,t){let n=0;if([[Z,Q],[ee,K]].forEach(i=>{const r=i.map(e=>t.channelHasField(e)?t.fieldDef(e).field:void 0);(r[0]||r[1])&&(e=new tf(e,r,null,t.getName(`geojson_${n++}`)))}),t.channelHasField(re)){const i=t.fieldDef(re);i.type===Qt&&(e=new tf(e,null,i.field,t.getName(`geojson_${n++}`)))}return e}assemble(){return Object.assign({type:"geojson"},this.fields?{fields:this.fields}:{},this.geojson?{geojson:this.geojson}:{},{signal:this.signal})}}class nf extends Ua{constructor(e,t,n,i){super(e),this.projection=t,this.fields=n,this.as=i}clone(){return new nf(null,this.projection,Object(C.duplicate)(this.fields),Object(C.duplicate)(this.as))}static parseAll(e,t){return t.projectionName()?([[Z,Q],[ee,K]].forEach(n=>{const i=n.map(e=>t.channelHasField(e)?t.fieldDef(e).field:void 0),r=n[0]===ee?"2":"";(i[0]||i[1])&&(e=new nf(e,t.projectionName(),i,[t.getName("x"+r),t.getName("y"+r)]))}),e):e}assemble(){return{type:"geopoint",projection:this.projection,fields:this.fields,as:this.as}}}class rf extends Ua{clone(){return new rf(null)}constructor(e){super(e)}producedFields(){return new Set([Qr])}assemble(){return{type:"identifier",as:Qr}}}function of(e,t,n,i){if(void 0!==e.size)return{value:e.size};const r=ja("size",e,i,{skipGeneralMarkConfig:!0});if(void 0!==r)return{value:r};if(n){const e=n.get("type");if("point"!==e&&"band"!==e)return{value:i.bar.continuousBandSize};if(void 0!==i.bar.discreteBandSize)return{value:i.bar.discreteBandSize};if(e!==hr.POINT)return Qu(t);{const e=n.get("range");if(Oa(e)&&Object(O.h)(e.step))return{value:e.step-1};dt(ft.BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL)}}return{value:Object(C.getFirstDefined)(i.bar.discreteBandSize,i.scale.rangeStep?i.scale.rangeStep-1:void 0,20)}}function af(e,t){const{config:n,markDef:i,width:r,height:o}=e;return Object.assign({},ac(e,{size:"include",orient:"ignore"}),mc("x",e,nc(r)),mc("y",e,nc(o)),cc("size",e,{defaultValue:ja("size",i,n)}),function(e,t,n){if(n)return{shape:{value:n}};return cc("shape",e,{defaultValue:ja("shape",e.markDef,t)})}(e,n,t))}function sf(e){const{config:t,markDef:n}=e,i=n.orient,r=e.getScaleComponent("horizontal"===i?"x":"y");if(void 0!==n.size)return n.size;if(void 0!==t.tick.bandSize)return t.tick.bandSize;{const e=r?r.get("range"):void 0,n=e&&Oa(e)?e.step:t.scale.rangeStep;if("number"!=typeof n)throw new Error("Function does not handle non-numeric rangeStep");return 3*n/4}}const lf={area:{vgMark:"area",encodeEntry:e=>Object.assign({},ac(e,{size:"ignore",orient:"include"}),mc("x",e,"zeroOrMin"),mc("y",e,"zeroOrMin"),yc(e,"zeroOrMin","horizontal"===e.markDef.orient?"x2":"y2"),uc(e))},bar:{vgMark:"rect",encodeEntry:e=>Object.assign({},ac(e,{size:"ignore",orient:"ignore"}),function(e){const{config:t,encoding:n,markDef:i,width:r}=e,o=i.orient,a=n.size,s=n.x,l=n.x2,u=e.scaleName(Y),c=e.getScaleComponent(Y);if(sn(s)&&Wn(s.bin))return gc(s,l,Y,u,Object(C.getFirstDefined)(i.binSpacing,t.bar.binSpacing),c.get("reverse"));if("horizontal"===o||l)return Object.assign({},mc("x",e,"zeroOrMin"),yc(e,"zeroOrMin","x2"));if(sn(s)){const n=c.get("type");if(Un(s.bin)&&!a&&!Tr(n))return gc(s,void 0,Y,e.scaleName("x"),Object(C.getFirstDefined)(i.binSpacing,t.bar.binSpacing),c.get("reverse"));if(n===hr.BAND)return hc(s,"x",e)}return pc("x",e,Object.assign({},nc(r)),of(i,u,c,t))}(e),function(e){const{config:t,encoding:n,height:i,markDef:r}=e,o=r.orient,a=n.size,s=n.y,l=n.y2,u=e.scaleName(G),c=e.getScaleComponent(G);if(sn(s)&&Wn(s.bin))return gc(s,l,G,u,Object(C.getFirstDefined)(r.binSpacing,t.bar.binSpacing),c.get("reverse"));if("vertical"===o||l)return Object.assign({},mc("y",e,"zeroOrMin"),yc(e,"zeroOrMin","y2"));if(sn(s)){const n=c.get("type");if(Un(s.bin)&&!a&&!Tr(n))return gc(s,void 0,G,e.scaleName("y"),Object(C.getFirstDefined)(r.binSpacing,t.bar.binSpacing),c.get("reverse"));if(n===hr.BAND)return hc(s,"y",e)}return pc("y",e,nc(i),of(r,u,c,t))}(e))},circle:{vgMark:"symbol",encodeEntry:e=>af(e,"circle")},geoshape:{vgMark:"shape",encodeEntry:e=>Object.assign({},ac(e,{size:"ignore",orient:"ignore"})),postEncodingTransform:e=>{const{encoding:t}=e,n=t.shape;return[Object.assign({type:"geoshape",projection:e.projectionName()},n&&sn(n)&&n.type===Qt?{field:gn(n,{expr:"datum"})}:{})]}},line:{vgMark:"line",encodeEntry:e=>{const{width:t,height:n}=e;return Object.assign({},ac(e,{size:"ignore",orient:"ignore"}),mc("x",e,nc(t)),mc("y",e,nc(n)),cc("size",e,{vgChannel:"strokeWidth"}),uc(e))}},point:{vgMark:"symbol",encodeEntry:e=>af(e)},rect:{vgMark:"rect",encodeEntry:e=>Object.assign({},ac(e,{size:"ignore",orient:"ignore"}),function(e){const t=e.encoding.x,n=e.encoding.x2,i=e.getScaleComponent(Y),r=i?i.get("type"):void 0,o=e.scaleName(Y);if(sn(t)&&(Un(t.bin)||Wn(t.bin)))return gc(t,n,Y,o,0,i.get("reverse"));if(sn(t)&&i&&Tr(r)){if(r===hr.BAND)return hc(t,"x",e);throw new Error(ft.scaleTypeNotWorkWithMark(ti,r))}return Object.assign({},mc("x",e,"zeroOrMax"),yc(e,"zeroOrMin","x2"))}(e),function(e){const t=e.encoding.y,n=e.encoding.y2,i=e.getScaleComponent(G),r=i?i.get("type"):void 0,o=e.scaleName(G);if(sn(t)&&(Un(t.bin)||Wn(t.bin)))return gc(t,n,G,o,0,i.get("reverse"));if(sn(t)&&i&&Tr(r)){if(r===hr.BAND)return hc(t,"y",e);throw new Error(ft.scaleTypeNotWorkWithMark(ti,r))}return Object.assign({},mc("y",e,"zeroOrMax"),yc(e,"zeroOrMin","y2"))}(e))},rule:{vgMark:"rule",encodeEntry:e=>{const{markDef:t,width:n,height:i}=e,r=t.orient;return e.encoding.x||e.encoding.y||e.encoding.latitude||e.encoding.longitude?Object.assign({},ac(e,{size:"ignore",orient:"ignore"}),mc("x",e,"horizontal"===r?"zeroOrMin":nc(n)),mc("y",e,"vertical"===r?"zeroOrMin":nc(i)),"vertical"!==r?yc(e,"zeroOrMax","x2"):{},"horizontal"!==r?yc(e,"zeroOrMax","y2"):{},cc("size",e,{vgChannel:"strokeWidth",defaultValue:t.size})):{}}},square:{vgMark:"symbol",encodeEntry:e=>af(e,"square")},text:{vgMark:"text",encodeEntry:e=>{const{config:t,encoding:n,width:i,height:r,markDef:o}=e,a=Object(C.getFirstDefined)(o.fontSize,o.size,Ea("fontSize",o,t.style),Ea("size",o,t.style),t[o.type].fontSize,t[o.type].size);return Object.assign({},ac(e,{size:"ignore",orient:"ignore"}),mc("x",e,nc(i)),mc("y",e,nc(r)),fc(e),cc("size",e,{defaultValue:a,vgChannel:"fontSize"}),function(e,t){if(void 0!==t)return{[e]:{value:t}}}("align",function(e,t,n){if(void 0===(e.align||ja("align",e,n)))return"center";return}(e.markDef,0,t)))}},tick:{vgMark:"rect",encodeEntry:e=>{const{config:t,markDef:n,width:i,height:r}=e,o=n.orient,a="horizontal"===o?"width":"height",s="horizontal"===o?"height":"width";return Object.assign({},ac(e,{size:"ignore",orient:"ignore"}),mc("x",e,nc(i),"xc"),mc("y",e,nc(r),"yc"),cc("size",e,{defaultValue:sf(e),vgChannel:a}),{[s]:{value:Object(C.getFirstDefined)(n.thickness,t.tick.thickness)}})}},trail:{vgMark:"trail",encodeEntry:e=>{const{width:t,height:n}=e;return Object.assign({},ac(e,{size:"include",orient:"ignore"}),mc("x",e,nc(t)),mc("y",e,nc(n)),cc("size",e),uc(e))}}};function uf(e){return Object(C.contains)([Xn,Gn,ei],e.mark)?function(e){const t=ff(e.mark,e.encoding),n=df(e,{fromPrefix:t.length>0?cf:""});return t.length>0?[{name:e.getName("pathgroup"),type:"group",from:{facet:{name:cf+e.requestDataName(fo),data:e.requestDataName(fo),groupby:t}},encode:{update:{width:{field:{group:"width"}},height:{field:{group:"height"}}}},marks:n}]:n}(e):df(e)}const cf="faceted_path_";function df(e,t={fromPrefix:""}){const n=e.mark,i=Object(C.getFirstDefined)(e.markDef.clip,function(e){const t=e.getScaleComponent("x"),n=e.getScaleComponent("y");return!!(t&&t.get("domainRaw")||n&&n.get("domainRaw"))}(e)),r=Fa(e.markDef),o=e.encoding.key,a=function(e){const{encoding:t,stack:n,mark:i,markDef:r}=e,o=t.order;if(Object(O.e)(o)||!cn(o)){if((Object(O.e)(o)||sn(o))&&!n)return Ia(o,{expr:"datum"});if(li(i)){const n=t["horizontal"===r.orient?"y":"x"];if(sn(n)){const t=n.sort;return{field:Ro(t)?gn({aggregate:Ai(e.encoding)?t.op:void 0,field:t.field},{expr:"datum"}):gn(n,{binSuffix:e.stack&&e.stack.impute?"mid":void 0,expr:"datum"}),order:"descending"}}}}}(e),s=lf[n].postEncodingTransform?lf[n].postEncodingTransform(e):null;return[Object.assign({name:e.getName("marks"),type:lf[n].vgMark},i?{clip:!0}:{},r?{style:r}:{},o?{key:{field:o.field}}:{},a?{sort:a}:{},{from:{data:t.fromPrefix+e.requestDataName(fo)},encode:{update:lf[n].encodeEntry(e)}},s?{transform:s}:{})]}function ff(e,t){return Object(C.keys)(t).reduce((n,i)=>{switch(i){case"x":case"y":case"order":case"href":case"x2":case"y2":case"latitude":case"longitude":case"latitude2":case"longitude2":case"text":case"shape":case"tooltip":return n;case"detail":case"key":const r=t[i];return(Object(O.e)(r)||sn(r))&&(Object(O.e)(r)?r:[r]).forEach(e=>{e.aggregate||n.push(gn(e,{}))}),n;case"size":if("trail"===e)return n;case"color":case"fill":case"stroke":case"opacity":case"fillOpacity":case"strokeOpacity":case"strokeWidth":const o=jn(t[i]);return o&&!o.aggregate&&n.push(gn(o,{})),n;default:throw new Error(`Bug: Channel ${i} unimplemented for line mark`)}},[])}class hf extends Ua{constructor(e,t){super(e),this.transform=t}clone(){return new hf(null,Object(C.duplicate)(this.transform))}producedFields(){return new Set([this.transform.impute])}processSequence(e){const{start:t=0,stop:n,step:i}=e;return{signal:`sequence(${[t,n,...i?[i]:[]].join(",")})`}}static makeFromTransform(e,t){return new hf(e,t)}static makeFromEncoding(e,t){const n=t.encoding,i=n.x,r=n.y;if(sn(i)&&sn(r)){const o=i.impute?i:r.impute?r:void 0;if(void 0===o)return;const a=i.impute?r:r.impute?i:void 0,{method:s,value:l,frame:u,keyvals:c}=o.impute,d=ff(t.mark,n);return new hf(e,Object.assign({impute:o.field,key:a.field},s?{method:s}:{},void 0!==l?{value:l}:{},u?{frame:u}:{},void 0!==c?{keyvals:c}:{},d.length?{groupby:d}:{}))}return null}hash(){return`Impute ${Object(C.hash)(this.transform)}`}assemble(){const{impute:e,key:t,keyvals:n,method:i,groupby:r,value:o,frame:a=[null,null]}=this.transform,s=Object.assign({type:"impute",field:e,key:t},n?{keyvals:ia(n)?this.processSequence(n):n}:{},{method:"value"},r?{groupby:r}:{},{value:null});let l;if(i&&"value"!==i){l=[Object.assign({type:"window",as:[`imputed_${e}_value`],ops:[i],fields:[e],frame:a,ignorePeers:!1},r?{groupby:r}:{}),{type:"formula",expr:`datum.${e} === null ? datum.imputed_${e}_value : datum.${e}`,as:e}]}else{l=[{type:"formula",expr:`datum.${e} === null ? ${o} : datum.${e}`,as:e}]}return[s,...l]}}class pf extends xc{constructor(e={},t={},n=!1){super(e,t),this.explicit=e,this.implicit=t,this.parseNothing=n}clone(){const e=super.clone();return e.parseNothing=this.parseNothing,e}}class gf extends Ua{constructor(e,t,n){super(e),this.transform=t,this.secondary=n}clone(){return new gf(null,Object(C.duplicate)(this.transform),this.secondary)}static make(e,t,n,i){const r=t.component.data.sources;let o=Sf(n.from.data,r);o||(o=new Xc(n.from.data),r.push(o));const a=t.getName(`lookup_${i}`),s=new Wa(o,a,"lookup",t.component.data.outputNodeRefCounts);return t.component.data.outputNodes[a]=s,new gf(e,n,s.getSource())}producedFields(){return new Set(this.transform.from.fields||(this.transform.as instanceof Array?this.transform.as:[this.transform.as]))}hash(){return`Lookup ${Object(C.hash)({transform:this.transform,secondary:this.secondary})}`}assemble(){let e;if(this.transform.from.fields)e=Object.assign({values:this.transform.from.fields},this.transform.as?{as:this.transform.as instanceof Array?this.transform.as:[this.transform.as]}:{});else{let t=this.transform.as;Object(O.j)(t)||(dt(ft.NO_FIELDS_NEEDS_AS),t="_lookup"),e={as:[t]}}return Object.assign({type:"lookup",from:this.secondary,key:this.transform.from.key,fields:[this.transform.lookup]},e,this.transform.default?{default:this.transform.default}:{})}}class mf extends Ua{constructor(e,t){super(e),this.transform=t}clone(){return new mf(null,Object(C.duplicate)(this.transform))}hash(){return`SampleTransform ${Object(C.hash)(this.transform)}`}assemble(){return{type:"sample",size:this.transform.sample}}}function yf(e){let t=0;return function n(i,r){i instanceof Xc&&!lo(i.data)&&(e.push(r),r={name:null,source:r.name,transform:[]});if(i instanceof nd&&(i.parent instanceof Xc&&!r.source?(r.format=Object.assign({},r.format||{},{parse:i.assembleFormatParse()}),r.transform.push(...i.assembleTransforms(!0))):r.transform.push(...i.assembleTransforms())),i instanceof td)return r.name||(r.name=`data_${t++}`),!r.source||r.transform.length>0?(e.push(r),i.data=r.name):i.data=r.source,void i.assemble().forEach(t=>e.push(t));(i instanceof Kd||i instanceof zl||i instanceof nf||i instanceof tf||i instanceof ed||i instanceof gf||i instanceof od||i instanceof id||i instanceof ef||i instanceof Zd||i instanceof rf||i instanceof mf)&&r.transform.push(i.assemble()),(i instanceof Qd||i instanceof fu||i instanceof hf||i instanceof rd)&&(r.transform=r.transform.concat(i.assemble())),i instanceof Wa&&(r.source&&0===r.transform.length?i.setSource(r.source):i.parent instanceof Wa?i.setSource(r.name):(r.name||(r.name=`data_${t++}`),i.setSource(r.name),1===i.numChildren()&&(e.push(r),r={name:null,source:r.name,transform:[]})));switch(i.numChildren()){case 0:i instanceof Wa&&(!r.source||r.transform.length>0)&&e.push(r);break;case 1:n(i.children[0],r);break;default:r.name||(r.name=`data_${t++}`);let o=r.name;!r.source||r.transform.length>0?e.push(r):o=r.source,i.children.forEach(e=>{n(e,{name:null,source:o,transform:[]})})}}}function bf(e){_f(e);const t=e.component.layoutSize;t.setWithExplicit("width",xf(e,"width")),t.setWithExplicit("height",xf(e,"height"))}const vf=bf;function _f(e){for(const t of e.children)t.parseLayoutSize()}function xf(e,t){const n="width"===t?"x":"y",i=e.component.resolve;let r;for(const o of e.children){const e=o.component.layoutSize.getWithExplicit(t),a=i.scale[n];if("independent"===a&&"range-step"===e.value){r=void 0;break}if(r){if("independent"===a&&r.value!==e.value){r=void 0;break}r=Oc(r,e,t,"")}else r=e}if(r){for(const n of e.children)e.renameSignal(n.getName(t),e.getName(t)),n.component.layoutSize.set(t,"merged",!1);return r}return{explicit:!1,value:void 0}}function wf(e,t){const n="width"===t?"x":"y",i=e.config,r=e.getScaleComponent(n);if(r){const e=r.get("type"),n=r.get("range");return Tr(e)&&Oa(n)?"range-step":i.view[t]}return e.hasProjection?i.view[t]:"width"===t&&"text"===e.mark?i.scale.textXRangeStep:i.scale.rangeStep||Er.rangeStep}function kf(e,t){return en(e.field)?e.field.repeat in t?Object.assign({},e,{field:t[e.field.repeat]}):void dt(ft.noSuchRepeatedValue(e.field.repeat)):e}function Df(e,t){if(void 0!==(e=kf(e,t))){if(null===e)return null;if(nn(e)&&Ro(e.sort)){const n=kf(e.sort,t);e=Object.assign({},e,n?{sort:n}:{})}return e}}function Af(e,t){if(!sn(e)){if(on(e)){const n=Df(e.condition,t);if(n)return Object.assign({},e,{condition:n});{const{condition:t}=e;return H(e,["condition"])}}return e}{const n=Df(e,t);if(n)return n;if(rn(e))return{condition:e.condition}}}function Of(e,t){const n={};for(const i in e)if(e.hasOwnProperty(i)){const r=e[i];if(Object(O.e)(r))n[i]=r.map(e=>Af(e,t)).filter(e=>e);else{const e=Af(r,t);void 0!==e&&(n[i]=e)}}return n}function Cf(e,t,n){return gn(t,Object.assign({suffix:`by_${gn(e)}`},n||{}))}class Tf extends Jd{constructor(e,t,n,i,r){super(e,t,n,r,i,e.resolve),this.type="facet",this.child=Hf(e.spec,this,this.getName("child"),void 0,i,r,!1),this.children=[this.child];const o=function(e,t){return _t(e)?Of(e,t):Df(e,t)}(e.facet,i);this.facet=this.initFacet(o);const{resolve:a}=this.component;_t(o)||("shared"!==a.axis.x&&"shared"!==a.axis.y||dt(ft.FACET_1D_CANNOT_SHARE_AXIS),a.axis={x:"independent",y:"independent"})}initFacet(e){return _t(e)?Ei(e,(e,t,n)=>Object(C.contains)([ne,ie],n)?void 0===t.field?(dt(ft.emptyFieldDef(t,n)),e):(e[n]=En(t,n),e):(dt(ft.incompatibleChannel(n,"facet")),e),{}):{facet:En(e,"facet")}}channelHasField(e){return!!this.facet[e]}fieldDef(e){return this.facet[e]}parseData(){this.component.data=Ff(this),this.child.parseData()}parseLayoutSize(){_f(this)}parseSelection(){this.child.parseSelection(),this.component.selection=this.child.component.selection}parseMarkGroup(){this.child.parseMarkGroup()}parseAxisAndHeader(){this.child.parseAxisAndHeader();for(const e of De)this.parseHeader(e);this.mergeChildAxis("x"),this.mergeChildAxis("y")}parseHeader(e){if(this.channelHasField(e)){const t=this.facet[e];let n=An(t,this.config,{allowDisabling:!0});this.child.component.layoutHeaders[e].title&&(n+=" / "+this.child.component.layoutHeaders[e].title,this.child.component.layoutHeaders[e].title=null),this.component.layoutHeaders[e]={title:n,facetFieldDef:t,header:"facet"===e?[]:[this.makeHeaderComponent(e,!0)]}}}makeHeaderComponent(e,t){const n="row"===e?"height":"width";return{labels:t,sizeSignal:this.child.component.layoutSize.get(n)?this.child.getSizeSignalRef(n):void 0,axes:[]}}mergeChildAxis(e){const{child:t}=this;if(t.component.axes[e]){const{layoutHeaders:i,resolve:r}=this.component;if(r.axis[e]=_c(r,e),"shared"===r.axis[e]){const r="x"===e?"column":"row",o=i[r];for(const i of t.component.axes[e]){const e="top"===(n=i.get("orient"))||"left"===n?"header":"footer";o[e]=o[e]||[this.makeHeaderComponent(r,!1)];const t=Sa(i,"main",this.config,{header:!0});o[e][0].axes.push(t),i.mainExtracted=!0}}}var n}assembleSelectionTopLevelSignals(e){return this.child.assembleSelectionTopLevelSignals(e)}assembleSelectionSignals(){return this.child.assembleSelectionSignals(),[]}assembleSelectionData(e){return this.child.assembleSelectionData(e)}getHeaderLayoutMixins(){const e={};return["row","column"].forEach(t=>{["header","footer"].forEach(n=>{const i=this.component.layoutHeaders[t],r=i[n];if(r&&r[0]){const r="row"===t?"height":"width",o="header"===n?"headerBand":"footerBand";this.child.component.layoutSize.get(r)||(e[o]=e[o]||{},e[o][t]=.5),i.title&&(e.offset=e.offset||{},e.offset["row"===t?"rowTitle":"columnTitle"]=10)}})}),e}assembleDefaultLayout(){const{column:e,row:t}=this.facet,n=e?this.columnDistinctSignal():t?1:void 0;let i="all";return(t||"independent"!==this.component.resolve.scale.x)&&(e||"independent"!==this.component.resolve.scale.y)||(i="none"),Object.assign({},this.getHeaderLayoutMixins(),n?{columns:n}:{},{bounds:"full",align:i})}assembleLayoutSignals(){return this.child.assembleLayoutSignals()}columnDistinctSignal(){if(!(this.parent&&this.parent instanceof Tf)){return{signal:`length(data('${this.getName("column_domain")}'))`}}}assembleGroup(e){return this.parent&&this.parent instanceof Tf?Object.assign({},this.channelHasField("column")?{encode:{update:{columns:{field:gn(this.facet.column,{prefix:"distinct"})}}}}:{},super.assembleGroup(e)):super.assembleGroup(e)}getCardinalityAggregateForChild(){const e=[],t=[],n=[];if(this.child instanceof Tf){if(this.child.channelHasField("column")){const i=gn(this.child.facet.column);e.push(i),t.push("distinct"),n.push(`distinct_${i}`)}}else for(const i of["x","y"]){const r=this.child.component.scales[i];if(r&&!r.merged){const o=r.get("type"),a=r.get("range");if(Tr(o)&&Oa(a)){const r=Dd(Ad(this.child,i));r?(e.push(r),t.push("distinct"),n.push(`distinct_${r}`)):dt("Unknown field for ${channel}.  Cannot calculate view size.")}}}return{fields:e,ops:t,as:n}}assembleFacet(){const{name:e,data:t}=this.component.data.facetRoot,{row:n,column:i}=this.facet,{fields:r,ops:o,as:a}=this.getCardinalityAggregateForChild(),s=[];for(const e of De){const t=this.facet[e];if(t){s.push(gn(t));const{sort:l}=t;if(Ro(l)){const{field:e,op:s=Lo}=l,u=Cf(t,l);n&&i?(r.push(u),o.push("max"),a.push(u)):(r.push(e),o.push(s),a.push(u))}else if(Object(O.e)(l)){const n=Nl(t,e);r.push(n),o.push("max"),a.push(n)}}}const l=!!n&&!!i;return Object.assign({name:e,data:t,groupby:s},l||r.length?{aggregate:Object.assign({},l?{cross:l}:{},r.length?{fields:r,ops:o,as:a}:{})}:{})}facetSortFields(e){const{facet:t}=this,n=t[e];return n?Ro(n.sort)?[Cf(n,n.sort,{expr:"datum"})]:Object(O.e)(n.sort)?[Nl(n,e,{expr:"datum"})]:[gn(n,{expr:"datum"})]:[]}facetSortOrder(e){const{facet:t}=this,n=t[e];if(n){const{sort:e}=n;return[(Ro(e)?e.order:!Object(O.e)(e)&&e)||"ascending"]}return[]}assembleMarks(){const{child:e,facet:t,config:n}=this,i=function(e){const t=[],n=yf(t);return e.children.forEach(t=>n(t,{source:e.name,name:null,transform:[]})),t}(this.component.data.facetRoot),r=e.assembleGroupEncodeEntry(!1),o=t.facet&&Rl(t.facet,"facet",n)||e.assembleTitle(),a=e.assembleGroupStyle();return[Object.assign({name:this.getName("cell"),type:"group"},o?{title:o}:{},a?{style:a}:{},{from:{facet:this.assembleFacet()},sort:{field:Object(C.flatten)(De.map(e=>this.facetSortFields(e))),order:Object(C.flatten)(De.map(e=>this.facetSortOrder(e)))}},i.length>0?{data:i}:{},r?{encode:{update:r}}:{},e.assembleGroup(function(e,t){if(e.component.selection&&Object(C.keys)(e.component.selection).length){const n=Object(O.m)(e.getName("cell"));t.unshift({name:"facet",value:{},on:[{events:Ql("mousemove","scope"),update:`isTuple(facet) ? facet : group(${n}).datum`}]})}return t}(this,[])))]}getMapping(){return this.facet}}function Sf(e,t){for(const n of t){const t=n.data;if(uo(e)&&uo(t)){const i=e.values,r=t.values;if(Object(C.deepEqual)(i,r))return n}else if(lo(e)&&lo(t)){if(e.url===t.url)return n}else if(co(e)&&e.name===n.dataName)return n}return null}function Ff(e){let t=function(e,t){if(e.data||!e.parent){const n=Sf(e.data,t);if(n)return n.data.format=Object(C.mergeDeep)({},e.data.format,n.data.format),n;{const n=new Xc(e.data);return t.push(n),n}}return e.parent.component.data.facetRoot?e.parent.component.data.facetRoot:e.parent.component.data.main}(e,e.component.data.sources);const{outputNodes:n,outputNodeRefCounts:i}=e.component.data,r=e.parent?e.parent.component.data.ancestorParse.clone():new pf;e.data&&e.data.format&&null===e.data.format.parse&&(r.parseNothing=!0),t=nd.makeExplicit(t,e,r)||t,Uu(e)&&(Ud(e)||Yd(e))&&(t=new rf(t));const o=e.parent&&Yd(e.parent);(Ud(e)||Wd(e))&&o&&(t=Qd.makeFromEncoding(t,e)||t),e.transforms.length>0&&(t=function(e,t,n){let i=0;for(const r of t.transforms){let o,a=void 0;if(ua(r))o=e=new zl(e,r),a="derived";else if(na(r))o=e=nd.makeImplicitFromFilterTransform(e,r,n)||e,e=new Kd(e,t,r.filter);else if(ca(r))o=e=Qd.makeFromTransform(e,r,t),a="number";else if(fa(r))o=e=fu.makeFromTransform(e,r),a="date",void 0===n.getWithExplicit(r.field).value&&(e=new nd(e,{[r.field]:a}),n.set(r.field,a,!1));else if(ha(r))o=e=ed.makeFromTransform(e,r),a="number",Uu(t)&&(e=new rf(e));else if(ra(r))o=e=gf.make(e,t,r,i++),a="derived";else if(aa(r))o=e=new od(e,r),a="number";else if(sa(r))o=e=new id(e,r),a="number";else if(pa(r))o=e=rd.makeFromTransform(e,r),a="derived";else if(ga(r))o=e=new ef(e,r),a="derived";else if(la(r))o=e=new Zd(e,r),a="derived";else if(oa(r))e=new mf(e,r);else{if(!da(r)){dt(ft.invalidTransformIgnored(r));continue}o=e=hf.makeFromTransform(e,r),a="derived"}if(o&&void 0!==a)for(const e of o.producedFields())n.set(e,a,!1)}return e}(t,e,r)),t=nd.makeImplicitFromEncoding(t,e,r)||t,Ud(e)&&(t=tf.parseAll(t,e),t=nf.parseAll(t,e)),(Ud(e)||Wd(e))&&(o||(t=Qd.makeFromEncoding(t,e)||t),t=fu.makeFromEncoding(t,e)||t,t=zl.parseAllForSortIndex(t,e));const a=e.getName(ho),s=new Wa(t,a,ho,i);if(n[a]=s,t=s,Ud(e)){const n=ed.makeFromEncoding(t,e);n&&(t=n,Uu(e)&&(t=new rf(t))),t=hf.makeFromEncoding(t,e)||t,t=rd.makeFromEncoding(t,e)||t}const l=e.getName(fo),u=new Wa(t,l,fo,i);n[l]=u,t=u;let c=null;if(Wd(e)){const i=e.getName("facet");t=function(e,t){const{row:n,column:i}=t;if(n&&i){let t=null;for(const r of[n,i])if(Ro(r.sort)){const{field:n,op:i=Lo}=r.sort;e=t=new id(e,{joinaggregate:[{op:i,field:n,as:Cf(r,r.sort,{forAs:!0})}],groupby:[gn(r)]})}return t}return null}(t=zl.parseAllForSortIndex(t,e),e.facet)||t,c=new td(t,e,i,u.getSource()),n[i]=c,t=c}return Object.assign({},e.component.data,{outputNodes:n,outputNodeRefCounts:i,raw:s,main:u,facetRoot:c,ancestorParse:r})}class jf extends Gd{constructor(e,t,n,i,r,o){super(e,t,n,i,r,o)}parseData(){this.component.data=Ff(this),this.children.forEach(e=>{e.parseData()})}parseSelection(){this.component.selection={};for(const e of this.children)e.parseSelection(),Object(C.keys)(e.component.selection).forEach(t=>{this.component.selection[t]=e.component.selection[t]})}parseMarkGroup(){for(const e of this.children)e.parseMarkGroup()}parseAxisAndHeader(){for(const e of this.children)e.parseAxisAndHeader()}assembleSelectionTopLevelSignals(e){return this.children.reduce((e,t)=>t.assembleSelectionTopLevelSignals(e),e)}assembleSelectionSignals(){return this.children.forEach(e=>e.assembleSelectionSignals()),[]}assembleLayoutSignals(){return this.children.reduce((e,t)=>[...e,...t.assembleLayoutSignals()],Vl(this))}assembleSelectionData(e){return this.children.reduce((e,t)=>t.assembleSelectionData(e),e)}assembleMarks(){return this.children.map(e=>{const t=e.assembleTitle(),n=e.assembleGroupStyle(),i=e.assembleGroupEncodeEntry(!1);return Object.assign({type:"group",name:e.getName("group")},t?{title:t}:{},n?{style:n}:{},i?{encode:{update:i}}:{},e.assembleGroup())})}}class Ef extends jf{constructor(e,t,n,i,r){super(e,t,n,r,i,e.resolve),this.type="concat",e.resolve&&e.resolve.axis&&("shared"===e.resolve.axis.x||"shared"===e.resolve.axis.y)&&dt(ft.CONCAT_CANNOT_SHARE_AXIS),this.isVConcat=_o(e),this.children=this.getChildren(e).map((e,t)=>Hf(e,this,this.getName("concat_"+t),void 0,i,r,!1))}getChildren(e){return _o(e)?e.vconcat:xo(e)?e.hconcat:e.concat}parseLayoutSize(){!function(e){_f(e);const t=e.component.layoutSize,n=e.isVConcat?"width":"height";t.setWithExplicit(n,xf(e,n))}(this)}parseAxisGroup(){return null}assembleDefaultLayout(){return Object.assign({},this.isVConcat?{columns:1}:{},{bounds:"full",align:"each"})}}class $f extends xc{constructor(e={},t={},n=!1){super(),this.explicit=e,this.implicit=t,this.mainExtracted=n}clone(){return new $f(Object(C.duplicate)(this.explicit),Object(C.duplicate)(this.implicit),this.mainExtracted)}hasAxisPart(e){return"axis"===e||("grid"===e||"title"===e?!!this.get(e):!(!1===(t=this.get(e))||null===t));var t}}function Mf(e,t,n,i="",r){const o=("band"===r?["axisBand"]:[]).concat(["x"===n?"axisX":"axisY","axis"+i.substr(0,1).toUpperCase()+i.substr(1),"axis"]);for(const n of o)if(t[n]&&void 0!==t[n][e])return t[n][e]}function zf(e){switch(e){case Y:return"bottom";case G:return"left"}throw new Error(ft.INVALID_CHANNEL_FOR_AXIS)}const Nf={bottom:"top",top:"bottom",left:"right",right:"left"};function Bf(e,t){if(!e)return t.map(e=>e.clone());{if(e.length!==t.length)return;const n=e.length;for(let i=0;i<n;i++){const n=e[i],r=t[i];if(!!n!=!!r)return;if(n&&r){const t=n.getWithExplicit("orient"),o=r.getWithExplicit("orient");if(t.explicit&&o.explicit&&t.value!==o.value)return;e[i]=Pf(n,r)}}}return e}function Pf(e,t){for(const n of U){const i=Oc(e.getWithExplicit(n),t.getWithExplicit(n),n,"axis",(e,t)=>{switch(n){case"title":return Ra(e,t);case"gridScale":return{explicit:e.explicit,value:Object(C.getFirstDefined)(e.value,t.value)}}return Ac(e,t,n,"axis")});e.setWithExplicit(n,i)}return e}function If(e,t){const n="x"===t?"x2":"y2",i=e.fieldDef(t),r=e.fieldDef(n),o=i?i.title:void 0,a=r?r.title:void 0;return o&&a?qa(o,a):o||(a||(void 0!==o?o:void 0!==a?a:void 0))}function Lf(e,t){const n=t.axis(e),i=new $f;U.forEach(r=>{const o=function(e,t,n,i){const r=i.fieldDef(n),o=function(e,t,n,i){if(void 0!==t.labelAngle)return(t.labelAngle%360+360)%360;{const t=Mf("labelAngle",e.config,n,zf(n),e.getScaleComponent(n).get("type"));return void 0!==t?(t%360+360)%360:n===Y&&Object(C.contains)([Xt,Gt],i.type)?270:void 0}}(i,t,n,r);switch(e){case"scale":return i.scaleName(n);case"gridScale":return function(e,t){const n="x"===t?"y":"x";if(e.getScaleComponent(n))return e.scaleName(n)}(i,n);case"format":return Ma(r,t.format,i.config);case"grid":if(Wn(i.fieldDef(n).bin))return!1;{const e=i.getScaleComponent(n).get("type");return Object(C.getFirstDefined)(t.grid,function(e,t){return!Tr(e)&&!Un(t.bin)}(e,r))}case"labelAlign":return Object(C.getFirstDefined)(t.labelAlign,function(e,t){if(void 0!==e)return e=(e%360+360)%360,"top"===t||"bottom"===t?e%180==0?"center":0<e&&e<180?"top"===t?"right":"left":"top"===t?"left":"right":(e+90)%180==0?"center":90<=e&&e<270?"left"===t?"left":"right":"left"===t?"right":"left"}(o,zf(n)));case"labelAngle":return o;case"labelBaseline":return Object(C.getFirstDefined)(t.labelBaseline,function(e,t){if(void 0!==e)return"top"===t||"bottom"===t?e<=45||315<=e?"top"===t?"bottom":"top":135<=e&&e<=225?"top"===t?"top":"bottom":"middle":e<=45||315<=e||135<=e&&e<=225?"middle":45<=e&&e<=135?"left"===t?"top":"bottom":"left"===t?"bottom":"top"}(o,zf(n)));case"labelFlush":return Object(C.getFirstDefined)(t.labelFlush,function(e,t){if("x"===t&&Object(C.contains)(["quantitative","temporal"],e.type))return!0}(r,n));case"labelOverlap":{const e=i.getScaleComponent(n).get("type");return Object(C.getFirstDefined)(t.labelOverlap,function(e,t){if("nominal"!==e.type)return"log"!==t||"greedy"}(r,e))}case"orient":return Object(C.getFirstDefined)(t.orient,zf(n));case"tickCount":{const e=i.getScaleComponent(n).get("type"),o=i.scaleName(n),a="x"===n?"width":"y"===n?"height":void 0,s=a?i.getSizeSignalRef(a):void 0;return Object(C.getFirstDefined)(t.tickCount,function({fieldDef:e,scaleType:t,size:n,scaleName:i,specifiedAxis:r={}}){if(!Tr(t)&&"log"!==t&&!Object(C.contains)(["month","hours","day","quarter"],e.timeUnit))return Un(e.bin)?{signal:`ceil(${n.signal}/10)`}:{signal:`ceil(${n.signal}/40)`}}({fieldDef:r,scaleType:e,size:s,scaleName:o,specifiedAxis:t}))}case"title":const a="x"===n?"x2":"y2",s=i.fieldDef(a);return Object(C.getFirstDefined)(t.title,If(i,n),La([tn(r)],s?[tn(s)]:[]));case"values":return function(e,t,n,i){const r=e.values;if(r)return Ln(n,r)}(t,0,r)}return R(e)?t[e]:void 0}(r,n,e,t);if(void 0!==o){const a=function(e,t,n,i,r){switch(t){case"values":return!!n.values;case"encode":return!!n.encoding||!!n.labelAngle;case"title":if(e===If(i,r))return!0}return e===n[t]}(o,r,n,t,e),s=Mf(r,t.config,e,i.get("orient"),t.getScaleComponent(e).get("type"));a||void 0===s?i.set(r,o,a):"grid"===r&&s&&i.set(r,s,!1)}});const r=n.encoding||{},o=B.reduce((n,o)=>{if(!i.hasAxisPart(o))return n;const a=bc(r[o]||{},t),s="labels"===o?function(e,t,n,i){const r=e.fieldDef(t)||("x"===t?e.fieldDef("x2"):"y"===t?e.fieldDef("y2"):void 0),o=e.axis(t),a=e.config;let s={};if(Pn(r)){const n=e.getScaleComponent(t).get("type")===hr.UTC,i=Pa("datum.value",r.timeUnit,o.format,a.axis.shortTimeLabels,null,n);i&&(s.text={signal:i})}return s=Object.assign({},s,n),0===Object(C.keys)(s).length?void 0:s}(t,e,a,i.get("orient")):a;return void 0!==s&&Object(C.keys)(s).length>0&&(n[o]={update:s}),n},{});return Object(C.keys)(o).length>0&&i.set("encode",o,!!n.encoding||void 0!==n.labelAngle),i}function qf(e,t,n){const i=ci(e)?Object.assign({},e):{type:e},r=i.orient||ja("orient",i,n);return i.orient=function(e,t,n){switch(e){case Qn:case ri:case oi:case Kn:case ti:return}const{x:i,y:r,x2:o,y2:a}=t;switch(e){case Jn:if(sn(i)&&Wn(i.bin))return"vertical";if(sn(r)&&Wn(r.bin))return"horizontal";if(a||o){if(n)return n;if(!o&&sn(i)&&i.type===Yt&&!Un(i.bin))return"horizontal";if(!a&&sn(r)&&r.type===Yt&&!Un(r.bin))return"vertical"}case ni:if(o&&a)return;case Gn:if(a)return sn(r)&&Wn(r.bin)?"horizontal":"vertical";if(o)return sn(i)&&Wn(i.bin)?"vertical":"horizontal";if(e===ni){if(t.x&&!t.y)return"vertical";if(t.y&&!t.x)return"horizontal"}case Xn:case Zn:const s=sn(t.x)&&yn(t.x),l=sn(t.y)&&yn(t.y);if(s&&!l)return"tick"!==e?"horizontal":"vertical";if(!s&&l)return"tick"!==e?"vertical":"horizontal";if(s&&l){const i=t.x,r=t.y,o=i.type===Jt,a=r.type===Jt;return o&&!a?"tick"!==e?"vertical":"horizontal":!o&&a?"tick"!==e?"horizontal":"vertical":!i.aggregate&&r.aggregate?"tick"!==e?"vertical":"horizontal":i.aggregate&&!r.aggregate?"tick"!==e?"horizontal":"vertical":n||"vertical"}return n||void 0}return"vertical"}(i.type,t,r),void 0!==r&&r!==i.orient&&dt(ft.orientOverridden(i.orient,r)),void 0===Object(C.getFirstDefined)(i.opacity,ja("opacity",i,n))&&(i.opacity=function(e,t){if(Object(C.contains)([Qn,Zn,ri,oi],e)&&!Ai(t))return.7;return}(i.type,t)),void 0===i.filled&&(i.filled=function(e,t){const n=ja("filled",e,t),i=e.type;return Object(C.getFirstDefined)(n,i!==Qn&&i!==Xn&&i!==ni)}(i,n)),void 0===(i.cursor||ja("cursor",i,n))&&(i.cursor=function(e,t,n){if(t.href||e.href||ja("href",e,n))return"pointer";return e.cursor}(i,t,n)),i}class Rf extends Jd{constructor(e,t,n,i={},r,o,a){super(e,t,n,o,r,void 0,e.view),this.fit=a,this.type="unit",this.specifiedScales={},this.specifiedAxes={},this.specifiedLegends={},this.specifiedProjection={},this.selection={},this.children=[],this.initSize(Object.assign({},i,e.width?{width:e.width}:{},e.height?{height:e.height}:{}));const s=ci(e.mark)?e.mark.type:e.mark,l=this.encoding=Ti(function(e,t){return Of(e,t)}(e.encoding||{},r),s);this.markDef=qf(e.mark,l,o),this.stack=So(s,l,this.config.stack),this.specifiedScales=this.initScales(s,l),this.specifiedAxes=this.initAxes(l),this.specifiedLegends=this.initLegend(l),this.specifiedProjection=e.projection,this.selection=e.selection}get hasProjection(){const{encoding:e}=this,t=this.mark===ii,n=e&&_e.some(t=>sn(e[t]));return t||n}scaleDomain(e){const t=this.specifiedScales[e];return t?t.domain:void 0}axis(e){return this.specifiedAxes[e]}legend(e){return this.specifiedLegends[e]}initScales(e,t){return rt.reduce((e,n)=>{let i,r;const o=t[n];return sn(o)?(i=o,r=o.scale):on(o)&&(i=o.condition,r=o.condition.scale),i&&(e[n]=r||{}),e},{})}initAxes(e){return[Y,G].reduce((t,n)=>{const i=e[n];if(sn(i)||n===Y&&sn(e.x2)||n===G&&sn(e.y2)){const e=sn(i)?i.axis:null;null!==e&&(t[n]=Object.assign({},e))}return t},{})}initLegend(e){return et.reduce((t,n)=>{const i=e[n];if(i){const e=sn(i)?i.legend:on(i)?i.condition.legend:null;null!==e&&!1!==e&&nt(n)&&(t[n]=Object.assign({},e))}return t},{})}parseData(){this.component.data=Ff(this)}parseLayoutSize(){!function(e){const t=e.component.layoutSize;if(!t.explicit.width){const n=wf(e,"width");t.set("width",n,!1)}if(!t.explicit.height){const n=wf(e,"height");t.set("height",n,!1)}}(this)}parseSelection(){this.component.selection=function(e,t){const n={},i=e.config.selection;t&&(t=Object(C.duplicate)(t));for(let r in t){if(!t.hasOwnProperty(r))continue;const o=t[r],a=i[o.type];for(const e in a)"encodings"===e&&o.fields||"fields"===e&&o.encodings||("mark"===e&&(o[e]=Object.assign({},a[e],o[e])),void 0!==o[e]&&!0!==o[e]||(o[e]=a[e]||o[e]));const s=n[r=Object(C.varName)(r)]=Object.assign({},o,{name:r,events:Object(O.j)(o.on)?Ql(o.on,"scope"):o.on});Eu(s,t=>{t.parse&&t.parse(e,o,s)})}return n}(this,this.selection)}parseMarkGroup(){this.component.mark=uf(this)}parseAxisAndHeader(){var e;this.component.axes=(e=this,He.reduce((t,n)=>(e.component.scales[n]&&e.axis(n)&&(t[n]=[Lf(n,e)]),t),{}))}assembleSelectionTopLevelSignals(e){return function(e,t){let n=!1;Lu(e,(i,r)=>{const o=i.name,a=Object(O.m)(o+$u);t.filter(e=>e.name===o).length||t.push({name:i.name,update:`${Bu}(${a}`+("global"===i.resolve?")":`, ${Object(O.m)(i.resolve)})`)}),n=!0,r.topLevelSignals&&(t=r.topLevelSignals(e,i,t)),Eu(i,n=>{n.topLevelSignals&&(t=n.topLevelSignals(e,i,t))})}),n&&(t.filter(e=>"unit"===e.name).length||t.unshift({name:"unit",value:{},on:[{events:"mousemove",update:"isTuple(group()) ? group() : unit"}]}));return t}(this,e)}assembleSelectionSignals(){return t=[],Lu(e=this,(n,i)=>{const r=n.name;let o=i.modifyExpr(e,n);t.push(...i.signals(e,n)),Eu(n,i=>{i.signals&&(t=i.signals(e,n,t)),i.modifyExpr&&(o=i.modifyExpr(e,n,o))}),t.push({name:r+zu,update:`modify(${Object(O.m)(n.name+$u)}, ${o})`})}),t;var e,t}assembleSelectionData(e){return function(e,t){return Lu(e,e=>{t.filter(t=>t.name===e.name+$u).length||t.push({name:e.name+$u})}),t}(this,e)}assembleLayout(){return null}assembleLayoutSignals(){return Vl(this)}assembleMarks(){let e=this.component.mark||[];return this.parent&&Yd(this.parent)||(e=Pu(this,e)),e.map(this.correctDataNames)}getMapping(){return this.encoding}toSpec(e,t){const n=Object(C.duplicate)(this.encoding);let i;return i={mark:this.markDef,encoding:n},e||(i.config=Object(C.duplicate)(this.config)),t||(i.data=Object(C.duplicate)(this.data)),i}get mark(){return this.markDef.type}channelHasField(e){return Di(this.encoding,e)}fieldDef(e){return jn(this.encoding[e])}}class Uf extends Gd{constructor(e,t,n,i,r,o,a){super(e,t,n,o,r,e.resolve,e.view),this.type="layer";const s=Object.assign({},i,e.width?{width:e.width}:{},e.height?{height:e.height}:{});this.initSize(s),this.children=e.layer.map((e,t)=>{if(wo(e))return new Uf(e,this,this.getName("layer_"+t),s,r,o,a);if(wi(e))return new Rf(e,this,this.getName("layer_"+t),s,r,o,a);throw new Error(ft.INVALID_SPEC)})}parseData(){this.component.data=Ff(this);for(const e of this.children)e.parseData()}parseLayoutSize(){bf(this)}parseSelection(){this.component.selection={};for(const e of this.children)e.parseSelection(),Object(C.keys)(e.component.selection).forEach(t=>{this.component.selection[t]=e.component.selection[t]})}parseMarkGroup(){for(const e of this.children)e.parseMarkGroup()}parseAxisAndHeader(){!function(e){const{axes:t,resolve:n}=e.component,i={top:0,bottom:0,right:0,left:0};for(const i of e.children){i.parseAxisAndHeader();for(const r of Object(C.keys)(i.component.axes))n.axis[r]=_c(e.component.resolve,r),"shared"===n.axis[r]&&(t[r]=Bf(t[r],i.component.axes[r]),t[r]||(n.axis[r]="independent",delete t[r]))}for(const r of[Y,G])for(const o of e.children)if(o.component.axes[r]){if("independent"===n.axis[r]){t[r]=(t[r]||[]).concat(o.component.axes[r]);for(const e of o.component.axes[r]){const{value:t,explicit:n}=e.getWithExplicit("orient");if(i[t]>0&&!n){const n=Nf[t];i[t]>i[n]&&e.set("orient",n,!1)}i[t]++}}delete o.component.axes[r]}}(this)}assembleSelectionTopLevelSignals(e){return this.children.reduce((e,t)=>t.assembleSelectionTopLevelSignals(e),e)}assembleSelectionSignals(){return this.children.reduce((e,t)=>e.concat(t.assembleSelectionSignals()),[])}assembleLayoutSignals(){return this.children.reduce((e,t)=>e.concat(t.assembleLayoutSignals()),Vl(this))}assembleSelectionData(e){return this.children.reduce((e,t)=>t.assembleSelectionData(e),e)}assembleTitle(){let e=super.assembleTitle();if(e)return e;for(const t of this.children)if(e=t.assembleTitle())return e}assembleLayout(){return null}assembleMarks(){return function(e,t){for(const n of e.children)Ud(n)&&(t=Pu(n,t));return t}(this,Object(C.flatten)(this.children.map(e=>e.assembleMarks())))}assembleLegends(){return this.children.reduce((e,t)=>e.concat(t.assembleLegends()),Uc(this))}}var Wf=n(198);class Vf extends jf{constructor(e,t,n,i,r){super(e,t,n,r,i,e.resolve),this.type="repeat",e.resolve&&e.resolve.axis&&("shared"===e.resolve.axis.x||"shared"===e.resolve.axis.y)&&dt(ft.REPEAT_CANNOT_SHARE_AXIS),this.repeat=e.repeat,this.children=this._initChildren(e,this.repeat,i,r)}_initChildren(e,t,n,i){const r=[],o=!Object(Wf.a)(t)&&t.row||[n?n.row:null],a=!Object(Wf.a)(t)&&t.column||[n?n.column:null],s=Object(Wf.a)(t)&&t||[n?n.repeat:null];for(const t of s)for(const n of o)for(const o of a){const a=(t?`__repeat_repeat_${t}`:"")+(n?`__repeat_row_${n}`:"")+(o?`__repeat_column_${o}`:""),s={repeat:t,row:n,column:o};r.push(Hf(e.spec,this,this.getName("child"+a),void 0,s,i,!1))}return r}parseLayoutSize(){vf(this)}assembleDefaultLayout(){const{repeat:e}=this,t=Object(Wf.a)(e)?void 0:e.column?e.column.length:1;return Object.assign({},t?{columns:t}:{},{bounds:"full",align:"all"})}}function Hf(e,t,n,i,r,o,a){if(xt(e))return new Tf(e,t,n,r,o);if(wo(e))return new Uf(e,t,n,i,r,o,a);if(wi(e))return new Rf(e,t,n,i,r,o,a);if(ko(e))return new Vf(e,t,n,r,o);if(bo(e))return new Ef(e,t,n,r,o);throw new Error(ft.INVALID_SPEC)}function Yf(e,t={}){var n;t.logger&&(n=t.logger,ut=n),t.fieldTitle&&kn(t.fieldTitle);try{const n=no(Object(C.mergeDeep)({},t.config,e.config)),i=Po(e,n),r=function(e,t,n=!0){const i=Object.assign({type:"pad"},_a(t),_a(e));return"fit"===i.type&&(n||(dt(ft.FIT_NON_SINGLE),i.type="pad")),i}(e.autosize,n.autosize,wo(i)||wi(i)),o=Hf(i,null,"",void 0,void 0,n,"fit"===r.type);return o.parse(),function(e){Jc(e.sources);let t=0,n=0;for(let n=0;n<gd&&vd(e);n++)t++;e.sources.map(cd);for(let t=0;t<gd&&vd(e);t++)n++;Jc(e.sources),Math.max(t,n)===gd&&dt(`Maximum optimization runs(${gd}) reached.`)}(o.component.data),function(e,t,n={},i){const r=e.config?ao(e.config):void 0,o=[].concat(e.assembleSelectionData([]),function(e,t){const n=[],i=yf(n);let r=0;e.sources.forEach(e=>{e.hasName()||(e.dataName=`source_${r++}`);const t=e.assemble();i(e,t)}),n.forEach(e=>{0===e.transform.length&&delete e.transform});let o=0;for(let e=0;e<n.length;e++){const t=n[e];0!==(t.transform||[]).length||t.source||n.splice(o++,0,n.splice(e,1)[0])}for(const t of n)for(const n of t.transform||[])"lookup"===n.type&&(n.from=e.outputNodes[n.from].getSource());for(const e of n)e.name in t&&(e.values=t[e.name]);return n}(e.component.data,n)),a=e.assembleProjections(),s=e.assembleTitle(),l=e.assembleGroupStyle(),u=e.assembleGroupEncodeEntry(!0);let c=e.assembleLayoutSignals();return c=c.filter(e=>"width"!==e.name&&"height"!==e.name||void 0===e.value||(t[e.name]=+e.value,!1)),{spec:Object.assign({$schema:"https://vega.github.io/schema/vega/v5.json"},e.description?{description:e.description}:{},t,s?{title:s}:{},l?{style:l}:{},u?{encode:{update:u}}:{},{data:o},a.length>0?{projections:a}:{},e.assembleGroup([...c,...e.assembleSelectionTopLevelSignals([])]),r?{config:r}:{},i?{usermeta:i}:{})}}(o,function(e,t,n){return Object.assign({autosize:1===Object(C.keys)(n).length&&n.type?n.type:n},wa(t),wa(e))}(e,n,r),e.datasets,e.usermeta)}finally{t.logger&&ct(),t.fieldTitle&&Dn()}}const Gf=new class extends Do{mapUnit(e,{config:t}){if(e.encoding){const{encoding:n,transform:i}=e,{bins:r,timeUnits:o,aggregate:a,groupby:s,encoding:l}=Oi(n,t),u=[...i||[],...r,...o,...a.length?[{aggregate:a,groupby:s}]:[]];return Object.assign({},e,u.length>0?{transform:u}:{},{encoding:l})}return e}};function Jf(e,t){return Gf.map(e,{config:t})}n.d(t,"version",function(){return Xf}),n.d(t,"compile",function(){return Yf}),n.d(t,"extractTransforms",function(){return Jf}),n.d(t,"aggregate",function(){return i}),n.d(t,"axis",function(){return r}),n.d(t,"bin",function(){return c}),n.d(t,"channel",function(){return o}),n.d(t,"compositeMark",function(){return h}),n.d(t,"config",function(){return m}),n.d(t,"data",function(){return y}),n.d(t,"datetime",function(){return a}),n.d(t,"encoding",function(){return f}),n.d(t,"fieldDef",function(){return u}),n.d(t,"header",function(){return b}),n.d(t,"legend",function(){return p}),n.d(t,"mark",function(){return d}),n.d(t,"normalize",function(){return Po}),n.d(t,"scale",function(){return g}),n.d(t,"sort",function(){return _}),n.d(t,"spec",function(){return x}),n.d(t,"stack",function(){return v}),n.d(t,"timeUnit",function(){return s}),n.d(t,"transform",function(){return w}),n.d(t,"type",function(){return l}),n.d(t,"util",function(){return C}),n.d(t,"validate",function(){return k});const Xf=A.version},152:function(e,t,n){"use strict";function i(e){return!!e.or}function r(e){return!!e.and}function o(e){return!!e.not}function a(e,t){if(o(e))a(e.not,t);else if(r(e))for(const n of e.and)a(n,t);else if(i(e))for(const n of e.or)a(n,t);else t(e)}function s(e,t){return o(e)?{not:s(e.not,t)}:r(e)?{and:e.and.map(e=>s(e,t))}:i(e)?{or:e.or.map(e=>s(e,t))}:t(e)}n.d(t,"d",function(){return i}),n.d(t,"b",function(){return r}),n.d(t,"c",function(){return o}),n.d(t,"a",function(){return a}),n.d(t,"e",function(){return s})},160:function(e,t,n){"use strict";var i=function(e,t){var n;function i(){var i,r,o=n.length,a=0,s=0;for(i=0;i<o;++i)a+=(r=n[i]).x,s+=r.y;for(a=a/o-e,s=s/o-t,i=0;i<o;++i)(r=n[i]).x-=a,r.y-=s}return null==e&&(e=0),null==t&&(t=0),i.initialize=function(e){n=e},i.x=function(t){return arguments.length?(e=+t,i):e},i.y=function(e){return arguments.length?(t=+e,i):t},i};function r(e,t,n,i){if(isNaN(t)||isNaN(n))return e;var r,o,a,s,l,u,c,d,f,h=e._root,p={data:i},g=e._x0,m=e._y0,y=e._x1,b=e._y1;if(!h)return e._root=p,e;for(;h.length;)if((u=t>=(o=(g+y)/2))?g=o:y=o,(c=n>=(a=(m+b)/2))?m=a:b=a,r=h,!(h=h[d=c<<1|u]))return r[d]=p,e;if(s=+e._x.call(null,h.data),l=+e._y.call(null,h.data),t===s&&n===l)return p.next=h,r?r[d]=p:e._root=p,e;do{r=r?r[d]=new Array(4):e._root=new Array(4),(u=t>=(o=(g+y)/2))?g=o:y=o,(c=n>=(a=(m+b)/2))?m=a:b=a}while((d=c<<1|u)==(f=(l>=a)<<1|s>=o));return r[f]=h,r[d]=p,e}var o=function(e,t,n,i,r){this.node=e,this.x0=t,this.y0=n,this.x1=i,this.y1=r};function a(e){return e[0]}function s(e){return e[1]}function l(e,t,n){var i=new u(null==t?a:t,null==n?s:n,NaN,NaN,NaN,NaN);return null==e?i:i.addAll(e)}function u(e,t,n,i,r,o){this._x=e,this._y=t,this._x0=n,this._y0=i,this._x1=r,this._y1=o,this._root=void 0}function c(e){for(var t={data:e.data},n=t;e=e.next;)n=n.next={data:e.data};return t}var d=l.prototype=u.prototype;d.copy=function(){var e,t,n=new u(this._x,this._y,this._x0,this._y0,this._x1,this._y1),i=this._root;if(!i)return n;if(!i.length)return n._root=c(i),n;for(e=[{source:i,target:n._root=new Array(4)}];i=e.pop();)for(var r=0;r<4;++r)(t=i.source[r])&&(t.length?e.push({source:t,target:i.target[r]=new Array(4)}):i.target[r]=c(t));return n},d.add=function(e){var t=+this._x.call(null,e),n=+this._y.call(null,e);return r(this.cover(t,n),t,n,e)},d.addAll=function(e){var t,n,i,o,a=e.length,s=new Array(a),l=new Array(a),u=1/0,c=1/0,d=-1/0,f=-1/0;for(n=0;n<a;++n)isNaN(i=+this._x.call(null,t=e[n]))||isNaN(o=+this._y.call(null,t))||(s[n]=i,l[n]=o,i<u&&(u=i),i>d&&(d=i),o<c&&(c=o),o>f&&(f=o));if(u>d||c>f)return this;for(this.cover(u,c).cover(d,f),n=0;n<a;++n)r(this,s[n],l[n],e[n]);return this},d.cover=function(e,t){if(isNaN(e=+e)||isNaN(t=+t))return this;var n=this._x0,i=this._y0,r=this._x1,o=this._y1;if(isNaN(n))r=(n=Math.floor(e))+1,o=(i=Math.floor(t))+1;else{for(var a,s,l=r-n,u=this._root;n>e||e>=r||i>t||t>=o;)switch(s=(t<i)<<1|e<n,(a=new Array(4))[s]=u,u=a,l*=2,s){case 0:r=n+l,o=i+l;break;case 1:n=r-l,o=i+l;break;case 2:r=n+l,i=o-l;break;case 3:n=r-l,i=o-l}this._root&&this._root.length&&(this._root=u)}return this._x0=n,this._y0=i,this._x1=r,this._y1=o,this},d.data=function(){var e=[];return this.visit(function(t){if(!t.length)do{e.push(t.data)}while(t=t.next)}),e},d.extent=function(e){return arguments.length?this.cover(+e[0][0],+e[0][1]).cover(+e[1][0],+e[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},d.find=function(e,t,n){var i,r,a,s,l,u,c,d=this._x0,f=this._y0,h=this._x1,p=this._y1,g=[],m=this._root;for(m&&g.push(new o(m,d,f,h,p)),null==n?n=1/0:(d=e-n,f=t-n,h=e+n,p=t+n,n*=n);u=g.pop();)if(!(!(m=u.node)||(r=u.x0)>h||(a=u.y0)>p||(s=u.x1)<d||(l=u.y1)<f))if(m.length){var y=(r+s)/2,b=(a+l)/2;g.push(new o(m[3],y,b,s,l),new o(m[2],r,b,y,l),new o(m[1],y,a,s,b),new o(m[0],r,a,y,b)),(c=(t>=b)<<1|e>=y)&&(u=g[g.length-1],g[g.length-1]=g[g.length-1-c],g[g.length-1-c]=u)}else{var v=e-+this._x.call(null,m.data),_=t-+this._y.call(null,m.data),x=v*v+_*_;if(x<n){var w=Math.sqrt(n=x);d=e-w,f=t-w,h=e+w,p=t+w,i=m.data}}return i},d.remove=function(e){if(isNaN(o=+this._x.call(null,e))||isNaN(a=+this._y.call(null,e)))return this;var t,n,i,r,o,a,s,l,u,c,d,f,h=this._root,p=this._x0,g=this._y0,m=this._x1,y=this._y1;if(!h)return this;if(h.length)for(;;){if((u=o>=(s=(p+m)/2))?p=s:m=s,(c=a>=(l=(g+y)/2))?g=l:y=l,t=h,!(h=h[d=c<<1|u]))return this;if(!h.length)break;(t[d+1&3]||t[d+2&3]||t[d+3&3])&&(n=t,f=d)}for(;h.data!==e;)if(i=h,!(h=h.next))return this;return(r=h.next)&&delete h.next,i?(r?i.next=r:delete i.next,this):t?(r?t[d]=r:delete t[d],(h=t[0]||t[1]||t[2]||t[3])&&h===(t[3]||t[2]||t[1]||t[0])&&!h.length&&(n?n[f]=h:this._root=h),this):(this._root=r,this)},d.removeAll=function(e){for(var t=0,n=e.length;t<n;++t)this.remove(e[t]);return this},d.root=function(){return this._root},d.size=function(){var e=0;return this.visit(function(t){if(!t.length)do{++e}while(t=t.next)}),e},d.visit=function(e){var t,n,i,r,a,s,l=[],u=this._root;for(u&&l.push(new o(u,this._x0,this._y0,this._x1,this._y1));t=l.pop();)if(!e(u=t.node,i=t.x0,r=t.y0,a=t.x1,s=t.y1)&&u.length){var c=(i+a)/2,d=(r+s)/2;(n=u[3])&&l.push(new o(n,c,d,a,s)),(n=u[2])&&l.push(new o(n,i,d,c,s)),(n=u[1])&&l.push(new o(n,c,r,a,d)),(n=u[0])&&l.push(new o(n,i,r,c,d))}return this},d.visitAfter=function(e){var t,n=[],i=[];for(this._root&&n.push(new o(this._root,this._x0,this._y0,this._x1,this._y1));t=n.pop();){var r=t.node;if(r.length){var a,s=t.x0,l=t.y0,u=t.x1,c=t.y1,d=(s+u)/2,f=(l+c)/2;(a=r[0])&&n.push(new o(a,s,l,d,f)),(a=r[1])&&n.push(new o(a,d,l,u,f)),(a=r[2])&&n.push(new o(a,s,f,d,c)),(a=r[3])&&n.push(new o(a,d,f,u,c))}i.push(t)}for(;t=i.pop();)e(t.node,t.x0,t.y0,t.x1,t.y1);return this},d.x=function(e){return arguments.length?(this._x=e,this):this._x},d.y=function(e){return arguments.length?(this._y=e,this):this._y};var f=function(e){return function(){return e}},h=function(){return 1e-6*(Math.random()-.5)};function p(e){return e.x+e.vx}function g(e){return e.y+e.vy}var m=function(e){var t,n,i=1,r=1;function o(){for(var e,o,s,u,c,d,f,m=t.length,y=0;y<r;++y)for(o=l(t,p,g).visitAfter(a),e=0;e<m;++e)s=t[e],d=n[s.index],f=d*d,u=s.x+s.vx,c=s.y+s.vy,o.visit(b);function b(e,t,n,r,o){var a=e.data,l=e.r,p=d+l;if(!a)return t>u+p||r<u-p||n>c+p||o<c-p;if(a.index>s.index){var g=u-a.x-a.vx,m=c-a.y-a.vy,y=g*g+m*m;y<p*p&&(0===g&&(y+=(g=h())*g),0===m&&(y+=(m=h())*m),y=(p-(y=Math.sqrt(y)))/y*i,s.vx+=(g*=y)*(p=(l*=l)/(f+l)),s.vy+=(m*=y)*p,a.vx-=g*(p=1-p),a.vy-=m*p)}}}function a(e){if(e.data)return e.r=n[e.data.index];for(var t=e.r=0;t<4;++t)e[t]&&e[t].r>e.r&&(e.r=e[t].r)}function s(){if(t){var i,r,o=t.length;for(n=new Array(o),i=0;i<o;++i)r=t[i],n[r.index]=+e(r,i,t)}}return"function"!=typeof e&&(e=f(null==e?1:+e)),o.initialize=function(e){t=e,s()},o.iterations=function(e){return arguments.length?(r=+e,o):r},o.strength=function(e){return arguments.length?(i=+e,o):i},o.radius=function(t){return arguments.length?(e="function"==typeof t?t:f(+t),s(),o):e},o};function y(e){return e.index}function b(e,t){var n=e.get(t);if(!n)throw new Error("missing: "+t);return n}var v=function(e){var t,n,i,r,o,a=y,s=function(e){return 1/Math.min(r[e.source.index],r[e.target.index])},l=f(30),u=1;function c(i){for(var r=0,a=e.length;r<u;++r)for(var s,l,c,d,f,p,g,m=0;m<a;++m)l=(s=e[m]).source,d=(c=s.target).x+c.vx-l.x-l.vx||h(),f=c.y+c.vy-l.y-l.vy||h(),d*=p=((p=Math.sqrt(d*d+f*f))-n[m])/p*i*t[m],f*=p,c.vx-=d*(g=o[m]),c.vy-=f*g,l.vx+=d*(g=1-g),l.vy+=f*g}function d(){if(i){var s,l,u=i.length,c=e.length,d=new Map(i.map((e,t)=>[a(e,t,i),e]));for(s=0,r=new Array(u);s<c;++s)(l=e[s]).index=s,"object"!=typeof l.source&&(l.source=b(d,l.source)),"object"!=typeof l.target&&(l.target=b(d,l.target)),r[l.source.index]=(r[l.source.index]||0)+1,r[l.target.index]=(r[l.target.index]||0)+1;for(s=0,o=new Array(c);s<c;++s)l=e[s],o[s]=r[l.source.index]/(r[l.source.index]+r[l.target.index]);t=new Array(c),p(),n=new Array(c),g()}}function p(){if(i)for(var n=0,r=e.length;n<r;++n)t[n]=+s(e[n],n,e)}function g(){if(i)for(var t=0,r=e.length;t<r;++t)n[t]=+l(e[t],t,e)}return null==e&&(e=[]),c.initialize=function(e){i=e,d()},c.links=function(t){return arguments.length?(e=t,d(),c):e},c.id=function(e){return arguments.length?(a=e,c):a},c.iterations=function(e){return arguments.length?(u=+e,c):u},c.strength=function(e){return arguments.length?(s="function"==typeof e?e:f(+e),p(),c):s},c.distance=function(e){return arguments.length?(l="function"==typeof e?e:f(+e),g(),c):l},c},_={value:function(){}};function x(){for(var e,t=0,n=arguments.length,i={};t<n;++t){if(!(e=arguments[t]+"")||e in i)throw new Error("illegal type: "+e);i[e]=[]}return new w(i)}function w(e){this._=e}function k(e,t){for(var n,i=0,r=e.length;i<r;++i)if((n=e[i]).name===t)return n.value}function D(e,t,n){for(var i=0,r=e.length;i<r;++i)if(e[i].name===t){e[i]=_,e=e.slice(0,i).concat(e.slice(i+1));break}return null!=n&&e.push({name:t,value:n}),e}w.prototype=x.prototype={constructor:w,on:function(e,t){var n,i,r=this._,o=(i=r,(e+"").trim().split(/^|\s+/).map(function(e){var t="",n=e.indexOf(".");if(n>=0&&(t=e.slice(n+1),e=e.slice(0,n)),e&&!i.hasOwnProperty(e))throw new Error("unknown type: "+e);return{type:e,name:t}})),a=-1,s=o.length;if(!(arguments.length<2)){if(null!=t&&"function"!=typeof t)throw new Error("invalid callback: "+t);for(;++a<s;)if(n=(e=o[a]).type)r[n]=D(r[n],e.name,t);else if(null==t)for(n in r)r[n]=D(r[n],e.name,null);return this}for(;++a<s;)if((n=(e=o[a]).type)&&(n=k(r[n],e.name)))return n},copy:function(){var e={},t=this._;for(var n in t)e[n]=t[n].slice();return new w(e)},call:function(e,t){if((n=arguments.length-2)>0)for(var n,i,r=new Array(n),o=0;o<n;++o)r[o]=arguments[o+2];if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(o=0,n=(i=this._[e]).length;o<n;++o)i[o].value.apply(t,r)},apply:function(e,t,n){if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(var i=this._[e],r=0,o=i.length;r<o;++r)i[r].value.apply(t,n)}};var A=x,O=n(215);function C(e){return e.x}function T(e){return e.y}var S=10,F=Math.PI*(3-Math.sqrt(5)),j=function(e){var t,n=1,i=.001,r=1-Math.pow(i,1/300),o=0,a=.6,s=new Map,l=Object(O.b)(c),u=A("tick","end");function c(){d(),u.call("tick",t),n<i&&(l.stop(),u.call("end",t))}function d(i){var l,u,c=e.length;void 0===i&&(i=1);for(var d=0;d<i;++d)for(n+=(o-n)*r,s.forEach(function(e){e(n)}),l=0;l<c;++l)null==(u=e[l]).fx?u.x+=u.vx*=a:(u.x=u.fx,u.vx=0),null==u.fy?u.y+=u.vy*=a:(u.y=u.fy,u.vy=0);return t}function f(){for(var t,n=0,i=e.length;n<i;++n){if((t=e[n]).index=n,isNaN(t.fx)||(t.x=t.fx),isNaN(t.fy)||(t.y=t.fy),isNaN(t.x)||isNaN(t.y)){var r=S*Math.sqrt(n),o=n*F;t.x=r*Math.cos(o),t.y=r*Math.sin(o)}(isNaN(t.vx)||isNaN(t.vy))&&(t.vx=t.vy=0)}}function h(t){return t.initialize&&t.initialize(e),t}return null==e&&(e=[]),f(),t={tick:d,restart:function(){return l.restart(c),t},stop:function(){return l.stop(),t},nodes:function(n){return arguments.length?(e=n,f(),s.forEach(h),t):e},alpha:function(e){return arguments.length?(n=+e,t):n},alphaMin:function(e){return arguments.length?(i=+e,t):i},alphaDecay:function(e){return arguments.length?(r=+e,t):+r},alphaTarget:function(e){return arguments.length?(o=+e,t):o},velocityDecay:function(e){return arguments.length?(a=1-e,t):1-a},force:function(e,n){return arguments.length>1?(null==n?s.delete(e):s.set(e,h(n)),t):s.get(e)},find:function(t,n,i){var r,o,a,s,l,u=0,c=e.length;for(null==i?i=1/0:i*=i,u=0;u<c;++u)(a=(r=t-(s=e[u]).x)*r+(o=n-s.y)*o)<i&&(l=s,i=a);return l},on:function(e,n){return arguments.length>1?(u.on(e,n),t):u.on(e)}}},E=function(){var e,t,n,i,r=f(-30),o=1,a=1/0,s=.81;function u(i){var r,o=e.length,a=l(e,C,T).visitAfter(d);for(n=i,r=0;r<o;++r)t=e[r],a.visit(p)}function c(){if(e){var t,n,o=e.length;for(i=new Array(o),t=0;t<o;++t)n=e[t],i[n.index]=+r(n,t,e)}}function d(e){var t,n,r,o,a,s=0,l=0;if(e.length){for(r=o=a=0;a<4;++a)(t=e[a])&&(n=Math.abs(t.value))&&(s+=t.value,l+=n,r+=n*t.x,o+=n*t.y);e.x=r/l,e.y=o/l}else{(t=e).x=t.data.x,t.y=t.data.y;do{s+=i[t.data.index]}while(t=t.next)}e.value=s}function p(e,r,l,u){if(!e.value)return!0;var c=e.x-t.x,d=e.y-t.y,f=u-r,p=c*c+d*d;if(f*f/s<p)return p<a&&(0===c&&(p+=(c=h())*c),0===d&&(p+=(d=h())*d),p<o&&(p=Math.sqrt(o*p)),t.vx+=c*e.value*n/p,t.vy+=d*e.value*n/p),!0;if(!(e.length||p>=a)){(e.data!==t||e.next)&&(0===c&&(p+=(c=h())*c),0===d&&(p+=(d=h())*d),p<o&&(p=Math.sqrt(o*p)));do{e.data!==t&&(f=i[e.data.index]*n/p,t.vx+=c*f,t.vy+=d*f)}while(e=e.next)}}return u.initialize=function(t){e=t,c()},u.strength=function(e){return arguments.length?(r="function"==typeof e?e:f(+e),c(),u):r},u.distanceMin=function(e){return arguments.length?(o=e*e,u):Math.sqrt(o)},u.distanceMax=function(e){return arguments.length?(a=e*e,u):Math.sqrt(a)},u.theta=function(e){return arguments.length?(s=e*e,u):Math.sqrt(s)},u},$=function(e){var t,n,i,r=f(.1);function o(e){for(var r,o=0,a=t.length;o<a;++o)(r=t[o]).vx+=(i[o]-r.x)*n[o]*e}function a(){if(t){var o,a=t.length;for(n=new Array(a),i=new Array(a),o=0;o<a;++o)n[o]=isNaN(i[o]=+e(t[o],o,t))?0:+r(t[o],o,t)}}return"function"!=typeof e&&(e=f(null==e?0:+e)),o.initialize=function(e){t=e,a()},o.strength=function(e){return arguments.length?(r="function"==typeof e?e:f(+e),a(),o):r},o.x=function(t){return arguments.length?(e="function"==typeof t?t:f(+t),a(),o):e},o},M=function(e){var t,n,i,r=f(.1);function o(e){for(var r,o=0,a=t.length;o<a;++o)(r=t[o]).vy+=(i[o]-r.y)*n[o]*e}function a(){if(t){var o,a=t.length;for(n=new Array(a),i=new Array(a),o=0;o<a;++o)n[o]=isNaN(i[o]=+e(t[o],o,t))?0:+r(t[o],o,t)}}return"function"!=typeof e&&(e=f(null==e?0:+e)),o.initialize=function(e){t=e,a()},o.strength=function(e){return arguments.length?(r="function"==typeof e?e:f(+e),a(),o):r},o.y=function(t){return arguments.length?(e="function"==typeof t?t:f(+t),a(),o):e},o};n.d(t,"a",function(){return i}),n.d(t,"b",function(){return m}),n.d(t,"c",function(){return v}),n.d(t,"d",function(){return E}),n.d(t,"e",function(){return j}),n.d(t,"f",function(){return $}),n.d(t,"g",function(){return M})},198:function(e,t,n){"use strict";(function(e){n.d(t,"a",function(){return A});var i=n(272),r=n(234),o=n(122),a=n(61),s=n(77),l=n(119),u=n(33),c=n(69),d=n(143),f=n(90),h=n(232),p=n(82),g=n(160),m=n(108),y=n(271),b=n(74),v=n(215);function _(e,t,n){return e.fields=t||[],e.fname=n,e}function x(e){return null==e?null:e.fname}function w(e){return null==e?null:e.fields}function k(e){throw Error(e)}function D(e){var t,n,i,r=[],o=null,a=0,s=e.length,l="";function u(){r.push(l+e.substring(t,n)),l="",t=n+1}for(e+="",t=n=0;n<s;++n)if("\\"===(i=e[n]))l+=e.substring(t,n),t=++n;else if(i===o)u(),o=null,a=-1;else{if(o)continue;t===a&&'"'===i?(t=n+1,o=i):t===a&&"'"===i?(t=n+1,o=i):"."!==i||a?"["===i?(n>t&&u(),a=t=n+1):"]"===i&&(a||k("Access path missing open bracket: "+e),a>0&&u(),a=0,t=n+1):n>t?u():t=n+1}return a&&k("Access path missing closing bracket: "+e),o&&k("Access path missing closing quote: "+e),n>t&&(n++,u()),r}var A=Array.isArray;function O(e){return e===Object(e)}function C(e){return"string"==typeof e}function T(e){return A(e)?"["+e.map(T)+"]":O(e)||C(e)?JSON.stringify(e).replace("\u2028","\\u2028").replace("\u2029","\\u2029"):e}function S(e,t){var n=D(e),i="return _["+n.map(T).join("][")+"];";return _(Function("_",i),[e=1===n.length?n[0]:e],t||e)}var F=[],j=S("id"),E=_(function(e){return e},F,"identity"),$=_(function(){return 0},F,"zero"),M=_(function(){return 1},F,"one"),z=_(function(){return!0},F,"true"),N=_(function(){return!1},F,"false");function B(e,t,n){var i=[t].concat([].slice.call(n));console[e].apply(console,i)}var P=0,I=1,L=2,q=3,R=4;function U(e){return e[e.length-1]}function W(e){return null==e||""===e?null:+e}function V(e){return function(t){return e*Math.exp(t)}}function H(e){return function(t){return Math.log(e*t)}}function Y(e){return function(t){return Math.sign(t)*Math.log1p(Math.abs(t/e))}}function G(e){return function(t){return Math.sign(t)*Math.expm1(Math.abs(t))*e}}function J(e){return function(t){return t<0?-Math.pow(-t,e):Math.pow(t,e)}}function X(e,t,n,i){var r=n(e[0]),o=n(U(e)),a=(o-r)*t;return[i(r-a),i(o-a)]}function Q(e,t,n,i,r){var o=i(e[0]),a=i(U(e)),s=null!=t?i(t):(o+a)/2;return[r(s+(o-s)*n),r(s+(a-s)*n)]}function K(e,t,n){return Q(e,t,n,W,E)}function Z(e,t,n){var i=Math.sign(e[0]);return Q(e,t,n,H(i),V(i))}function ee(e,t,n,i){return Q(e,t,n,J(i),J(1/i))}function te(e,t,n,i){return Q(e,t,n,Y(i),G(i))}function ne(e){return null!=e?A(e)?e:[e]:[]}function ie(e){return"function"==typeof e}function re(e,t){var n,i,r,o,a,s,l,u,c,d=[],f=(e=ne(e)).map(function(e,t){return null==e?null:(d.push(t),ie(e)?e:D(e).map(T).join("]["))}),h=d.length-1,p=ne(t),g="var u,v;return ";if(h<0)return null;for(i=0;i<=h;++i)ie(r=f[n=d[i]])?(o="(u=this."+(s="f"+n)+"(a))",a="(v=this."+s+"(b))",(l=l||{})[s]=r):(o="(u=a["+r+"])",a="(v=b["+r+"])"),s="((v=v instanceof Date?+v:v),(u=u instanceof Date?+u:u))","descending"!==p[n]?(c=1,u=-1):(c=-1,u=1),g+="("+o+"<"+a+"||u==null)&&v!=null?"+u+":(u>v||v==null)&&u!=null?"+c+":"+s+"!==u&&v===v?"+u+":v!==v&&u===u?"+c+(n<h?":":":0");return r=Function("a","b",g+";"),l&&(r=r.bind(l)),e=e.reduce(function(e,t){return ie(t)?(w(t)||[]).forEach(function(t){e[t]=1}):null!=t&&(e[t+""]=1),e},{}),_(r,Object.keys(e))}function oe(e){return ie(e)?e:function(){return e}}function ae(e,t){var n,i;function r(){t(i),n=i=null}return function(t){i=t,n&&clearTimeout(n),n=setTimeout(r,e)}}function se(e){for(var t,n,i=1,r=arguments.length;i<r;++i)for(n in t=arguments[i])e[n]=t[n];return e}var le={};function ue(e){var t,n,i={};function r(e){return i.hasOwnProperty(e)&&i[e]!==le}return t={size:0,empty:0,object:i,has:r,get:function(e){return r(e)?i[e]:void 0},set:function(e,n){return r(e)||(++t.size,i[e]===le&&--t.empty),i[e]=n,this},delete:function(e){return r(e)&&(--t.size,++t.empty,i[e]=le),this},clear:function(){t.size=t.empty=0,t.object=i={}},test:function(e){return arguments.length?(n=e,t):n},clean:function(){var e,r,o={},a=0;for(e in i)(r=i[e])===le||n&&n(r)||(o[e]=r,++a);t.size=a,t.empty=0,t.object=i=o}},e&&Object.keys(e).forEach(function(n){t.set(n,e[n])}),t}function ce(e,t){var n=e.prototype=Object.create(t.prototype);return n.constructor=e,n}function de(e,t,n,i){var r,o=t[0],a=t[t.length-1];return o>a&&(r=o,o=a,a=r),i=void 0===i||i,((n=void 0===n||n)?o<=e:o<e)&&(i?e<=a:e<a)}function fe(e){return"[object Date]"===Object.prototype.toString.call(e)}function he(e){return"number"==typeof e}function pe(e,t){return e&&(e=t?ne(e).map(function(e){return e.replace(/\\(.)/g,"$1")}):ne(e)),_(e&&e.length?Function("_","return ''+"+e.map(function(e){return"_["+(t?T(e):D(e).map(T).join("]["))+"]"}).join("+'|'+")+";"):function(){return""},e,"key")}function ge(e,t){for(var n="";--t>=0;)n+=e;return n}function me(e){return U(e)-e[0]||0}function ye(e){return null==e||""===e?null:!(!e||"false"===e||"0"===e)&&!!e}function be(e){return he(e)?e:fe(e)?e:Date.parse(e)}function ve(e,t){return t=t||be,null==e||""===e?null:t(e)}function _e(e){return null==e||""===e?null:e+""}function xe(e){for(var t={},n=0,i=e.length;n<i;++n)t[e[n]]=!0;return t}function we(e,t,n){if(e){var i,r=0,o=e.length;if(t)for(;r<o;++r)(i=t(e[r]))&&n(i,r,e);else e.forEach(n)}}function ke(e){var t=e||E,n=[],i={};return n.add=function(e){var r=t(e);return i[r]||(i[r]=1,n.push(e)),n},n.remove=function(e){var r,o=t(e);return i[o]&&(i[o]=0,(r=n.indexOf(e))>=0&&n.splice(r,1)),n},n}async function De(e,t){try{await t(e)}catch(t){e.error(t)}}var Ae=Symbol("vega_id"),Oe=1;function Ce(e){return!(!e||!Te(e))}function Te(e){return e[Ae]}function Se(e,t){return e[Ae]=t,e}function Fe(e){var t=e===Object(e)?e:{data:e};return Te(t)?t:Se(t,Oe++)}function je(e){return Ee(e,Fe({}))}function Ee(e,t){for(var n in e)t[n]=e[n];return t}function $e(e,t){return Se(t,Te(e))}function Me(e){return e&&e.constructor===ze}function ze(){var e=[],t=[],n=[],i=[],r=[],o=!1;return{constructor:ze,insert:function(t){for(var n=ne(t),i=0,r=n.length;i<r;++i)e.push(n[i]);return this},remove:function(e){for(var n=ie(e)?i:t,r=ne(e),o=0,a=r.length;o<a;++o)n.push(r[o]);return this},modify:function(e,t,i){var o={field:t,value:oe(i)};return ie(e)?(o.filter=e,r.push(o)):(o.tuple=e,n.push(o)),this},encode:function(e,t){return ie(e)?r.push({filter:e,field:t}):n.push({tuple:e,field:t}),this},reflow:function(){return o=!0,this},pulse:function(a,s){var l,u,c,d,f,h,p={},g={};for(l=0,u=s.length;l<u;++l)p[Te(s[l])]=1;for(l=0,u=t.length;l<u;++l)p[Te(f=t[l])]=-1;for(l=0,u=i.length;l<u;++l)d=i[l],s.forEach(function(e){d(e)&&(p[Te(e)]=-1)});for(l=0,u=e.length;l<u;++l)h=Te(f=e[l]),p[h]?p[h]=1:a.add.push(Fe(e[l]));for(l=0,u=s.length;l<u;++l)f=s[l],p[Te(f)]<0&&a.rem.push(f);function m(e,t,n){n?e[t]=n(e):a.encode=t,o||(g[Te(e)]=e)}for(l=0,u=n.length;l<u;++l)f=(c=n[l]).tuple,d=c.field,(h=p[Te(f)])>0&&(m(f,d,c.value),a.modifies(d));for(l=0,u=r.length;l<u;++l)c=r[l],d=c.filter,s.forEach(function(e){d(e)&&p[Te(e)]>0&&m(e,c.field,c.value)}),a.modifies(c.field);if(o)a.mod=t.length||i.length?s.filter(function(e){return p[Te(e)]>0}):s.slice();else for(h in g)a.mod.push(g[h]);return a}}}var Ne="_:mod:_";function Be(){Object.defineProperty(this,Ne,{writable:!0,value:{}})}var Pe=Be.prototype;Pe.set=function(e,t,n,i){var r=this,o=r[e],a=r[Ne];return null!=t&&t>=0?(o[t]!==n||i)&&(o[t]=n,a[t+":"+e]=-1,a[e]=-1):(o!==n||i)&&(r[e]=n,a[e]=A(n)?1+n.length:-1),r},Pe.modified=function(e,t){var n,i=this[Ne];if(!arguments.length){for(n in i)if(i[n])return!0;return!1}if(A(e)){for(n=0;n<e.length;++n)if(i[e[n]])return!0;return!1}return null!=t&&t>=0?t+1<i[e]||!!i[t+":"+e]:!!i[e]},Pe.clear=function(){return this[Ne]={},this};var Ie=0,Le=new Be;function qe(e,t,n,i){this.id=++Ie,this.value=e,this.stamp=-1,this.rank=-1,this.qrank=-1,this.flags=0,t&&(this._update=t),n&&this.parameters(n,i)}var Re=qe.prototype;function Ue(e){return function(t){var n=this.flags;return 0===arguments.length?!!(n&e):(this.flags=t?n|e:n&~e,this)}}Re.targets=function(){return this._targets||(this._targets=ke(j))},Re.set=function(e){return this.value!==e?(this.value=e,1):0},Re.skip=Ue(1),Re.modified=Ue(2),Re.parameters=function(e,t,n){t=!1!==t;var i,r,o,a,s=this,l=s._argval=s._argval||new Be,u=s._argops=s._argops||[],c=[];function d(e,n,i){i instanceof qe?(i!==s&&(t&&i.targets().add(s),c.push(i)),u.push({op:i,name:e,index:n})):l.set(e,n,i)}for(i in e)if(r=e[i],"pulse"===i)ne(r).forEach(function(e){e instanceof qe?e!==s&&(e.targets().add(s),c.push(e)):k("Pulse parameters must be operator instances.")}),s.source=r;else if(A(r))for(l.set(i,-1,Array(o=r.length)),a=0;a<o;++a)d(i,a,r[a]);else d(i,-1,r);return this.marshall().clear(),n&&(u.initonly=!0),c},Re.marshall=function(e){var t,n,i,r,o,a=this._argval||Le,s=this._argops;if(s){for(n=0,i=s.length;n<i;++n)o=(r=(t=s[n]).op).modified()&&r.stamp===e,a.set(t.name,t.index,r.value,o);if(s.initonly){for(n=0;n<i;++n)(t=s[n]).op.targets().remove(this);this._argops=null,this._update=null}}return a},Re.evaluate=function(e){var t=this._update;if(t){var n=this.marshall(e.stamp),i=t.call(this,n,e);if(n.clear(),i!==this.value)this.value=i;else if(!this.modified())return e.StopPropagation}},Re.run=function(e){return e.stamp<=this.stamp?e.StopPropagation:(this.skip()?(this.skip(!1),t=0):t=this.evaluate(e),this.stamp=e.stamp,this.pulse=t||e);var t};var We=0;function Ve(e,t,n){this.id=++We,this.value=null,n&&(this.receive=n),e&&(this._filter=e),t&&(this._apply=t)}function He(e,t,n){return new Ve(e,t,n)}var Ye=Ve.prototype;Ye._filter=z,Ye._apply=E,Ye.targets=function(){return this._targets||(this._targets=ke(j))},Ye.consume=function(e){return arguments.length?(this._consume=!!e,this):!!this._consume},Ye.receive=function(e){if(this._filter(e)){for(var t=this.value=this._apply(e),n=this._targets,i=n?n.length:0,r=0;r<i;++r)n[r].receive(t);this._consume&&(e.preventDefault(),e.stopPropagation())}},Ye.filter=function(e){var t=He(e);return this.targets().add(t),t},Ye.apply=function(e){var t=He(null,e);return this.targets().add(t),t},Ye.merge=function(){var e=He();this.targets().add(e);for(var t=0,n=arguments.length;t<n;++t)arguments[t].targets().add(e);return e},Ye.throttle=function(e){var t=-1;return this.filter(function(){var n=Date.now();return n-t>e?(t=n,1):0})},Ye.debounce=function(e){var t=He();return this.targets().add(He(null,null,ae(e,function(e){var n=e.dataflow;t.receive(e),n&&n.run&&n.run()}))),t},Ye.between=function(e,t){var n=!1;return e.targets().add(He(null,null,function(){n=!0})),t.targets().add(He(null,null,function(){n=!1})),this.filter(function(){return n})};var Ge=/^([A-Za-z]+:)?\/\//,Je="file://";async function Xe(e,t){const n=await this.sanitize(e,t),i=n.href;return n.localFile?this.file(i):this.http(i,t)}async function Qe(e,t){t=se({},this.options,t);const n=this.fileAccess,i={href:null};let r,o,a,s;return null!=e&&"string"==typeof e||k("Sanitize failure, invalid URI: "+T(e)),o=Ge.test(e),(s=t.baseURL)&&!o&&(e.startsWith("/")||"/"===s[s.length-1]||(e="/"+e),e=s+e),a=(r=e.startsWith(Je))||"file"===t.mode||"http"!==t.mode&&!o&&n,r?e=e.slice(Je.length):e.startsWith("//")&&("file"===t.defaultProtocol?(e=e.slice(2),a=!0):e=(t.defaultProtocol||"http")+":"+e),Object.defineProperty(i,"localFile",{value:!!a}),i.href=e,t.target&&(i.target=t.target+""),t.rel&&(i.rel=t.rel+""),i}function Ke(e){return e?function(t){return new Promise(function(n,i){e.readFile(t,function(e,t){e?i(e):n(t)})})}:Ze}async function Ze(){k("No file system access.")}function et(e){return e?async function(t,n){const i=se({},this.options.http,n),r=n&&n.response,o=await e(t,i);return o.ok?ie(o[r])?o[r]():o.text():k(o.status+""+o.statusText)}:tt}async function tt(){k("No HTTP fetch method available.")}var nt={boolean:ye,integer:W,number:W,date:ve,string:_e,unknown:E},it=[function(e){return"true"===e||"false"===e||!0===e||!1===e},function(e){return at(e)&&(e=+e)==~~e},at,function(e){return!isNaN(Date.parse(e))}],rt=["boolean","integer","number","date"];function ot(e,t){return t.reduce(function(t,n){return t[n]=function(e,t){if(!e||!e.length)return"unknown";var n,i,r,o,a=0,s=e.length,l=it.length,u=it.map(function(e,t){return t+1});for(i=0,s=e.length;i<s;++i)for(n=t?e[i][t]:e[i],r=0;r<l;++r)if(u[r]&&null!=(o=n)&&o==o&&!it[r](n)&&(u[r]=0,++a===it.length))return"string";return a=u.reduce(function(e,t){return 0===e?t:e},0)-1,rt[a]}(e,n),t},{})}function at(e){return!(isNaN(+e)||e instanceof Date)}function st(e){const t=function(t,n){const i={delimiter:e};return lt(t,n?se(n,i):i)};return t.responseType="text",t}function lt(e,t){return t.header&&(e=t.header.map(T).join(t.delimiter)+"\n"+e),Object(i.a)(t.delimiter).parse(e+"")}function ut(t,n){const i=n&&n.property?S(n.property):E;return!O(t)||(r=t,"function"==typeof e&&ie(e.isBuffer)&&e.isBuffer(r))?i(JSON.parse(t)):function(e,t){return t&&t.copy?JSON.parse(JSON.stringify(e)):e}(i(t));var r}function ct(e,t){var n,i,o;return e=ut(e,t),n=t&&(o=t.feature)?r.a:t&&(o=t.mesh)?r.b:k("Missing TopoJSON feature or mesh parameter."),(i=(i=e.objects[o])?n(e,i):k("Invalid TopoJSON object: "+o))&&i.features||[i]}lt.responseType="text",ut.responseType="json",ct.responseType="json";const dt={dsv:lt,csv:st(","),tsv:st("\t"),json:ut,topojson:ct};function ft(e,t){return arguments.length>1?(dt[e]=t,this):dt.hasOwnProperty(e)?dt[e]:null}function ht(e){const t=ft(e);return t&&t.responseType||"text"}var pt=function(e,t){return function(n){return{options:n||{},sanitize:Qe,load:Xe,fileAccess:!!t,file:Ke(t),http:et(e)}}}("undefined"!=typeof fetch&&fetch,null);const gt=function(e,t,n){const i=ft((t=t||{}).type||"json");return i||k("Unknown data format type: "+t.type),e=i(e,t),t.parse&&function(e,t,n){if(e.length){n=n||o.b;var i,r,a,s,l,u,c,d=e.columns||Object.keys(e[0]);for("auto"===t&&(t=ot(e,d)),d=Object.keys(t),i=d.map(function(e){var i,r,a=t[e];if(a&&(0===a.indexOf("date:")||0===a.indexOf("utc:")))return("'"===(r=(i=a.split(/:(.+)?/,2))[1])[0]&&"'"===r[r.length-1]||'"'===r[0]&&'"'===r[r.length-1])&&(r=r.slice(1,-1)),"utc"===i[0]?Object(o.d)(r):n(r);if(!nt[a])throw Error("Illegal format pattern: "+e+":"+a);return nt[a]}),s=0,u=e.length,c=d.length;s<u;++s)for(r=e[s],l=0;l<c;++l)a=d[l],r[a]=i[l](r[a])}}(e,t.parse,n),e.hasOwnProperty("columns")&&delete e.columns,e};var mt={skip:!0};function yt(e,t,n,i,r,o){var a,s,l=se({},o,mt);ie(n)||(n=oe(n)),void 0===i?a=function(t){e.touch(n(t))}:ie(i)?(s=new qe(null,i,r,!1),a=function(t){var i,r=n(t);s.evaluate(t),Me(i=s.value)?e.pulse(r,i,o):e.update(r,i,l)}):a=function(t){e.update(n(t),i,l)},t.apply(a)}function bt(e,t,n,i,r,o){var a,s;void 0===i?s=n:(a=ie(i)?i:oe(i),(s=new qe(null,i=n?function(e,t){var i=a(e,t);return n.skip()||(n.skip(i!==this.value).value=i),i}:a,r,!1)).modified(o&&o.force),s.rank=0,n&&(s.skip(!0),s.value=n.value,s.targets().add(n))),t.targets().add(s)}var vt={};function _t(e,t,n){this.dataflow=e,this.stamp=null==t?-1:t,this.add=[],this.rem=[],this.mod=[],this.fields=null,this.encode=n||null}var xt=_t.prototype;function wt(e,t){return e?function(n,i){return e(n,i)&&t(n,i)}:t}function kt(e,t){var n=[];return we(e,t,function(e){n.push(e)}),n}function Dt(e,t){var n={};return e.visit(t,function(e){n[Te(e)]=1}),function(e){return n[Te(e)]?null:e}}function At(e,t,n,i){var r,o,a,s,l,u=this,c=0;for(this.dataflow=e,this.stamp=t,this.fields=null,this.encode=i||null,this.pulses=n,a=0,s=n.length;a<s;++a)if((r=n[a]).stamp===t){if(r.fields)for(l in o=u.fields||(u.fields={}),r.fields)o[l]=1;r.changed(u.ADD)&&(c|=u.ADD),r.changed(u.REM)&&(c|=u.REM),r.changed(u.MOD)&&(c|=u.MOD)}this.changes=c}xt.StopPropagation=vt,xt.ADD=1,xt.REM=2,xt.MOD=4,xt.ADD_REM=3,xt.ADD_MOD=5,xt.ALL=7,xt.REFLOW=8,xt.SOURCE=16,xt.NO_SOURCE=32,xt.NO_FIELDS=64,xt.fork=function(e){return new _t(this.dataflow).init(this,e)},xt.clone=function(){var e=this.fork(7);return e.add=e.add.slice(),e.rem=e.rem.slice(),e.mod=e.mod.slice(),e.source&&(e.source=e.source.slice()),e.materialize(23)},xt.addAll=function(){var e=this;return this.source&&this.source.length!==this.add.length?((e=new _t(this.dataflow).init(this)).add=e.source,e):e},xt.init=function(e,t){var n=this;return n.stamp=e.stamp,n.encode=e.encode,!e.fields||64&t||(n.fields=e.fields),1&t?(n.addF=e.addF,n.add=e.add):(n.addF=null,n.add=[]),2&t?(n.remF=e.remF,n.rem=e.rem):(n.remF=null,n.rem=[]),4&t?(n.modF=e.modF,n.mod=e.mod):(n.modF=null,n.mod=[]),32&t?(n.srcF=null,n.source=null):(n.srcF=e.srcF,n.source=e.source),n},xt.runAfter=function(e){this.dataflow.runAfter(e)},xt.changed=function(e){var t=e||7;return 1&t&&this.add.length||2&t&&this.rem.length||4&t&&this.mod.length},xt.reflow=function(e){if(e)return this.fork(7).reflow();var t=this.add.length,n=this.source&&this.source.length;return n&&n!==t&&(this.mod=this.source,t&&this.filter(4,Dt(this,1))),this},xt.modifies=function(e){var t=ne(e),n=this.fields||(this.fields={});return t.forEach(function(e){n[e]=!0}),this},xt.modified=function(e){var t=this.fields;return!(!this.mod.length||!t)&&(arguments.length?A(e)?e.some(function(e){return t[e]}):t[e]:!!t)},xt.filter=function(e,t){var n=this;return 1&e&&(n.addF=wt(n.addF,t)),2&e&&(n.remF=wt(n.remF,t)),4&e&&(n.modF=wt(n.modF,t)),16&e&&(n.srcF=wt(n.srcF,t)),n},xt.materialize=function(e){var t=this;return 1&(e=e||7)&&t.addF&&(t.add=kt(t.add,t.addF),t.addF=null),2&e&&t.remF&&(t.rem=kt(t.rem,t.remF),t.remF=null),4&e&&t.modF&&(t.mod=kt(t.mod,t.modF),t.modF=null),16&e&&t.srcF&&(t.source=t.source.filter(t.srcF),t.srcF=null),t},xt.visit=function(e,t){var n,i,r=this,o=t;return 16&e?(we(r.source,r.srcF,o),r):(1&e&&we(r.add,r.addF,o),2&e&&we(r.rem,r.remF,o),4&e&&we(r.mod,r.modF,o),8&e&&(n=r.source)&&((i=r.add.length+r.mod.length)===n.length||we(n,i?Dt(r,5):r.srcF,o)),r)};var Ot=ce(At,_t);function Ct(e){return e.error("Dataflow already running. Use runAsync() to chain invocations."),e}Ot.fork=function(e){var t=new _t(this.dataflow).init(this,e&this.NO_FIELDS);return void 0!==e&&(e&t.ADD&&this.visit(t.ADD,function(e){return t.add.push(e)}),e&t.REM&&this.visit(t.REM,function(e){return t.rem.push(e)}),e&t.MOD&&this.visit(t.MOD,function(e){return t.mod.push(e)})),t},Ot.changed=function(e){return this.changes&e},Ot.modified=function(e){var t=this,n=t.fields;return n&&t.changes&t.MOD?A(e)?e.some(function(e){return n[e]}):n[e]:0},Ot.filter=function(){k("MultiPulse does not support filtering.")},Ot.materialize=function(){k("MultiPulse does not support materialization.")},Ot.visit=function(e,t){var n=this,i=n.pulses,r=i.length,o=0;if(e&n.SOURCE)for(;o<r;++o)i[o].visit(e,t);else for(;o<r;++o)i[o].stamp===n.stamp&&i[o].visit(e,t);return n};var Tt={skip:!1,force:!1};function St(e){this.cmp=e,this.nodes=[]}var Ft=St.prototype;function jt(e,t,n,i){var r,o,a;for(r=e[n];n>t&&i(r,o=e[a=n-1>>1])<0;)e[n]=o,n=a;return e[n]=r}function Et(e,t,n){for(var i,r=t,o=e.length,a=e[t],s=2*t+1;s<o;)(i=s+1)<o&&n(e[s],e[i])>=0&&(s=i),e[t]=e[s],s=2*(t=s)+1;return e[t]=a,jt(e,r,t,n)}function $t(){var e,t;this._log=(t=e||P,{level:function(e){return arguments.length?(t=+e,this):t},error:function(){return t>=I&&B("error","ERROR",arguments),this},warn:function(){return t>=L&&B("warn","WARN",arguments),this},info:function(){return t>=q&&B("log","INFO",arguments),this},debug:function(){return t>=R&&B("log","DEBUG",arguments),this}}),this.logLevel(I),this._clock=0,this._rank=0;try{this._loader=pt()}catch(e){}this._touched=ke(j),this._pulses={},this._pulse=null,this._heap=new St(function(e,t){return e.qrank-t.qrank}),this._postrun=[]}Ft.size=function(){return this.nodes.length},Ft.clear=function(){return this.nodes=[],this},Ft.peek=function(){return this.nodes[0]},Ft.push=function(e){var t=this.nodes;return t.push(e),jt(t,0,t.length-1,this.cmp)},Ft.pop=function(){var e,t=this.nodes,n=t.pop();return t.length?(e=t[0],t[0]=n,Et(t,0,this.cmp)):e=n,e},Ft.replace=function(e){var t=this.nodes,n=t[0];return t[0]=e,Et(t,0,this.cmp),n},Ft.pushpop=function(e){var t=this.nodes,n=t[0];return t.length&&this.cmp(n,e)<0&&(t[0]=e,e=n,Et(t,0,this.cmp)),e};var Mt=$t.prototype;function zt(e){return function(){return this._log[e].apply(this,arguments)}}function Nt(e,t){qe.call(this,e,null,t)}Mt.stamp=function(){return this._clock},Mt.loader=function(e){return arguments.length?(this._loader=e,this):this._loader},Mt.cleanThreshold=1e4,Mt.add=function(e,t,n,i){var r,o=1;return e instanceof qe?r=e:e&&e.prototype instanceof qe?r=new e:ie(e)?r=new qe(null,e):(o=0,r=new qe(e,t)),this.rank(r),o&&(i=n,n=t),n&&this.connect(r,r.parameters(n,i)),this.touch(r),r},Mt.connect=function(e,t){var n,i,r=e.rank;for(n=0,i=t.length;n<i;++n)if(r<t[n].rank)return void this.rerank(e)},Mt.rank=function(e){e.rank=++this._rank},Mt.rerank=function(e){for(var t,n,i,r=[e];r.length;)if(this.rank(t=r.pop()),n=t._targets)for(i=n.length;--i>=0;)r.push(t=n[i]),t===e&&k("Cycle detected in dataflow graph.")},Mt.pulse=function(e,t,n){this.touch(e,n||Tt);var i=new _t(this,this._clock+(this._pulse?0:1)),r=e.pulse&&e.pulse.source||[];return i.target=e,this._pulses[e.id]=t.pulse(i,r),this},Mt.touch=function(e,t){var n=t||Tt;return this._pulse?this._enqueue(e):this._touched.add(e),n.skip&&e.skip(!0),this},Mt.update=function(e,t,n){var i=n||Tt;return(e.set(t)||i.force)&&this.touch(e,i),this},Mt.changeset=ze,Mt.ingest=function(e,t,n){return this.pulse(e,this.changeset().insert(gt(t,n)))},Mt.parse=gt,Mt.preload=async function(e,t,n){const i=this,r=i._pending||function(e){var t,n=new Promise(function(e){t=e});return n.requests=0,n.done=function(){0==--n.requests&&(e._pending=null,t(e))},e._pending=n}(i);r.requests+=1;const o=await i.request(t,n);return i.pulse(e,i.changeset().remove(z).insert(o.data||[])),r.done(),o},Mt.request=async function(e,t){const n=this;let i,r=0;try{i=await n.loader().load(e,{context:"dataflow",response:ht(t&&t.type)});try{i=gt(i,t)}catch(t){r=-2,n.warn("Data ingestion failed",e,t)}}catch(t){r=-1,n.warn("Loading failed",e,t)}return{data:i,status:r}},Mt.events=function(e,t,n,i){for(var r,o=this,a=He(n,i),s=function(e){e.dataflow=o;try{a.receive(e)}catch(e){o.error(e)}finally{o.run()}},l=0,u=(r="string"==typeof e&&"undefined"!=typeof document?document.querySelectorAll(e):ne(e)).length;l<u;++l)r[l].addEventListener(t,s);return a},Mt.on=function(e,t,n,i,r){return(e instanceof qe?bt:yt)(this,e,t,n,i,r),this},Mt.evaluate=async function(e,t,n){const i=this,r=i.logLevel();if(i._pulse)return Ct(i);if(i._pending&&await i._pending,t&&await De(i,t),!i._touched.length)return i.info("Dataflow invoked, but nothing to do."),i;let o,a,s,l,u=++i._clock,c=0;i._pulse=new _t(i,u,e),r>=q&&(s=Date.now(),i.debug("-- START PROPAGATION ("+u+") -----")),i._touched.forEach(function(e){i._enqueue(e,!0)}),i._touched=ke(j);try{for(;i._heap.size()>0;)(o=i._heap.pop()).rank===o.qrank?((a=o.run(i._getPulse(o,e))).then&&(a=await a),r>=R&&i.debug(o.id,a===vt?"STOP":a,o),a!==vt&&(i._pulse=a,o._targets&&o._targets.forEach(e=>i._enqueue(e))),++c):i._enqueue(o,!0)}catch(e){l=e}if(i._pulses={},i._pulse=null,r>=q&&(s=Date.now()-s,i.info("> Pulse "+u+": "+c+" operators; "+s+"ms")),l&&(i._postrun=[],i.error(l)),i._postrun.length){const e=i._postrun;i._postrun=[],e.sort((e,t)=>t.priority-e.priority).forEach(async function(e){await De(i,e.callback)})}return n&&await De(i,n),i},Mt.run=function(e,t,n){return this._pulse?Ct(this):(this.evaluate(e,t,n),this)},Mt.runAsync=async function(e,t,n){for(;this._running;)await this._running;const i=()=>this._running=null;return(this._running=this.evaluate(e,t,n)).then(i,i),this._running},Mt.runAfter=function(e,t,n){if(this._pulse||t)this._postrun.push({priority:n||0,callback:e});else try{e(this)}catch(e){this.error(e)}},Mt._enqueue=function(e,t){var n=!this._pulses[e.id];n&&(this._pulses[e.id]=this._pulse),(n||t)&&(e.qrank=e.rank,this._heap.push(e))},Mt._getPulse=function(e,t){var n,i=e.source,r=this._clock;return i&&A(i)?new At(this,r,n=i.map(function(e){return e.pulse}),t):(n=this._pulses[e.id],i&&((i=i.pulse)&&i!==vt?i.stamp===r&&n.target!==e?n=i:n.source=i.source:n.source=[]),n)},Mt.error=zt("error"),Mt.warn=zt("warn"),Mt.info=zt("info"),Mt.debug=zt("debug"),Mt.logLevel=zt("level");var Bt=ce(Nt,qe);Bt.run=function(e){return e.stamp<=this.stamp?e.StopPropagation:(this.skip()?this.skip(!1):t=this.evaluate(e),t=t||e,this.stamp=e.stamp,t.then?t=t.then(e=>this.pulse=e):t!==e.StopPropagation&&(this.pulse=t),t);var t},Bt.evaluate=function(e){var t=this.marshall(e.stamp),n=this.transform(t,e);return t.clear(),n},Bt.transform=function(){};var Pt={};function It(e){return e&&e.length?1===e.length?e[0]:(t=e,function(e){for(var n=t.length,i=1,r=String(t[0](e));i<n;++i)r+="|"+t[i](e);return r}):function(){return""};var t}function Lt(e,t,n){return n||e+(t?"_"+t:"")}var qt={values:Wt({name:"values",init:"cell.store = true;",set:"cell.data.values()",idx:-1}),count:Wt({name:"count",set:"cell.num"}),__count__:Wt({name:"count",set:"this.missing + this.valid"}),missing:Wt({name:"missing",set:"this.missing"}),valid:Wt({name:"valid",set:"this.valid"}),sum:Wt({name:"sum",init:"this.sum = 0;",add:"this.sum += +v;",rem:"this.sum -= v;",set:"this.sum"}),mean:Wt({name:"mean",init:"this.mean = 0;",add:"var d = v - this.mean; this.mean += d / this.valid;",rem:"var d = v - this.mean; this.mean -= this.valid ? d / this.valid : this.mean;",set:"this.valid ? this.mean : undefined"}),average:Wt({name:"average",set:"this.valid ? this.mean : undefined",req:["mean"],idx:1}),variance:Wt({name:"variance",init:"this.dev = 0;",add:"this.dev += d * (v - this.mean);",rem:"this.dev -= d * (v - this.mean);",set:"this.valid > 1 ? this.dev / (this.valid-1) : undefined",req:["mean"],idx:1}),variancep:Wt({name:"variancep",set:"this.valid > 1 ? this.dev / this.valid : undefined",req:["variance"],idx:2}),stdev:Wt({name:"stdev",set:"this.valid > 1 ? Math.sqrt(this.dev / (this.valid-1)) : undefined",req:["variance"],idx:2}),stdevp:Wt({name:"stdevp",set:"this.valid > 1 ? Math.sqrt(this.dev / this.valid) : undefined",req:["variance"],idx:2}),stderr:Wt({name:"stderr",set:"this.valid > 1 ? Math.sqrt(this.dev / (this.valid * (this.valid-1))) : undefined",req:["variance"],idx:2}),distinct:Wt({name:"distinct",set:"cell.data.distinct(this.get)",req:["values"],idx:3}),ci0:Wt({name:"ci0",set:"cell.data.ci0(this.get)",req:["values"],idx:3}),ci1:Wt({name:"ci1",set:"cell.data.ci1(this.get)",req:["values"],idx:3}),median:Wt({name:"median",set:"cell.data.q2(this.get)",req:["values"],idx:3}),q1:Wt({name:"q1",set:"cell.data.q1(this.get)",req:["values"],idx:3}),q3:Wt({name:"q3",set:"cell.data.q3(this.get)",req:["values"],idx:3}),argmin:Wt({name:"argmin",init:"this.argmin = undefined;",add:"if (v < this.min) this.argmin = t;",rem:"if (v <= this.min) this.argmin = undefined;",set:"this.argmin || cell.data.argmin(this.get)",req:["min"],str:["values"],idx:3}),argmax:Wt({name:"argmax",init:"this.argmax = undefined;",add:"if (v > this.max) this.argmax = t;",rem:"if (v >= this.max) this.argmax = undefined;",set:"this.argmax || cell.data.argmax(this.get)",req:["max"],str:["values"],idx:3}),min:Wt({name:"min",init:"this.min = undefined;",add:"if (v < this.min || this.min === undefined) this.min = v;",rem:"if (v <= this.min) this.min = NaN;",set:"this.min = (isNaN(this.min) ? cell.data.min(this.get) : this.min)",str:["values"],idx:4}),max:Wt({name:"max",init:"this.max = undefined;",add:"if (v > this.max || this.max === undefined) this.max = v;",rem:"if (v >= this.max) this.max = NaN;",set:"this.max = (isNaN(this.max) ? cell.data.max(this.get) : this.max)",str:["values"],idx:4})},Rt=Object.keys(qt);function Ut(e,t){return qt[e](t)}function Wt(e){return function(t){var n=se({init:"",add:"",rem:"",idx:0},e);return n.out=t||e.name,n}}function Vt(e,t){return e.idx-t.idx}function Ht(e,t){var n=t||E,i=function(e,t){var n,i=e.reduce(function e(n,i){function r(t){n[t]||e(n,n[t]=qt[t]())}return i.req&&i.req.forEach(r),t&&i.str&&i.str.forEach(r),n},e.reduce(function(e,t){return e[t.name]=t,e},{})),r=[];for(n in i)r.push(i[n]);return r.sort(Vt)}(e,!0),r="var cell = this.cell; this.valid = 0; this.missing = 0;",o="this.cell = cell; this.init();",a="if(v==null){++this.missing; return;} if(v!==v) return; ++this.valid;",s="if(v==null){--this.missing; return;} if(v!==v) return; --this.valid;",l="var cell = this.cell;";return i.forEach(function(e){r+=e.init,a+=e.add,s+=e.rem}),e.slice().sort(Vt).forEach(function(e){l+="t['"+e.out+"']="+e.set+";"}),l+="return t;",(o=Function("cell",o)).prototype.init=Function(r),o.prototype.add=Function("v","t",a),o.prototype.rem=Function("v","t",s),o.prototype.set=Function("t",l),o.prototype.get=n,o.fields=e.map(function(e){return e.out}),o}function Yt(e,t){var n,i=[],r=e.length,o=-1;if(null==t)for(;++o<r;)isNaN(n=Gt(e[o]))||i.push(n);else for(;++o<r;)isNaN(n=Gt(t(e[o],o,e)))||i.push(n);return i}function Gt(e){return null===e?NaN:+e}var Jt=Math.random;function Xt(e,t){var n=Yt(e,t);return[Object(a.l)(n.sort(a.a),.25),Object(a.l)(n,.5),Object(a.l)(n,.75)]}function Qt(e,t){var n,i,r=NaN,o={mean:function(e){return arguments.length?(n=e||0,r=NaN,o):n},stdev:function(e){return arguments.length?(i=null==e?1:e,r=NaN,o):i},sample:function(){var e,t,o=0,a=0;if(r==r)return o=r,r=NaN,o;do{e=(o=2*Jt()-1)*o+(a=2*Jt()-1)*a}while(0===e||e>1);return t=Math.sqrt(-2*Math.log(e)/e),r=n+a*t*i,n+o*t*i},pdf:function(e){var t=Math.exp(Math.pow(e-n,2)/(-2*Math.pow(i,2)));return 1/(i*Math.sqrt(2*Math.PI))*t},cdf:function(e){var t,r=(e-n)/i,o=Math.abs(r);if(o>37)t=0;else{var a=Math.exp(-o*o/2);o<7.07106781186547?(t=a*((((((.0352624965998911*o+.700383064443688)*o+6.37396220353165)*o+33.912866078383)*o+112.079291497871)*o+221.213596169931)*o+220.206867912376),t/=((((((.0883883476483184*o+1.75566716318264)*o+16.064177579207)*o+86.7807322029461)*o+296.564248779674)*o+637.333633378831)*o+793.826512519948)*o+440.413735824752):t=a/(o+1/(o+2/(o+3/(o+4/(o+.65)))))/2.506628274631}return r>0?1-t:t},icdf:function(e){if(e<=0||e>=1)return NaN;var t=2*e-1,r=8*(Math.PI-3)/(3*Math.PI*(4-Math.PI)),o=2/(Math.PI*r)+Math.log(1-Math.pow(t,2))/2,a=Math.log(1-t*t)/r,s=(t>0?1:-1)*Math.sqrt(Math.sqrt(o*o-a)-o);return n+i*Math.SQRT2*s}};return o.mean(e).stdev(t)}function Kt(e){this._key=e?S(e):Te,this.reset()}var Zt=Kt.prototype;function en(e){Nt.call(this,null,e),this._adds=[],this._mods=[],this._alen=0,this._mlen=0,this._drop=!0,this._cross=!1,this._dims=[],this._dnames=[],this._measures=[],this._countOnly=!1,this._counts=null,this._prev=null,this._inputs=null,this._outputs=null}Zt.reset=function(){this._add=[],this._rem=[],this._ext=null,this._get=null,this._q=null},Zt.add=function(e){this._add.push(e)},Zt.rem=function(e){this._rem.push(e)},Zt.values=function(){if(this._get=null,0===this._rem.length)return this._add;var e,t,n,i=this._add,r=this._rem,o=this._key,a=i.length,s=r.length,l=Array(a-s),u={};for(e=0;e<s;++e)u[o(r[e])]=1;for(e=0,t=0;e<a;++e)u[o(n=i[e])]?u[o(n)]=0:l[t++]=n;return this._rem=[],this._add=l},Zt.distinct=function(e){for(var t,n=this.values(),i=n.length,r={},o=0;--i>=0;)t=e(n[i])+"",r.hasOwnProperty(t)||(r[t]=1,++o);return o},Zt.extent=function(e){if(this._get!==e||!this._ext){var t=this.values(),n=function(e,t){var n,i,r,o,a,s=-1,l=e.length;if(null==t){for(;++s<l;)if(null!=(i=e[s])&&i>=i){n=r=i;break}for(o=a=s;++s<l;)null!=(i=e[s])&&(n>i&&(n=i,o=s),r<i&&(r=i,a=s))}else{for(;++s<l;)if(null!=(i=t(e[s],s,e))&&i>=i){n=r=i;break}for(o=a=s;++s<l;)null!=(i=t(e[s],s,e))&&(n>i&&(n=i,o=s),r<i&&(r=i,a=s))}return[o,a]}(t,e);this._ext=[t[n[0]],t[n[1]]],this._get=e}return this._ext},Zt.argmin=function(e){return this.extent(e)[0]||{}},Zt.argmax=function(e){return this.extent(e)[1]||{}},Zt.min=function(e){var t=this.extent(e)[0];return null!=t?e(t):void 0},Zt.max=function(e){var t=this.extent(e)[1];return null!=t?e(t):void 0},Zt.quartile=function(e){return this._get===e&&this._q||(this._q=Xt(this.values(),e),this._get=e),this._q},Zt.q1=function(e){return this.quartile(e)[0]},Zt.q2=function(e){return this.quartile(e)[1]},Zt.q3=function(e){return this.quartile(e)[2]},Zt.ci=function(e){return this._get===e&&this._ci||(this._ci=function(e,t,n,i){if(!e.length)return[void 0,void 0];var r,o,s,l,u=Yt(e,i),c=u.length,d=t;for(s=0,l=Array(d);s<d;++s){for(r=0,o=0;o<c;++o)r+=u[~~(Jt()*c)];l[s]=r/c}return[Object(a.l)(l.sort(a.a),n/2),Object(a.l)(l,1-n/2)]}(this.values(),1e3,.05,e),this._get=e),this._ci},Zt.ci0=function(e){return this.ci(e)[0]},Zt.ci1=function(e){return this.ci(e)[1]},en.Definition={type:"Aggregate",metadata:{generates:!0,changes:!0},params:[{name:"groupby",type:"field",array:!0},{name:"ops",type:"enum",array:!0,values:Rt},{name:"fields",type:"field",null:!0,array:!0},{name:"as",type:"string",null:!0,array:!0},{name:"drop",type:"boolean",default:!0},{name:"cross",type:"boolean",default:!1},{name:"key",type:"field"}]};var tn=ce(en,Nt);function nn(e){Nt.call(this,null,e)}tn.transform=function(e,t){var n,i=this,r=t.fork(t.NO_SOURCE|t.NO_FIELDS);return this.stamp=r.stamp,this.value&&((n=e.modified())||t.modified(this._inputs))?(this._prev=this.value,this.value=n?this.init(e):{},t.visit(t.SOURCE,function(e){i.add(e)})):(this.value=this.value||this.init(e),t.visit(t.REM,function(e){i.rem(e)}),t.visit(t.ADD,function(e){i.add(e)})),r.modifies(this._outputs),i._drop=!1!==e.drop,e.cross&&i._dims.length>1&&(i._drop=!1,this.cross()),i.changes(r)},tn.cross=function(){var e=this,t=e.value,n=e._dnames,i=n.map(function(){return{}}),r=n.length;function o(e){var t,o,a,s;for(t in e)for(a=e[t].tuple,o=0;o<r;++o)i[o][s=a[n[o]]]=s}o(e._prev),o(t),function o(a,s,l){var u,c,d=n[l],f=i[l++];for(u in f)s[d]=f[u],c=a?a+"|"+u:u,l<r?o(c,s,l):t[c]||e.cell(c,s)}("",{},0)},tn.init=function(e){var t=this._inputs=[],n=this._outputs=[],i={};function r(e){for(var n,r=ne(w(e)),o=0,a=r.length;o<a;++o)i[n=r[o]]||(i[n]=1,t.push(n))}this._dims=ne(e.groupby),this._dnames=this._dims.map(function(e){var t=x(e);return r(e),n.push(t),t}),this.cellkey=e.key?e.key:It(this._dims),this._countOnly=!0,this._counts=[],this._measures=[];var o,a,s,l,u,c,d=e.fields||[null],f=e.ops||["count"],h=e.as||[],p=d.length,g={};for(p!==f.length&&k("Unmatched number of fields and aggregate ops."),c=0;c<p;++c)o=d[c],a=f[c],null==o&&"count"!==a&&k("Null aggregate field specified."),u=Lt(a,l=x(o),h[c]),n.push(u),"count"!==a?((s=g[l])||(r(o),(s=g[l]=[]).field=o,this._measures.push(s)),"count"!==a&&(this._countOnly=!1),s.push(Ut(a,u))):this._counts.push(u);return this._measures=this._measures.map(function(e){return Ht(e,e.field)}),{}},tn.cellkey=It(),tn.cell=function(e,t){var n=this.value[e];return n?0===n.num&&this._drop&&n.stamp<this.stamp?(n.stamp=this.stamp,this._adds[this._alen++]=n):n.stamp<this.stamp&&(n.stamp=this.stamp,this._mods[this._mlen++]=n):(n=this.value[e]=this.newcell(e,t),this._adds[this._alen++]=n),n},tn.newcell=function(e,t){var n={key:e,num:0,agg:null,tuple:this.newtuple(t,this._prev&&this._prev[e]),stamp:this.stamp,store:!1};if(!this._countOnly){var i,r=this._measures,o=r.length;for(n.agg=Array(o),i=0;i<o;++i)n.agg[i]=new r[i](n)}return n.store&&(n.data=new Kt),n},tn.newtuple=function(e,t){var n,i,r=this._dnames,o=this._dims,a={};for(n=0,i=o.length;n<i;++n)a[r[n]]=o[n](e);return t?$e(t.tuple,a):Fe(a)},tn.add=function(e){var t,n,i,r=this.cellkey(e),o=this.cell(r,e);if(o.num+=1,!this._countOnly)for(o.store&&o.data.add(e),n=0,i=(t=o.agg).length;n<i;++n)t[n].add(t[n].get(e),e)},tn.rem=function(e){var t,n,i,r=this.cellkey(e),o=this.cell(r,e);if(o.num-=1,!this._countOnly)for(o.store&&o.data.rem(e),n=0,i=(t=o.agg).length;n<i;++n)t[n].rem(t[n].get(e),e)},tn.celltuple=function(e){var t,n,i,r=e.tuple,o=this._counts;for(e.store&&e.data.values(),n=0,i=o.length;n<i;++n)r[o[n]]=e.num;if(!this._countOnly)for(n=0,i=(t=e.agg).length;n<i;++n)t[n].set(r);return r},tn.changes=function(e){var t,n,i,r,o=this._adds,a=this._mods,s=this._prev,l=this._drop,u=e.add,c=e.rem,d=e.mod;if(s)for(n in s)t=s[n],l&&!t.num||c.push(t.tuple);for(i=0,r=this._alen;i<r;++i)u.push(this.celltuple(o[i])),o[i]=null;for(i=0,r=this._mlen;i<r;++i)(0===(t=a[i]).num&&l?c:d).push(this.celltuple(t)),a[i]=null;return this._alen=this._mlen=0,this._prev=null,e},nn.Definition={type:"Bin",metadata:{modifies:!0},params:[{name:"field",type:"field",required:!0},{name:"anchor",type:"number"},{name:"maxbins",type:"number",default:20},{name:"base",type:"number",default:10},{name:"divide",type:"number",array:!0,default:[5,2]},{name:"extent",type:"number",array:!0,length:2,required:!0},{name:"step",type:"number"},{name:"steps",type:"number",array:!0},{name:"minstep",type:"number",default:0},{name:"nice",type:"boolean",default:!0},{name:"name",type:"string"},{name:"as",type:"string",array:!0,length:2,default:["bin0","bin1"]}]};var rn=ce(nn,Nt);function on(e,t,n){var i=e,r=t||[],o=n||[],a={},s=0;return{add:function(e){o.push(e)},remove:function(e){a[i(e)]=++s},size:function(){return r.length},data:function(e,t){return s&&(r=r.filter(function(e){return!a[i(e)]}),a={},s=0),t&&e&&r.sort(e),o.length&&(r=e?function(e,t,n,i){var r=t.length,o=n.length;if(!o)return t;if(!r)return n;for(var a=i||new t.constructor(r+o),s=0,l=0,u=0;s<r&&l<o;++u)a[u]=e(t[s],n[l])>0?n[l++]:t[s++];for(;s<r;++s,++u)a[u]=t[s];for(;l<o;++l,++u)a[u]=n[l];return a}(e,r,o.sort(e)):r.concat(o),o=[]),r}}}function an(e){Nt.call(this,[],e)}function sn(e){qe.call(this,null,ln,e)}function ln(e){return this.value&&!e.modified()?this.value:re(e.fields,e.orders)}function un(e){Nt.call(this,null,e)}rn.transform=function(e,t){var n,i=this._bins(e),r=i.start,o=i.step,a=e.as||["bin0","bin1"],s=a[0],l=a[1];return n=e.modified()?(t=t.reflow(!0)).SOURCE:t.modified(w(e.field))?t.ADD_MOD:t.ADD,t.visit(n,function(e){var t=i(e);e[s]=t,e[l]=null==t?null:r+o*(1+(t-r)/o)}),t.modifies(a)},rn._bins=function(e){if(this.value&&!e.modified())return this.value;var t,n,i=e.field,r=function(e){var t,n,i,r,o,a,s,l,u=e.maxbins||20,c=e.base||10,d=Math.log(c),f=e.divide||[5,2],h=e.extent[0],p=e.extent[1],g=p-h;if(e.step)t=e.step;else if(e.steps){for(o=g/u,a=0,s=e.steps.length;a<s&&e.steps[a]<o;++a);t=e.steps[Math.max(0,a-1)]}else{for(n=Math.ceil(Math.log(u)/d),i=e.minstep||0,t=Math.max(i,Math.pow(c,Math.round(Math.log(g)/d)-n));Math.ceil(g/t)>u;)t*=c;for(a=0,s=f.length;a<s;++a)(o=t/f[a])>=i&&g/o<=u&&(t=o)}return r=(o=Math.log(t))>=0?0:1+~~(-o/d),l=Math.pow(c,-r-1),(e.nice||void 0===e.nice)&&(h=h<(o=Math.floor(h/t+l)*t)?o-t:o,p=Math.ceil(p/t)*t),{start:h,stop:p,step:t}}(e),o=r.start,a=r.stop,s=r.step;null!=(t=e.anchor)&&(n=t-(o+s*Math.floor((t-o)/s)),o+=n,a+=n);var l=function(e){var t=i(e);return null==t?null:(t=Math.max(o,Math.min(+t,a-s)),o+s*Math.floor((t-o)/s))};return l.start=o,l.stop=a,l.step=s,this.value=_(l,w(i),e.name||"bin_"+x(i))},an.Definition={type:"Collect",metadata:{source:!0},params:[{name:"sort",type:"compare"}]},ce(an,Nt).transform=function(e,t){var n=t.fork(t.ALL),i=on(Te,this.value,n.materialize(n.ADD).add),r=e.sort,o=t.changed()||r&&(e.modified("sort")||t.modified(r.fields));return n.visit(n.REM,i.remove),this.modified(o),this.value=n.source=i.data(r,o),t.source&&t.source.root&&(this.value.root=t.source.root),n},ce(sn,qe),un.Definition={type:"CountPattern",metadata:{generates:!0,changes:!0},params:[{name:"field",type:"field",required:!0},{name:"case",type:"enum",values:["upper","lower","mixed"],default:"mixed"},{name:"pattern",type:"string",default:'[\\w"]+'},{name:"stopwords",type:"string",default:""},{name:"as",type:"string",array:!0,length:2,default:["text","count"]}]};var cn=ce(un,Nt);function dn(e){Nt.call(this,null,e)}cn.transform=function(e,t){function n(t){return function(n){for(var i,r=function(e,t,n){switch(t){case"upper":e=e.toUpperCase();break;case"lower":e=e.toLowerCase()}return e.match(n)}(s(n),e.case,o)||[],l=0,u=r.length;l<u;++l)a.test(i=r[l])||t(i)}}var i=this._parameterCheck(e,t),r=this._counts,o=this._match,a=this._stop,s=e.field,l=e.as||["text","count"],u=n(function(e){r[e]=1+(r[e]||0)}),c=n(function(e){r[e]-=1});return i?t.visit(t.SOURCE,u):(t.visit(t.ADD,u),t.visit(t.REM,c)),this._finish(t,l)},cn._parameterCheck=function(e,t){var n=!1;return!e.modified("stopwords")&&this._stop||(this._stop=new RegExp("^"+(e.stopwords||"")+"$","i"),n=!0),!e.modified("pattern")&&this._match||(this._match=new RegExp(e.pattern||"[\\w']+","g"),n=!0),(e.modified("field")||t.modified(e.field.fields))&&(n=!0),n&&(this._counts={}),n},cn._finish=function(e,t){var n,i,r,o=this._counts,a=this._tuples||(this._tuples={}),s=t[0],l=t[1],u=e.fork(e.NO_SOURCE|e.NO_FIELDS);for(n in o)i=a[n],r=o[n]||0,!i&&r?(a[n]=i=Fe({}),i[s]=n,i[l]=r,u.add.push(i)):0===r?(i&&u.rem.push(i),o[n]=null,a[n]=null):i[l]!==r&&(i[l]=r,u.mod.push(i));return u.modifies(t)},dn.Definition={type:"Cross",metadata:{generates:!0},params:[{name:"filter",type:"expr"},{name:"as",type:"string",array:!0,length:2,default:["a","b"]}]},ce(dn,Nt).transform=function(e,t){var n=t.fork(t.NO_SOURCE),i=this.value,r=e.as||["a","b"],o=r[0],a=r[1];return!i||t.changed(t.ADD_REM)||e.modified("as")||e.modified("filter")?(i&&(n.rem=i),i=t.materialize(t.SOURCE).source,n.add=this.value=function(e,t,n,i){for(var r,o,a=[],s={},l=e.length,u=0;u<l;++u)for(s[t]=o=e[u],r=0;r<l;++r)s[n]=e[r],i(s)&&(a.push(Fe(s)),(s={})[t]=o);return a}(i,o,a,e.filter||z)):n.mod=i,n.source=this.value,n.modifies(r)};var fn={kde:function(e,t){var n=Qt(),i={},r=0;return i.data=function(n){return arguments.length?(e=n,r=n?n.length:0,i.bandwidth(t)):e},i.bandwidth=function(n){return arguments.length?(!(t=n)&&e&&(o=(r=e).length,s=Xt(r),l=(s[2]-s[0])/1.34,t=1.06*Math.min(Math.sqrt(Object(a.p)(r)),l)*Math.pow(o,-.2)),i):t;var r,o,s,l},i.sample=function(){return e[~~(Jt()*r)]+t*n.sample()},i.pdf=function(i){for(var o=0,a=0;a<r;++a)o+=n.pdf((i-e[a])/t);return o/t/r},i.cdf=function(i){for(var o=0,a=0;a<r;++a)o+=n.cdf((i-e[a])/t);return o/r},i.icdf=function(){throw Error("KDE icdf not supported.")},i.data(e)},mixture:function(e,t){var n,i={},r=0;return i.weights=function(e){return arguments.length?(n=function(e){var t,n=[],i=0;for(t=0;t<r;++t)i+=n[t]=null==e[t]?1:+e[t];for(t=0;t<r;++t)n[t]/=i;return n}(t=e||[]),i):t},i.distributions=function(n){return arguments.length?(n?(r=n.length,e=n):(r=0,e=[]),i.weights(t)):e},i.sample=function(){for(var t=Jt(),i=e[r-1],o=n[0],a=0;a<r-1;o+=n[++a])if(t<o){i=e[a];break}return i.sample()},i.pdf=function(t){for(var i=0,o=0;o<r;++o)i+=n[o]*e[o].pdf(t);return i},i.cdf=function(t){for(var i=0,o=0;o<r;++o)i+=n[o]*e[o].cdf(t);return i},i.icdf=function(){throw Error("Mixture icdf not supported.")},i.distributions(e).weights(t)},normal:Qt,uniform:function(e,t){null==t&&(t=null==e?1:e,e=0);var n,i,r,o={};return o.min=function(e){return arguments.length?(r=i-(n=e||0),o):n},o.max=function(e){return arguments.length?(r=(i=e||0)-n,o):i},o.sample=function(){return n+r*Jt()},o.pdf=function(e){return e>=n&&e<=i?1/r:0},o.cdf=function(e){return e<n?0:e>i?1:(e-n)/r},o.icdf=function(e){return e>=0&&e<=1?n+e*r:NaN},o.min(e).max(t)}},hn="distributions",pn="function",gn="field";function mn(e){Nt.call(this,null,e)}var yn=[{key:{function:"normal"},params:[{name:"mean",type:"number",default:0},{name:"stdev",type:"number",default:1}]},{key:{function:"uniform"},params:[{name:"min",type:"number",default:0},{name:"max",type:"number",default:1}]},{key:{function:"kde"},params:[{name:"field",type:"field",required:!0},{name:"from",type:"data"},{name:"bandwidth",type:"number",default:0}]}],bn={key:{function:"mixture"},params:[{name:"distributions",type:"param",array:!0,params:yn},{name:"weights",type:"number",array:!0}]};function vn(e){qe.call(this,null,_n,e),this.modified(!0)}function _n(e){var t=e.expr;return this.value&&!e.modified("expr")?this.value:_(function(n){return t(n,e)},w(t),x(t))}function xn(e){Nt.call(this,[void 0,void 0],e)}function wn(e,t){qe.call(this,e),this.parent=t}mn.Definition={type:"Density",metadata:{generates:!0},params:[{name:"extent",type:"number",array:!0,length:2},{name:"steps",type:"number",default:100},{name:"method",type:"string",default:"pdf",values:["pdf","cdf"]},{name:"distribution",type:"param",params:yn.concat(bn)},{name:"as",type:"string",array:!0,default:["value","density"]}]},ce(mn,Nt).transform=function(e,t){var n=t.fork(t.NO_SOURCE|t.NO_FIELDS);if(!this.value||t.changed()||e.modified()){var i=function e(t,n){var i=t[pn];fn.hasOwnProperty(i)||k("Unknown distribution function: "+i);var r=fn[i]();for(var o in t)o===gn?r.data((t.from||n()).map(t[o])):o===hn?r[o](t[o].map(function(t){return e(t,n)})):typeof r[o]===pn&&r[o](t[o]);return r}(e.distribution,function(e){return function(){return e.materialize(e.SOURCE).source}}(t)),r=e.method||"pdf";"pdf"!==r&&"cdf"!==r&&k("Invalid density method: "+r),e.extent||i.data||k("Missing density extent parameter."),r=i[r];var o=e.as||["value","density"],s=e.extent||Object(a.f)(i.data()),l=(s[1]-s[0])/(e.steps||100),u=Object(a.m)(s[0],s[1]+l/2,l).map(function(e){var t={};return t[o[0]]=e,t[o[1]]=r(e),Fe(t)});this.value&&(n.rem=this.value),this.value=n.add=n.source=u}return n},ce(vn,qe),xn.Definition={type:"Extent",metadata:{},params:[{name:"field",type:"field",required:!0}]},ce(xn,Nt).transform=function(e,t){var n,i=this.value,r=e.field,o=i[0],a=i[1];((n=t.changed()||t.modified(r.fields)||e.modified("field"))||null==o)&&(o=1/0,a=-1/0),t.visit(n?t.SOURCE:t.ADD,function(e){var t=r(e);null!=t&&((t=+t)<o&&(o=t),t>a&&(a=t))}),isFinite(o)&&isFinite(a)||(o=a=void 0),this.value=[o,a]};var kn=ce(wn,qe);function Dn(e){Nt.call(this,{},e),this._keys=ue();var t=this._targets=[];t.active=0,t.forEach=function(e){for(var n=0,i=t.active;n<i;++n)e(t[n],n,t)}}kn.connect=function(e){return this.targets().add(e),e.source=this},kn.add=function(e){this.value.add.push(e)},kn.rem=function(e){this.value.rem.push(e)},kn.mod=function(e){this.value.mod.push(e)},kn.init=function(e){this.value.init(e,e.NO_SOURCE)},kn.evaluate=function(){return this.value};var An=ce(Dn,Nt);function On(e){qe.call(this,null,Cn,e)}function Cn(e){return this.value&&!e.modified()?this.value:A(e.name)?ne(e.name).map(function(e){return S(e)}):S(e.name,e.as)}function Tn(e){Nt.call(this,ue(),e)}function Sn(e,t){return e?e.map(function(e,n){return t[n]||x(e)}):null}function Fn(e){Nt.call(this,[],e)}function jn(e){Nt.call(this,[],e)}function En(e){Nt.call(this,null,e)}function $n(e){Nt.call(this,[],e)}An.activate=function(e){this._targets[this._targets.active++]=e},An.subflow=function(e,t,n,i){var r,o,a=this.value,s=a.hasOwnProperty(e)&&a[e];return s?s.value.stamp<n.stamp&&(s.init(n),this.activate(s)):(o=i||(o=this._group[e])&&o.tuple,s=(r=n.dataflow).add(new wn(n.fork(n.NO_SOURCE),this)).connect(t(r,e,o)),a[e]=s,this.activate(s)),s},An.transform=function(e,t){var n=t.dataflow,i=this,r=e.key,o=e.subflow,a=this._keys,s=e.modified("key");function l(e){return i.subflow(e,o,t)}return this._group=e.group||{},this._targets.active=0,t.visit(t.REM,function(e){var t=Te(e),n=a.get(t);void 0!==n&&(a.delete(t),l(n).rem(e))}),t.visit(t.ADD,function(e){var t=r(e);a.set(Te(e),t),l(t).add(e)}),s||t.modified(r.fields)?t.visit(t.MOD,function(e){var t=Te(e),n=a.get(t),i=r(e);n===i?l(i).mod(e):(a.set(t,i),l(n).rem(e),l(i).add(e))}):t.changed(t.MOD)&&t.visit(t.MOD,function(e){l(a.get(Te(e))).mod(e)}),s&&t.visit(t.REFLOW,function(e){var t=Te(e),n=a.get(t),i=r(e);n!==i&&(a.set(t,i),l(n).rem(e),l(i).add(e))}),a.empty>n.cleanThreshold&&n.runAfter(a.clean),t},ce(On,qe),Tn.Definition={type:"Filter",metadata:{changes:!0},params:[{name:"expr",type:"expr",required:!0}]},ce(Tn,Nt).transform=function(e,t){var n=t.dataflow,i=this.value,r=t.fork(),o=r.add,a=r.rem,s=r.mod,l=e.expr,u=!0;function c(t){var n=Te(t),r=l(t,e),c=i.get(n);r&&c?(i.delete(n),o.push(t)):r||c?u&&r&&!c&&s.push(t):(i.set(n,1),a.push(t))}return t.visit(t.REM,function(e){var t=Te(e);i.has(t)?i.delete(t):a.push(e)}),t.visit(t.ADD,function(t){l(t,e)?o.push(t):i.set(Te(t),1)}),t.visit(t.MOD,c),e.modified()&&(u=!1,t.visit(t.REFLOW,c)),i.empty>n.cleanThreshold&&n.runAfter(i.clean),r},Fn.Definition={type:"Flatten",metadata:{generates:!0},params:[{name:"fields",type:"field",array:!0,required:!0},{name:"as",type:"string",array:!0}]},ce(Fn,Nt).transform=function(e,t){var n=t.fork(t.NO_SOURCE),i=e.fields,r=Sn(i,e.as||[]),o=r.length;return n.rem=this.value,t.visit(t.SOURCE,function(e){for(var t,a,s,l=i.map(function(t){return t(e)}),u=l.reduce(function(e,t){return Math.max(e,t.length)},0),c=0;c<u;++c){for(a=je(e),t=0;t<o;++t)a[r[t]]=null==(s=l[t][c])?null:s;n.add.push(a)}}),this.value=n.source=n.add,n.modifies(r)},jn.Definition={type:"Fold",metadata:{generates:!0},params:[{name:"fields",type:"field",array:!0,required:!0},{name:"as",type:"string",array:!0,length:2,default:["key","value"]}]},ce(jn,Nt).transform=function(e,t){var n=t.fork(t.NO_SOURCE),i=e.fields,r=i.map(x),o=e.as||["key","value"],a=o[0],s=o[1],l=i.length;return n.rem=this.value,t.visit(t.SOURCE,function(e){for(var t,o=0;o<l;++o)(t=je(e))[a]=r[o],t[s]=i[o](e),n.add.push(t)}),this.value=n.source=n.add,n.modifies(o)},En.Definition={type:"Formula",metadata:{modifies:!0},params:[{name:"expr",type:"expr",required:!0},{name:"as",type:"string",required:!0},{name:"initonly",type:"boolean"}]},ce(En,Nt).transform=function(e,t){var n=e.expr,i=e.as,r=e.modified(),o=e.initonly?t.ADD:r?t.SOURCE:t.modified(n.fields)?t.ADD_MOD:t.ADD;return r&&(t=t.materialize().reflow(!0)),e.initonly||t.modifies(i),t.visit(o,function(t){t[i]=n(t,e)})},ce($n,Nt).transform=function(e,t){var n,i,r,o=this.value,a=t.fork(t.ALL),s=e.size-o.length,l=e.generator;if(s>0){for(n=[];--s>=0;)n.push(r=Fe(l(e))),o.push(r);a.add=a.add.length?a.materialize(a.ADD).add.concat(n):n}else i=o.slice(0,-s),a.rem=a.rem.length?a.materialize(a.REM).rem.concat(i):i,o=o.slice(-s);return a.source=this.value=o,a};var Mn={value:"value",median:a.i,mean:a.h,min:a.j,max:a.g},zn=[];function Nn(e){Nt.call(this,[],e)}function Bn(e){en.call(this,e)}Nn.Definition={type:"Impute",metadata:{changes:!0},params:[{name:"field",type:"field",required:!0},{name:"key",type:"field",required:!0},{name:"keyvals",array:!0},{name:"groupby",type:"field",array:!0},{name:"method",type:"enum",default:"value",values:["value","mean","median","max","min"]},{name:"value",default:0}]},ce(Nn,Nt).transform=function(e,t){var n,i,r,o,a,s,l,u,c,d,f=t.fork(t.ALL),h=function(e){var t,n=e.method||Mn.value;if(null!=Mn[n])return n===Mn.value?(t=void 0!==e.value?e.value:0,function(){return t}):Mn[n];k("Unrecognized imputation method: "+n)}(e),p=function(e){var t=e.field;return function(e){return e?t(e):NaN}}(e),g=x(e.field),m=x(e.key),y=(e.groupby||[]).map(x),b=function(e,t,n,i){var r,o,a,s,l,u,c,d,f=function(e){return e(d)},h=[],p=i?i.slice():[],g={},m={};for(p.forEach(function(e,t){g[e]=t+1}),s=0,c=e.length;s<c;++s)d=e[s],u=n(d),l=g[u]||(g[u]=p.push(u)),o=(r=t?t.map(f):zn)+"",(a=m[o])||(a=m[o]=[],h.push(a),a.values=r),a[l-1]=d;return h.domain=p,h}(t.source,e.groupby,e.key,e.keyvals),v=[],_=this.value,w=b.domain.length;for(a=0,u=b.length;a<u;++a)for(r=(n=b[a]).values,i=NaN,l=0;l<w;++l)if(null==n[l]){for(o=b.domain[l],d={_impute:!0},s=0,c=r.length;s<c;++s)d[y[s]]=r[s];d[m]=o,d[g]=isNaN(i)?i=h(n,p):i,v.push(Fe(d))}return v.length&&(f.add=f.materialize(f.ADD).add.concat(v)),_.length&&(f.rem=f.materialize(f.REM).rem.concat(_)),this.value=v,f},Bn.Definition={type:"JoinAggregate",metadata:{modifies:!0},params:[{name:"groupby",type:"field",array:!0},{name:"fields",type:"field",null:!0,array:!0},{name:"ops",type:"enum",array:!0,values:Rt},{name:"as",type:"string",null:!0,array:!0},{name:"key",type:"field"}]};var Pn=ce(Bn,en);function In(e){qe.call(this,null,Ln,e)}function Ln(e){return this.value&&!e.modified()?this.value:pe(e.fields,e.flat)}function qn(e){Nt.call(this,[],e)}function Rn(e,t,n){n.forEach(Fe);const i=t.fork(t.NO_FIELDS&t.NO_SOURCE);return i.rem=e.value,e.value=i.add=i.source=n,i}function Un(e){Nt.call(this,{},e)}function Wn(e){qe.call(this,null,Vn,e)}function Vn(e){if(this.value&&!e.modified())return this.value;var t,n,i,r=1/0,o=-1/0,a=e.extents;for(t=0,n=a.length;t<n;++t)(i=a[t])[0]<r&&(r=i[0]),i[1]>o&&(o=i[1]);return[r,o]}function Hn(e){qe.call(this,null,Yn,e)}function Yn(e){return this.value&&!e.modified()?this.value:e.values.reduce(function(e,t){return e.concat(t)},[])}function Gn(e){Nt.call(this,null,e)}function Jn(e){en.call(this,e)}Pn.transform=function(e,t){var n,i=this,r=e.modified();return i.value&&(r||t.modified(i._inputs))?(n=i.value=r?i.init(e):{},t.visit(t.SOURCE,function(e){i.add(e)})):(n=i.value=i.value||this.init(e),t.visit(t.REM,function(e){i.rem(e)}),t.visit(t.ADD,function(e){i.add(e)})),i.changes(),t.visit(t.SOURCE,function(e){se(e,n[i.cellkey(e)].tuple)}),t.reflow(r).modifies(this._outputs)},Pn.changes=function(){var e,t,n=this._adds,i=this._mods;for(e=0,t=this._alen;e<t;++e)this.celltuple(n[e]),n[e]=null;for(e=0,t=this._mlen;e<t;++e)this.celltuple(i[e]),i[e]=null;this._alen=this._mlen=0},ce(In,qe),ce(qn,Nt).transform=function(e,t){const n=t.dataflow;return e.values?Rn(this,t,n.parse(e.values,e.format)):n.request(e.url,e.format).then(e=>Rn(this,t,e.data||[]))},Un.Definition={type:"Lookup",metadata:{modifies:!0},params:[{name:"index",type:"index",params:[{name:"from",type:"data",required:!0},{name:"key",type:"field",required:!0}]},{name:"values",type:"field",array:!0},{name:"fields",type:"field",array:!0,required:!0},{name:"as",type:"string",array:!0},{name:"default",default:null}]},ce(Un,Nt).transform=function(e,t){var n,i,r=t,o=e.as,a=e.fields,s=e.index,l=e.values,u=null==e.default?null:e.default,c=e.modified(),d=c?t.SOURCE:t.ADD,f=a.length;return l?(i=l.length,f>1&&!o&&k('Multi-field lookup requires explicit "as" parameter.'),o&&o.length!==f*i&&k('The "as" parameter has too few output field names.'),o=o||l.map(x),n=function(e){for(var t,n,r=0,c=0;r<f;++r)if(null==(n=s.get(a[r](e))))for(t=0;t<i;++t,++c)e[o[c]]=u;else for(t=0;t<i;++t,++c)e[o[c]]=l[t](n)}):(o||k("Missing output field names."),n=function(e){for(var t,n=0;n<f;++n)t=s.get(a[n](e)),e[o[n]]=null==t?u:t}),c?r=t.reflow(!0):d|=a.some(function(e){return t.modified(e.fields)})?t.MOD:0,t.visit(d,n),r.modifies(o)},ce(Wn,qe),ce(Hn,qe),ce(Gn,Nt),Gn.prototype.transform=function(e,t){return this.modified(e.modified()),this.value=e,t.fork(t.NO_SOURCE|t.NO_FIELDS)},Jn.Definition={type:"Pivot",metadata:{generates:!0,changes:!0},params:[{name:"groupby",type:"field",array:!0},{name:"field",type:"field",required:!0},{name:"value",type:"field",required:!0},{name:"op",type:"enum",values:Rt,default:"sum"},{name:"limit",type:"number",default:0},{name:"key",type:"field"}]};var Xn=ce(Jn,en);function Qn(e){Dn.call(this,e)}function Kn(e){Nt.call(this,null,e)}function Zn(e){Nt.call(this,null,e)}function ei(e){Nt.call(this,null,e)}function ti(e){Nt.call(this,[],e),this.count=0}function ni(e){Nt.call(this,null,e)}function ii(e){Nt.call(this,null,e),this.modified(!0)}function ri(e){Nt.call(this,ue(),e)}function oi(e){Nt.call(this,null,e)}Xn._transform=Xn.transform,Xn.transform=function(e,t){return this._transform(function(e,t){var n=e.field,i=e.value,r=("count"===e.op?"__count__":e.op)||"sum",o=w(n).concat(w(i)),a=function(e,t,n){var i={},r=[];return n.visit(n.SOURCE,function(t){var n=e(t);i[n]||(i[n]=1,r.push(n))}),r.sort(function(e,t){return(e<t||null==e)&&null!=t?-1:(e>t||null==t)&&null!=e?1:(t=t instanceof Date?+t:t,(e=e instanceof Date?+e:e)!==e&&t==t?-1:t!=t&&e==e?1:0)}),t?r.slice(0,t):r}(n,e.limit||0,t);return{key:e.key,groupby:e.groupby,ops:a.map(function(){return r}),fields:a.map(function(e){return function(e,t,n,i){return _(function(i){return t(i)===e?n(i):NaN},i,e+"")}(e,n,i,o)}),as:a.map(function(e){return e+""}),modified:e.modified.bind(e)}}(e,t),t)},ce(Qn,Dn).transform=function(e,t){var n=this,i=e.subflow,r=e.field;return(e.modified("field")||r&&t.modified(w(r)))&&k("PreFacet does not support field modification."),this._targets.active=0,t.visit(t.MOD,function(e){var o=n.subflow(Te(e),i,t,e);r?r(e).forEach(function(e){o.mod(e)}):o.mod(e)}),t.visit(t.ADD,function(e){var o=n.subflow(Te(e),i,t,e);r?r(e).forEach(function(e){o.add(Fe(e))}):o.add(e)}),t.visit(t.REM,function(e){var o=n.subflow(Te(e),i,t,e);r?r(e).forEach(function(e){o.rem(e)}):o.rem(e)}),t},Kn.Definition={type:"Project",metadata:{generates:!0,changes:!0},params:[{name:"fields",type:"field",array:!0},{name:"as",type:"string",null:!0,array:!0}]},ce(Kn,Nt).transform=function(e,t){var n,i,r=e.fields,o=Sn(e.fields,e.as||[]),a=r?function(e,t){return function(e,t,n,i){for(var r=0,o=n.length;r<o;++r)t[i[r]]=n[r](e);return t}(e,t,r,o)}:Ee;return this.value?i=this.value:(t=t.addAll(),i=this.value={}),n=t.fork(t.NO_SOURCE),t.visit(t.REM,function(e){var t=Te(e);n.rem.push(i[t]),i[t]=null}),t.visit(t.ADD,function(e){var t=a(e,Fe({}));i[Te(e)]=t,n.add.push(t)}),t.visit(t.MOD,function(e){n.mod.push(a(e,i[Te(e)]))}),n},ce(Zn,Nt).transform=function(e,t){return this.value=e.value,e.modified("value")?t.fork(t.NO_SOURCE|t.NO_FIELDS):t.StopPropagation},ce(ei,Nt).transform=function(e,t){var n,i;return this.value?i=this.value:(n=t=t.addAll(),i=this.value={}),e.derive&&(n=t.fork(t.NO_SOURCE),t.visit(t.REM,function(e){var t=Te(e);n.rem.push(i[t]),i[t]=null}),t.visit(t.ADD,function(e){var t=je(e);i[Te(e)]=t,n.add.push(t)}),t.visit(t.MOD,function(e){n.mod.push(Ee(e,i[Te(e)]))})),n},ti.Definition={type:"Sample",metadata:{},params:[{name:"size",type:"number",default:1e3}]},ce(ti,Nt).transform=function(e,t){var n=t.fork(t.NO_SOURCE),i=e.modified("size"),r=e.size,o=this.value,a=this.count,s=0,l=o.reduce(function(e,t){return e[Te(t)]=1,e},{});function u(e){var t,i;o.length<r?o.push(e):(i=~~((a+1)*Jt()))<o.length&&i>=s&&(t=o[i],l[Te(t)]&&n.rem.push(t),o[i]=e),++a}if(t.rem.length&&(t.visit(t.REM,function(e){var t=Te(e);l[t]&&(l[t]=-1,n.rem.push(e)),--a}),o=o.filter(function(e){return-1!==l[Te(e)]})),(t.rem.length||i)&&o.length<r&&t.source&&(s=a=o.length,t.visit(t.SOURCE,function(e){l[Te(e)]||u(e)}),s=-1),i&&o.length>r){for(var c=0,d=o.length-r;c<d;++c)l[Te(o[c])]=-1,n.rem.push(o[c]);o=o.slice(d)}return t.mod.length&&t.visit(t.MOD,function(e){l[Te(e)]&&n.mod.push(e)}),t.add.length&&t.visit(t.ADD,u),(t.add.length||s<0)&&(n.add=o.filter(function(e){return!l[Te(e)]})),this.count=a,this.value=n.source=o,n},ni.Definition={type:"Sequence",metadata:{changes:!0},params:[{name:"start",type:"number",required:!0},{name:"stop",type:"number",required:!0},{name:"step",type:"number",default:1},{name:"as",type:"string",default:"data"}]},ce(ni,Nt).transform=function(e,t){if(!this.value||e.modified()){var n=t.materialize().fork(t.MOD),i=e.as||"data";return n.rem=this.value?t.rem.concat(this.value):t.rem,this.value=Object(a.m)(e.start,e.stop,e.step||1).map(function(e){var t={};return t[i]=e,Fe(t)}),n.add=t.add.concat(this.value),n}},ce(ii,Nt).transform=function(e,t){return this.value=t.source,t.changed()?t.fork(t.NO_SOURCE|t.NO_FIELDS):t.StopPropagation},ce(ri,Nt).transform=function(e,t){var n=t.dataflow,i=e.field,r=this.value,o=!0;function a(e){r.set(i(e),e)}return e.modified("field")||t.modified(i.fields)?(r.clear(),t.visit(t.SOURCE,a)):t.changed()?(t.visit(t.REM,function(e){r.delete(i(e))}),t.visit(t.ADD,a)):o=!1,this.modified(o),r.empty>n.cleanThreshold&&n.runAfter(r.clean),t.fork()},ce(oi,Nt).transform=function(e,t){(!this.value||e.modified("field")||e.modified("sort")||t.changed()||e.sort&&t.modified(e.sort.fields))&&(this.value=(e.sort?t.source.slice().sort(e.sort):t.source).map(e.field))};var ai={row_number:function(){return{next:function(e){return e.index+1}}},rank:function(){var e;return{init:function(){e=1},next:function(t){var n=t.index,i=t.data;return n&&t.compare(i[n-1],i[n])?e=n+1:e}}},dense_rank:function(){var e;return{init:function(){e=1},next:function(t){var n=t.index,i=t.data;return n&&t.compare(i[n-1],i[n])?++e:e}}},percent_rank:function(){var e=ai.rank(),t=e.next;return{init:e.init,next:function(e){return(t(e)-1)/(e.data.length-1)}}},cume_dist:function(){var e;return{init:function(){e=0},next:function(t){var n=t.index,i=t.data,r=t.compare;if(e<n){for(;n+1<i.length&&!r(i[n],i[n+1]);)++n;e=n}return(1+e)/i.length}}},ntile:function(e,t){(t=+t)>0||k("ntile num must be greater than zero.");var n=ai.cume_dist(),i=n.next;return{init:n.init,next:function(e){return Math.ceil(t*i(e))}}},lag:function(e,t){return t=+t||1,{next:function(n){var i=n.index-t;return i>=0?e(n.data[i]):null}}},lead:function(e,t){return t=+t||1,{next:function(n){var i=n.index+t,r=n.data;return i<r.length?e(r[i]):null}}},first_value:function(e){return{next:function(t){return e(t.data[t.i0])}}},last_value:function(e){return{next:function(t){return e(t.data[t.i1-1])}}},nth_value:function(e,t){return(t=+t)>0||k("nth_value nth must be greater than zero."),{next:function(n){var i=n.i0+(t-1);return i<n.i1?e(n.data[i]):null}}}},si=Object.keys(ai);function li(e){var t=ne(e.ops),n=ne(e.fields),i=ne(e.params),r=ne(e.as),o=this.outputs=[],a=this.windows=[],s={},l={},u=!0,c=[],d=[];function f(e){ne(w(e)).forEach(function(e){s[e]=1})}f(e.sort),t.forEach(function(e,t){var s=n[t],h=x(s),p=Lt(e,h,r[t]);if(f(s),o.push(p),ai.hasOwnProperty(e))a.push(function(e,t,n,i){var r=ai[e](t,n);return{init:r.init||$,update:function(e,t){t[i]=r.next(e)}}}(e,n[t],i[t],p));else{if(null==s&&"count"!==e&&k("Null aggregate field specified."),"count"===e)return void c.push(p);u=!1;var g=l[h];g||((g=l[h]=[]).field=s,d.push(g)),g.push(Ut(e,p))}}),(c.length||d.length)&&(this.cell=function(e,t,n){e=e.map(function(e){return Ht(e,e.field)});var i={num:0,agg:null,store:!1,count:t};if(!n)for(var r=e.length,o=i.agg=Array(r),a=0;a<r;++a)o[a]=new e[a](i);if(i.store)var s=i.data=new Kt;return i.add=function(e){if(i.num+=1,!n){s&&s.add(e);for(var t=0;t<r;++t)o[t].add(o[t].get(e),e)}},i.rem=function(e){if(i.num-=1,!n){s&&s.rem(e);for(var t=0;t<r;++t)o[t].rem(o[t].get(e),e)}},i.set=function(e){var r,a;for(s&&s.values(),r=0,a=t.length;r<a;++r)e[t[r]]=i.num;if(!n)for(r=0,a=o.length;r<a;++r)o[r].set(e)},i.init=function(){i.num=0,s&&s.reset();for(var e=0;e<r;++e)o[e].init()},i}(d,c,u)),this.inputs=Object.keys(s)}var ui=li.prototype;function ci(e){Nt.call(this,{},e),this._mlen=0,this._mods=[]}ui.init=function(){this.windows.forEach(function(e){e.init()}),this.cell&&this.cell.init()},ui.update=function(e,t){var n,i=this.cell,r=this.windows,o=e.data,a=r&&r.length;if(i){for(n=e.p0;n<e.i0;++n)i.rem(o[n]);for(n=e.p1;n<e.i1;++n)i.add(o[n]);i.set(t)}for(n=0;n<a;++n)r[n].update(e,t)},ci.Definition={type:"Window",metadata:{modifies:!0},params:[{name:"sort",type:"compare"},{name:"groupby",type:"field",array:!0},{name:"ops",type:"enum",array:!0,values:si.concat(Rt)},{name:"params",type:"number",null:!0,array:!0},{name:"fields",type:"field",null:!0,array:!0},{name:"as",type:"string",null:!0,array:!0},{name:"frame",type:"number",null:!0,array:!0,length:2,default:[null,0]},{name:"ignorePeers",type:"boolean",default:!1}]};var di=ce(ci,Nt);function fi(e,t,n){var i=n.sort,r=i&&!n.ignorePeers,o=n.frame||[null,0],s=e.data(i),l=s.length,u=0,c=r?Object(a.e)(i):null,d={i0:0,i1:0,p0:0,p1:0,index:0,data:s,compare:i||oe(-1)};for(t.init();u<l;++u)hi(d,o,u,l),r&&pi(d,c),t.update(d,s[u])}function hi(e,t,n,i){e.p0=e.i0,e.p1=e.i1,e.i0=null==t[0]?0:Math.max(0,n-Math.abs(t[0])),e.i1=null==t[1]?i:Math.min(i,n+Math.abs(t[1])+1),e.index=n}function pi(e,t){var n=e.i0,i=e.i1-1,r=e.compare,o=e.data,a=o.length-1;n>0&&!r(o[n],o[n-1])&&(e.i0=t.left(o,o[n])),i<a&&!r(o[i],o[i+1])&&(e.i1=t.right(o,o[i]))}di.transform=function(e,t){var n,i,r=this,o=r.state,a=e.modified();this.stamp=t.stamp,o&&!a||(o=r.state=new li(e));var s=It(e.groupby);function l(e){return r.group(s(e))}for(a||t.modified(o.inputs)?(r.value={},t.visit(t.SOURCE,function(e){l(e).add(e)})):(t.visit(t.REM,function(e){l(e).remove(e)}),t.visit(t.ADD,function(e){l(e).add(e)})),n=0,i=r._mlen;n<i;++n)fi(r._mods[n],o,e);return r._mlen=0,r._mods=[],t.reflow(a).modifies(o.outputs)},di.group=function(e){var t=this.value[e];return t||((t=this.value[e]=on(Te)).stamp=-1),t.stamp<this.stamp&&(t.stamp=this.stamp,this._mods[this._mlen++]=t),t};var gi=Object.freeze({aggregate:en,bin:nn,collect:an,compare:sn,countpattern:un,cross:dn,density:mn,expression:vn,extent:xn,facet:Dn,field:On,filter:Tn,flatten:Fn,fold:jn,formula:En,generate:$n,impute:Nn,joinaggregate:Bn,key:In,load:qn,lookup:Un,multiextent:Wn,multivalues:Hn,params:Gn,pivot:Jn,prefacet:Qn,project:Kn,proxy:Zn,relay:ei,sample:ti,sequence:ni,sieve:ii,subflow:wn,tupleindex:ri,values:oi,window:ci}),mi="top",yi="left",bi="right",vi="bottom",_i="top-left",xi="top-right",wi="bottom-left",ki="bottom-right",Di="start",Ai="end",Oi="group",Ci="axis",Ti="title",Si="frame",Fi="scope",ji="legend",Ei="row-header",$i="row-footer",Mi="row-title",zi="column-header",Ni="column-footer",Bi="column-title",Pi="padding",Ii="symbol",Li="fit",qi="fit-x",Ri="fit-y",Ui="pad",Wi="none",Vi="all",Hi="each",Yi="flush",Gi="column",Ji="row";function Xi(e){this.clear(),e&&this.union(e)}var Qi=Xi.prototype;Qi.clone=function(){return new Xi(this)},Qi.clear=function(){return this.x1=+Number.MAX_VALUE,this.y1=+Number.MAX_VALUE,this.x2=-Number.MAX_VALUE,this.y2=-Number.MAX_VALUE,this},Qi.empty=function(){return this.x1===+Number.MAX_VALUE&&this.y1===+Number.MAX_VALUE&&this.x2===-Number.MAX_VALUE&&this.y2===-Number.MAX_VALUE},Qi.set=function(e,t,n,i){return n<e?(this.x2=e,this.x1=n):(this.x1=e,this.x2=n),i<t?(this.y2=t,this.y1=i):(this.y1=t,this.y2=i),this},Qi.add=function(e,t){return e<this.x1&&(this.x1=e),t<this.y1&&(this.y1=t),e>this.x2&&(this.x2=e),t>this.y2&&(this.y2=t),this},Qi.expand=function(e){return this.x1-=e,this.y1-=e,this.x2+=e,this.y2+=e,this},Qi.round=function(){return this.x1=Math.floor(this.x1),this.y1=Math.floor(this.y1),this.x2=Math.ceil(this.x2),this.y2=Math.ceil(this.y2),this},Qi.translate=function(e,t){return this.x1+=e,this.x2+=e,this.y1+=t,this.y2+=t,this},Qi.rotate=function(e,t,n){const i=this.rotatedPoints(e,t,n);return this.clear().add(i[0],i[1]).add(i[2],i[3]).add(i[4],i[5]).add(i[6],i[7])},Qi.rotatedPoints=function(e,t,n){var{x1:i,y1:r,x2:o,y2:a}=this,s=Math.cos(e),l=Math.sin(e),u=t-t*s+n*l,c=n-t*l-n*s;return[s*i-l*r+u,l*i+s*r+c,s*i-l*a+u,l*i+s*a+c,s*o-l*r+u,l*o+s*r+c,s*o-l*a+u,l*o+s*a+c]},Qi.union=function(e){return e.x1<this.x1&&(this.x1=e.x1),e.y1<this.y1&&(this.y1=e.y1),e.x2>this.x2&&(this.x2=e.x2),e.y2>this.y2&&(this.y2=e.y2),this},Qi.intersect=function(e){return e.x1>this.x1&&(this.x1=e.x1),e.y1>this.y1&&(this.y1=e.y1),e.x2<this.x2&&(this.x2=e.x2),e.y2<this.y2&&(this.y2=e.y2),this},Qi.encloses=function(e){return e&&this.x1<=e.x1&&this.x2>=e.x2&&this.y1<=e.y1&&this.y2>=e.y2},Qi.alignsWith=function(e){return e&&(this.x1==e.x1||this.x2==e.x2||this.y1==e.y1||this.y2==e.y2)},Qi.intersects=function(e){return e&&!(this.x2<e.x1||this.x1>e.x2||this.y2<e.y1||this.y1>e.y2)},Qi.contains=function(e,t){return!(e<this.x1||e>this.x2||t<this.y1||t>this.y2)},Qi.width=function(){return this.x2-this.x1},Qi.height=function(){return this.y2-this.y1};var Ki=0;function Zi(e){this.mark=e,this.bounds=this.bounds||new Xi}function er(e){Zi.call(this,e),this.items=this.items||[]}function tr(e,t){if("undefined"!=typeof document&&document.createElement){var n=document.createElement("canvas");if(n&&n.getContext)return n.width=e,n.height=t,n}return null}function nr(){return"undefined"!=typeof Image?Image:null}function ir(e){this._pending=0,this._loader=e||pt()}ce(er,Zi);var rr=ir.prototype;function or(e){e._pending+=1}function ar(e){e._pending-=1}rr.pending=function(){return this._pending},rr.sanitizeURL=function(e){var t=this;return or(t),t._loader.sanitize(e,{context:"href"}).then(function(e){return ar(t),e}).catch(function(){return ar(t),null})},rr.loadImage=function(e){var t=this,n=nr();return or(t),t._loader.sanitize(e,{context:"image"}).then(function(e){var i=e.href;if(!i||!n)throw{url:i};var r=new n;return r.onload=function(){ar(t),r.loaded=!0},r.onerror=function(){ar(t),r.loaded=!1},r.src=i,r}).catch(function(e){return ar(t),{loaded:!1,width:0,height:0,src:e&&e.url||""}})},rr.ready=function(){var e=this;return new Promise(function(t){!function n(i){e.pending()?setTimeout(function(){n(!0)},10):t(i)}(!1)})};var sr={basis:{curve:s.c},"basis-closed":{curve:s.d},"basis-open":{curve:s.e},bundle:{curve:s.f,tension:"beta",value:.85},cardinal:{curve:s.g,tension:"tension",value:0},"cardinal-open":{curve:s.i,tension:"tension",value:0},"cardinal-closed":{curve:s.h,tension:"tension",value:0},"catmull-rom":{curve:s.j,tension:"alpha",value:.5},"catmull-rom-closed":{curve:s.k,tension:"alpha",value:.5},"catmull-rom-open":{curve:s.l,tension:"alpha",value:.5},linear:{curve:s.m},"linear-closed":{curve:s.n},monotone:{horizontal:s.p,vertical:s.o},natural:{curve:s.q},step:{curve:s.r},"step-after":{curve:s.s},"step-before":{curve:s.t}};function lr(e,t,n){var i=sr.hasOwnProperty(e)&&sr[e],r=null;return i&&(r=i.curve||i[t||"vertical"],i.tension&&null!=n&&(r=r[i.tension](n))),r}var ur={m:2,l:2,h:1,v:1,c:6,s:4,q:4,t:2,a:7},cr=[/([MLHVCSQTAZmlhvcsqtaz])/g,/###/,/(\d)([-+])/g,/\s|,|###/];function dr(e){var t,n,i,r,o,a,s,l,u,c,d,f=[];for(l=0,c=(t=e.slice().replace(cr[0],"###$1").split(cr[1]).slice(1)).length;l<c;++l){for(i=(n=t[l]).slice(1).trim().replace(cr[2],"$1###$2").split(cr[3]),r=[a=n.charAt(0)],u=0,d=i.length;u<d;++u)(o=+i[u])===o&&r.push(o);if(s=ur[a.toLowerCase()],r.length-1>s)for(u=1,d=r.length;u<d;u+=s)f.push([a].concat(r.slice(u,u+s)));else f.push(r)}return f}var fr=Math.PI/180,hr=Math.PI/2,pr=2*Math.PI,gr=Math.sqrt(3)/2,mr={},yr={},br=[].join;function vr(e){var t=br.call(e);if(yr[t])return yr[t];var n=e[0],i=e[1],r=e[2],o=e[3],a=e[4],s=e[5],l=e[6],u=e[7],c=u*a,d=-l*s,f=l*a,h=u*s,p=Math.cos(r),g=Math.sin(r),m=Math.cos(o),y=Math.sin(o),b=.5*(o-r),v=Math.sin(.5*b),_=8/3*v*v/Math.sin(b),x=n+p-_*g,w=i+g+_*p,k=n+m,D=i+y,A=k+_*y,O=D-_*m;return yr[t]=[c*x+d*w,f*x+h*w,c*A+d*O,f*A+h*O,c*k+d*D,f*k+h*D]}var _r=["l",0,0,0,0,0,0,0];function xr(e,t){var n=_r[0]=e[0];if("a"===n||"A"===n)_r[1]=t*e[1],_r[2]=t*e[2],_r[3]=e[3],_r[4]=e[4],_r[5]=e[5],_r[6]=t*e[6],_r[7]=t*e[7];else for(var i=1,r=e.length;i<r;++i)_r[i]=t*e[i];return _r}function wr(e,t,n,i,r){var o,a,s,l,u,c=null,d=0,f=0,h=0,p=0;null==n&&(n=0),null==i&&(i=0),null==r&&(r=1),e.beginPath&&e.beginPath();for(var g=0,m=t.length;g<m;++g){switch(o=t[g],1!==r&&(o=xr(o,r)),o[0]){case"l":d+=o[1],f+=o[2],e.lineTo(d+n,f+i);break;case"L":d=o[1],f=o[2],e.lineTo(d+n,f+i);break;case"h":d+=o[1],e.lineTo(d+n,f+i);break;case"H":d=o[1],e.lineTo(d+n,f+i);break;case"v":f+=o[1],e.lineTo(d+n,f+i);break;case"V":f=o[1],e.lineTo(d+n,f+i);break;case"m":d+=o[1],f+=o[2],e.moveTo(d+n,f+i);break;case"M":d=o[1],f=o[2],e.moveTo(d+n,f+i);break;case"c":a=d+o[5],s=f+o[6],h=d+o[3],p=f+o[4],e.bezierCurveTo(d+o[1]+n,f+o[2]+i,h+n,p+i,a+n,s+i),d=a,f=s;break;case"C":d=o[5],f=o[6],h=o[3],p=o[4],e.bezierCurveTo(o[1]+n,o[2]+i,h+n,p+i,d+n,f+i);break;case"s":a=d+o[3],s=f+o[4],h=2*d-h,p=2*f-p,e.bezierCurveTo(h+n,p+i,d+o[1]+n,f+o[2]+i,a+n,s+i),h=d+o[1],p=f+o[2],d=a,f=s;break;case"S":a=o[3],s=o[4],h=2*d-h,p=2*f-p,e.bezierCurveTo(h+n,p+i,o[1]+n,o[2]+i,a+n,s+i),d=a,f=s,h=o[1],p=o[2];break;case"q":a=d+o[3],s=f+o[4],h=d+o[1],p=f+o[2],e.quadraticCurveTo(h+n,p+i,a+n,s+i),d=a,f=s;break;case"Q":a=o[3],s=o[4],e.quadraticCurveTo(o[1]+n,o[2]+i,a+n,s+i),d=a,f=s,h=o[1],p=o[2];break;case"t":a=d+o[1],s=f+o[2],null===c[0].match(/[QqTt]/)?(h=d,p=f):"t"===c[0]?(h=2*d-l,p=2*f-u):"q"===c[0]&&(h=2*d-h,p=2*f-p),l=h,u=p,e.quadraticCurveTo(h+n,p+i,a+n,s+i),f=s,h=(d=a)+o[1],p=f+o[2];break;case"T":a=o[1],s=o[2],h=2*d-h,p=2*f-p,e.quadraticCurveTo(h+n,p+i,a+n,s+i),d=a,f=s;break;case"a":kr(e,d+n,f+i,[o[1],o[2],o[3],o[4],o[5],o[6]+d+n,o[7]+f+i]),d+=o[6],f+=o[7];break;case"A":kr(e,d+n,f+i,[o[1],o[2],o[3],o[4],o[5],o[6]+n,o[7]+i]),d=o[6],f=o[7];break;case"z":case"Z":e.closePath()}c=o}}function kr(e,t,n,i){for(var r=function(e,t,n,i,r,o,a,s,l){var u=br.call(arguments);if(mr[u])return mr[u];var c=a*fr,d=Math.sin(c),f=Math.cos(c),h=f*(s-e)*.5+d*(l-t)*.5,p=f*(l-t)*.5-d*(s-e)*.5,g=h*h/((n=Math.abs(n))*n)+p*p/((i=Math.abs(i))*i);g>1&&(n*=g=Math.sqrt(g),i*=g);var m=f/n,y=d/n,b=-d/i,v=f/i,_=m*s+y*l,x=b*s+v*l,w=m*e+y*t,k=b*e+v*t,D=1/((w-_)*(w-_)+(k-x)*(k-x))-.25;D<0&&(D=0);var A=Math.sqrt(D);o==r&&(A=-A);var O=.5*(_+w)-A*(k-x),C=.5*(x+k)+A*(w-_),T=Math.atan2(x-C,_-O),S=Math.atan2(k-C,w-O)-T;S<0&&1===o?S+=pr:S>0&&0===o&&(S-=pr);for(var F=Math.ceil(Math.abs(S/(hr+.001))),j=[],E=0;E<F;++E){var $=T+E*S/F,M=T+(E+1)*S/F;j[E]=[O,C,$,M,n,i,d,f]}return mr[u]=j}(i[5],i[6],i[0],i[1],i[3],i[4],i[2],t,n),o=0;o<r.length;++o){var a=vr(r[o]);e.bezierCurveTo(a[0],a[1],a[2],a[3],a[4],a[5])}}var Dr={circle:{draw:function(e,t){var n=Math.sqrt(t)/2;e.moveTo(n,0),e.arc(0,0,n,0,pr)}},cross:{draw:function(e,t){var n=Math.sqrt(t)/2,i=n/2.5;e.moveTo(-n,-i),e.lineTo(-n,i),e.lineTo(-i,i),e.lineTo(-i,n),e.lineTo(i,n),e.lineTo(i,i),e.lineTo(n,i),e.lineTo(n,-i),e.lineTo(i,-i),e.lineTo(i,-n),e.lineTo(-i,-n),e.lineTo(-i,-i),e.closePath()}},diamond:{draw:function(e,t){var n=Math.sqrt(t)/2;e.moveTo(-n,0),e.lineTo(0,-n),e.lineTo(n,0),e.lineTo(0,n),e.closePath()}},square:{draw:function(e,t){var n=Math.sqrt(t),i=-n/2;e.rect(i,i,n,n)}},arrow:{draw:function(e,t){var n=Math.sqrt(t)/2,i=n/7,r=n/2.5,o=n/8;e.moveTo(-i,n),e.lineTo(i,n),e.lineTo(i,-o),e.lineTo(r,-o),e.lineTo(0,-n),e.lineTo(-r,-o),e.lineTo(-i,-o),e.closePath()}},wedge:{draw:function(e,t){var n=Math.sqrt(t)/2,i=gr*n,r=i-.5773502691896257*n,o=n/4;e.moveTo(0,-i-r),e.lineTo(-o,i-r),e.lineTo(o,i-r),e.closePath()}},triangle:{draw:function(e,t){var n=Math.sqrt(t)/2,i=gr*n,r=i-.5773502691896257*n;e.moveTo(0,-i-r),e.lineTo(-n,i-r),e.lineTo(n,i-r),e.closePath()}},"triangle-up":{draw:function(e,t){var n=Math.sqrt(t)/2,i=gr*n;e.moveTo(0,-i),e.lineTo(-n,i),e.lineTo(n,i),e.closePath()}},"triangle-down":{draw:function(e,t){var n=Math.sqrt(t)/2,i=gr*n;e.moveTo(0,i),e.lineTo(-n,-i),e.lineTo(n,-i),e.closePath()}},"triangle-right":{draw:function(e,t){var n=Math.sqrt(t)/2,i=gr*n;e.moveTo(i,0),e.lineTo(-i,-n),e.lineTo(-i,n),e.closePath()}},"triangle-left":{draw:function(e,t){var n=Math.sqrt(t)/2,i=gr*n;e.moveTo(-i,0),e.lineTo(i,-n),e.lineTo(i,n),e.closePath()}},stroke:{draw:function(e,t){var n=Math.sqrt(t)/2;e.moveTo(-n,0),e.lineTo(n,0)}}};function Ar(e){return Dr.hasOwnProperty(e)?Dr[e]:function(e){if(!Or.hasOwnProperty(e)){var t=dr(e);Or[e]={draw:function(e,n){wr(e,t,0,0,Math.sqrt(n)/2)}}}return Or[e]}(e)}var Or={};function Cr(e){return e.x}function Tr(e){return e.y}function Sr(e){return e.width}function Fr(e){return e.height}function jr(e){return function(){return e}}function Er(e){return e.x||0}function $r(e){return e.y||0}function Mr(e){return e.cornerRadius||0}function zr(e){return!(!1===e.defined)}var Nr=Object(s.a)().startAngle(function(e){return e.startAngle||0}).endAngle(function(e){return e.endAngle||0}).padAngle(function(e){return e.padAngle||0}).innerRadius(function(e){return e.innerRadius||0}).outerRadius(function(e){return e.outerRadius||0}).cornerRadius(Mr),Br=Object(s.b)().x(Er).y1($r).y0(function(e){return(e.y||0)+(e.height||0)}).defined(zr),Pr=Object(s.b)().y($r).x1(Er).x0(function(e){return(e.x||0)+(e.width||0)}).defined(zr),Ir=Object(s.u)().x(Er).y($r).defined(zr),Lr=function(){var e=Cr,t=Tr,n=Sr,i=Fr,r=jr(0),o=null;function a(a,s,u){var c,d=null!=s?s:+e.call(this,a),f=null!=u?u:+t.call(this,a),h=+n.call(this,a),p=+i.call(this,a),g=+r.call(this,a);if(o||(o=c=Object(l.a)()),g<=0)o.rect(d,f,h,p);else{var m=d+h,y=f+p;o.moveTo(d+g,f),o.lineTo(m-g,f),o.quadraticCurveTo(m,f,m,f+g),o.lineTo(m,y-g),o.quadraticCurveTo(m,y,m-g,y),o.lineTo(d+g,y),o.quadraticCurveTo(d,y,d,y-g),o.lineTo(d,f+g),o.quadraticCurveTo(d,f,d+g,f),o.closePath()}if(c)return o=null,c+""||null}return a.x=function(t){return arguments.length?(e="function"==typeof t?t:jr(+t),a):e},a.y=function(e){return arguments.length?(t="function"==typeof e?e:jr(+e),a):t},a.width=function(e){return arguments.length?(n="function"==typeof e?e:jr(+e),a):n},a.height=function(e){return arguments.length?(i="function"==typeof e?e:jr(+e),a):i},a.cornerRadius=function(e){return arguments.length?(r="function"==typeof e?e:jr(+e),a):r},a.context=function(e){return arguments.length?(o=null==e?null:e,a):o},a}().x(Er).y($r).width(function(e){return e.width||0}).height(function(e){return e.height||0}).cornerRadius(Mr),qr=Object(s.v)().type(function(e){return Ar(e.shape||"circle")}).size(function(e){return null==e.size?64:e.size}),Rr=function(){var e,t,n,i,r,o,a,s,u=null;function c(e,t,n){var i=n/2;if(r){var l=a-t,c=e-o;if(l||c){var d=Math.sqrt(l*l+c*c),f=(l/=d)*s,h=(c/=d)*s,p=Math.atan2(c,l);u.moveTo(o-f,a-h),u.lineTo(e-l*i,t-c*i),u.arc(e,t,i,p-Math.PI,p),u.lineTo(o+f,a+h),u.arc(o,a,s,p,p+Math.PI)}else u.arc(e,t,i,0,pr);u.closePath()}else r=1;o=e,a=t,s=i}function d(o){var a,s,d,f=o.length,h=!1;for(null==u&&(u=d=Object(l.a)()),a=0;a<=f;++a)!(a<f&&i(s=o[a],a,o))===h&&(h=!h)&&(r=0),h&&c(+e(s,a,o),+t(s,a,o),+n(s,a,o));if(d)return u=null,d+""||null}return d.x=function(t){return arguments.length?(e=t,d):e},d.y=function(e){return arguments.length?(t=e,d):t},d.size=function(e){return arguments.length?(n=e,d):n},d.defined=function(e){return arguments.length?(i=e,d):i},d.context=function(e){return arguments.length?(u=null==e?null:e,d):u},d}().x(Er).y($r).defined(zr).size(function(e){return e.size||1});function Ur(e,t,n,i){return Lr.context(e)(t,n,i)}function Wr(e,t){return t.stroke&&0!==t.opacity&&0!==t.strokeOpacity&&e.expand(null!=t.strokeWidth?+t.strokeWidth:1),e}var Vr,Hr=pr-1e-8;function Yr(e){return Vr=e,Yr}function Gr(){}function Jr(e,t){Vr.add(e,t)}Yr.beginPath=Gr,Yr.closePath=Gr,Yr.moveTo=Jr,Yr.lineTo=Jr,Yr.rect=function(e,t,n,i){Jr(e,t),Jr(e+n,t+i)},Yr.quadraticCurveTo=function(e,t,n,i){Jr(e,t),Jr(n,i)},Yr.bezierCurveTo=function(e,t,n,i,r,o){Jr(e,t),Jr(n,i),Jr(r,o)},Yr.arc=function(e,t,n,i,r,o){if(Math.abs(r-i)>Hr)return Jr(e-n,t-n),void Jr(e+n,t+n);var a,s,l,u,c=1/0,d=-1/0,f=1/0,h=-1/0;function p(e){l=n*Math.cos(e),u=n*Math.sin(e),l<c&&(c=l),l>d&&(d=l),u<f&&(f=u),u>h&&(h=u)}if(p(i),p(r),r!==i)if((i%=pr)<0&&(i+=pr),(r%=pr)<0&&(r+=pr),r<i&&(o=!o,a=i,i=r,r=a),o)for(r-=pr,a=i-i%hr,s=0;s<4&&a>r;++s,a-=hr)p(a);else for(a=i-i%hr+hr,s=0;s<4&&a<r;++s,a+=hr)p(a);Jr(e+c,t+f),Jr(e+d,t+h)};var Xr=(Xr=tr(1,1))?Xr.getContext("2d"):null;const Qr=new Xi;function Kr(e){return function(t,n){if(!Xr)return!0;e(Xr,t),Qr.clear().union(t.bounds).intersect(n).round();const{x1:i,y1:r,x2:o,y2:a}=Qr;for(let e=r;e<=a;++e)for(let t=i;t<=o;++t)if(Xr.isPointInPath(t,e))return!0;return!1}}function Zr(e,t){return t.contains(e.x||0,e.y||0)}function eo(e,t){const n=e.x||0,i=e.y||0,r=e.width||0,o=e.height||0;return t.intersects(Qr.set(n,i,n+r,i+o))}function to(e,t,n,i,r){const{x1:o,y1:a,x2:s,y2:l}=e,u=i-t,c=r-n;let d,f,h,p,g=0,m=1;for(p=0;p<4;++p){if(0===p&&(d=-u,f=-(o-t)),1===p&&(d=u,f=s-t),2===p&&(d=-c,f=-(a-n)),3===p&&(d=c,f=l-n),Math.abs(d)<1e-10&&f<0)return!1;if(h=f/d,d<0){if(h>m)return!1;h>g&&(g=h)}else if(d>0){if(h<g)return!1;h<m&&(m=h)}}return!0}function no(e,t,n){return n.id?function(e,t,n){for(var i=n.width(),r=n.height(),o=n.x1+t.x1*i,a=n.y1+t.y1*r,s=n.x1+t.x2*i,l=n.y1+t.y2*r,u=t.stops,c=0,d=u.length,f=e.createLinearGradient(o,a,s,l);c<d;++c)f.addColorStop(u[c].offset,u[c].color);return f}(e,n,t.bounds):n}function io(e,t,n){return(n*=null==t.fillOpacity?1:t.fillOpacity)>0&&(e.globalAlpha=n,e.fillStyle=no(e,t,t.fill),!0)}var ro=[];function oo(e,t,n){var i=null!=(i=t.strokeWidth)?i:1;return!(i<=0)&&((n*=null==t.strokeOpacity?1:t.strokeOpacity)>0&&(e.globalAlpha=n,e.strokeStyle=no(e,t,t.stroke),e.lineWidth=i,e.lineCap=t.strokeCap||"butt",e.lineJoin=t.strokeJoin||"miter",e.miterLimit=t.strokeMiterLimit||10,e.setLineDash&&(e.setLineDash(t.strokeDash||ro),e.lineDashOffset=t.strokeDashOffset||0),!0))}function ao(e,t){return e.zindex-t.zindex||e.index-t.index}function so(e){if(!e.zdirty)return e.zitems;var t,n,i,r=e.items,o=[];for(n=0,i=r.length;n<i;++n)(t=r[n]).index=n,t.zindex&&o.push(t);return e.zdirty=!1,e.zitems=o.sort(ao)}function lo(e,t){var n,i,r=e.items;if(r&&r.length){var o=so(e);if(o&&o.length){for(n=0,i=r.length;n<i;++n)r[n].zindex||t(r[n]);r=o}for(n=0,i=r.length;n<i;++n)t(r[n])}}function uo(e,t){var n,i,r=e.items;if(!r||!r.length)return null;var o=so(e);for(o&&o.length&&(r=o),i=r.length;--i>=0;)if(n=t(r[i]))return n;if(r===o)for(i=(r=e.items).length;--i>=0;)if(!r[i].zindex&&(n=t(r[i])))return n;return null}function co(e){return function(t,n,i){lo(n,function(n){i&&!i.intersects(n.bounds)||fo(e,t,n,n)})}}function fo(e,t,n,i){var r=null==n.opacity?1:n.opacity;0!==r&&(e(t,i)||(n.fill&&io(t,n,r)&&t.fill(),n.stroke&&oo(t,n,r)&&t.stroke()))}function ho(e){return e=e||z,function(t,n,i,r,o,a){return i*=t.pixelRatio,r*=t.pixelRatio,uo(n,function(n){var s=n.bounds;if((!s||s.contains(o,a))&&s)return e(t,n,i,r,o,a)?n:void 0})}}function po(e,t){return function(n,i,r,o){var a,s,l=Array.isArray(i)?i[0]:i,u=null==t?l.fill:t,c=l.stroke&&n.isPointInStroke;return c&&(a=l.strokeWidth,s=l.strokeCap,n.lineWidth=null!=a?a:1,n.lineCap=null!=s?s:"butt"),!e(n,i)&&(u&&n.isPointInPath(r,o)||c&&n.isPointInStroke(r,o))}}function go(e){return ho(po(e))}function mo(e,t){return"translate("+e+","+t+")"}function yo(e){return"rotate("+e+")"}function bo(e){return mo(e.x||0,e.y||0)}function vo(e,t,n){function i(e,n){var i=n.x||0,r=n.y||0,o=n.angle||0;e.translate(i,r),o&&e.rotate(o*=fr),e.beginPath(),t(e,n),o&&e.rotate(-o),e.translate(-i,-r)}return{type:e,tag:"path",nested:!1,attr:function(e,n){e("transform",function(e){return mo(e.x||0,e.y||0)+(e.angle?" "+yo(e.angle):"")}(n)),e("d",t(null,n))},bound:function(e,n){var i=n.x||0,r=n.y||0;return t(Yr(e),n),Wr(e,n).translate(i,r),n.angle&&e.rotate(n.angle*fr,i,r),e},draw:co(i),pick:go(i),isect:n||Kr(i)}}var _o=vo("arc",function(e,t){return Nr.context(e)(t)});function xo(e,t,n){function i(e,n){e.beginPath(),t(e,n)}var r,o=po(i);return{type:e,tag:"path",nested:!0,attr:function(e,n){var i=n.mark.items;i.length&&e("d",t(null,i))},bound:function(e,n){var i=n.items;return 0===i.length?e:(t(Yr(e),i),Wr(e,i[0]))},draw:(r=i,function(e,t,n){!t.items.length||n&&!n.intersects(t.bounds)||fo(r,e,t.items[0],t.items)}),pick:function(e,t,n,i,r,a){var s=t.items,l=t.bounds;return!s||!s.length||l&&!l.contains(r,a)?null:(n*=e.pixelRatio,i*=e.pixelRatio,o(e,s,n,i)?s[0]:null)},isect:Zr,tip:n}}var wo=xo("area",function(e,t){var n=t[0],i=n.interpolate||"linear";return("horizontal"===n.orient?Pr:Br).curve(lr(i,n.orient,n.tension)).context(e)(t)},function(e,t){for(var n,i,r="horizontal"===e[0].orient?t[1]:t[0],o="horizontal"===e[0].orient?"y":"x",a=e.length,s=1/0;--a>=0;)!1!==e[a].defined&&(i=Math.abs(e[a][o]-r))<s&&(s=i,n=e[a]);return n}),ko=1;function Do(e,t,n){var i=t.clip,r=e._defs,o=t.clip_id||(t.clip_id="clip"+ko++),a=r.clipping[o]||(r.clipping[o]={id:o});return ie(i)?a.path=i(null):(a.width=n.width||0,a.height=n.height||0),"url(#"+o+")"}var Ao=.5;function Oo(e,t){var n=t.stroke?Ao:0;e.beginPath(),Ur(e,t,n,n)}var Co=po(Oo);var To={type:"group",tag:"g",nested:!1,attr:function(e,t){e("transform",bo(t))},bound:function(e,t){if(!t.clip&&t.items)for(var n=t.items,i=0,r=n.length;i<r;++i)e.union(n[i].bounds);return(t.clip||t.width||t.height)&&!t.noBound&&e.add(0,0).add(t.width||0,t.height||0),Wr(e,t),e.translate(t.x||0,t.y||0)},draw:function(e,t,n){var i=this;lo(t,function(t){var r,o=t.x||0,a=t.y||0,s=t.width||0,l=t.height||0;e.save(),e.translate(o,a),(t.stroke||t.fill)&&(r=null==t.opacity?1:t.opacity)>0&&(Oo(e,t),t.fill&&io(e,t,r)&&e.fill(),t.stroke&&oo(e,t,r)&&e.stroke()),t.clip&&(e.beginPath(),e.rect(0,0,s,l),e.clip()),n&&n.translate(-o,-a),lo(t,function(t){i.draw(e,t,n)}),n&&n.translate(o,a),e.restore()})},pick:function(e,t,n,i,r,o){if(t.bounds&&!t.bounds.contains(r,o)||!t.items)return null;var a=this,s=n*e.pixelRatio,l=i*e.pixelRatio;return uo(t,function(u){var c,d,f,h;if(!(h=u.bounds)||h.contains(r,o))return d=u.x||0,f=u.y||0,e.save(),e.translate(d,f),d=r-d,f=o-f,!(c=uo(u,function(e){return function(e,t,n){return(!1!==e.interactive||"group"===e.marktype)&&e.bounds&&e.bounds.contains(t,n)}(e,d,f)?a.pick(e,n,i,d,f):null}))&&!1!==t.interactive&&(u.fill||u.stroke)&&Co(e,u,s,l)&&(c=u),e.restore(),c||null})},isect:eo,background:function(e,t){var n=t.stroke?Ao:0;e("class","background"),e("d",Ur(null,t,n,n))},foreground:function(e,t,n){e("clip-path",t.clip?Do(n,t,t):null)}};function So(e,t){var n=e.image;return n&&n.url===e.url||(n={loaded:!1,width:0,height:0},t.loadImage(e.url).then(function(t){e.image=t,e.image.url=e.url})),n}function Fo(e,t){return"center"===e?t/2:"right"===e?t:0}function jo(e,t){return"middle"===e?t/2:"bottom"===e?t:0}var Eo={type:"image",tag:"image",nested:!1,attr:function(e,t,n){var i=So(t,n),r=t.x||0,o=t.y||0,a=(null!=t.width?t.width:i.width)||0,s=(null!=t.height?t.height:i.height)||0,l=!1===t.aspect?"none":"xMidYMid";r-=Fo(t.align,a),o-=jo(t.baseline,s),e("href",i.src||"","http://www.w3.org/1999/xlink","xlink:href"),e("transform",mo(r,o)),e("width",a),e("height",s),e("preserveAspectRatio",l)},bound:function(e,t){var n=t.image,i=t.x||0,r=t.y||0,o=(null!=t.width?t.width:n&&n.width)||0,a=(null!=t.height?t.height:n&&n.height)||0;return i-=Fo(t.align,o),r-=jo(t.baseline,a),e.set(i,r,i+o,r+a)},draw:function(e,t,n){var i=this;lo(t,function(t){if(!n||n.intersects(t.bounds)){var r,o,a,s,l=So(t,i),u=t.x||0,c=t.y||0,d=(null!=t.width?t.width:l.width)||0,f=(null!=t.height?t.height:l.height)||0;u-=Fo(t.align,d),c-=jo(t.baseline,f),!1!==t.aspect&&(o=l.width/l.height,a=t.width/t.height,o==o&&a==a&&o!==a&&(a<o?(c+=(f-(s=d/o))/2,f=s):(u+=(d-(s=f*o))/2,d=s))),l.loaded&&(e.globalAlpha=null!=(r=t.opacity)?r:1,e.drawImage(l,u,c,d,f))}})},pick:ho(),isect:z,get:So,xOffset:Fo,yOffset:jo},$o=xo("line",function(e,t){var n=t[0],i=n.interpolate||"linear";return Ir.curve(lr(i,n.orient,n.tension)).context(e)(t)},function(e,t){for(var n,i,r=Math.pow(e[0].strokeWidth||1,2),o=e.length;--o>=0;)if(!1!==e[o].defined&&(n=e[o].x-t[0])*n+(i=e[o].y-t[1])*i<r)return e[o];return null});function Mo(e,t){var n=t.path;if(null==n)return!0;var i=t.pathCache;i&&i.path===n||((t.pathCache=i=dr(n)).path=n),wr(e,i,t.x,t.y)}var zo={type:"path",tag:"path",nested:!1,attr:function(e,t){e("transform",bo(t)),e("d",t.path)},bound:function(e,t){return Mo(Yr(e),t)?e.set(0,0,0,0):Wr(e,t)},draw:co(Mo),pick:go(Mo),isect:Kr(Mo)};function No(e,t){e.beginPath(),Ur(e,t)}var Bo={type:"rect",tag:"path",nested:!1,attr:function(e,t){e("d",Ur(null,t))},bound:function(e,t){var n,i;return Wr(e.set(n=t.x||0,i=t.y||0,n+t.width||0,i+t.height||0),t)},draw:co(No),pick:go(No),isect:eo};function Po(e,t,n){var i,r,o,a;return!(!t.stroke||!oo(e,t,n))&&(i=t.x||0,r=t.y||0,o=null!=t.x2?t.x2:i,a=null!=t.y2?t.y2:r,e.beginPath(),e.moveTo(i,r),e.lineTo(o,a),!0)}var Io,Lo={type:"rule",tag:"line",nested:!1,attr:function(e,t){e("transform",bo(t)),e("x2",null!=t.x2?t.x2-(t.x||0):0),e("y2",null!=t.y2?t.y2-(t.y||0):0)},bound:function(e,t){var n,i;return Wr(e.set(n=t.x||0,i=t.y||0,null!=t.x2?t.x2:n,null!=t.y2?t.y2:i),t)},draw:function(e,t,n){lo(t,function(t){if(!n||n.intersects(t.bounds)){var i=null==t.opacity?1:t.opacity;i&&Po(e,t,i)&&e.stroke()}})},pick:ho(function(e,t,n,i){return!!e.isPointInStroke&&Po(e,t,1)&&e.isPointInStroke(n,i)}),isect:function(e,t){const n=e.x||0,i=e.y||0;return to(t,n,i,null!=e.x2?e.x2:n,null!=e.y2?e.y2:i)}},qo=vo("shape",function(e,t){return(t.mark.shape||t.shape).context(e)(t)}),Ro=vo("symbol",function(e,t){return qr.context(e)(t)},Zr),Uo={height:Go,measureWidth:Ho,estimateWidth:Wo,width:Wo,canvas:Jo};function Wo(e){return Io=Go(e),Vo(Xo(e))}function Vo(e){return~~(.8*e.length*Io)}function Ho(e){return Go(e)<=0?0:(Xr.font=Ko(e),Yo(Xo(e)))}function Yo(e){return Xr.measureText(e).width}function Go(e){return null!=e.fontSize?e.fontSize:11}function Jo(e){Uo.width=e&&Xr?Ho:Wo}function Xo(e){var t=e.text;return null==t?"":e.limit>0?function(e){var t,n=+e.limit,i=e.text+"";Uo.width===Ho?(Xr.font=Ko(e),t=Yo):(Io=Go(e),t=Vo);if(t(i)<n)return i;var r,o=e.ellipsis||"…",a="rtl"===e.dir,s=0,l=i.length;if(n-=t(o),a){for(;s<l;)r=s+l>>>1,t(i.slice(r))>n?s=r+1:l=r;return o+i.slice(s)}for(;s<l;)r=1+(s+l>>>1),t(i.slice(0,r))<n?s=r:l=r-1;return i.slice(0,s)+o}(e):t+""}function Qo(e,t){var n=e.font;return(t&&n?String(n).replace(/"/g,"'"):n)||"sans-serif"}function Ko(e,t){return(e.fontStyle?e.fontStyle+" ":"")+(e.fontVariant?e.fontVariant+" ":"")+(e.fontWeight?e.fontWeight+" ":"")+Go(e)+"px "+Qo(e,t)}function Zo(e){var t=e.baseline,n=Go(e);return Math.round("top"===t?.79*n:"middle"===t?.3*n:"bottom"===t?-.21*n:0)}Jo(!0);var ea={left:"start",center:"middle",right:"end"},ta=new Xi;function na(e){var t,n=e.x||0,i=e.y||0,r=e.radius||0;return r&&(t=(e.theta||0)-hr,n+=r*Math.cos(t),i+=r*Math.sin(t)),ta.x1=n,ta.y1=i,ta}function ia(e,t,n){var i,r=Uo.height(t),o=t.align,a=na(t),s=a.x1,l=a.y1,u=t.dx||0,c=(t.dy||0)+Zo(t)-Math.round(.8*r);if(i=Uo.width(t),"center"===o?u-=i/2:"right"===o&&(u-=i),e.set(u+=s,c+=l,u+i,c+r),t.angle&&!n)e.rotate(t.angle*fr,s,l);else if(2===n)return e.rotatedPoints(t.angle*fr,s,l);return e.expand(n||!i?0:1)}var ra={arc:_o,area:wo,group:To,image:Eo,line:$o,path:zo,rect:Bo,rule:Lo,shape:qo,symbol:Ro,text:{type:"text",tag:"text",nested:!1,attr:function(e,t){var n,i=t.dx||0,r=(t.dy||0)+Zo(t),o=na(t),a=o.x1,s=o.y1,l=t.angle||0;e("text-anchor",ea[t.align]||"start"),l?(n=mo(a,s)+" "+yo(l),(i||r)&&(n+=" "+mo(i,r))):n=mo(a+i,s+r),e("transform",n)},bound:ia,draw:function(e,t,n){lo(t,function(t){var i,r,o,a,s;n&&!n.intersects(t.bounds)||(s=Xo(t))&&(0===(i=null==t.opacity?1:t.opacity)||t.fontSize<=0||(e.font=Ko(t),e.textAlign=t.align||"left",o=(r=na(t)).x1,a=r.y1,t.angle&&(e.save(),e.translate(o,a),e.rotate(t.angle*fr),o=a=0),o+=t.dx||0,a+=(t.dy||0)+Zo(t),t.fill&&io(e,t,i)&&e.fillText(s,o,a),t.stroke&&oo(e,t,i)&&e.strokeText(s,o,a),t.angle&&e.restore()))})},pick:ho(function(e,t,n,i,r,o){if(t.fontSize<=0)return!1;if(!t.angle)return!0;var a=na(t),s=a.x1,l=a.y1,u=ia(ta,t,1),c=-t.angle*fr,d=Math.cos(c),f=Math.sin(c),h=d*r-f*o+(s-d*s+f*l),p=f*r+d*o+(l-f*s-d*l);return u.contains(h,p)}),isect:function(e,t){var n=ia(ta,e,2);return to(t,n[0],n[1],n[2],n[3])||to(t,n[0],n[1],n[4],n[5])||to(t,n[4],n[5],n[6],n[7])||to(t,n[2],n[3],n[6],n[7])}},trail:xo("trail",function(e,t){return Rr.context(e)(t)},function(e,t){for(var n,i,r=e.length;--r>=0;)if(!1!==e[r].defined&&(n=e[r].x-t[0])*n+(i=e[r].y-t[1])*i<(n=e[r].size||1)*n)return e[r];return null})};function oa(e,t,n){var i=ra[e.mark.marktype],r=t||i.bound;return i.nested&&(e=e.mark),r(e.bounds||(e.bounds=new Xi),e,n)}var aa={mark:null};var sa=["marktype","name","role","interactive","clip","items","zindex","x","y","width","height","align","baseline","fill","fillOpacity","opacity","stroke","strokeOpacity","strokeWidth","strokeCap","strokeDash","strokeDashOffset","startAngle","endAngle","innerRadius","outerRadius","cornerRadius","padAngle","interpolate","tension","orient","defined","url","path","x2","y2","size","shape","text","angle","theta","radius","dx","dy","font","fontSize","fontWeight","fontStyle","fontVariant"];function la(e){return function e(t){var n,i,r,o=t.marktype,a=t.items;if(a)for(i=0,r=a.length;i<r;++i)n=o?"mark":"group",a[i][n]=t,a[i].zindex&&(a[i][n].zdirty=!0),"group"===(o||n)&&e(a[i]);o&&function(e,t,n){var i,r,o,a,s=ra[e.marktype],l=s.bound,u=e.items,c=u&&u.length;if(s.nested)return c?o=u[0]:(aa.mark=e,o=aa),a=oa(o,l,n),t=t&&t.union(a)||a;if(t=t||e.bounds&&e.bounds.clear()||new Xi,c)for(i=0,r=u.length;i<r;++i)t.union(oa(u[i],l,n));e.bounds=t}(t);return t}("string"==typeof e?JSON.parse(e):e)}function ua(e){arguments.length?this.root=la(e):(this.root=da({marktype:"group",name:"root",role:"frame"}),this.root.items=[new er(this.root)])}var ca=ua.prototype;function da(e,t){return{bounds:new Xi,clip:!!e.clip,group:t,interactive:!1!==e.interactive,items:[],marktype:e.marktype,name:e.name||void 0,role:e.role||void 0,zindex:e.zindex||0}}function fa(e,t,n){return!e&&"undefined"!=typeof document&&document.createElement&&(e=document),e?n?e.createElementNS(n,t):e.createElement(t):null}function ha(e,t){t=t.toLowerCase();for(var n=e.childNodes,i=0,r=n.length;i<r;++i)if(n[i].tagName.toLowerCase()===t)return n[i]}function pa(e,t,n,i){var r,o=e.childNodes[t];return o&&o.tagName.toLowerCase()===n.toLowerCase()||(r=o||null,o=fa(e.ownerDocument,n,i),e.insertBefore(o,r)),o}function ga(e,t){for(var n=e.childNodes,i=n.length;i>t;)e.removeChild(n[--i]);return e}function ma(e){return"mark-"+e.marktype+(e.role?" role-"+e.role:"")+(e.name?" "+e.name:"")}function ya(e,t){var n=t.getBoundingClientRect();return[e.clientX-n.left-(t.clientLeft||0),e.clientY-n.top-(t.clientTop||0)]}function ba(e,t){this._active=null,this._handlers={},this._loader=e||pt(),this._tooltip=t||va}function va(e,t,n,i){e.element().setAttribute("title",i||"")}ca.toJSON=function(e){return function(e,t){return JSON.stringify(e,sa,t)}(this.root,e||0)},ca.mark=function(e,t,n){var i=da(e,t=t||this.root.items[0]);return t.items[n]=i,i.zindex&&(i.group.zdirty=!0),i};var _a=ba.prototype;function xa(e){this._el=null,this._bgcolor=null,this._loader=new ir(e)}_a.initialize=function(e,t,n){return this._el=e,this._obj=n||null,this.origin(t)},_a.element=function(){return this._el},_a.canvas=function(){return this._el&&this._el.firstChild},_a.origin=function(e){return arguments.length?(this._origin=e||[0,0],this):this._origin.slice()},_a.scene=function(e){return arguments.length?(this._scene=e,this):this._scene},_a.on=function(){},_a.off=function(){},_a._handlerIndex=function(e,t,n){for(var i=e?e.length:0;--i>=0;)if(e[i].type===t&&(!n||e[i].handler===n))return i;return-1},_a.handlers=function(e){var t,n=this._handlers,i=[];if(e)i.push.apply(i,n[this.eventName(e)]);else for(t in n)i.push.apply(i,n[t]);return i},_a.eventName=function(e){var t=e.indexOf(".");return t<0?e:e.slice(0,t)},_a.handleHref=function(e,t,n){this._loader.sanitize(n,{context:"href"}).then(function(t){var n=new MouseEvent(e.type,e),i=fa(null,"a");for(var r in t)i.setAttribute(r,t[r]);i.dispatchEvent(n)}).catch(function(){})},_a.handleTooltip=function(e,t,n){if(t&&null!=t.tooltip){t=function(e,t,n,i){var r,o,a=e&&e.mark;if(a&&(r=ra[a.marktype]).tip){for((o=ya(t,n))[0]-=i[0],o[1]-=i[1];e=e.mark.group;)o[0]-=e.x||0,o[1]-=e.y||0;e=r.tip(a.items,o)}return e}(t,e,this.canvas(),this._origin);var i=n&&t&&t.tooltip||null;this._tooltip.call(this._obj,this,e,t,i)}},_a.getItemBoundingClientRect=function(e){if(t=this.canvas()){for(var t,n=t.getBoundingClientRect(),i=this._origin,r=e.bounds,o=r.x1+i[0]+n.left,a=r.y1+i[1]+n.top,s=r.width(),l=r.height();e.mark&&(e=e.mark.group);)o+=e.x||0,a+=e.y||0;return{x:o,y:a,width:s,height:l,left:o,top:a,right:o+s,bottom:a+l}}};var wa=xa.prototype;wa.initialize=function(e,t,n,i,r){return this._el=e,this.resize(t,n,i,r)},wa.element=function(){return this._el},wa.canvas=function(){return this._el&&this._el.firstChild},wa.background=function(e){return 0===arguments.length?this._bgcolor:(this._bgcolor=e,this)},wa.resize=function(e,t,n,i){return this._width=e,this._height=t,this._origin=n||[0,0],this._scale=i||1,this},wa.dirty=function(){},wa.render=function(e){var t=this;return t._call=function(){t._render(e)},t._call(),t._call=null,t},wa._render=function(){},wa.renderAsync=function(e){var t=this.render(e);return this._ready?this._ready.then(function(){return t}):Promise.resolve(t)},wa._load=function(e,t){var n=this,i=n._loader[e](t);if(!n._ready){var r=n._call;n._ready=n._loader.ready().then(function(e){e&&r(),n._ready=null})}return i},wa.sanitizeURL=function(e){return this._load("sanitizeURL",e)},wa.loadImage=function(e){return this._load("loadImage",e)};var ka="mouseout";function Da(e,t){ba.call(this,e,t),this._down=null,this._touch=null,this._first=!0}var Aa=ce(Da,ba);function Oa(e,t,n){return function(i){var r=this._active,o=this.pickEvent(i);o===r?this.fire(e,i):(r&&r.exit||this.fire(n,i),this._active=o,this.fire(t,i),this.fire(e,i))}}function Ca(e){return function(t){this.fire(e,t),this._active=null}}Aa.initialize=function(e,t,n){var i=this._canvas=e&&ha(e,"canvas");if(i){var r=this;this.events.forEach(function(e){i.addEventListener(e,function(t){Aa[e]?Aa[e].call(r,t):r.fire(e,t)})})}return ba.prototype.initialize.call(this,e,t,n)},Aa.canvas=function(){return this._canvas},Aa.context=function(){return this._canvas.getContext("2d")},Aa.events=["keydown","keypress","keyup","dragenter","dragleave","dragover","mousedown","mouseup","mousemove","mouseout","mouseover","click","dblclick","wheel","mousewheel","touchstart","touchmove","touchend"],Aa.DOMMouseScroll=function(e){this.fire("mousewheel",e)},Aa.mousemove=Oa("mousemove","mouseover","mouseout"),Aa.dragover=Oa("dragover","dragenter","dragleave"),Aa.mouseout=Ca("mouseout"),Aa.dragleave=Ca("dragleave"),Aa.mousedown=function(e){this._down=this._active,this.fire("mousedown",e)},Aa.click=function(e){this._down===this._active&&(this.fire("click",e),this._down=null)},Aa.touchstart=function(e){this._touch=this.pickEvent(e.changedTouches[0]),this._first&&(this._active=this._touch,this._first=!1),this.fire("touchstart",e,!0)},Aa.touchmove=function(e){this.fire("touchmove",e,!0)},Aa.touchend=function(e){this.fire("touchend",e,!0),this._touch=null},Aa.fire=function(e,t,n){var i,r,o=n?this._touch:this._active,a=this._handlers[e];if(t.vegaType=e,"click"===e&&o&&o.href?this.handleHref(t,o,o.href):"mousemove"!==e&&e!==ka||this.handleTooltip(t,o,e!==ka),a)for(i=0,r=a.length;i<r;++i)a[i].handler.call(this._obj,t,o)},Aa.on=function(e,t){var n=this.eventName(e),i=this._handlers;return this._handlerIndex(i[n],e,t)<0&&(i[n]||(i[n]=[])).push({type:e,handler:t}),this},Aa.off=function(e,t){var n=this.eventName(e),i=this._handlers[n],r=this._handlerIndex(i,e,t);return r>=0&&i.splice(r,1),this},Aa.pickEvent=function(e){var t=ya(e,this._canvas),n=this._origin;return this.pick(this._scene,t[0],t[1],t[0]-n[0],t[1]-n[1])},Aa.pick=function(e,t,n,i,r){var o=this.context();return ra[e.marktype].pick.call(this,o,e,t,n,i,r)};var Ta="undefined"!=typeof window&&window.devicePixelRatio||1;function Sa(e){xa.call(this,e),this._redraw=!1,this._dirty=new Xi}var Fa=ce(Sa,xa),ja=xa.prototype,Ea=new Xi;function $a(e,t){ba.call(this,e,t);var n=this;n._hrefHandler=za(n,function(e,t){t&&t.href&&n.handleHref(e,t,t.href)}),n._tooltipHandler=za(n,function(e,t){n.handleTooltip(e,t,e.type!==ka)})}Fa.initialize=function(e,t,n,i,r,o){return this._options=o,this._canvas=tr(1,1,o&&o.type),e&&(ga(e,0).appendChild(this._canvas),this._canvas.setAttribute("class","marks")),ja.initialize.call(this,e,t,n,i,r)},Fa.resize=function(e,t,n,i){return ja.resize.call(this,e,t,n,i),function(e,t,n,i,r,o){var a,s="undefined"!=typeof HTMLElement&&e instanceof HTMLElement&&null!=e.parentNode,l=e.getContext("2d"),u=s?Ta:r;for(a in e.width=t*u,e.height=n*u,o)l[a]=o[a];s&&1!==u&&(e.style.width=t+"px",e.style.height=n+"px"),l.pixelRatio=u,l.setTransform(u,0,0,u,u*i[0],u*i[1])}(this._canvas,this._width,this._height,this._origin,this._scale,this._options&&this._options.context),this._redraw=!0,this},Fa.canvas=function(){return this._canvas},Fa.context=function(){return this._canvas?this._canvas.getContext("2d"):null},Fa.dirty=function(e){var t=function(e,t){if(null==t)return e;for(var n=Ea.clear().union(e);null!=t;t=t.mark.group)n.translate(t.x||0,t.y||0);return n}(e.bounds,e.mark.group);this._dirty.union(t)},Fa._render=function(e){var t=this.context(),n=this._origin,i=this._width,r=this._height,o=this._dirty;return t.save(),this._redraw||o.empty()?(this._redraw=!1,o=null):o=function(e,t,n){return t.expand(1).round(),t.translate(-n[0]%1,-n[1]%1),e.beginPath(),e.rect(t.x1,t.y1,t.width(),t.height()),e.clip(),t}(t,o,n),this.clear(-n[0],-n[1],i,r),this.draw(t,e,o),t.restore(),this._dirty.clear(),this},Fa.draw=function(e,t,n){var i=ra[t.marktype];t.clip&&function(e,t){var n=t.clip;if(e.save(),e.beginPath(),ie(n))n(e);else{var i=t.group;e.rect(0,0,i.width||0,i.height||0)}e.clip()}(e,t),i.draw.call(this,e,t,n),t.clip&&e.restore()},Fa.clear=function(e,t,n,i){var r=this.context();r.clearRect(e,t,n,i),null!=this._bgcolor&&(r.fillStyle=this._bgcolor,r.fillRect(e,t,n,i))};var Ma=ce($a,ba);function za(e,t){return function(n){var i=n.target.__data__;n.vegaType=n.type,i=Array.isArray(i)?i[0]:i,t.call(e._obj,n,i)}}function Na(e,t,n){var i,r,o="<"+e;if(t)for(i in t)null!=(r=t[i])&&(o+=" "+i+'="'+r+'"');return n&&(o+=" "+n),o+">"}function Ba(e){return"</"+e+">"}Ma.initialize=function(e,t,n){var i=this._svg;return i&&(i.removeEventListener("click",this._hrefHandler),i.removeEventListener("mousemove",this._tooltipHandler),i.removeEventListener(ka,this._tooltipHandler)),this._svg=i=e&&ha(e,"svg"),i&&(i.addEventListener("click",this._hrefHandler),i.addEventListener("mousemove",this._tooltipHandler),i.addEventListener(ka,this._tooltipHandler)),ba.prototype.initialize.call(this,e,t,n)},Ma.canvas=function(){return this._svg},Ma.on=function(e,t){var n=this.eventName(e),i=this._handlers;if(this._handlerIndex(i[n],e,t)<0){var r={type:e,handler:t,listener:za(this,t)};(i[n]||(i[n]=[])).push(r),this._svg&&this._svg.addEventListener(n,r.listener)}return this},Ma.off=function(e,t){var n=this.eventName(e),i=this._handlers[n],r=this._handlerIndex(i,e,t);return r>=0&&(this._svg&&this._svg.removeEventListener(n,i[r].listener),i.splice(r,1)),this};var Pa={version:"1.1",xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink"},Ia={fill:"fill",fillOpacity:"fill-opacity",stroke:"stroke",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",strokeCap:"stroke-linecap",strokeJoin:"stroke-linejoin",strokeDash:"stroke-dasharray",strokeDashOffset:"stroke-dashoffset",strokeMiterLimit:"stroke-miterlimit",opacity:"opacity"},La=Object.keys(Ia),qa=Pa.xmlns;function Ra(e){xa.call(this,e),this._dirtyID=1,this._dirty=[],this._svg=null,this._root=null,this._defs=null}var Ua=ce(Ra,xa),Wa=xa.prototype;function Va(e,t,n){var i,r,o;for((e=pa(e,n,"linearGradient",qa)).setAttribute("id",t.id),e.setAttribute("x1",t.x1),e.setAttribute("x2",t.x2),e.setAttribute("y1",t.y1),e.setAttribute("y2",t.y2),i=0,r=t.stops.length;i<r;++i)(o=pa(e,i,"stop",qa)).setAttribute("offset",t.stops[i].offset),o.setAttribute("stop-color",t.stops[i].color);ga(e,i)}function Ha(e,t,n){var i;(e=pa(e,n,"clipPath",qa)).setAttribute("id",t.id),t.path?(i=pa(e,0,"path",qa)).setAttribute("d",t.path):((i=pa(e,0,"rect",qa)).setAttribute("x",0),i.setAttribute("y",0),i.setAttribute("width",t.width),i.setAttribute("height",t.height))}function Ya(e,t){for(;e&&e.dirty!==t;e=e.mark.group){if(e.dirty=t,!e.mark||e.mark.dirty===t)return;e.mark.dirty=t}}function Ga(e,t,n,i,r){var o,a=e._svg;if(!a&&(a=fa(o=t.ownerDocument,i,qa),e._svg=a,e.mark&&(a.__data__=e,a.__values__={fill:"default"},"g"===i))){var s=fa(o,"path",qa);s.setAttribute("class","background"),a.appendChild(s),s.__data__=e;var l=fa(o,"g",qa);a.appendChild(l),l.__data__=e}return(a.ownerSVGElement!==r||function(e){var t=e.mark||e.group;return t&&t.items.length>1}(e)&&a.previousSibling!==n)&&t.insertBefore(a,n?n.nextSibling:t.firstChild),a}Ua.initialize=function(e,t,n,i){return e&&(this._svg=pa(e,0,"svg",qa),this._svg.setAttribute("class","marks"),ga(e,1),this._root=pa(this._svg,0,"g",qa),ga(this._svg,1)),this._defs={gradient:{},clipping:{}},this.background(this._bgcolor),Wa.initialize.call(this,e,t,n,i)},Ua.background=function(e){return arguments.length&&this._svg&&this._svg.style.setProperty("background-color",e),Wa.background.apply(this,arguments)},Ua.resize=function(e,t,n,i){return Wa.resize.call(this,e,t,n,i),this._svg&&(this._svg.setAttribute("width",this._width*this._scale),this._svg.setAttribute("height",this._height*this._scale),this._svg.setAttribute("viewBox","0 0 "+this._width+" "+this._height),this._root.setAttribute("transform","translate("+this._origin+")")),this._dirty=[],this},Ua.canvas=function(){return this._svg},Ua.svg=function(){if(!this._svg)return null;var e={class:"marks",width:this._width*this._scale,height:this._height*this._scale,viewBox:"0 0 "+this._width+" "+this._height};for(var t in Pa)e[t]=Pa[t];var n=this._bgcolor?Na("rect",{width:this._width,height:this._height,style:"fill: "+this._bgcolor+";"})+Ba("rect"):"";return Na("svg",e)+n+this._svg.innerHTML+Ba("svg")},Ua._render=function(e){return this._dirtyCheck()&&(this._dirtyAll&&this._resetDefs(),this.draw(this._root,e),ga(this._root,1)),this.updateDefs(),this._dirty=[],++this._dirtyID,this},Ua.updateDefs=function(){var e,t=this._svg,n=this._defs,i=n.el,r=0;for(e in n.gradient)i||(n.el=i=pa(t,0,"defs",qa)),Va(i,n.gradient[e],r++);for(e in n.clipping)i||(n.el=i=pa(t,0,"defs",qa)),Ha(i,n.clipping[e],r++);i&&(0===r?(t.removeChild(i),n.el=null):ga(i,r))},Ua._resetDefs=function(){var e=this._defs;e.gradient={},e.clipping={}},Ua.dirty=function(e){e.dirty!==this._dirtyID&&(e.dirty=this._dirtyID,this._dirty.push(e))},Ua.isDirty=function(e){return this._dirtyAll||!e._svg||e.dirty===this._dirtyID},Ua._dirtyCheck=function(){this._dirtyAll=!0;var e=this._dirty;if(!e.length)return!0;var t,n,i,r,o,a,s,l=++this._dirtyID;for(o=0,a=e.length;o<a;++o)(n=(t=e[o]).mark).marktype!==i&&(i=n.marktype,r=ra[i]),n.zdirty&&n.dirty!==l&&(this._dirtyAll=!1,Ya(t,l),n.items.forEach(function(e){e.dirty=l})),n.zdirty||(t.exit?(r.nested&&n.items.length?(s=n.items[0])._svg&&this._update(r,s._svg,s):t._svg&&(s=t._svg.parentNode)&&s.removeChild(t._svg),t._svg=null):(t=r.nested?n.items[0]:t)._update!==l&&(t._svg&&t._svg.ownerSVGElement?this._update(r,t._svg,t):(this._dirtyAll=!1,Ya(t,l)),t._update=l));return!this._dirtyAll},Ua.draw=function(e,t,n){if(!this.isDirty(t))return t._svg;var i,r=this,o=this._svg,a=ra[t.marktype],s=!1===t.interactive?"none":null,l="g"===a.tag,u=null,c=0;function d(e){var t=r.isDirty(e),n=Ga(e,i,u,a.tag,o);t&&(r._update(a,n,e),l&&function(e,t,n){t=t.lastChild;var i,r=0;lo(n,function(n){i=e.draw(t,n,i),++r}),ga(t,1+r)}(r,n,e)),u=n,++c}return(i=Ga(t,e,n,"g",o)).setAttribute("class",ma(t)),l||i.style.setProperty("pointer-events",s),t.clip?i.setAttribute("clip-path",Do(r,t,t.group)):i.removeAttribute("clip-path"),a.nested?t.items.length&&d(t.items[0]):lo(t,d),ga(i,c),i};var Ja=null,Xa=null,Qa={group:function(e,t,n){Xa=t.__values__,Ja=t.childNodes[1],e.foreground(Za,n,this),Ja=t.childNodes[0],e.background(Za,n,this);var i=!1===n.mark.interactive?"none":null;i!==Xa.events&&(Ja.style.setProperty("pointer-events",i),Xa.events=i)},text:function(e,t,n){var i;(i=Xo(n))!==Xa.text&&(t.textContent=i,Xa.text=i),Ka(t,"font-family",Qo(n)),Ka(t,"font-size",Go(n)+"px"),Ka(t,"font-style",n.fontStyle),Ka(t,"font-variant",n.fontVariant),Ka(t,"font-weight",n.fontWeight)}};function Ka(e,t,n){n!==Xa[t]&&(null==n?e.style.removeProperty(t):e.style.setProperty(t,n+""),Xa[t]=n)}function Za(e,t,n){t!==Xa[e]&&(null!=t?n?Ja.setAttributeNS(n,e,t):Ja.setAttribute(e,t):n?Ja.removeAttributeNS(n,e):Ja.removeAttribute(e),Xa[e]=t)}function es(e){xa.call(this,e),this._text={head:"",bg:"",root:"",foot:"",defs:"",body:""},this._defs={gradient:{},clipping:{}}}Ua._update=function(e,t,n){Ja=t,Xa=t.__values__,e.attr(Za,n,this);var i=Qa[e.type];i&&i.call(this,e,t,n),this.style(Ja,n)},Ua.style=function(e,t){var n,i,r,o,a,s;if(null!=t)for(n=0,i=La.length;n<i;++n)a=t[r=La[n]],"font"===r&&(a=Qo(t)),a!==Xa[r]&&(o=Ia[r],null==a?"fill"===o?e.style.setProperty(o,"none"):e.style.removeProperty(o):(a.id&&(this._defs.gradient[a.id]=a,a="url("+(s=void 0,"undefined"==typeof window?"":(s=window.location).hash?s.href.slice(0,-s.hash.length):s.href)+"#"+a.id+")"),e.style.setProperty(o,a+"")),Xa[r]=a)};var ts,ns=ce(es,xa),is=xa.prototype;function rs(e,t,n,i){ts[i||e]=t}function os(e,t,n,i){if(null==e)return"";var r,o,a,s,l,u="";for("bgrect"===n&&!1===t.interactive&&(u+="pointer-events: none; "),"text"===n&&(u+="font-family: "+Qo(e)+"; ",u+="font-size: "+Go(e)+"px; ",e.fontStyle&&(u+="font-style: "+e.fontStyle+"; "),e.fontVariant&&(u+="font-variant: "+e.fontVariant+"; "),e.fontWeight&&(u+="font-weight: "+e.fontWeight+"; ")),r=0,o=La.length;r<o;++r)a=La[r],s=Ia[a],null==(l=e[a])?"fill"===s&&(u+="fill: none; "):"transparent"!==l||"fill"!==s&&"stroke"!==s?(l.id&&(i.gradient[l.id]=l,l="url(#"+l.id+")"),u+=s+": "+l+"; "):u+=s+": none; ";return u?'style="'+u.trim()+'"':null}ns.resize=function(e,t,n,i){is.resize.call(this,e,t,n,i);var r=this._origin,o=this._text,a={class:"marks",width:this._width*this._scale,height:this._height*this._scale,viewBox:"0 0 "+this._width+" "+this._height};for(var s in Pa)a[s]=Pa[s];o.head=Na("svg",a);var l=this._bgcolor;return"transparent"!==l&&"none"!==l||(l=null),o.bg=l?Na("rect",{width:this._width,height:this._height,style:"fill: "+l+";"})+Ba("rect"):"",o.root=Na("g",{transform:"translate("+r+")"}),o.foot=Ba("g")+Ba("svg"),this},ns.background=function(){var e=is.background.apply(this,arguments);return arguments.length&&this._text.head&&this.resize(this._width,this._height,this._origin,this._scale),e},ns.svg=function(){var e=this._text;return e.head+e.bg+e.defs+e.root+e.body+e.foot},ns._render=function(e){return this._text.body=this.mark(e),this._text.defs=this.buildDefs(),this},ns.buildDefs=function(){var e,t,n,i,r=this._defs,o="";for(t in r.gradient){for(i=(n=r.gradient[t]).stops,o+=Na("linearGradient",{id:t,x1:n.x1,x2:n.x2,y1:n.y1,y2:n.y2}),e=0;e<i.length;++e)o+=Na("stop",{offset:i[e].offset,"stop-color":i[e].color})+Ba("stop");o+=Ba("linearGradient")}for(t in r.clipping)n=r.clipping[t],o+=Na("clipPath",{id:t}),n.path?o+=Na("path",{d:n.path})+Ba("path"):o+=Na("rect",{x:0,y:0,width:n.width,height:n.height})+Ba("rect"),o+=Ba("clipPath");return o.length>0?Na("defs")+o+Ba("defs"):""},ns.attributes=function(e,t){return ts={},e(rs,t,this),ts},ns.href=function(e){var t,n=this,i=e.href;if(i){if(t=n._hrefs&&n._hrefs[i])return t;n.sanitizeURL(i).then(function(e){e["xlink:href"]=e.href,e.href=null,(n._hrefs||(n._hrefs={}))[i]=e})}return null},ns.mark=function(e){var t,n=this,i=ra[e.marktype],r=i.tag,o=this._defs,a="";function s(s){var l=n.href(s);l&&(a+=Na("a",l)),t="g"!==r?os(s,e,r,o):null,a+=Na(r,n.attributes(i.attr,s),t),"text"===r?a+=Xo(s).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;"):"g"===r&&(a+=Na("path",n.attributes(i.background,s),os(s,e,"bgrect",o))+Ba("path"),a+=Na("g",n.attributes(i.foreground,s))+n.markGroup(s)+Ba("g")),a+=Ba(r),l&&(a+=Ba("a"))}return"g"!==r&&!1===e.interactive&&(t='style="pointer-events: none;"'),a+=Na("g",{class:ma(e),"clip-path":e.clip?Do(n,e,e.group):null},t),i.nested?e.items&&e.items.length&&s(e.items[0]):lo(e,s),a+Ba("g")},ns.markGroup=function(e){var t=this,n="";return lo(e,function(e){n+=t.mark(e)}),n};var as={Canvas:"canvas",PNG:"png",SVG:"svg",None:"none"},ss={};function ls(e,t){return e=String(e||"").toLowerCase(),arguments.length>1?(ss[e]=t,this):ss[e]}function us(e,t,n,i){if(function(e,t,n){return e.bounds&&t.intersects(e.bounds)&&("group"===e.marktype||!1!==e.interactive&&(!n||n(e)))}(e,t,n)){const r=e.items,o=e.marktype,a=r.length;let s=0;if("group"===o)for(;s<a;++s)cs(r[s],t,n,i);else for(const e=ra[o].isect;s<a;++s){let n=r[s];ds(n,t,e)&&i.push(n)}}return i}function cs(e,t,n,i){n&&n(e.mark)&&ds(e,t,ra.group.isect)&&i.push(e);const r=e.items,o=r&&r.length;if(o){const a=e.x||0,s=e.y||0;t.translate(-a,-s);for(let e=0;e<o;++e)us(r[e],t,n,i);t.translate(a,s)}return i}function ds(e,t,n){const i=e.bounds;return t.encloses(i)||t.intersects(i)&&n(e,t)}ss.canvas=ss.png={renderer:Sa,headless:Sa,handler:Da},ss.svg={renderer:Ra,headless:es,handler:$a},ss.none={};var fs=new Xi;function hs(e){Nt.call(this,null,e)}function ps(e,t,n){return t(e.bounds.clear(),e,n)}ce(hs,Nt).transform=function(e,t){var n,i=t.dataflow,r=e.mark,o=r.marktype,a=ra[o],s=a.bound,l=r.bounds;return a.nested?(r.items.length&&i.dirty(r.items[0]),l=ps(r,s),r.items.forEach(function(e){e.bounds.clear().union(l)})):o===Oi||e.modified()?(t.visit(t.MOD,function(e){i.dirty(e)}),l.clear(),r.items.forEach(function(e){l.union(ps(e,s))}),r.role===ji&&t.reflow()):(n=t.changed(t.REM),t.visit(t.ADD,function(e){l.union(ps(e,s))}),t.visit(t.MOD,function(e){n=n||l.alignsWith(e.bounds),i.dirty(e),l.union(ps(e,s))}),n&&(l.clear(),r.items.forEach(function(e){l.union(e.bounds)}))),function(e){var t=e.clip;if(ie(t))t(Yr(fs.clear()));else{if(!t)return;fs.set(0,0,e.group.width,e.group.height)}e.bounds.intersect(fs)}(r),t.modifies("bounds")};var gs=":vega_identifier:";function ms(e){Nt.call(this,0,e)}function ys(e){Nt.call(this,null,e)}function bs(e){Nt.call(this,null,e)}ms.Definition={type:"Identifier",metadata:{modifies:!0},params:[{name:"as",type:"string",required:!0}]},ce(ms,Nt).transform=function(e,t){var n=function(e){var t=e._signals[gs];t||(e._signals[gs]=t=e.add(0));return t}(t.dataflow),i=n.value,r=e.as;return t.visit(t.ADD,function(e){e[r]||(e[r]=++i)}),n.set(this.value=i),t},ce(ys,Nt).transform=function(e,t){var n=this.value;n||((n=t.dataflow.scenegraph().mark(e.markdef,function(e){var t=e.groups,n=e.parent;return t&&1===t.size?t.get(Object.keys(t.object)[0]):t&&n?t.lookup(n):null}(e),e.index)).group.context=e.context,e.context.group||(e.context.group=n.group),n.source=this,n.clip=e.clip,n.interactive=e.interactive,this.value=n);var i=n.marktype===Oi?er:Zi;return t.visit(t.ADD,function(e){i.call(e,n)}),(e.modified("clip")||e.modified("interactive"))&&(n.clip=e.clip,n.interactive=!!e.interactive,n.zdirty=!0,t.reflow()),n.items=t.source,t};var vs=ce(bs,Nt),_s={parity:function(e){return e.filter(function(e,t){return t%2?e.opacity=0:1})},greedy:function(e,t){var n;return e.filter(function(e,i){return i&&xs(n.bounds,e.bounds,t)?e.opacity=0:(n=e,1)})}};function xs(e,t,n){return n>Math.max(t.x1-e.x2,e.x1-t.x2,t.y1-e.y2,e.y1-t.y2)}function ws(e,t){for(var n,i=1,r=e.length,o=e[0].bounds;i<r;o=n,++i)if(xs(o,n=e[i].bounds,t))return!0}function ks(e){var t=e.bounds;return t.width()>1&&t.height()>1}function Ds(e){return e.forEach(function(e){e.opacity=1}),e}function As(e,t){return e.reflow(t.modified()).modifies("opacity")}function Os(e){Nt.call(this,null,e)}function Cs(e,t){for(var n=0,i=e.length;n<i;++n)t.push(e[n])}function Ts(e){return{x1:0,y1:0,x2:e.width||0,y2:e.height||0}}function Ss(e){var t=e.bounds.clone();return t.empty()?t.set(0,0,0,0):t.translate(-(e.x||0),-(e.y||0))}function Fs(e,t){return"x1"===t?e.x||0:"y1"===t?e.y||0:"x2"===t?(e.x||0)+(e.width||0):"y2"===t?(e.y||0)+(e.height||0):void 0}function js(e,t){return e.bounds[t]}function Es(e,t,n){var i=O(e)?e[t]:e;return null!=i?i:void 0!==n?n:0}function $s(e){return e<0?Math.ceil(-e):0}function Ms(e,t,n){var i,r,o,a,s,l,u,c,d,f,h,p,g=function(e){for(var t,n,i=e.items,r=i.length,o=0,a={marks:[],rowheaders:[],rowfooters:[],colheaders:[],colfooters:[],rowtitle:null,coltitle:null};o<r;++o)if(n=(t=i[o]).items,t.marktype===Oi)switch(t.role){case Ci:case ji:break;case Ei:Cs(n,a.rowheaders);break;case $i:Cs(n,a.rowfooters);break;case zi:Cs(n,a.colheaders);break;case Ni:Cs(n,a.colfooters);break;case Mi:a.rowtitle=n[0];break;case Bi:a.coltitle=n[0];break;default:Cs(n,a.marks)}return a}(t),m=g.marks,y=n.bounds===Yi,b=y?Ts:Ss,v=new Xi(0,0,0,0),_=Es(n.align,Gi),x=Es(n.align,Ji),w=Es(n.padding,Gi),k=Es(n.padding,Ji),D=n.offset,A=t.columns||n.columns||m.length,O=A<0?1:Math.ceil(m.length/A),C=O*A,T=[],S=[],F=0,j=[],E=[],$=0,M=m.length;for(r=0;r<A;++r)S[r]=0;for(r=0;r<O;++r)E[r]=0;for(r=0;r<M;++r)s=b(m[r]),o=r%A,a=~~(r/A),u=Math.ceil(b(m[r]).x2),c=Math.ceil(b(m[r]).y2),F=Math.max(F,u),$=Math.max($,c),S[o]=Math.max(S[o],u),E[a]=Math.max(E[a],c),T.push(w+$s(s.x1)),j.push(k+$s(s.y1)),e.dirty(m[r]);for(r=0;r<M;++r)r%A==0&&(T[r]=0),r<A&&(j[r]=0);if(_===Hi)for(o=1;o<A;++o){for(p=0,r=o;r<M;r+=A)p<T[r]&&(p=T[r]);for(r=o;r<M;r+=A)T[r]=p+S[o-1]}else if(_===Vi){for(p=0,r=0;r<M;++r)r%A&&p<T[r]&&(p=T[r]);for(r=0;r<M;++r)r%A&&(T[r]=p+F)}else for(_=!1,o=1;o<A;++o)for(r=o;r<M;r+=A)T[r]+=S[o-1];if(x===Hi)for(a=1;a<O;++a){for(p=0,i=(r=a*A)+A;r<i;++r)p<j[r]&&(p=j[r]);for(r=a*A;r<i;++r)j[r]=p+E[a-1]}else if(x===Vi){for(p=0,r=A;r<M;++r)p<j[r]&&(p=j[r]);for(r=A;r<M;++r)j[r]=p+$}else for(x=!1,a=1;a<O;++a)for(i=(r=a*A)+A;r<i;++r)j[r]+=E[a-1];for(d=0,r=0;r<M;++r)u=(l=m[r]).x||0,l.x=d=T[r]+(r%A?d:0),l.bounds.translate(d-u,0);for(o=0;o<A;++o)for(f=0,r=o;r<M;r+=A)c=(l=m[r]).y||0,l.y=f+=j[r],l.bounds.translate(0,f-c);if(Es(n.center,Gi)&&O>1&&_)for(r=0;r<M;++r)l=m[r],(d=(s=_===Vi?F:S[r%A])-b(l).x2)>0&&(l.x+=u=d/2,l.bounds.translate(u,0));if(Es(n.center,Ji)&&1!==A&&x)for(r=0;r<M;++r)l=m[r],(f=(s=x===Vi?$:E[~~(r/A)])-b(l).y2)>0&&(l.y+=c=f/2,l.bounds.translate(0,c));for(r=0;r<M;++r)m[r].mark.bounds.clear();for(r=0;r<M;++r)l=m[r],e.dirty(l),v.union(l.mark.bounds.union(l.bounds));function z(e,t){return Math.floor(Math.min(e,t))}function N(e,t){return Math.ceil(Math.max(e,t))}b=y?Fs:js,h=Es(n.headerBand,Ji,null),d=zs(e,g.rowheaders,m,A,O,-Es(D,"rowHeader"),z,0,b,"x1",0,A,1,h),h=Es(n.headerBand,Gi,null),f=zs(e,g.colheaders,m,A,A,-Es(D,"columnHeader"),z,1,b,"y1",0,1,A,h),h=Es(n.footerBand,Ji,null),zs(e,g.rowfooters,m,A,O,Es(D,"rowFooter"),N,0,b,"x2",A-1,A,1,h),h=Es(n.footerBand,Gi,null),zs(e,g.colfooters,m,A,A,Es(D,"columnFooter"),N,1,b,"y2",C-A,1,A,h),g.rowtitle&&(p=d-Es(D,"rowTitle"),h=Es(n.titleBand,Ji,.5),Ns(e,g.rowtitle,p,0,v,h)),g.coltitle&&(p=f-Es(D,"columnTitle"),h=Es(n.titleBand,Gi,.5),Ns(e,g.coltitle,p,1,v,h))}function zs(e,t,n,i,r,o,a,s,l,u,c,d,f,h){var p,g,m,y,b,v,_,x,w,k=n.length,D=0,A=0;if(!k)return D;for(p=c;p<k;p+=d)n[p]&&(D=a(D,l(n[p],u)));if(!t.length)return D;for(t.length>r&&(e.warn("Grid headers exceed limit: "+r),t=t.slice(0,r)),D+=o,g=0,y=t.length;g<y;++g)e.dirty(t[g]),t[g].mark.bounds.clear();for(p=c,g=0,y=t.length;g<y;++g,p+=d){for(b=(v=t[g]).mark.bounds,m=p;m>=0&&null==(_=n[m]);m-=f);s?(x=null==h?_.x:Math.round(_.bounds.x1+h*_.bounds.width()),w=D):(x=D,w=null==h?_.y:Math.round(_.bounds.y1+h*_.bounds.height())),b.union(v.bounds.translate(x-(v.x||0),w-(v.y||0))),v.x=x,v.y=w,e.dirty(v),A=a(A,b[u])}return A}function Ns(e,t,n,i,r,o){if(t){e.dirty(t);var a=n,s=n;i?a=Math.round(r.x1+o*r.width()):s=Math.round(r.y1+o*r.height()),t.bounds.translate(a-(t.x||0),s-(t.y||0)),t.mark.bounds.clear().union(t.bounds),t.x=a,t.y=s,e.dirty(t)}}vs.transform=function(e,t){var n,i,r=_s[e.method]||_s.parity,o=t.materialize(t.SOURCE).source,a=e.separation||0;if(o){if(!e.method)return e.modified("method")&&(Ds(o),t=As(t,e)),t;if(e.sort&&(o=o.slice().sort(e.sort)),n=Ds(o=o.filter(ks)),t=As(t,e),n.length>=3&&ws(n,a)){do{n=r(n,a)}while(n.length>=3&&ws(n,a));n.length<3&&!U(o).opacity&&(n.length>1&&(U(n).opacity=0),U(o).opacity=1)}var s,l,u,c,d;return e.boundScale&&e.boundTolerance>=0&&(s=e.boundScale,l=e.boundOrient,u=+e.boundTolerance,c=s.range(),d=new Xi,l===mi||l===vi?d.set(c[0],-1/0,c[1],1/0):d.set(-1/0,c[0],1/0,c[1]),d.expand(u||1),i=function(e){return d.encloses(e.bounds)},o.forEach(function(e){i(e)||(e.opacity=0)})),t}},ce(Os,Nt).transform=function(e,t){var n=t.dataflow;if(t.visit(t.ALL,function(e){n.dirty(e)}),t.fields&&t.fields.zindex){var i=t.source&&t.source[0];i&&(i.mark.zdirty=!0)}};var Bs=.5,Ps=new Xi;function Is(e){Nt.call(this,null,e)}function Ls(e,t,n){return e[t]===n?0:(e[t]=n,1)}function qs(e){var t=e.items[0].datum.orient;return t===yi||t===bi}function Rs(e,t,n,i){var r,o,a=t.items[0],s=a.datum,l=s.orient,u=function(e){var t=+e.grid;return[e.ticks?t++:-1,e.labels?t++:-1,t+ +e.domain]}(s),c=a.range,d=a.offset,f=a.position,h=a.minExtent,p=a.maxExtent,g=s.title&&a.items[u[2]].items[0],m=a.titlePadding,y=a.bounds,b=0,v=0;switch(Ps.clear().union(y),y.clear(),(r=u[0])>-1&&y.union(a.items[r].bounds),(r=u[1])>-1&&y.union(a.items[r].bounds),l){case mi:b=f||0,v=-d,o=Math.max(h,Math.min(p,-y.y1)),g&&(o=Us(g,o,m,0,-1,y)),y.add(0,-o).add(c,0);break;case yi:b=-d,v=f||0,o=Math.max(h,Math.min(p,-y.x1)),g&&(o=Us(g,o,m,1,-1,y)),y.add(-o,0).add(0,c);break;case bi:b=n+d,v=f||0,o=Math.max(h,Math.min(p,y.x2)),g&&(o=Us(g,o,m,1,1,y)),y.add(0,0).add(o,c);break;case vi:b=f||0,v=i+d,o=Math.max(h,Math.min(p,y.y2)),g&&(o=Us(g,o,m,0,1,y)),y.add(0,0).add(c,o);break;default:b=a.x,v=a.y}return Wr(y.translate(b,v),a),Ls(a,"x",b+Bs)|Ls(a,"y",v+Bs)&&(a.bounds=Ps,e.dirty(a),a.bounds=y,e.dirty(a)),a.mark.bounds.clear().union(y)}function Us(e,t,n,i,r,o){var a=e.bounds,s=0,l=0;return e.auto?(t+=n,i?s=(e.x||0)-(e.x=r*t):l=(e.y||0)-(e.y=r*t),a.translate(-s,-l),e.mark.bounds.set(a.x1,a.y1,a.x2,a.y2),i?(o.add(0,a.y1).add(0,a.y2),t+=a.width()):(o.add(a.x1,0).add(a.x2,0),t+=a.height())):o.union(a),t}function Ws(e,t){return t.reduce(function(t,n){var i=n.items[0];if(function(e,t,n){var i=t.padding-n.x,r=t.padding-n.y;if(t.datum.title){var o=t.items[1].items[0];r+=t.titlePadding+o.fontSize}(i||r)&&(n.x+=i,n.y+=r,n.bounds.translate(i,r),n.mark.bounds.translate(i,r),e.dirty(n))}(e,i,i.items[0].items[0]),i.datum.orient===yi){var r=Ps.clear();i.items.forEach(function(e){r.union(e.bounds)}),t=Math.max(t,Math.ceil(r.width()+2*i.padding-1))}return t},0)}function Vs(e,t,n,i,r,o,a){var s,l,u,c,d,f=t.items[0],h=f.datum,p=h.orient,g=f.offset,m=f.bounds,y=0,b=0;switch(p===mi||p===vi?(u=r,y=n[p]):p!==yi&&p!==bi||(u=i,b=n[p]),Ps.clear().union(m),m.clear(),f.items.forEach(function(e){m.union(e.bounds)}),s=2*f.padding-1,l=2*f.padding-1,m.empty()||(s=Math.ceil(m.width()+s),l=Math.ceil(m.height()+l)),h.type===Ii&&(c=f.items[0].items[0].items[0].items,d=c.reduce(function(e,t){return e[t.column]=Math.max(t.bounds.x2-t.x,e[t.column]||0),e},{}),c.forEach(function(e){e.width=d[e.column],e.height=e.bounds.y2-e.y})),p){case yi:y-=n.leftWidth+g-Math.floor(u.x1),n.left+=l+n.margin;break;case bi:y+=g+Math.ceil(u.x2),n.right+=l+n.margin;break;case mi:b-=l+g-Math.floor(u.y1),n.top+=s+n.margin;break;case vi:b+=g+Math.ceil(u.y2),n.bottom+=s+n.margin;break;case _i:y+=g,b+=g;break;case xi:y+=o-s-g,b+=g;break;case wi:y+=g,b+=a-l-g;break;case ki:y+=o-s-g,b+=a-l-g;break;default:y=f.x,b=f.y}return Wr(m.set(y,b,y+s,b+l),f),Ls(f,"x",y)|Ls(f,"width",s)|Ls(f,"y",b)|Ls(f,"height",l)&&(f.bounds=Ps,e.dirty(f),f.bounds=m,e.dirty(f)),f.mark.bounds.clear().union(m)}ce(Is,Nt).transform=function(e,t){var n=t.dataflow;return e.mark.items.forEach(function(t){e.layout&&Ms(n,t,e.layout),function(e,t,n){var i,r,o,a,s,l,u=t.items,c=Math.max(0,t.width||0),d=Math.max(0,t.height||0),f=(new Xi).set(0,0,c,d),h=f.clone(),p=f.clone(),g=[];for(s=0,l=u.length;s<l;++s)switch((r=u[s]).role){case Ci:(a=qs(r)?h:p).union(Rs(e,r,c,d));break;case Ti:i=r;break;case ji:g.push(r);break;case Si:case Fi:case Ei:case $i:case Mi:case zi:case Ni:case Bi:h.union(r.bounds),p.union(r.bounds);break;default:f.union(r.bounds)}if(g.length)for(o={leftWidth:Ws(e,g),margin:n.legendMargin||8,left:0,right:0,top:0,bottom:0},s=0,l=g.length;s<l;++s)if(a=Vs(e,g[s],o,h,p,c,d),n.autosize&&n.autosize.type===Li){var m=g[s].items[0].datum.orient;m===yi||m===bi?f.add(a.x1,0).add(a.x2,0):m!==mi&&m!==vi||f.add(0,a.y1).add(0,a.y2)}else f.union(a);f.union(h).union(p),i&&f.union(function(e,t,n,i,r){var o,a=t.items[0],s=a.orient,l=a.frame,u=a.anchor,c=a.offset,d=a.bounds,f=0,h=s===yi||s===bi?i:n,p=0,g=0;l!==Oi?s===yi?(f=r.y2,h=r.y1):s===bi?(f=r.y1,h=r.y2):(f=r.x1,h=r.x2):s===yi&&(f=i,h=0);switch(o=u===Di?f:u===Ai?h:(f+h)/2,Ps.clear().union(d),s){case mi:p=o,g=r.y1-c;break;case yi:p=r.x1-c,g=o;break;case bi:p=r.x2+c,g=o;break;case vi:p=o,g=r.y2+c;break;default:p=a.x,g=a.y}d.translate(p-a.x,g-a.y),Ls(a,"x",p)|Ls(a,"y",g)&&(a.bounds=Ps,e.dirty(a),a.bounds=d,e.dirty(a));return t.bounds.clear().union(d)}(e,i,c,d,f));!function(e,t,n,i){var r=i.autosize||{},o=r.type,a=e._width,s=e._height,l=e.padding();if(e._autosize<1||!o)return;var u=Math.max(0,t.width||0),c=Math.max(0,Math.ceil(-n.x1)),d=Math.max(0,Math.ceil(n.x2-u)),f=Math.max(0,t.height||0),h=Math.max(0,Math.ceil(-n.y1)),p=Math.max(0,Math.ceil(n.y2-f));r.contains===Pi&&(a-=l.left+l.right,s-=l.top+l.bottom);o===Wi?(c=0,h=0,u=a,f=s):o===Li?(u=Math.max(0,a-c-d),f=Math.max(0,s-h-p)):o===qi?(u=Math.max(0,a-c-d),s=f+h+p):o===Ri?(a=u+c+d,f=Math.max(0,s-h-p)):o===Ui&&(a=u+c+d,s=f+h+p);e._resizeView(a,s,u,f,[c,h],r.resize)}(e,t,f,n)}(n,t,e)}),e.modified()&&t.reflow(),t};var Hs=Object.freeze({bound:hs,identifier:ms,mark:ys,overlap:bs,render:Os,viewlayout:Is});function Ys(e,t,n){var i=e-t+2*n;return e?i>0?i:1:0}const Gs="identity",Js="linear",Xs="log",Qs="pow",Ks="sqrt",Zs="symlog",el="time",tl="utc",nl="sequential",il="diverging",rl="quantile",ol="quantize",al="threshold",sl="ordinal",ll="point",ul="band",cl="bin-ordinal";function dl(e){return function(e){return e&&e.startsWith(nl)}(e)||function(e){return e&&e.startsWith(il)}(e)}function fl(e){return e===Xs||e.endsWith("-log")}function hl(e){switch(e){case Js:case Xs:case Qs:case Ks:case Zs:case el:case tl:case nl:return!0}return!1}var pl={millisecond:u.c,second:u.g,minute:u.d,hour:u.b,day:u.a,week:u.j,month:u.f,year:u.k},gl={millisecond:u.n,second:u.r,minute:u.o,hour:u.m,day:u.l,week:u.u,month:u.q,year:u.v};function ml(){var e,t,n=Object(c.j)().unknown(void 0),i=n.domain,r=n.range,o=[0,1],s=!1,l=0,u=0,d=.5;function f(){var n=i().length,c=o[1]<o[0],f=o[c-0],h=o[1-c],p=Ys(n,l,u);e=(h-f)/(p||1),s&&(e=Math.floor(e)),f+=(h-f-e*(n-l))*d,t=e*(1-l),s&&(f=Math.round(f),t=Math.round(t));var g=Object(a.m)(n).map(function(t){return f+e*t});return r(c?g.reverse():g)}return delete n.unknown,n.domain=function(e){return arguments.length?(i(e),f()):i()},n.range=function(e){return arguments.length?(o=[+e[0],+e[1]],f()):o.slice()},n.rangeRound=function(e){return o=[+e[0],+e[1]],s=!0,f()},n.bandwidth=function(){return t},n.step=function(){return e},n.round=function(e){return arguments.length?(s=!!e,f()):s},n.padding=function(e){return arguments.length?(u=Math.max(0,Math.min(1,e)),l=u,f()):l},n.paddingInner=function(e){return arguments.length?(l=Math.max(0,Math.min(1,e)),f()):l},n.paddingOuter=function(e){return arguments.length?(u=Math.max(0,Math.min(1,e)),f()):u},n.align=function(e){return arguments.length?(d=Math.max(0,Math.min(1,e)),f()):d},n.invertRange=function(e){if(null!=e[0]&&null!=e[1]){var n,s,l,u=+e[0],c=+e[1],d=o[1]<o[0],f=d?r().reverse():r(),h=f.length-1;if(u==u&&c==c&&(c<u&&(l=u,u=c,c=l),!(c<f[0]||u>o[1-d])))return n=Math.max(0,Object(a.d)(f,u)-1),s=u===c?n:Object(a.d)(f,c)-1,u-f[n]>t+1e-10&&++n,d&&(l=n,n=h-s,s=h-l),n>s?void 0:i().slice(n,s+1)}},n.invert=function(e){var t=n.invertRange([e,e]);return t?t[0]:t},n.copy=function(){return ml().domain(i()).range(o).round(s).paddingInner(l).paddingOuter(u).align(d)},f()}var yl=Array.prototype.map;var bl=Array.prototype.slice;function vl(e,t){return arguments.length>1?(_l[e]=function(e,t){return function(){var n=t();return n.invertRange||(n.invertRange=n.invert?function(e){return function(t){var n,i=t[0],r=t[1];return r<i&&(n=i,i=r,r=n),[e.invert(i),e.invert(r)]}}(n):n.invertExtent?function(e){return function(t){var n,i,r,o,a=e.range(),s=t[0],l=t[1],u=-1;for(l<s&&(i=s,s=l,l=i),r=0,o=a.length;r<o;++r)a[r]>=s&&a[r]<=l&&(u<0&&(u=r),n=r);if(!(u<0))return s=e.invertExtent(a[u]),l=e.invertExtent(a[n]),[void 0===s[0]?s[1]:s[0],void 0===l[1]?l[0]:l[1]]}}(n):void 0),n.type=e,n}}(e,t),this):_l.hasOwnProperty(e)?_l[e]:void 0}var _l={[Gs]:c.f,[Js]:c.h,[Xs]:c.i,[Qs]:c.k,[Ks]:c.s,[Zs]:c.t,[el]:c.v,[tl]:c.w,[nl]:c.n,[nl+"-"+Js]:c.n,[nl+"-"+Xs]:c.o,[nl+"-"+Qs]:c.p,[nl+"-"+Ks]:c.q,[nl+"-"+Zs]:c.r,[il+"-"+Js]:c.a,[il+"-"+Xs]:c.b,[il+"-"+Qs]:c.c,[il+"-"+Ks]:c.d,[il+"-"+Zs]:c.e,[rl]:c.l,[ol]:c.m,[al]:c.u,[cl]:function e(){var t=[],n=[];function i(e){return null==e||e!=e?void 0:n[(Object(a.b)(t,e)-1)%n.length]}return i.domain=function(e){return arguments.length?(t=function(e){return yl.call(e,function(e){return+e})}(e),i):t.slice()},i.range=function(e){return arguments.length?(n=bl.call(e),i):n.slice()},i.tickFormat=function(e,n){return Object(c.x)(t[0],U(t),null==e?10:e,n)},i.copy=function(){return e().domain(i.domain()).range(i.range())},i},[sl]:c.j,[ul]:ml,[ll]:function(){return function e(t){var n=t.copy;return t.padding=t.paddingOuter,delete t.paddingInner,t.copy=function(){return e(n())},t}(ml().paddingInner(1))}};for(var xl in _l)vl(xl,_l[xl]);const wl=["clamp","base","constant","exponent"];function kl(e,t,n){return Object(d.piecewise)(Al(t||"rgb",n),e)}function Dl(e,t,n){var i,r,o,a=n-t;return a&&isFinite(a)?(i=(r=e.type).indexOf("-"),r=i<0?r:r.slice(i+1),o=vl(r)().domain([t,n]).range([0,1]),wl.forEach(t=>e[t]?o[t](e[t]()):0),o):oe(.5)}function Al(e,t){var n=d[function(e){return"interpolate"+e.toLowerCase().split("-").map(function(e){return e[0].toUpperCase()+e.slice(1)}).join("")}(e)];return null!=t&&n&&n.gamma?n.gamma(t):n}function Ol(e){for(var t=e.length/6|0,n=new Array(t),i=0;i<t;)n[i]="#"+e.slice(6*i,6*++i);return n}function Cl(e,t){for(let n in e)Sl(n,t(e[n]))}const Tl={};function Sl(e,t){return e=e&&e.toLowerCase(),arguments.length>1?(Tl[e]=t,this):Tl[e]}function Fl(e,t,n){var i;return he(t)&&null!=n&&(t=Math.min(t,~~(me(e.domain())/n)||1)),O(t)&&(i=t.step,t=t.interval),C(t)&&(t=function(e,t){const n=t===tl?gl:pl;return n.hasOwnProperty(e)&&n[e]}(t,e.type)||k("Only time and utc scales accept interval strings."),i&&(t=t.every(i))),t}function jl(e,t,n){var i=e.range(),r=Math.floor(i[0]),o=Math.ceil(U(i));if(r>o&&(i=o,o=r,r=i),t=t.filter(function(t){return t=e(t),r<=t&&t<=o}),n>0&&t.length>1){for(var a=[t[0],U(t)];t.length>n&&t.length>=3;)t=t.filter(function(e,t){return!(t%2)});t.length<3&&(t=a)}return t}function El(e,t){return e.bins?jl(e,function(e,t){var n=e.length,i=~~(n/(t||n));return i<2?e.slice():e.filter(function(e,t){return!(t%i)})}(e.bins,t)):e.ticks?e.ticks(t):e.domain()}function $l(e,t,n){var i,r,o=e.tickFormat?e.tickFormat(t,n):n?Object(f.a)(n):String;if(fl(e.type)){var a=function(e){var t=Object(f.c)(e||",");if(null==t.precision){switch(t.precision=12,t.type){case"%":t.precision-=2;break;case"e":t.precision-=1}return n=Object(f.a)(t),i=Object(f.a)(".1f")(1)[1],function(e){var t,r,o=n(e),a=o.indexOf(i);if(a<0)return o;for(t=function(e,t){var n,i=e.lastIndexOf("e");if(i>0)return i;for(i=e.length;--i>t;)if((n=e.charCodeAt(i))>=48&&n<=57)return i+1}(o,a),r=t<o.length?o.slice(t):"";--t>a;)if("0"!==o[t]){++t;break}return o.slice(0,t)+r}}return Object(f.a)(t);var n,i}(n);o=e.bins?a:(i=o,r=a,function(e){return i(e)?r(e):""})}return o}function Ml(e){Nt.call(this,null,e)}function zl(e){Nt.call(this,null,e)}function Nl(){return Fe({})}function Bl(e){return e.exit}function Pl(e){Nt.call(this,null,e)}Cl({category10:"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf",category20:"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5",category20b:"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6",category20c:"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9",tableau10:"4c78a8f58518e4575672b7b254a24beeca3bb279a2ff9da69d755dbab0ac",tableau20:"4c78a89ecae9f58518ffbf7954a24b88d27ab79a20f2cf5b43989483bcb6e45756ff9d9879706ebab0acd67195fcbfd2b279a2d6a5c99e765fd8b5a5",accent:"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666",dark2:"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666",paired:"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928",pastel1:"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2",pastel2:"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc",set1:"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999",set2:"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3",set3:"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"},Ol),Cl({blues:"cfe1f2bed8eca8cee58fc1de74b2d75ba3cf4592c63181bd206fb2125ca40a4a90",greens:"d3eecdc0e6baabdda594d3917bc77d60ba6c46ab5e329a512089430e7735036429",greys:"e2e2e2d4d4d4c4c4c4b1b1b19d9d9d8888887575756262624d4d4d3535351e1e1e",oranges:"fdd8b3fdc998fdb87bfda55efc9244f87f2cf06b18e4580bd14904b93d029f3303",purples:"e2e1efd4d4e8c4c5e0b4b3d6a3a0cc928ec3827cb97566ae684ea25c3696501f8c",reds:"fdc9b4fcb49afc9e80fc8767fa7051f6573fec3f2fdc2a25c81b1db21218970b13",blueGreen:"d5efedc1e8e0a7ddd18bd2be70c6a958ba9144ad77319c5d2089460e7736036429",bluePurple:"ccddecbad0e4a8c2dd9ab0d4919cc98d85be8b6db28a55a6873c99822287730f71",greenBlue:"d3eecec5e8c3b1e1bb9bd8bb82cec269c2ca51b2cd3c9fc7288abd1675b10b60a1",orangeRed:"fddcaffdcf9bfdc18afdad77fb9562f67d53ee6545e24932d32d1ebf130da70403",purpleBlue:"dbdaebc8cee4b1c3de97b7d87bacd15b9fc93a90c01e7fb70b70ab056199045281",purpleBlueGreen:"dbd8eac8cee4b0c3de93b7d872acd1549fc83892bb1c88a3097f8702736b016353",purpleRed:"dcc9e2d3b3d7ce9eccd186c0da6bb2e14da0e23189d91e6fc61159ab07498f023a",redPurple:"fccfccfcbec0faa9b8f98faff571a5ec539ddb3695c41b8aa908808d0179700174",yellowGreen:"e4f4acd1eca0b9e2949ed68880c97c62bb6e47aa5e3297502083440e723b036034",yellowOrangeBrown:"feeaa1fedd84fecc63feb746fca031f68921eb7215db5e0bc54c05ab3d038f3204",yellowOrangeRed:"fee087fed16ffebd59fea849fd903efc7335f9522bee3423de1b20ca0b22af0225",blueOrange:"134b852f78b35da2cb9dcae1d2e5eff2f0ebfce0bafbbf74e8932fc5690d994a07",brownBlueGreen:"704108a0651ac79548e3c78af3e6c6eef1eac9e9e48ed1c74da79e187a72025147",purpleGreen:"5b1667834792a67fb6c9aed3e6d6e8eff0efd9efd5aedda971bb75368e490e5e29",purpleOrange:"4114696647968f83b7b9b4d6dadbebf3eeeafce0bafbbf74e8932fc5690d994a07",redBlue:"8c0d25bf363adf745ef4ae91fbdbc9f2efeed2e5ef9dcae15da2cb2f78b3134b85",redGrey:"8c0d25bf363adf745ef4ae91fcdccbfaf4f1e2e2e2c0c0c0969696646464343434",yellowGreenBlue:"eff9bddbf1b4bde5b594d5b969c5be45b4c22c9ec02182b82163aa23479c1c3185",redYellowBlue:"a50026d4322cf16e43fcac64fedd90faf8c1dcf1ecabd6e875abd04a74b4313695",redYellowGreen:"a50026d4322cf16e43fcac63fedd8df9f7aed7ee8ea4d86e64bc6122964f006837",pinkYellowGreen:"8e0152c0267edd72adf0b3d6faddedf5f3efe1f2cab6de8780bb474f9125276419",spectral:"9e0142d13c4bf0704afcac63fedd8dfbf8b0e0f3a1a9dda269bda94288b55e4fa2",viridis:"440154470e61481a6c482575472f7d443a834144873d4e8a39568c35608d31688e2d708e2a788e27818e23888e21918d1f988b1fa08822a8842ab07f35b77943bf7154c56866cc5d7ad1518fd744a5db36bcdf27d2e21be9e51afde725",magma:"0000040404130b0924150e3720114b2c11603b0f704a107957157e651a80721f817f24828c29819a2e80a8327db6377ac43c75d1426fde4968e95462f1605df76f5cfa7f5efc8f65fe9f6dfeaf78febf84fece91fddea0fcedaffcfdbf",inferno:"0000040403130c0826170c3b240c4f330a5f420a68500d6c5d126e6b176e781c6d86216b932667a12b62ae305cbb3755c73e4cd24644dd513ae65c30ed6925f3771af8850ffb9506fca50afcb519fac62df6d645f2e661f3f484fcffa4",plasma:"0d088723069033059742039d5002a25d01a66a00a87801a88405a7900da49c179ea72198b12a90ba3488c33d80cb4779d35171da5a69e16462e76e5bed7953f2834cf68f44fa9a3dfca636fdb32ffec029fcce25f9dc24f5ea27f0f921",rainbow:"6e40aa883eb1a43db3bf3cafd83fa4ee4395fe4b83ff576eff6659ff7847ff8c38f3a130e2b72fcfcc36bee044aff05b8ff4576ff65b52f6673af27828ea8d1ddfa319d0b81cbecb23abd82f96e03d82e14c6edb5a5dd0664dbf6e40aa",sinebow:"ff4040fc582af47218e78d0bd5a703bfbf00a7d5038de70b72f41858fc2a40ff402afc5818f4720be78d03d5a700bfbf03a7d50b8de71872f42a58fc4040ff582afc7218f48d0be7a703d5bf00bfd503a7e70b8df41872fc2a58ff4040",browns:"eedbbdecca96e9b97ae4a865dc9856d18954c7784cc0673fb85536ad44339f3632",tealBlues:"bce4d89dd3d181c3cb65b3c245a2b9368fae347da0306a932c5985",teals:"bbdfdfa2d4d58ac9c975bcbb61b0af4da5a43799982b8b8c1e7f7f127273006667",warmGreys:"dcd4d0cec5c1c0b8b4b3aaa7a59c9998908c8b827f7e7673726866665c5a59504e",goldGreen:"f4d166d5ca60b6c35c98bb597cb25760a6564b9c533f8f4f33834a257740146c36",goldOrange:"f4d166f8be5cf8aa4cf5983bf3852aef701be2621fd65322c54923b142239e3a26",goldRed:"f4d166f6be59f9aa51fc964ef6834bee734ae56249db5247cf4244c43141b71d3e",lightGreyRed:"efe9e6e1dad7d5cbc8c8bdb9bbaea9cd967ddc7b43e15f19df4011dc000b",lightGreyTeal:"e4eaead6dcddc8ced2b7c2c7a6b4bc64b0bf22a6c32295c11f85be1876bc",lightMulti:"e0f1f2c4e9d0b0de9fd0e181f6e072f6c053f3993ef77440ef4a3c",lightOrange:"f2e7daf7d5baf9c499fab184fa9c73f68967ef7860e8645bde515bd43d5b",lightTealBlue:"e3e9e0c0dccf9aceca7abfc859afc0389fb9328dad2f7ca0276b95255988",darkBlue:"3232322d46681a5c930074af008cbf05a7ce25c0dd38daed50f3faffffff",darkGold:"3c3c3c584b37725e348c7631ae8b2bcfa424ecc31ef9de30fff184ffffff",darkGreen:"3a3a3a215748006f4d048942489e4276b340a6c63dd2d836ffeb2cffffaa",darkMulti:"3737371f5287197d8c29a86995ce3fffe800ffffff",darkRed:"3434347036339e3c38cc4037e75d1eec8620eeab29f0ce32ffeb2c"},e=>kl(Ol(e))),ce(Ml,Nt).transform=function(e,t){if(this.value&&!e.modified())return t.StopPropagation;var n=t.fork(t.NO_SOURCE|t.NO_FIELDS),i=this.value,r=e.scale,o=Fl(r,null==e.count?e.values?e.values.length:10:e.count,e.minstep),a=e.format||$l(r,o,e.formatSpecifier),s=e.values?jl(r,e.values,o):El(r,o);return i&&(n.rem=i),i=s.map(function(e,t){return Fe({index:t/(s.length-1),value:e,label:a(e)})}),e.extra&&i.length&&i.push(Fe({index:-1,extra:{value:i[0].value},label:""})),n.source=i,n.add=i,this.value=i,n},ce(zl,Nt).transform=function(e,t){var n=t.dataflow,i=t.fork(t.NO_SOURCE|t.NO_FIELDS),r=e.item||Nl,o=e.key||Te,a=this.value;return A(i.encode)&&(i.encode=null),a&&(e.modified("key")||t.modified(o))&&k("DataJoin does not support modified key function or fields."),a||(t=t.addAll(),this.value=a=ue().test(Bl),a.lookup=function(e){return a.get(o(e))}),t.visit(t.ADD,function(e){var t=o(e),n=a.get(t);n?n.exit?(a.empty--,i.add.push(n)):i.mod.push(n):(a.set(t,n=r(e)),i.add.push(n)),n.datum=e,n.exit=!1}),t.visit(t.MOD,function(e){var t=o(e),n=a.get(t);n&&(n.datum=e,i.mod.push(n))}),t.visit(t.REM,function(e){var t=o(e),n=a.get(t);e!==n.datum||n.exit||(i.rem.push(n),n.exit=!0,++a.empty)}),t.changed(t.ADD_MOD)&&i.modifies("datum"),e.clean&&a.empty>n.cleanThreshold&&n.runAfter(a.clean),i},ce(Pl,Nt).transform=function(e,t){var n=t.fork(t.ADD_REM),i=e.encoders,r=t.encode;if(A(r)){if(!n.changed()&&!r.every(function(e){return i[e]}))return t.StopPropagation;r=r[0],n.encode=null}var o="enter"===r,a=i.update||N,s=i.enter||N,l=i.exit||N,u=(r&&!o?i[r]:a)||N;if(t.changed(t.ADD)&&(t.visit(t.ADD,function(t){s(t,e),a(t,e),u!==N&&u!==a&&u(t,e)}),n.modifies(s.output),n.modifies(a.output),u!==N&&u!==a&&n.modifies(u.output)),t.changed(t.REM)&&l!==N&&(t.visit(t.REM,function(t){l(t,e)}),n.modifies(l.output)),o||u!==N){var c=t.MOD|(e.modified()?t.REFLOW:0);o?(t.visit(c,function(t){var i=s(t,e);(u(t,e)||i)&&n.mod.push(t)}),n.mod.length&&n.modifies(s.output)):t.visit(c,function(t){u(t,e)&&n.mod.push(t)}),n.mod.length&&n.modifies(u.output)}return n.changed()?n:t.StopPropagation};var Il="symbol",Ll="discrete";const ql={[rl]:function(e){var t=[-1/0].concat(e.quantiles());return t.max=1/0,t},[ol]:function(e){var t=e.domain(),n=t[0],i=U(t),r=e.range().length,o=new Array(r),a=0;o[0]=-1/0;for(;++a<r;)o[a]=(a*i-(a-r)*n)/r;return o.max=1/0,o},[al]:function(e){var t=[-1/0].concat(e.domain());return t.max=1/0,t}};function Rl(e,t,n){return n===Il&&function(e){return ql[e.type]||e.bins}(e)?function(e){return function(t,n,i){var r=i[n+1]||i.max||1/0,o=Ul(t,e),a=Ul(r,e);return o&&a?o+"–"+a:a?"< "+a:"≥ "+o}}(t):n===Ll?function(e){return function(t,n){return n?e(t):null}}(t):function(e){return function(t){return e(t)}}(t)}function Ul(e,t){return isFinite(e)?t(e):null}function Wl(e){Nt.call(this,[],e)}ce(Wl,Nt).transform=function(e,t){if(null!=this.value&&!e.modified())return t.StopPropagation;var n,i,r,o,a=t.fork(t.NO_SOURCE|t.NO_FIELDS),s=this.value,l=e.type||Il,u=e.scale,c=Fl(u,null==e.count?5:e.count,e.minstep),d=e.format||$l(u,c,e.formatSpecifier),f=e.values||function(e,t){return e.bins?((n=e.bins.slice()).max=n.pop(),n):ql[e.type]?ql[e.type](e):El(e,t);var n}(u,c);return d=Rl(u,d,l),s&&(a.rem=s),l===Il?(ie(r=e.size)?(e.values||0!==u(f[0])||(f=f.slice(1)),o=f.reduce(function(t,n){return Math.max(t,r(n,e))},0)):r=oe(o=r||8),s=f.map(function(t,n){return Fe({index:n,label:d(t,n,f),value:t,offset:o,size:r(t,e)})})):"gradient"===l?(n=u.domain(),i=Dl(u,n[0],U(n)),f.length<3&&!e.values&&n[0]!==U(n)&&(f=[n[0],U(n)]),s=f.map(function(e,t){return Fe({index:t,label:d(e,t,f),value:e,perc:i(e)})})):(r=f.length-1,i=function(e){var t=e.domain(),n=t.length-1,i=+t[0],r=+U(t),o=r-i;if(e.type===al){var a=n?o/n:.1;o=(r+=a)-(i-=a)}return function(e){return(e-i)/o}}(u),s=f.map(function(e,t){return Fe({index:t,label:d(e,t,f),value:e,perc:t?i(e):0,perc2:t===r?1:i(f[t+1])})})),a.source=s,a.add=s,this.value=s,a};var Vl=ue({line:Ql,"line-radial":function(e,t,n,i){return Ql(t*Math.cos(e),t*Math.sin(e),i*Math.cos(n),i*Math.sin(n))},arc:Kl,"arc-radial":function(e,t,n,i){return Kl(t*Math.cos(e),t*Math.sin(e),i*Math.cos(n),i*Math.sin(n))},curve:Zl,"curve-radial":function(e,t,n,i){return Zl(t*Math.cos(e),t*Math.sin(e),i*Math.cos(n),i*Math.sin(n))},"orthogonal-horizontal":function(e,t,n,i){return"M"+e+","+t+"V"+i+"H"+n},"orthogonal-vertical":function(e,t,n,i){return"M"+e+","+t+"H"+n+"V"+i},"orthogonal-radial":function(e,t,n,i){var r=Math.cos(e),o=Math.sin(e),a=Math.cos(n),s=Math.sin(n),l=Math.abs(n-e)>Math.PI?n<=e:n>e;return"M"+t*r+","+t*o+"A"+t+","+t+" 0 0,"+(l?1:0)+" "+t*a+","+t*s+"L"+i*a+","+i*s},"diagonal-horizontal":function(e,t,n,i){var r=(e+n)/2;return"M"+e+","+t+"C"+r+","+t+" "+r+","+i+" "+n+","+i},"diagonal-vertical":function(e,t,n,i){var r=(t+i)/2;return"M"+e+","+t+"C"+e+","+r+" "+n+","+r+" "+n+","+i},"diagonal-radial":function(e,t,n,i){var r=Math.cos(e),o=Math.sin(e),a=Math.cos(n),s=Math.sin(n),l=(t+i)/2;return"M"+t*r+","+t*o+"C"+l*r+","+l*o+" "+l*a+","+l*s+" "+i*a+","+i*s}});function Hl(e){return e.source.x}function Yl(e){return e.source.y}function Gl(e){return e.target.x}function Jl(e){return e.target.y}function Xl(e){Nt.call(this,{},e)}function Ql(e,t,n,i){return"M"+e+","+t+"L"+n+","+i}function Kl(e,t,n,i){var r=n-e,o=i-t,a=Math.sqrt(r*r+o*o)/2;return"M"+e+","+t+"A"+a+","+a+" "+180*Math.atan2(o,r)/Math.PI+" 0 1 "+n+","+i}function Zl(e,t,n,i){var r=n-e,o=i-t,a=.2*(r+o),s=.2*(o-r);return"M"+e+","+t+"C"+(e+a)+","+(t+s)+" "+(n+s)+","+(i-a)+" "+n+","+i}function eu(e){Nt.call(this,null,e)}Xl.Definition={type:"LinkPath",metadata:{modifies:!0},params:[{name:"sourceX",type:"field",default:"source.x"},{name:"sourceY",type:"field",default:"source.y"},{name:"targetX",type:"field",default:"target.x"},{name:"targetY",type:"field",default:"target.y"},{name:"orient",type:"enum",default:"vertical",values:["horizontal","vertical","radial"]},{name:"shape",type:"enum",default:"line",values:["line","arc","curve","diagonal","orthogonal"]},{name:"require",type:"signal"},{name:"as",type:"string",default:"path"}]},ce(Xl,Nt).transform=function(e,t){var n=e.sourceX||Hl,i=e.sourceY||Yl,r=e.targetX||Gl,o=e.targetY||Jl,a=e.as||"path",s=e.orient||"vertical",l=e.shape||"line",u=Vl.get(l+"-"+s)||Vl.get(l);return u||k("LinkPath unsupported type: "+e.shape+(e.orient?"-"+e.orient:"")),t.visit(t.SOURCE,function(e){e[a]=u(n(e),i(e),r(e),o(e))}),t.reflow(e.modified()).modifies(a)},eu.Definition={type:"Pie",metadata:{modifies:!0},params:[{name:"field",type:"field"},{name:"startAngle",type:"number",default:0},{name:"endAngle",type:"number",default:6.283185307179586},{name:"sort",type:"boolean",default:!1},{name:"as",type:"string",array:!0,length:2,default:["startAngle","endAngle"]}]},ce(eu,Nt).transform=function(e,t){var n,i,r,o=e.as||["startAngle","endAngle"],s=o[0],l=o[1],u=e.field||M,c=e.startAngle||0,d=null!=e.endAngle?e.endAngle:2*Math.PI,f=t.source,h=f.map(u),p=h.length,g=c,m=(d-c)/Object(a.n)(h),y=Object(a.m)(p);for(e.sort&&y.sort(function(e,t){return h[e]-h[t]}),n=0;n<p;++n)r=h[y[n]],(i=f[y[n]])[s]=g,i[l]=g+=r*m;return this.value=h,t.reflow(e.modified()).modifies(o)};var tu=5;function nu(e){return hl(e)&&e!==nl}var iu=xe(["set","modified","clear","type","scheme","schemeExtent","schemeCount","domain","domainMin","domainMid","domainMax","domainRaw","domainImplicit","nice","zero","bins","range","rangeStep","round","reverse","interpolate","interpolateGamma"]);function ru(e){Nt.call(this,null,e),this.modified(!0)}function ou(e,t,n){fl(e)&&(Math.abs(t.reduce(function(e,t){return e+(t<0?-1:t>0?1:0)},0))!==t.length&&n.warn("Log scale domain includes zero: "+T(t)));return t}function au(e,t,n){return ie(e)&&(t||n)?(i=e,r=su(t||[0,1],n),o=r[0],a=U(r)-o,function(e){return i(o+e*a)}):e;var i,r,o,a}function su(e,t){return t?e.slice().reverse():e}function lu(e){Nt.call(this,null,e)}ce(ru,Nt).transform=function(e,t){var n=t.dataflow,i=this.value,r=function(e){var t,n=e.type,i="";if(n===nl)return nl+"-"+Js;(function(e){const t=e.type;return hl(t)&&t!==el&&t!==tl&&(e.scheme||e.range&&e.range.length&&e.range.every(C))})(e)&&(t=e.rawDomain?e.rawDomain.length:e.domain?e.domain.length+ +(null!=e.domainMid):0,i=2===t?nl+"-":3===t?il+"-":"");return(i+n||Js).toLowerCase()}(e);for(r in i&&r===i.type||(this.value=i=vl(r)()),e)if(!iu[r]){if("padding"===r&&nu(i.type))continue;ie(i[r])?i[r](e[r]):n.warn("Unsupported scale property: "+r)}return function(e,t,n){var i=t.round||!1,r=t.range;if(null!=t.rangeStep)r=function(e,t,n){e!==ul&&e!==ll&&k("Only band and point scales support rangeStep.");var i=(null!=t.paddingOuter?t.paddingOuter:t.padding)||0,r=e===ll?1:(null!=t.paddingInner?t.paddingInner:t.padding)||0;return[0,t.rangeStep*Ys(n,r,i)]}(e.type,t,n);else if(t.scheme){if(r=function(e,t,n){var i,r,o=t.schemeExtent;A(t.scheme)?r=kl(t.scheme,t.interpolate,t.interpolateGamma):(i=t.scheme.toLowerCase(),(r=Sl(i))||k("Unrecognized scheme name: "+t.scheme));return n=e===al?n+1:e===cl?n-1:e===rl||e===ol?+t.schemeCount||tu:n,dl(e)?au(r,o,t.reverse):ie(r)?function(e,t){for(var n=new Array(t),i=t+1,r=0;r<t;)n[r]=e(++r/i);return n}(au(r,o),n):e===sl?r:r.slice(0,n)}(e.type,t,n),ie(r))return e.interpolator(r)}else if(r&&dl(e.type))return e.interpolator(kl(su(r,t.reverse),t.interpolate,t.interpolateGamma));r&&t.interpolate&&e.interpolate?e.interpolate(Al(t.interpolate,t.interpolateGamma)):ie(e.round)?e.round(i):ie(e.rangeRound)&&e.interpolate(i?d.interpolateRound:d.interpolate);r&&e.range(su(r,t.reverse))}(i,e,function(e,t,n){let i=t.bins;if(i&&!A(i)){const t=(null==i.start||null==i.stop)&&e.domain(),n=null==i.start?t[0]:i.start,r=null==i.stop?U(t):i.stop,o=i.step;o||k("Scale bins parameter missing step property."),i=Object(a.m)(n,r+o,o)}i?e.bins=i:e.bins&&delete e.bins;e.type===cl&&(i?t.domain||(e.domain(i),n=i.length):e.bins=e.domain());return n}(i,e,function(e,t,n){var i=function(e,t,n){return t?(e.domain(ou(e.type,t,n)),t.length):-1}(e,t.domainRaw,n);if(i>-1)return i;var r,o,a=t.domain,s=e.type,l=t.zero||void 0===t.zero&&function(e){const t=e.type;return!e.bins&&(t===Js||t===Qs||t===Ks)}(e);if(!a)return 0;nu(s)&&t.padding&&a[0]!==U(a)&&(a=function(e,t,n,i,r,o){var a=Math.abs(U(n)-n[0]),s=a/(a-2*i),l=e===Xs?Z(t,null,s):e===Ks?ee(t,null,s,.5):e===Qs?ee(t,null,s,r||1):e===Zs?te(t,null,s,o||1):K(t,null,s);return(t=t.slice())[0]=l[0],t[t.length-1]=l[1],t}(s,a,t.range,t.padding,t.exponent,t.constant));(l||null!=t.domainMin||null!=t.domainMax||null!=t.domainMid)&&(r=(a=a.slice()).length-1||1,l&&(a[0]>0&&(a[0]=0),a[r]<0&&(a[r]=0)),null!=t.domainMin&&(a[0]=t.domainMin),null!=t.domainMax&&(a[r]=t.domainMax),null!=t.domainMid&&(((o=t.domainMid)<a[0]||o>a[r])&&n.warn("Scale domainMid exceeds domain min or max.",o),a.splice(r,0,o)));e.domain(ou(s,a,n)),s===sl&&e.unknown(t.domainImplicit?c.g:void 0);t.nice&&e.nice&&e.nice(!0!==t.nice&&Fl(e,t.nice)||null);return a.length}(i,e,n))),t.fork(t.NO_SOURCE|t.NO_FIELDS)},ce(lu,Nt).transform=function(e,t){var n=e.modified("sort")||t.changed(t.ADD)||t.modified(e.sort.fields)||t.modified("datum");return n&&t.source.sort(e.sort),this.modified(n),t};var uu=["y0","y1"];function cu(e){Nt.call(this,null,e)}function du(e,t,n,i,r){for(var o,a=(t-e.sum)/2,s=e.length,l=0;l<s;++l)(o=e[l])[i]=a,o[r]=a+=Math.abs(n(o))}function fu(e,t,n,i,r){for(var o,a=1/e.sum,s=0,l=e.length,u=0,c=0;u<l;++u)(o=e[u])[i]=s,o[r]=s=a*(c+=Math.abs(n(o)))}function hu(e,t,n,i,r){for(var o,a,s=0,l=0,u=e.length,c=0;c<u;++c)(o=n(a=e[c]))<0?(a[i]=l,a[r]=l+=o):(a[i]=s,a[r]=s+=o)}cu.Definition={type:"Stack",metadata:{modifies:!0},params:[{name:"field",type:"field"},{name:"groupby",type:"field",array:!0},{name:"sort",type:"compare"},{name:"offset",type:"enum",default:"zero",values:["zero","center","normalize"]},{name:"as",type:"string",array:!0,length:2,default:uu}]},ce(cu,Nt).transform=function(e,t){var n,i,r,o,a=e.as||uu,s=a[0],l=a[1],u=e.field||M,c="center"===e.offset?du:"normalize"===e.offset?fu:hu;for(n=function(e,t,n,i){var r,o,a,s,l,u,c,d,f,h=[],p=function(e){return e(l)};if(null==t)h.push(e.slice());else for(r={},o=0,a=e.length;o<a;++o)l=e[o],u=t.map(p),(c=r[u])||(r[u]=c=[],h.push(c)),c.push(l);for(u=0,f=0,s=h.length;u<s;++u){for(c=h[u],o=0,d=0,a=c.length;o<a;++o)d+=Math.abs(i(c[o]));c.sum=d,d>f&&(f=d),n&&c.sort(n)}return h.max=f,h}(t.source,e.groupby,e.sort,u),i=0,r=n.length,o=n.max;i<r;++i)c(n[i],o,u,s,l);return t.reflow(e.modified()).modifies(a)};var pu=Object.freeze({axisticks:Ml,datajoin:zl,encode:Pl,legendentries:Wl,linkpath:Xl,pie:eu,scale:ru,sortitems:lu,stack:cu,validTicks:jl}),gu=["size","smooth"],mu=["x","y","weight","size","cellSize","bandwidth"];function yu(e){Nt.call(this,null,e)}yu.Definition={type:"Contour",metadata:{generates:!0},params:[{name:"size",type:"number",array:!0,length:2,required:!0},{name:"values",type:"number",array:!0},{name:"x",type:"field"},{name:"y",type:"field"},{name:"weight",type:"field"},{name:"cellSize",type:"number"},{name:"bandwidth",type:"number"},{name:"count",type:"number"},{name:"smooth",type:"boolean"},{name:"nice",type:"boolean",default:!1},{name:"thresholds",type:"number",array:!0}]},ce(yu,Nt).transform=function(e,t){if(this.value&&!t.changed()&&!e.modified())return t.StopPropagation;var n,i,r,o,s=t.fork(t.NO_SOURCE|t.NO_FIELDS),l=e.count||10;return e.values?(n=Object(h.b)(),i=gu,r=e.values):(n=Object(h.a)(),i=mu,r=t.materialize(t.SOURCE).source),n.thresholds(e.thresholds||(e.nice?l:(o=l,function(e){for(var t=Object(a.f)(e),n=t[0],i=t[1]-n,r=[],s=1;s<=o;++s)r.push(n+i*s/(o+1));return r}))),i.forEach(function(t){null!=e[t]&&n[t](e[t])}),this.value&&(s.rem=this.value),r=r&&r.length?n(r).map(Fe):[],this.value=s.source=s.add=r,s};var bu="FeatureCollection";function vu(e){Nt.call(this,null,e)}vu.Definition={type:"GeoJSON",metadata:{},params:[{name:"fields",type:"field",array:!0,length:2},{name:"geojson",type:"field"}]},ce(vu,Nt).transform=function(e,t){var n,i=this._features,r=this._points,o=e.fields,a=o&&o[0],s=o&&o[1],l=e.geojson,u=t.ADD;n=e.modified()||t.changed(t.REM)||t.modified(w(l))||a&&t.modified(w(a))||s&&t.modified(w(s)),this.value&&!n||(u=t.SOURCE,this._features=i=[],this._points=r=[]),l&&t.visit(u,function(e){i.push(l(e))}),a&&s&&(t.visit(u,function(e){var t=a(e),n=s(e);null!=t&&null!=n&&(t=+t)===t&&(n=+n)===n&&r.push([t,n])}),i=i.concat({type:"Feature",geometry:{type:"MultiPoint",coordinates:r}})),this.value={type:bu,features:i}};var _u=Object(p.r)(),xu=["clipAngle","clipExtent","scale","translate","center","rotate","parallels","precision","reflectX","reflectY","coefficient","distance","fraction","lobes","parallel","radius","ratio","spacing","tilt"];function wu(e,t){if(!e||"string"!=typeof e)throw new Error("Projection type must be a name string.");return e=e.toLowerCase(),arguments.length>1?(Du[e]=function(e,t){return function n(){var i=t();return i.type=e,i.path=Object(p.r)().projection(i),i.copy=i.copy||function(){var e=n();return xu.forEach(function(t){i.hasOwnProperty(t)&&e[t](i[t]())}),e.path.pointRadius(i.path.pointRadius()),e},i}}(e,t),this):Du.hasOwnProperty(e)?Du[e]:null}function ku(e){return e&&e.path||_u}var Du={albers:p.a,albersusa:p.b,azimuthalequalarea:p.d,azimuthalequidistant:p.e,conicconformal:p.h,conicequalarea:p.i,conicequidistant:p.j,equirectangular:p.k,gnomonic:p.l,identity:p.n,mercator:p.o,naturalEarth1:p.p,orthographic:p.q,stereographic:p.s,transversemercator:p.t};for(var Au in Du)wu(Au,Du[Au]);function Ou(e){Nt.call(this,null,e)}function Cu(e){Nt.call(this,null,e)}function Tu(e){Nt.call(this,null,e)}function Su(e){Nt.call(this,[],e),this.generator=Object(p.m)()}function Fu(e){Nt.call(this,null,e),this.modified(!0)}function ju(e,t,n){ie(e[t])&&e[t](n)}Ou.Definition={type:"GeoPath",metadata:{modifies:!0},params:[{name:"projection",type:"projection"},{name:"field",type:"field"},{name:"pointRadius",type:"number",expr:!0},{name:"as",type:"string",default:"path"}]},ce(Ou,Nt).transform=function(e,t){var n=t.fork(t.ALL),i=this.value,r=e.field||E,o=e.as||"path",a=n.SOURCE;!i||e.modified()?(this.value=i=ku(e.projection),n.materialize().reflow()):a=r===E||t.modified(r.fields)?n.ADD_MOD:n.ADD;var s=function(e,t){var n=e.pointRadius();e.context(null),null!=t&&e.pointRadius(t);return n}(i,e.pointRadius);return n.visit(a,function(e){e[o]=i(r(e))}),i.pointRadius(s),n.modifies(o)},Cu.Definition={type:"GeoPoint",metadata:{modifies:!0},params:[{name:"projection",type:"projection",required:!0},{name:"fields",type:"field",array:!0,required:!0,length:2},{name:"as",type:"string",array:!0,length:2,default:["x","y"]}]},ce(Cu,Nt).transform=function(e,t){var n,i=e.projection,r=e.fields[0],o=e.fields[1],a=e.as||["x","y"],s=a[0],l=a[1];function u(e){var t=i([r(e),o(e)]);t?(e[s]=t[0],e[l]=t[1]):(e[s]=void 0,e[l]=void 0)}return e.modified()?t=t.materialize().reflow(!0).visit(t.SOURCE,u):(n=t.modified(r.fields)||t.modified(o.fields),t.visit(n?t.ADD_MOD:t.ADD,u)),t.modifies(a)},Tu.Definition={type:"GeoShape",metadata:{modifies:!0},params:[{name:"projection",type:"projection"},{name:"field",type:"field",default:"datum"},{name:"pointRadius",type:"number",expr:!0},{name:"as",type:"string",default:"shape"}]},ce(Tu,Nt).transform=function(e,t){var n=t.fork(t.ALL),i=this.value,r=e.field||S("datum"),o=e.as||"shape",a=n.ADD_MOD;return i&&!e.modified()||(this.value=i=function(e,t,n){var i=null==n?function(n){return e(t(n))}:function(i){var r=e.pointRadius(),o=e.pointRadius(n)(t(i));return e.pointRadius(r),o};return i.context=function(t){return e.context(t),i},i}(ku(e.projection),r,e.pointRadius),n.materialize().reflow(),a=n.SOURCE),n.visit(a,function(e){e[o]=i}),n.modifies(o)},Su.Definition={type:"Graticule",metadata:{changes:!0},params:[{name:"extent",type:"array",array:!0,length:2,content:{type:"number",array:!0,length:2}},{name:"extentMajor",type:"array",array:!0,length:2,content:{type:"number",array:!0,length:2}},{name:"extentMinor",type:"array",array:!0,length:2,content:{type:"number",array:!0,length:2}},{name:"step",type:"number",array:!0,length:2},{name:"stepMajor",type:"number",array:!0,length:2,default:[90,360]},{name:"stepMinor",type:"number",array:!0,length:2,default:[10,10]},{name:"precision",type:"number",default:2.5}]},ce(Su,Nt).transform=function(e,t){var n,i=this.value,r=this.generator;if(!i.length||e.modified())for(var o in e)ie(r[o])&&r[o](e[o]);return n=r(),i.length?t.mod.push($e(i[0],n)):t.add.push(Fe(n)),i[0]=n,t},ce(Fu,Nt).transform=function(e,t){var n=this.value;return!n||e.modified("type")?(this.value=n=function(e){var t=wu((e||"mercator").toLowerCase());t||k("Unrecognized projection type: "+e);return t()}(e.type),xu.forEach(function(t){null!=e[t]&&ju(n,t,e[t])})):xu.forEach(function(t){e.modified(t)&&ju(n,t,e[t])}),null!=e.pointRadius&&n.path.pointRadius(e.pointRadius),e.fit&&function(e,t){var n=(i=t.fit,1===(i=ne(i)).length?i[0]:{type:bu,features:i.reduce(function(e,t){return t&&t.type===bu?e.push.apply(e,t.features):A(t)?e.push.apply(e,t):e.push(t),e},[])});var i;t.extent?e.fitExtent(t.extent,n):t.size&&e.fitSize(t.size,n)}(n,e),t.fork(t.NO_SOURCE|t.NO_FIELDS)};var Eu=Object.freeze({contour:yu,geojson:vu,geopath:Ou,geopoint:Cu,geoshape:Tu,graticule:Su,projection:Fu}),$u={center:g.a,collide:g.b,nbody:g.d,link:g.c,x:g.f,y:g.g},Mu="forces",zu=["alpha","alphaMin","alphaTarget","velocityDecay","forces"],Nu=["static","iterations"],Bu=["x","y","vx","vy"];function Pu(e){Nt.call(this,null,e)}Pu.Definition={type:"Force",metadata:{modifies:!0},params:[{name:"static",type:"boolean",default:!1},{name:"restart",type:"boolean",default:!1},{name:"iterations",type:"number",default:300},{name:"alpha",type:"number",default:1},{name:"alphaMin",type:"number",default:.001},{name:"alphaTarget",type:"number",default:0},{name:"velocityDecay",type:"number",default:.4},{name:"forces",type:"param",array:!0,params:[{key:{force:"center"},params:[{name:"x",type:"number",default:0},{name:"y",type:"number",default:0}]},{key:{force:"collide"},params:[{name:"radius",type:"number",expr:!0},{name:"strength",type:"number",default:.7},{name:"iterations",type:"number",default:1}]},{key:{force:"nbody"},params:[{name:"strength",type:"number",default:-30},{name:"theta",type:"number",default:.9},{name:"distanceMin",type:"number",default:1},{name:"distanceMax",type:"number"}]},{key:{force:"link"},params:[{name:"links",type:"data"},{name:"id",type:"field"},{name:"distance",type:"number",default:30,expr:!0},{name:"strength",type:"number",expr:!0},{name:"iterations",type:"number",default:1}]},{key:{force:"x"},params:[{name:"strength",type:"number",default:.1},{name:"x",type:"field"}]},{key:{force:"y"},params:[{name:"strength",type:"number",default:.1},{name:"y",type:"field"}]}]},{name:"as",type:"string",array:!0,modify:!1,default:Bu}]};var Iu=ce(Pu,Nt);function Lu(e,t,n,i){var r,o,a,s,l=ne(t.forces);for(r=0,o=zu.length;r<o;++r)(a=zu[r])!==Mu&&t.modified(a)&&e[a](t[a]);for(r=0,o=l.length;r<o;++r)s=Mu+r,(a=n||t.modified(Mu,r)?Ru(l[r]):i&&qu(l[r],i)?e.force(s):null)&&e.force(s,a);for(o=e.numForces||0;r<o;++r)e.force(Mu+r,null);return e.numForces=l.length,e}function qu(e,t){var n,i;for(n in e)if(ie(i=e[n])&&t.modified(w(i)))return 1;return 0}function Ru(e){var t,n;for(n in $u.hasOwnProperty(e.force)||k("Unrecognized force: "+e.force),t=$u[e.force](),e)ie(t[n])&&Uu(t[n],e[n],e);return t}function Uu(e,t,n){e(ie(t)?function(e){return t(e,n)}:t)}Iu.transform=function(e,t){var n,i,r=this.value,o=t.changed(t.ADD_REM),a=e.modified(zu),s=e.iterations||300;if(r?(o&&(t.modifies("index"),r.nodes(t.source)),(a||t.changed(t.MOD))&&Lu(r,e,0,t)):(this.value=r=function(e,t){var n=Object(g.e)(e),i=!1,r=n.stop,o=n.restart;return n.stopped=function(){return i},n.restart=function(){return i=!1,o()},n.stop=function(){return i=!0,r()},Lu(n,t,!0).on("end",function(){i=!0})}(t.source,e),r.on("tick",(n=t.dataflow,i=this,function(){n.touch(i).run()})),e.static||(o=!0,r.tick()),t.modifies("index")),a||o||e.modified(Nu)||t.changed()&&e.restart)if(r.alpha(Math.max(r.alpha(),e.alpha||1)).alphaDecay(1-Math.pow(r.alphaMin(),1/s)),e.static)for(r.stop();--s>=0;)r.tick();else if(r.stopped()&&r.restart(),!o)return t.StopPropagation;return this.finish(e,t)},Iu.finish=function(e,t){for(var n,i=t.dataflow,r=this._argops,o=0,a=r.length;o<a;++o)if((n=r[o]).name===Mu&&"link"===n.op._argval.force)for(var s,l=n.op._argops,u=0,c=l.length;u<c;++u)if("links"===l[u].name&&(s=l[u].op.source)){i.pulse(s,i.changeset().reflow());break}return t.reflow(e.modified()).modifies(Bu)};var Wu=Object.freeze({force:Pu});function Vu(e,t,n){var i={};return e.each(function(e){var r=e.data;n(r)&&(i[t(r)]=e)}),e.lookup=i,e}function Hu(e){Nt.call(this,null,e)}function Yu(e){return e.values}function Gu(){var e,t=[];return e={entries:function(e){return function e(n,i){if(++i>t.length)return n;var r,o=[];for(r in n)o.push({key:r,values:e(n[r],i)});return o}(function e(n,i){if(i>=t.length)return n;for(var r,o,a,s=-1,l=n.length,u=t[i++],c={},d={};++s<l;)(a=c[r=u(o=n[s])+""])?a.push(o):c[r]=[o];for(r in c)d[r]=e(c[r],i);return d}(e,0),0)},key:function(n){return t.push(n),e}}}function Ju(e){Nt.call(this,null,e)}function Xu(e,t){return e.parent===t.parent?1:2}Hu.Definition={type:"Nest",metadata:{treesource:!0,changes:!0},params:[{name:"keys",type:"field",array:!0},{name:"generate",type:"boolean"}]},ce(Hu,Nt).transform=function(e,t){t.source||k("Nest transform requires an upstream data source.");var n=e.generate,i=e.modified(),r=t.clone(),o=this.value;return(!o||i||t.changed())&&(o&&o.each(function(e){e.children&&Ce(e.data)&&r.rem.push(e.data)}),this.value=o=Object(m.b)({values:ne(e.keys).reduce(function(e,t){return e.key(t),e},Gu()).entries(r.source)},Yu),n&&o.each(function(e){e.children&&(e=Fe(e.data),r.add.push(e),r.source.push(e))}),Vu(o,Te,Te)),r.source.root=o,r},ce(Ju,Nt).transform=function(e,t){t.source&&t.source.root||k(this.constructor.name+" transform requires a backing tree data source.");var n=this.layout(e.method),i=this.fields,r=t.source.root,o=e.as||i;e.field&&r.sum(e.field),e.sort&&r.sort(e.sort),function(e,t,n){for(var i,r=0,o=t.length;r<o;++r)(i=t[r])in n&&e[i](n[i])}(n,this.params,e),n.separation&&n.separation(!1!==e.separation?Xu:M);try{this.value=n(r)}catch(e){k(e)}return r.each(function(e){!function(e,t,n){for(var i=e.data,r=0,o=t.length-1;r<o;++r)i[n[r]]=e[t[r]];i[n[o]]=e.children?e.children.length:0}(e,i,o)}),t.reflow(e.modified()).modifies(o).modifies("leaf")};var Qu=["x","y","r","depth","children"];function Ku(e){Ju.call(this,e)}Ku.Definition={type:"Pack",metadata:{tree:!0,modifies:!0},params:[{name:"field",type:"field"},{name:"sort",type:"compare"},{name:"padding",type:"number",default:0},{name:"radius",type:"field",default:null},{name:"size",type:"number",array:!0,length:2},{name:"as",type:"string",array:!0,length:Qu.length,default:Qu}]};var Zu=ce(Ku,Ju);Zu.layout=m.c,Zu.params=["size","padding"],Zu.fields=Qu;var ec=["x0","y0","x1","y1","depth","children"];function tc(e){Ju.call(this,e)}tc.Definition={type:"Partition",metadata:{tree:!0,modifies:!0},params:[{name:"field",type:"field"},{name:"sort",type:"compare"},{name:"padding",type:"number",default:0},{name:"round",type:"boolean",default:!1},{name:"size",type:"number",array:!0,length:2},{name:"as",type:"string",array:!0,length:ec.length,default:ec}]};var nc=ce(tc,Ju);function ic(e){Nt.call(this,null,e)}nc.layout=m.d,nc.params=["size","round","padding"],nc.fields=ec,ic.Definition={type:"Stratify",metadata:{treesource:!0},params:[{name:"key",type:"field",required:!0},{name:"parentKey",type:"field",required:!0}]},ce(ic,Nt).transform=function(e,t){t.source||k("Stratify transform requires an upstream data source.");var n=this.value,i=e.modified(),r=t.fork(t.ALL).materialize(t.SOURCE),o=!this.value||i||t.changed(t.ADD_REM)||t.modified(e.key.fields)||t.modified(e.parentKey.fields);return r.source=r.source.slice(),o&&(n=r.source.length?Vu(Object(m.e)().id(e.key).parentId(e.parentKey)(r.source),e.key,z):Vu(Object(m.e)()([{}]),e.key,e.key)),r.source.root=this.value=n,r};var rc={tidy:m.f,cluster:m.a},oc=["x","y","depth","children"];function ac(e){Ju.call(this,e)}ac.Definition={type:"Tree",metadata:{tree:!0,modifies:!0},params:[{name:"field",type:"field"},{name:"sort",type:"compare"},{name:"method",type:"enum",default:"tidy",values:["tidy","cluster"]},{name:"size",type:"number",array:!0,length:2},{name:"nodeSize",type:"number",array:!0,length:2},{name:"separation",type:"boolean",default:!0},{name:"as",type:"string",array:!0,length:oc.length,default:oc}]};var sc=ce(ac,Ju);function lc(e){Nt.call(this,[],e)}sc.layout=function(e){var t=e||"tidy";if(rc.hasOwnProperty(t))return rc[t]();k("Unrecognized Tree layout method: "+t)},sc.params=["size","nodeSize"],sc.fields=oc,lc.Definition={type:"TreeLinks",metadata:{tree:!0,generates:!0,changes:!0},params:[]},ce(lc,Nt).transform=function(e,t){var n=this.value,i=t.source&&t.source.root,r=t.fork(t.NO_SOURCE),o={};return i||k("TreeLinks transform requires a tree data source."),t.changed(t.ADD_REM)?(r.rem=n,t.visit(t.SOURCE,function(e){o[Te(e)]=1}),i.each(function(e){var t=e.data,n=e.parent&&e.parent.data;n&&o[Te(t)]&&o[Te(n)]&&r.add.push(Fe({source:n,target:t}))}),this.value=r.add):t.changed(t.MOD)&&(t.visit(t.MOD,function(e){o[Te(e)]=1}),n.forEach(function(e){(o[Te(e.source)]||o[Te(e.target)])&&r.mod.push(e)})),r};var uc={binary:m.h,dice:m.i,slice:m.k,slicedice:m.l,squarify:m.m,resquarify:m.j},cc=["x0","y0","x1","y1","depth","children"];function dc(e){Ju.call(this,e)}dc.Definition={type:"Treemap",metadata:{tree:!0,modifies:!0},params:[{name:"field",type:"field"},{name:"sort",type:"compare"},{name:"method",type:"enum",default:"squarify",values:["squarify","resquarify","binary","dice","slice","slicedice"]},{name:"padding",type:"number",default:0},{name:"paddingInner",type:"number",default:0},{name:"paddingOuter",type:"number",default:0},{name:"paddingTop",type:"number",default:0},{name:"paddingRight",type:"number",default:0},{name:"paddingBottom",type:"number",default:0},{name:"paddingLeft",type:"number",default:0},{name:"ratio",type:"number",default:1.618033988749895},{name:"round",type:"boolean",default:!1},{name:"size",type:"number",array:!0,length:2},{name:"as",type:"string",array:!0,length:cc.length,default:cc}]};var fc=ce(dc,Ju);fc.layout=function(){var e=Object(m.g)();return e.ratio=function(t){var n=e.tile();n.ratio&&e.tile(n.ratio(t))},e.method=function(t){uc.hasOwnProperty(t)?e.tile(uc[t]):k("Unrecognized Treemap layout method: "+t)},e},fc.params=["method","ratio","size","round","padding","paddingInner","paddingOuter","paddingTop","paddingRight","paddingBottom","paddingLeft"],fc.fields=cc;var hc=Object.freeze({nest:Hu,pack:Ku,partition:tc,stratify:ic,tree:ac,treelinks:lc,treemap:dc});function pc(e){Nt.call(this,null,e)}pc.Definition={type:"Voronoi",metadata:{modifies:!0},params:[{name:"x",type:"field",required:!0},{name:"y",type:"field",required:!0},{name:"size",type:"number",array:!0,length:2},{name:"extent",type:"array",array:!0,length:2,default:[[-1e5,-1e5],[1e5,1e5]],content:{type:"number",array:!0,length:2}},{name:"as",type:"string",default:"path"}]};var gc=ce(pc,Nt),mc=[[-1e5,-1e5],[1e5,1e5]];gc.transform=function(e,t){var n,i,r,o,a=e.as||"path",s=t.source;for(n=Object(y.a)().x(e.x).y(e.y),e.size?n.size(e.size):n.extent(e.extent||mc),this.value=n=n(s),i=n.polygons(),r=0,o=s.length;r<o;++r)s[r][a]=i[r]?"M"+i[r].join("L")+"Z":null;return t.reflow(e.modified()).modifies(a)};var yc=Object.freeze({voronoi:pc}),bc=Math.PI/180,vc=64,_c=2048;function xc(){var e,t,n,i,r,o,a,s=[256,256],l=Ac,u=[],c=Math.random,d={};function f(e,t,n){for(var i,r,o,a,u,d=t.x,f=t.y,h=Math.sqrt(s[0]*s[0]+s[1]*s[1]),p=l(s),g=c()<.5?1:-1,m=-g;(i=p(m+=g))&&(r=~~i[0],o=~~i[1],!(Math.min(Math.abs(r),Math.abs(o))>=h));)if(t.x=d+r,t.y=f+o,!(t.x+t.x0<0||t.y+t.y0<0||t.x+t.x1>s[0]||t.y+t.y1>s[1]||n&&kc(t,e,s[0])||n&&(u=n,!((a=t).x+a.x1>u[0].x&&a.x+a.x0<u[1].x&&a.y+a.y1>u[0].y&&a.y+a.y0<u[1].y)))){for(var y,b=t.sprite,v=t.width>>5,_=s[0]>>5,x=t.x-(v<<4),w=127&x,k=32-w,D=t.y1-t.y0,A=(t.y+t.y0)*_+(x>>5),O=0;O<D;O++){y=0;for(var C=0;C<=v;C++)e[A+C]|=y<<k|(C<v?(y=b[O*v+C])>>>w:0);A+=_}return t.sprite=null,!0}return!1}return d.layout=function(){for(var l=function(e){e.width=e.height=1;var t=Math.sqrt(e.getContext("2d").getImageData(0,0,1,1).data.length>>2);e.width=(vc<<5)/t,e.height=_c/t;var n=e.getContext("2d");return n.fillStyle=n.strokeStyle="red",n.textAlign="center",{context:n,ratio:t}}(tr()),d=function(e){var t=[],n=-1;for(;++n<e;)t[n]=0;return t}((s[0]>>5)*s[1]),h=null,p=u.length,g=-1,m=[],y=u.map(function(s){return{text:e(s),font:t(s),style:i(s),weight:r(s),rotate:o(s),size:~~n(s),padding:a(s),xoff:0,yoff:0,x1:0,y1:0,x0:0,y0:0,hasText:!1,sprite:null,datum:s}}).sort(function(e,t){return t.size-e.size});++g<p;){var b=y[g];b.x=s[0]*(c()+.5)>>1,b.y=s[1]*(c()+.5)>>1,wc(l,b,y,g),b.hasText&&f(d,b,h)&&(m.push(b),h?Dc(h,b):h=[{x:b.x+b.x0,y:b.y+b.y0},{x:b.x+b.x1,y:b.y+b.y1}],b.x-=s[0]>>1,b.y-=s[1]>>1)}return m},d.words=function(e){return arguments.length?(u=e,d):u},d.size=function(e){return arguments.length?(s=[+e[0],+e[1]],d):s},d.font=function(e){return arguments.length?(t=Oc(e),d):t},d.fontStyle=function(e){return arguments.length?(i=Oc(e),d):i},d.fontWeight=function(e){return arguments.length?(r=Oc(e),d):r},d.rotate=function(e){return arguments.length?(o=Oc(e),d):o},d.text=function(t){return arguments.length?(e=Oc(t),d):e},d.spiral=function(e){return arguments.length?(l=Cc[e]||e,d):l},d.fontSize=function(e){return arguments.length?(n=Oc(e),d):n},d.padding=function(e){return arguments.length?(a=Oc(e),d):a},d.random=function(e){return arguments.length?(c=e,d):c},d}function wc(e,t,n,i){if(!t.sprite){var r=e.context,o=e.ratio;r.clearRect(0,0,(vc<<5)/o,_c/o);var a,s,l,u,c,d=0,f=0,h=0,p=n.length;for(--i;++i<p;){if(t=n[i],r.save(),r.font=t.style+" "+t.weight+" "+~~((t.size+1)/o)+"px "+t.font,a=r.measureText(t.text+"m").width*o,l=t.size<<1,t.rotate){var g=Math.sin(t.rotate*bc),m=Math.cos(t.rotate*bc),y=a*m,b=a*g,v=l*m,_=l*g;a=Math.max(Math.abs(y+_),Math.abs(y-_))+31>>5<<5,l=~~Math.max(Math.abs(b+v),Math.abs(b-v))}else a=a+31>>5<<5;if(l>h&&(h=l),d+a>=vc<<5&&(d=0,f+=h,h=0),f+l>=_c)break;r.translate((d+(a>>1))/o,(f+(l>>1))/o),t.rotate&&r.rotate(t.rotate*bc),r.fillText(t.text,0,0),t.padding&&(r.lineWidth=2*t.padding,r.strokeText(t.text,0,0)),r.restore(),t.width=a,t.height=l,t.xoff=d,t.yoff=f,t.x1=a>>1,t.y1=l>>1,t.x0=-t.x1,t.y0=-t.y1,t.hasText=!0,d+=a}for(var x=r.getImageData(0,0,(vc<<5)/o,_c/o).data,w=[];--i>=0;)if((t=n[i]).hasText){for(s=(a=t.width)>>5,l=t.y1-t.y0,u=0;u<l*s;u++)w[u]=0;if(null==(d=t.xoff))return;f=t.yoff;var k=0,D=-1;for(c=0;c<l;c++){for(u=0;u<a;u++){var A=s*c+(u>>5),O=x[(f+c)*(vc<<5)+(d+u)<<2]?1<<31-u%32:0;w[A]|=O,k|=O}k?D=c:(t.y0++,l--,c--,f++)}t.y1=t.y0+D,t.sprite=w.slice(0,(t.y1-t.y0)*s)}}}function kc(e,t,n){n>>=5;for(var i,r=e.sprite,o=e.width>>5,a=e.x-(o<<4),s=127&a,l=32-s,u=e.y1-e.y0,c=(e.y+e.y0)*n+(a>>5),d=0;d<u;d++){i=0;for(var f=0;f<=o;f++)if((i<<l|(f<o?(i=r[d*o+f])>>>s:0))&t[c+f])return!0;c+=n}return!1}function Dc(e,t){var n=e[0],i=e[1];t.x+t.x0<n.x&&(n.x=t.x+t.x0),t.y+t.y0<n.y&&(n.y=t.y+t.y0),t.x+t.x1>i.x&&(i.x=t.x+t.x1),t.y+t.y1>i.y&&(i.y=t.y+t.y1)}function Ac(e){var t=e[0]/e[1];return function(e){return[t*(e*=.1)*Math.cos(e),e*Math.sin(e)]}}function Oc(e){return"function"==typeof e?e:function(){return e}}var Cc={archimedean:Ac,rectangular:function(e){var t=4*e[0]/e[1],n=0,i=0;return function(e){var r=e<0?-1:1;switch(Math.sqrt(1+4*r*e)-r&3){case 0:n+=t;break;case 1:i+=4;break;case 2:n-=t;break;default:i-=4}return[n,i]}}},Tc=["x","y","font","fontSize","fontStyle","fontWeight","angle"],Sc=["text","font","rotate","fontSize","fontStyle","fontWeight"];function Fc(e){Nt.call(this,xc(),e)}Fc.Definition={type:"Wordcloud",metadata:{modifies:!0},params:[{name:"size",type:"number",array:!0,length:2},{name:"font",type:"string",expr:!0,default:"sans-serif"},{name:"fontStyle",type:"string",expr:!0,default:"normal"},{name:"fontWeight",type:"string",expr:!0,default:"normal"},{name:"fontSize",type:"number",expr:!0,default:14},{name:"fontSizeRange",type:"number",array:"nullable",default:[10,50]},{name:"rotate",type:"number",expr:!0,default:0},{name:"text",type:"field"},{name:"spiral",type:"string",values:["archimedean","rectangular"]},{name:"padding",type:"number",expr:!0},{name:"as",type:"string",array:!0,length:7,default:Tc}]},ce(Fc,Nt).transform=function(e,t){var n=e.modified();if(n||t.changed(t.ADD_REM)||Sc.some(function(n){var i=e[n];return ie(i)&&t.modified(i.fields)})){var i,r=t.materialize(t.SOURCE).source,o=this.value,a=e.as||Tc,s=e.fontSize||14;if(ie(s)?i=e.fontSizeRange:s=oe(s),i){var l=s,u=vl("sqrt")().domain(function(e,t){for(var n,i=1/0,r=-1/0,o=0,a=t.length;o<a;++o)(n=e(t[o]))<i&&(i=n),n>r&&(r=n);return[i,r]}(l,r)).range(i);s=function(e){return u(l(e))}}r.forEach(function(e){e[a[0]]=NaN,e[a[1]]=NaN,e[a[3]]=0});for(var c,d,f=o.words(r).text(e.text).size(e.size||[500,500]).padding(e.padding||1).spiral(e.spiral||"archimedean").rotate(e.rotate||0).font(e.font||"sans-serif").fontStyle(e.fontStyle||"normal").fontWeight(e.fontWeight||"normal").fontSize(s).random(Jt).layout(),h=o.size(),p=h[0]>>1,g=h[1]>>1,m=0,y=f.length;m<y;++m)(d=(c=f[m]).datum)[a[0]]=c.x+p,d[a[1]]=c.y+g,d[a[2]]=c.font,d[a[3]]=c.size,d[a[4]]=c.style,d[a[5]]=c.weight,d[a[6]]=c.rotate;return t.reflow(n).modifies(a)}};var jc=Object.freeze({wordcloud:Fc});function Ec(e){return new Uint32Array(e)}function $c(e,t,n){var i=(t<257?function(e){return new Uint8Array(e)}:t<65537?function(e){return new Uint16Array(e)}:Ec)(e);return n&&i.set(n),i}function Mc(e,t,n){var i=1<<t;return{one:i,zero:~i,range:n.slice(),bisect:e.bisect,index:e.index,size:e.size,onAdd:function(e,t){var n,r=this.bisect(this.range,e.value),o=e.index,a=r[0],s=r[1],l=o.length;for(n=0;n<a;++n)t[o[n]]|=i;for(n=s;n<l;++n)t[o[n]]|=i;return this}}}function zc(){var e=Ec(0),t=[],n=0;return{insert:function(i,r,o){if(!r.length)return[];var s,l,u,c=n,d=r.length,f=Array(d),h=Ec(d);for(u=0;u<d;++u)f[u]=i(r[u]),h[u]=u;if(f=function(e,t){return e.sort.call(t,function(t,n){var i=e[t],r=e[n];return i<r?-1:i>r?1:0}),Object(a.k)(e,t)}(f,h),c)s=t,l=e,t=Array(c+d),e=Ec(c+d),function(e,t,n,i,r,o,a,s,l){var u,c=0,d=0;for(u=0;c<i&&d<a;++u)t[c]<r[d]?(s[u]=t[c],l[u]=n[c++]):(s[u]=r[d],l[u]=o[d++]+e);for(;c<i;++c,++u)s[u]=t[c],l[u]=n[c];for(;d<a;++d,++u)s[u]=r[d],l[u]=o[d]+e}(o,s,l,c,f,h,d,t,e);else{if(o>0)for(u=0;u<d;++u)h[u]+=o;t=f,e=h}return n=c+d,{index:h,value:f}},remove:function(i,r){var o,a,s,l=n;for(a=0;!r[e[a]]&&a<l;++a);for(s=a;a<l;++a)r[o=e[a]]||(e[s]=o,t[s]=t[a],++s);n=l-i},bisect:function(e,i){var r;return i?r=i.length:(i=t,r=n),[Object(a.c)(i,e[0],0,r),Object(a.d)(i,e[1],0,r)]},reindex:function(t){for(var i=0,r=n;i<r;++i)e[i]=t[e[i]]},index:function(){return e},size:function(){return n}}}function Nc(e){var t,n,i,r,o;Nt.call(this,(t=8,n=[],i=Ec(0),r=$c(0,t),o=$c(0,t),{data:function(){return n},seen:function(){return e=i,t=n.length,i=e.length>=t?e:((r=r||new e.constructor(t)).set(e),r);var e,t,r},add:function(e){for(var t,i=0,r=n.length,o=e.length;i<o;++i)(t=e[i])._index=r++,n.push(t)},remove:function(e,t){var i,a,s,l=n.length,u=Array(l-e),c=n;for(a=0;!t[a]&&a<l;++a)u[a]=n[a],c[a]=a;for(s=a;a<l;++a)i=n[a],t[a]?c[a]=-1:(c[a]=s,r[s]=r[a],o[s]=o[a],u[s]=i,i._index=s++),r[a]=0;return n=u,c},size:function(){return n.length},curr:function(){return r},prev:function(){return o},reset:function(e){o[e]=r[e]},all:function(){return t<257?255:t<65537?65535:4294967295},set:function(e,t){r[e]|=t},clear:function(e,t){r[e]&=~t},resize:function(e,n){(e>r.length||n>t)&&(t=Math.max(n,t),r=$c(e,t,r),o=$c(e,t))}}),e),this._indices=null,this._dims=null}Nc.Definition={type:"CrossFilter",metadata:{},params:[{name:"fields",type:"field",array:!0,required:!0},{name:"query",type:"array",array:!0,required:!0,content:{type:"number",array:!0,length:2}}]};var Bc=ce(Nc,Nt);function Pc(e){Nt.call(this,null,e)}Bc.transform=function(e,t){return this._dims?e.modified("fields")||e.fields.some(function(e){return t.modified(e.fields)})?this.reinit(e,t):this.eval(e,t):this.init(e,t)},Bc.init=function(e,t){for(var n,i,r=e.fields,o=e.query,a=this._indices={},s=this._dims=[],l=o.length,u=0;u<l;++u)i=a[n=r[u].fname]||(a[n]=zc()),s.push(Mc(i,u,o[u]));return this.eval(e,t)},Bc.reinit=function(e,t){var n,i,r,o,a,s,l,u,c,d=t.materialize().fork(),f=e.fields,h=e.query,p=this._indices,g=this._dims,m=this.value,y=m.curr(),b=m.prev(),v=m.all(),_=d.rem=d.add,x=d.mod,w=h.length,k={};if(b.set(y),t.rem.length&&(a=this.remove(e,t,d)),t.add.length&&m.add(t.add),t.mod.length)for(s={},l=0,u=(o=t.mod).length;l<u;++l)s[o[l]._index]=1;for(l=0;l<w;++l)c=f[l],(!g[l]||e.modified("fields",l)||t.modified(c.fields))&&((n=k[r=c.fname])||(p[r]=i=zc(),k[r]=n=i.insert(c,t.source,0)),g[l]=Mc(i,l,h[l]).onAdd(n,y));for(l=0,u=m.data().length;l<u;++l)a[l]||(b[l]!==y[l]?_.push(l):s[l]&&y[l]!==v&&x.push(l));return m.mask=(1<<w)-1,d},Bc.eval=function(e,t){var n=t.materialize().fork(),i=this._dims.length,r=0;return t.rem.length&&(this.remove(e,t,n),r|=(1<<i)-1),e.modified("query")&&!e.modified("fields")&&(r|=this.update(e,t,n)),t.add.length&&(this.insert(e,t,n),r|=(1<<i)-1),t.mod.length&&(this.modify(t,n),r|=(1<<i)-1),this.value.mask=r,n},Bc.insert=function(e,t,n){var i,r,o,a=t.add,s=this.value,l=this._dims,u=this._indices,c=e.fields,d={},f=n.add,h=s.size(),p=h+a.length,g=l.length;s.resize(p,g),s.add(a);var m=s.curr(),y=s.prev(),b=s.all();for(i=0;i<g;++i)o=d[r=c[i].fname]||(d[r]=u[r].insert(c[i],a,h)),l[i].onAdd(o,m);for(;h<p;++h)y[h]=b,m[h]!==b&&f.push(h)},Bc.modify=function(e,t){var n,i,r,o=t.mod,a=this.value,s=a.curr(),l=a.all(),u=e.mod;for(n=0,i=u.length;n<i;++n)s[r=u[n]._index]!==l&&o.push(r)},Bc.remove=function(e,t,n){var i,r,o,a,s=this._indices,l=this.value,u=l.curr(),c=l.prev(),d=l.all(),f={},h=n.rem,p=t.rem;for(i=0,r=p.length;i<r;++i)f[o=p[i]._index]=1,c[o]=a=u[o],u[o]=d,a!==d&&h.push(o);for(o in s)s[o].remove(r,f);return this.reindex(t,r,f),f},Bc.reindex=function(e,t,n){var i=this._indices,r=this.value;e.runAfter(function(){var e=r.remove(t,n);for(var o in i)i[o].reindex(e)})},Bc.update=function(e,t,n){var i,r,o=this._dims,a=e.query,s=t.stamp,l=o.length,u=0;for(n.filters=0,r=0;r<l;++r)e.modified("query",r)&&(i=r,++u);if(1===u)u=o[i].one,this.incrementOne(o[i],a[i],n.add,n.rem);else for(r=0,u=0;r<l;++r)e.modified("query",r)&&(u|=o[r].one,this.incrementAll(o[r],a[r],s,n.add),n.rem=n.add);return u},Bc.incrementAll=function(e,t,n,i){var r,o,a,s=this.value,l=s.seen(),u=s.curr(),c=s.prev(),d=e.index(),f=e.bisect(e.range),h=e.bisect(t),p=h[0],g=h[1],m=f[0],y=f[1],b=e.one;if(p<m)for(r=p,o=Math.min(m,g);r<o;++r)l[a=d[r]]!==n&&(c[a]=u[a],l[a]=n,i.push(a)),u[a]^=b;else if(p>m)for(r=m,o=Math.min(p,y);r<o;++r)l[a=d[r]]!==n&&(c[a]=u[a],l[a]=n,i.push(a)),u[a]^=b;if(g>y)for(r=Math.max(p,y),o=g;r<o;++r)l[a=d[r]]!==n&&(c[a]=u[a],l[a]=n,i.push(a)),u[a]^=b;else if(g<y)for(r=Math.max(m,g),o=y;r<o;++r)l[a=d[r]]!==n&&(c[a]=u[a],l[a]=n,i.push(a)),u[a]^=b;e.range=t.slice()},Bc.incrementOne=function(e,t,n,i){var r,o,a,s=this.value.curr(),l=e.index(),u=e.bisect(e.range),c=e.bisect(t),d=c[0],f=c[1],h=u[0],p=u[1],g=e.one;if(d<h)for(r=d,o=Math.min(h,f);r<o;++r)s[a=l[r]]^=g,n.push(a);else if(d>h)for(r=h,o=Math.min(d,p);r<o;++r)s[a=l[r]]^=g,i.push(a);if(f>p)for(r=Math.max(d,p),o=f;r<o;++r)s[a=l[r]]^=g,n.push(a);else if(f<p)for(r=Math.max(h,f),o=p;r<o;++r)s[a=l[r]]^=g,i.push(a);e.range=t.slice()},Pc.Definition={type:"ResolveFilter",metadata:{},params:[{name:"ignore",type:"number",required:!0,description:"A bit mask indicating which filters to ignore."},{name:"filter",type:"object",required:!0,description:"Per-tuple filter bitmaps from a CrossFilter transform."}]},ce(Pc,Nt).transform=function(e,t){var n=~(e.ignore||0),i=e.filter,r=i.mask;if(0==(r&n))return t.StopPropagation;var o=t.fork(t.ALL),a=i.data(),s=i.curr(),l=i.prev(),u=function(e){return s[e]&n?null:a[e]};return o.filter(o.MOD,u),r&r-1?(o.filter(o.ADD,function(e){var t=s[e]&n;return!t&&t^l[e]&n?a[e]:null}),o.filter(o.REM,function(e){var t=s[e]&n;return t&&!(t^t^l[e]&n)?a[e]:null})):(o.filter(o.ADD,u),o.filter(o.REM,function(e){return(s[e]&n)===r?a[e]:null})),o.filter(o.SOURCE,function(e){return u(e._index)})};var Ic=Object.freeze({crossfilter:Nc,resolvefilter:Pc}),Lc="default";function qc(e){var t=e._signals.cursor;t||(e._signals.cursor=t=e.add({user:Lc,item:null})),e.on(e.events("view","mousemove"),t,function(e,n){var i=t.value,r=i?C(i)?i:i.user:Lc,o=n.item&&n.item.cursor||null;return i&&r===i.user&&o==i.item?i:{user:r,item:o}}),e.add(null,function(e){var t,n=e.cursor,i=this.value;return C(n)||(i=n.item,n=n.user),t=n&&n!==Lc?n:i||n,"undefined"!=typeof document&&document.body&&(document.body.style.cursor=t),i},{cursor:t})}function Rc(e,t){var n=e._runtime.data;return n.hasOwnProperty(t)||k("Unrecognized data set: "+t),n[t]}function Uc(e,t){Me(t)||k("Second argument to changes must be a changeset.");var n=Rc(this,e);return n.modified=!0,this.pulse(n.input,t)}function Wc(e){var t=e.padding();return Math.max(0,e._viewWidth+t.left+t.right)}function Vc(e){var t=e.padding();return Math.max(0,e._viewHeight+t.top+t.bottom)}function Hc(e){var t=e.padding(),n=e._origin;return[t.left+n[0],t.top+n[1]]}function Yc(e,t,n){var i,r,o=e._renderer.canvas();return o&&(r=Hc(e),(i=ya(t.changedTouches?t.changedTouches[0]:t,o))[0]-=r[0],i[1]-=r[1]),t.dataflow=e,t.vega=function(e,t,n){var i=t?"group"===t.mark.marktype?t:t.mark.group:null;function r(e){var n,r=i;if(e)for(n=t;n;n=n.mark.group)if(n.mark.name===e){r=n;break}return r&&r.mark&&r.mark.interactive?r:{}}function o(e){if(!e)return n;C(e)&&(e=r(e));for(var t=n.slice();e;)t[0]-=e.x||0,t[1]-=e.y||0,e=e.mark&&e.mark.group;return t}return{view:oe(e),item:oe(t||{}),group:r,xy:o,x:function(e){return o(e)[0]},y:function(e){return o(e)[1]}}}(e,n,i),t.item=n,t}var Gc="view",Jc="timer",Xc="window",Qc={trap:!1};function Kc(e){return e.item}function Zc(e){var t=e.item.mark.source;return t.source||t}function ed(e){return function(t,n){return n.vega.view().changeset().encode(n.item,e)}}function td(e,t,n){var i=document.createElement(e);for(var r in t)i.setAttribute(r,t[r]);return null!=n&&(i.textContent=n),i}var nd="vega-bind",id="vega-bind-name",rd="vega-bind-radio",od="vega-option-";function ad(e,t,n){if(t){var i=n.param,r=n.state;return r||(r=n.state={elements:null,active:!1,set:null,update:function(t){t!==e.signal(i.signal)&&e.runAsync(null,function(){r.source=!0,e.signal(i.signal,t)})}},i.debounce&&(r.update=ae(i.debounce,r.update))),function(e,t,n,i){var r=td("div",{class:nd});r.appendChild(td("span",{class:id},n.name||n.signal)),t.appendChild(r);var o=sd;switch(n.input){case"checkbox":o=ld;break;case"select":o=ud;break;case"radio":o=cd;break;case"range":o=dd}o(e,r,n,i)}(r,t,i,e.signal(i.signal)),r.active||(e.on(e._signals[i.signal],null,function(){r.source?r.source=!1:r.set(e.signal(i.signal))}),r.active=!0),r}}function sd(e,t,n,i){var r=td("input");for(var o in n)"signal"!==o&&"element"!==o&&r.setAttribute("input"===o?"type":o,n[o]);r.setAttribute("name",n.signal),r.value=i,t.appendChild(r),r.addEventListener("input",function(){e.update(r.value)}),e.elements=[r],e.set=function(e){r.value=e}}function ld(e,t,n,i){var r={type:"checkbox",name:n.signal};i&&(r.checked=!0);var o=td("input",r);t.appendChild(o),o.addEventListener("change",function(){e.update(o.checked)}),e.elements=[o],e.set=function(e){o.checked=!!e||null}}function ud(e,t,n,i){var r=td("select",{name:n.signal});n.options.forEach(function(e){var t={value:e};fd(e,i)&&(t.selected=!0),r.appendChild(td("option",t,e+""))}),t.appendChild(r),r.addEventListener("change",function(){e.update(n.options[r.selectedIndex])}),e.elements=[r],e.set=function(e){for(var t=0,i=n.options.length;t<i;++t)if(fd(n.options[t],e))return void(r.selectedIndex=t)}}function cd(e,t,n,i){var r=td("span",{class:rd});t.appendChild(r),e.elements=n.options.map(function(t){var o=od+n.signal+"-"+t,a={id:o,type:"radio",name:n.signal,value:t};fd(t,i)&&(a.checked=!0);var s=td("input",a);return s.addEventListener("change",function(){e.update(t)}),r.appendChild(s),r.appendChild(td("label",{for:o},t+"")),s}),e.set=function(t){for(var n=e.elements,i=0,r=n.length;i<r;++i)fd(n[i].value,t)&&(n[i].checked=!0)}}function dd(e,t,n,i){i=void 0!==i?i:(+n.max+ +n.min)/2;var r=n.min||Math.min(0,+i)||0,o=n.max||Math.max(100,+i)||100,s=n.step||Object(a.o)(r,o,100),l=td("input",{type:"range",name:n.signal,min:r,max:o,step:s});l.value=i;var u=td("label",{},+i);function c(){u.textContent=l.value,e.update(+l.value)}t.appendChild(l),t.appendChild(u),l.addEventListener("input",c),l.addEventListener("change",c),e.elements=[l],e.set=function(e){l.value=e,u.textContent=e}}function fd(e,t){return e===t||e+""==t+""}function hd(e,t,n,i,r,o){return(t=t||new i(e.loader())).initialize(n,Wc(e),Vc(e),Hc(e),r,o).background(e._background)}function pd(e,t){return t?function(){try{t.apply(this,arguments)}catch(t){e.error(t)}}:null}function gd(e,t){if("string"==typeof t){if("undefined"==typeof document)return e.error("DOM document instance not found."),null;if(!(t=document.querySelector(t)))return e.error("Signal bind element not found: "+t),null}if(t)try{t.innerHTML=""}catch(n){t=null,e.error(n)}return t}async function md(e,t,n,i){const r=ls(t),o=r&&r.headless;return o||k("Unrecognized renderer type: "+t),await e.runAsync(),hd(e,null,null,o,n,i).renderAsync(e._scenegraph.root)}var yd,bd,vd,_d,xd,wd="RawCode",kd="Literal",Dd="Property",Ad="Identifier",Od="ArrayExpression",Cd="BinaryExpression",Td="CallExpression",Sd="ConditionalExpression",Fd="LogicalExpression",jd="MemberExpression",Ed="ObjectExpression",$d="UnaryExpression";function Md(e){this.type=e}Md.prototype.visit=function(e){var t,n,i;if(e(this))return 1;for(n=0,i=(t=function(e){switch(e.type){case Od:return e.elements;case Cd:case Fd:return[e.left,e.right];case Td:var t=e.arguments.slice();return t.unshift(e.callee),t;case Sd:return[e.test,e.consequent,e.alternate];case jd:return[e.object,e.property];case Ed:return e.properties;case Dd:return[e.key,e.value];case $d:return[e.argument];case Ad:case kd:case wd:default:return[]}}(this)).length;n<i;++n)if(t[n].visit(e))return 1};var zd=1,Nd=2,Bd=3,Pd=4,Id=5,Ld=6,qd=7,Rd=8;(yd={})[zd]="Boolean",yd[Nd]="<end>",yd[Bd]="Identifier",yd[Pd]="Keyword",yd[Id]="Null",yd[Ld]="Numeric",yd[qd]="Punctuator",yd[Rd]="String",yd[9]="RegularExpression";var Ud="ArrayExpression",Wd="BinaryExpression",Vd="CallExpression",Hd="ConditionalExpression",Yd="Identifier",Gd="Literal",Jd="LogicalExpression",Xd="MemberExpression",Qd="ObjectExpression",Kd="Property",Zd="UnaryExpression",ef="Unexpected token %0",tf="Unexpected number",nf="Unexpected string",rf="Unexpected identifier",of="Unexpected reserved word",af="Unexpected end of input",sf="Invalid regular expression",lf="Invalid regular expression: missing /",uf="Octal literals are not allowed in strict mode.",cf="Duplicate data property in object literal not allowed in strict mode",df="ILLEGAL",ff="Disabled.",hf=new RegExp("[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]"),pf=new RegExp("[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]");function gf(e,t){if(!e)throw new Error("ASSERT: "+t)}function mf(e){return e>=48&&e<=57}function yf(e){return"0123456789abcdefABCDEF".indexOf(e)>=0}function bf(e){return"01234567".indexOf(e)>=0}function vf(e){return 32===e||9===e||11===e||12===e||160===e||e>=5760&&[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279].indexOf(e)>=0}function _f(e){return 10===e||13===e||8232===e||8233===e}function xf(e){return 36===e||95===e||e>=65&&e<=90||e>=97&&e<=122||92===e||e>=128&&hf.test(String.fromCharCode(e))}function wf(e){return 36===e||95===e||e>=65&&e<=90||e>=97&&e<=122||e>=48&&e<=57||92===e||e>=128&&pf.test(String.fromCharCode(e))}var kf={if:1,in:1,do:1,var:1,for:1,new:1,try:1,let:1,this:1,else:1,case:1,void:1,with:1,enum:1,while:1,break:1,catch:1,throw:1,const:1,yield:1,class:1,super:1,return:1,typeof:1,delete:1,switch:1,export:1,import:1,public:1,static:1,default:1,finally:1,extends:1,package:1,private:1,function:1,continue:1,debugger:1,interface:1,protected:1,instanceof:1,implements:1};function Df(){for(var e;vd<_d&&(vf(e=bd.charCodeAt(vd))||_f(e));)++vd}function Af(e){var t,n,i,r=0;for(n="u"===e?4:2,t=0;t<n;++t)vd<_d&&yf(bd[vd])?(i=bd[vd++],r=16*r+"0123456789abcdef".indexOf(i.toLowerCase())):qf({},ef,df);return String.fromCharCode(r)}function Of(){var e,t,n,i;for(t=0,"}"===(e=bd[vd])&&qf({},ef,df);vd<_d&&yf(e=bd[vd++]);)t=16*t+"0123456789abcdef".indexOf(e.toLowerCase());return(t>1114111||"}"!==e)&&qf({},ef,df),t<=65535?String.fromCharCode(t):(n=55296+(t-65536>>10),i=56320+(t-65536&1023),String.fromCharCode(n,i))}function Cf(){var e,t;for(e=bd.charCodeAt(vd++),t=String.fromCharCode(e),92===e&&(117!==bd.charCodeAt(vd)&&qf({},ef,df),++vd,(e=Af("u"))&&"\\"!==e&&xf(e.charCodeAt(0))||qf({},ef,df),t=e);vd<_d&&wf(e=bd.charCodeAt(vd));)++vd,t+=String.fromCharCode(e),92===e&&(t=t.substr(0,t.length-1),117!==bd.charCodeAt(vd)&&qf({},ef,df),++vd,(e=Af("u"))&&"\\"!==e&&wf(e.charCodeAt(0))||qf({},ef,df),t+=e);return t}function Tf(){var e,t;return e=vd,{type:1===(t=92===bd.charCodeAt(vd)?Cf():function(){var e,t;for(e=vd++;vd<_d;){if(92===(t=bd.charCodeAt(vd)))return vd=e,Cf();if(!wf(t))break;++vd}return bd.slice(e,vd)}()).length?Bd:kf.hasOwnProperty(t)?Pd:"null"===t?Id:"true"===t||"false"===t?zd:Bd,value:t,start:e,end:vd}}function Sf(){var e,t,n,i,r=vd,o=bd.charCodeAt(vd),a=bd[vd];switch(o){case 46:case 40:case 41:case 59:case 44:case 123:case 125:case 91:case 93:case 58:case 63:case 126:return++vd,{type:qd,value:String.fromCharCode(o),start:r,end:vd};default:if(61===(e=bd.charCodeAt(vd+1)))switch(o){case 43:case 45:case 47:case 60:case 62:case 94:case 124:case 37:case 38:case 42:return vd+=2,{type:qd,value:String.fromCharCode(o)+String.fromCharCode(e),start:r,end:vd};case 33:case 61:return vd+=2,61===bd.charCodeAt(vd)&&++vd,{type:qd,value:bd.slice(r,vd),start:r,end:vd}}}return">>>="===(i=bd.substr(vd,4))?{type:qd,value:i,start:r,end:vd+=4}:">>>"===(n=i.substr(0,3))||"<<="===n||">>="===n?{type:qd,value:n,start:r,end:vd+=3}:a===(t=n.substr(0,2))[1]&&"+-<>&|".indexOf(a)>=0||"=>"===t?{type:qd,value:t,start:r,end:vd+=2}:"<>=!+-*%&|^/".indexOf(a)>=0?{type:qd,value:a,start:r,end:++vd}:void qf({},ef,df)}function Ff(){var e,t,n;if(gf(mf((n=bd[vd]).charCodeAt(0))||"."===n,"Numeric literal must start with a decimal digit or a decimal point"),t=vd,e="","."!==n){if(e=bd[vd++],n=bd[vd],"0"===e){if("x"===n||"X"===n)return++vd,function(e){for(var t="";vd<_d&&yf(bd[vd]);)t+=bd[vd++];return 0===t.length&&qf({},ef,df),xf(bd.charCodeAt(vd))&&qf({},ef,df),{type:Ld,value:parseInt("0x"+t,16),start:e,end:vd}}(t);if(bf(n))return function(e){for(var t="0"+bd[vd++];vd<_d&&bf(bd[vd]);)t+=bd[vd++];return(xf(bd.charCodeAt(vd))||mf(bd.charCodeAt(vd)))&&qf({},ef,df),{type:Ld,value:parseInt(t,8),octal:!0,start:e,end:vd}}(t);n&&mf(n.charCodeAt(0))&&qf({},ef,df)}for(;mf(bd.charCodeAt(vd));)e+=bd[vd++];n=bd[vd]}if("."===n){for(e+=bd[vd++];mf(bd.charCodeAt(vd));)e+=bd[vd++];n=bd[vd]}if("e"===n||"E"===n)if(e+=bd[vd++],"+"!==(n=bd[vd])&&"-"!==n||(e+=bd[vd++]),mf(bd.charCodeAt(vd)))for(;mf(bd.charCodeAt(vd));)e+=bd[vd++];else qf({},ef,df);return xf(bd.charCodeAt(vd))&&qf({},ef,df),{type:Ld,value:parseFloat(e),start:t,end:vd}}function jf(){var e,t,n,i;return xd=null,Df(),e=vd,t=function(){var e,t,n,i;for(gf("/"===(e=bd[vd]),"Regular expression literal must start with a slash"),t=bd[vd++],n=!1,i=!1;vd<_d;)if(t+=e=bd[vd++],"\\"===e)_f((e=bd[vd++]).charCodeAt(0))&&qf({},lf),t+=e;else if(_f(e.charCodeAt(0)))qf({},lf);else if(n)"]"===e&&(n=!1);else{if("/"===e){i=!0;break}"["===e&&(n=!0)}return i||qf({},lf),{value:t.substr(1,t.length-2),literal:t}}(),n=function(){var e,t,n;for(t="",n="";vd<_d&&wf((e=bd[vd]).charCodeAt(0));)++vd,"\\"===e&&vd<_d?qf({},ef,df):(n+=e,t+=e);return n.search(/[^gimuy]/g)>=0&&qf({},sf,n),{value:n,literal:t}}(),i=function(e,t){var n=e;t.indexOf("u")>=0&&(n=n.replace(/\\u\{([0-9a-fA-F]+)\}/g,function(e,t){if(parseInt(t,16)<=1114111)return"x";qf({},sf)}).replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,"x"));try{return new RegExp(e,t)}catch(e){return null}}(t.value,n.value),{literal:t.literal+n.literal,value:i,regex:{pattern:t.value,flags:n.value},start:e,end:vd}}function Ef(){var e;return Df(),vd>=_d?{type:Nd,start:vd,end:vd}:xf(e=bd.charCodeAt(vd))?Tf():40===e||41===e||59===e?Sf():39===e||34===e?function(){var e,t,n,i,r="",o=!1;for(gf("'"===(e=bd[vd])||'"'===e,"String literal must starts with a quote"),t=vd,++vd;vd<_d;){if((n=bd[vd++])===e){e="";break}if("\\"===n)if((n=bd[vd++])&&_f(n.charCodeAt(0)))"\r"===n&&"\n"===bd[vd]&&++vd;else switch(n){case"u":case"x":"{"===bd[vd]?(++vd,r+=Of()):r+=Af(n);break;case"n":r+="\n";break;case"r":r+="\r";break;case"t":r+="\t";break;case"b":r+="\b";break;case"f":r+="\f";break;case"v":r+="\v";break;default:bf(n)?(0!==(i="01234567".indexOf(n))&&(o=!0),vd<_d&&bf(bd[vd])&&(o=!0,i=8*i+"01234567".indexOf(bd[vd++]),"0123".indexOf(n)>=0&&vd<_d&&bf(bd[vd])&&(i=8*i+"01234567".indexOf(bd[vd++]))),r+=String.fromCharCode(i)):r+=n}else{if(_f(n.charCodeAt(0)))break;r+=n}}return""!==e&&qf({},ef,df),{type:Rd,value:r,octal:o,start:t,end:vd}}():46===e?mf(bd.charCodeAt(vd+1))?Ff():Sf():mf(e)?Ff():Sf()}function $f(){var e;return vd=(e=xd).end,xd=Ef(),vd=e.end,e}function Mf(){var e;e=vd,xd=Ef(),vd=e}function zf(e,t,n){var i=new Md("||"===e||"&&"===e?Jd:Wd);return i.operator=e,i.left=t,i.right=n,i}function Nf(e,t){var n=new Md(Vd);return n.callee=e,n.arguments=t,n}function Bf(e){var t=new Md(Yd);return t.name=e,t}function Pf(e){var t=new Md(Gd);return t.value=e.value,t.raw=bd.slice(e.start,e.end),e.regex&&("//"===t.raw&&(t.raw="/(?:)/"),t.regex=e.regex),t}function If(e,t,n){var i=new Md(Xd);return i.computed="["===e,i.object=t,i.property=n,i.computed||(n.member=!0),i}function Lf(e,t,n){var i=new Md(Kd);return i.key=t,i.value=n,i.kind=e,i}function qf(e,t){var n,i=Array.prototype.slice.call(arguments,2),r=t.replace(/%(\d)/g,function(e,t){return gf(t<i.length,"Message reference must be in range"),i[t]});throw(n=new Error(r)).index=vd,n.description=r,n}function Rf(e){e.type===Nd&&qf(e,af),e.type===Ld&&qf(e,tf),e.type===Rd&&qf(e,nf),e.type===Bd&&qf(e,rf),e.type===Pd&&qf(e,of),qf(e,ef,e.value)}function Uf(e){var t=$f();t.type===qd&&t.value===e||Rf(t)}function Wf(e){return xd.type===qd&&xd.value===e}function Vf(e){return xd.type===Pd&&xd.value===e}function Hf(){var e=[];for(vd=xd.start,Uf("[");!Wf("]");)Wf(",")?($f(),e.push(null)):(e.push(rh()),Wf("]")||Uf(","));return $f(),function(e){var t=new Md(Ud);return t.elements=e,t}(e)}function Yf(){var e;return vd=xd.start,(e=$f()).type===Rd||e.type===Ld?(e.octal&&qf(e,uf),Pf(e)):Bf(e.value)}function Gf(){var e,t,n;return vd=xd.start,(e=xd).type===Bd?(n=Yf(),Uf(":"),Lf("init",n,rh())):e.type!==Nd&&e.type!==qd?(t=Yf(),Uf(":"),Lf("init",t,rh())):void Rf(e)}function Jf(){var e,t,n=[],i={},r=String;for(vd=xd.start,Uf("{");!Wf("}");)t="$"+((e=Gf()).key.type===Yd?e.key.name:r(e.key.value)),Object.prototype.hasOwnProperty.call(i,t)?qf({},cf):i[t]=!0,n.push(e),Wf("}")||Uf(",");return Uf("}"),function(e){var t=new Md(Qd);return t.properties=e,t}(n)}var Xf={if:1,this:1};function Qf(){var e,t,n;if(Wf("("))return function(){var e;return Uf("("),e=oh(),Uf(")"),e}();if(Wf("["))return Hf();if(Wf("{"))return Jf();if(e=xd.type,vd=xd.start,e===Bd||Xf[xd.value])n=Bf($f().value);else if(e===Rd||e===Ld)xd.octal&&qf(xd,uf),n=Pf($f());else{if(e===Pd)throw new Error(ff);e===zd?((t=$f()).value="true"===t.value,n=Pf(t)):e===Id?((t=$f()).value=null,n=Pf(t)):Wf("/")||Wf("/=")?(n=Pf(jf()),Mf()):Rf($f())}return n}function Kf(){var e=[];if(Uf("("),!Wf(")"))for(;vd<_d&&(e.push(rh()),!Wf(")"));)Uf(",");return Uf(")"),e}function Zf(){var e;return vd=xd.start,function(e){return e.type===Bd||e.type===Pd||e.type===zd||e.type===Id}(e=$f())||Rf(e),Bf(e.value)}function eh(){var e;return Uf("["),e=oh(),Uf("]"),e}function th(){var e=function(){var e;for(e=Qf();;)if(Wf("."))Uf("."),e=If(".",e,Zf());else if(Wf("("))e=Nf(e,Kf());else{if(!Wf("["))break;e=If("[",e,eh())}return e}();if(xd.type===qd&&(Wf("++")||Wf("--")))throw new Error(ff);return e}function nh(){var e,t,n,i,r;if(xd.type!==qd&&xd.type!==Pd)t=th();else{if(Wf("++")||Wf("--"))throw new Error(ff);if(Wf("+")||Wf("-")||Wf("~")||Wf("!"))e=$f(),t=nh(),n=e.value,i=t,(r=new Md(Zd)).operator=n,r.argument=i,r.prefix=!0,t=r;else{if(Vf("delete")||Vf("void")||Vf("typeof"))throw new Error(ff);t=th()}}return t}function ih(e){var t=0;if(e.type!==qd&&e.type!==Pd)return 0;switch(e.value){case"||":t=1;break;case"&&":t=2;break;case"|":t=3;break;case"^":t=4;break;case"&":t=5;break;case"==":case"!=":case"===":case"!==":t=6;break;case"<":case">":case"<=":case">=":case"instanceof":case"in":t=7;break;case"<<":case">>":case">>>":t=8;break;case"+":case"-":t=9;break;case"*":case"/":case"%":t=11}return t}function rh(){var e,t;return e=function(){var e,t,n,i,r,o,a,s,l,u;if(e=xd,l=nh(),0===(r=ih(i=xd)))return l;for(i.prec=r,$f(),t=[e,xd],o=[l,i,a=nh()];(r=ih(xd))>0;){for(;o.length>2&&r<=o[o.length-2].prec;)a=o.pop(),s=o.pop().value,l=o.pop(),t.pop(),n=zf(s,l,a),o.push(n);(i=$f()).prec=r,o.push(i),t.push(xd),n=nh(),o.push(n)}for(n=o[u=o.length-1],t.pop();u>1;)t.pop(),n=zf(o[u-1].value,o[u-2],n),u-=2;return n}(),Wf("?")&&($f(),t=rh(),Uf(":"),e=function(e,t,n){var i=new Md(Hd);return i.test=e,i.consequent=t,i.alternate=n,i}(e,t,rh())),e}function oh(){var e=rh();if(Wf(","))throw new Error(ff);return e}var ah={NaN:"NaN",E:"Math.E",LN2:"Math.LN2",LN10:"Math.LN10",LOG2E:"Math.LOG2E",LOG10E:"Math.LOG10E",PI:"Math.PI",SQRT1_2:"Math.SQRT1_2",SQRT2:"Math.SQRT2",MIN_VALUE:"Number.MIN_VALUE",MAX_VALUE:"Number.MAX_VALUE"};function sh(e){function t(t,n,i){return function(r){return function(t,n,i,r){var o=e(n[0]);return i&&(o=i+"("+o+")",0===i.lastIndexOf("new ",0)&&(o="("+o+")")),o+"."+t+(r<0?"":0===r?"()":"("+n.slice(1).map(e).join(",")+")")}(t,r,n,i)}}var n="new Date";return{isNaN:"isNaN",isFinite:"isFinite",abs:"Math.abs",acos:"Math.acos",asin:"Math.asin",atan:"Math.atan",atan2:"Math.atan2",ceil:"Math.ceil",cos:"Math.cos",exp:"Math.exp",floor:"Math.floor",log:"Math.log",max:"Math.max",min:"Math.min",pow:"Math.pow",random:"Math.random",round:"Math.round",sin:"Math.sin",sqrt:"Math.sqrt",tan:"Math.tan",clamp:function(t){t.length<3&&k("Missing arguments to clamp function."),t.length>3&&k("Too many arguments to clamp function.");var n=t.map(e);return"Math.max("+n[1]+", Math.min("+n[2]+","+n[0]+"))"},now:"Date.now",utc:"Date.UTC",datetime:n,date:t("getDate",n,0),day:t("getDay",n,0),year:t("getFullYear",n,0),month:t("getMonth",n,0),hours:t("getHours",n,0),minutes:t("getMinutes",n,0),seconds:t("getSeconds",n,0),milliseconds:t("getMilliseconds",n,0),time:t("getTime",n,0),timezoneoffset:t("getTimezoneOffset",n,0),utcdate:t("getUTCDate",n,0),utcday:t("getUTCDay",n,0),utcyear:t("getUTCFullYear",n,0),utcmonth:t("getUTCMonth",n,0),utchours:t("getUTCHours",n,0),utcminutes:t("getUTCMinutes",n,0),utcseconds:t("getUTCSeconds",n,0),utcmilliseconds:t("getUTCMilliseconds",n,0),length:t("length",null,-1),indexof:t("indexOf",null),lastindexof:t("lastIndexOf",null),slice:t("slice",null),parseFloat:"parseFloat",parseInt:"parseInt",upper:t("toUpperCase","String",0),lower:t("toLowerCase","String",0),substring:t("substring","String"),split:t("split","String"),replace:t("replace","String"),regexp:"RegExp",test:t("test","RegExp"),if:function(t){t.length<3&&k("Missing arguments to if function."),t.length>3&&k("Too many arguments to if function.");var n=t.map(e);return"("+n[0]+"?"+n[1]+":"+n[2]+")"}}}const lh="intersect",uh="union";var ch="E",dh="R",fh="R-E",hh="R-LE",ph="R-RE",gh="index:unit";function mh(e,t){for(var n,i,r=t.fields,o=t.values,a=r.length,s=0;s<a;++s)if((i=r[s]).getter=S.getter||S(i.field),fe(n=i.getter(e))&&(n=W(n)),fe(o[s])&&(o[s]=W(o[s])),fe(o[s][0])&&(o[s]=o[s].map(W)),i.type===ch){if(A(o[s])?o[s].indexOf(n)<0:n!==o[s])return!1}else if(i.type===dh){if(!de(n,o[s]))return!1}else if(i.type===ph){if(!de(n,o[s],!0,!1))return!1}else if(i.type===fh){if(!de(n,o[s],!1,!1))return!1}else if(i.type===hh&&!de(n,o[s],!1,!0))return!1;return!0}var yh={E_union:function(e,t){if(!e.length)return t;for(var n=0,i=t.length;n<i;++n)e.indexOf(t[n])<0&&e.push(t[n]);return e},E_intersect:function(e,t){return e.length?e.filter(function(e){return t.indexOf(e)>=0}):t},R_union:function(e,t){var n=W(t[0]),i=W(t[1]);return n>i&&(n=t[1],i=t[0]),e.length?(e[0]>n&&(e[0]=n),e[1]<i&&(e[1]=i),e):[n,i]},R_intersect:function(e,t){var n=W(t[0]),i=W(t[1]);return n>i&&(n=t[1],i=t[0]),e.length?i<e[0]||e[1]<n?[]:(e[0]<n&&(e[0]=n),e[1]>i&&(e[1]=i),e):[n,i]}};const bh=":",vh="@";function _h(e,t,n,i){t[0].type!==kd&&k("First argument to selection functions must be a string literal.");const r=t[0].value,o=t.length>=2&&U(t).value,a=vh+"unit",s=bh+r;o!==lh||i.hasOwnProperty(a)||(i[a]=n.getData(r).indataRef(n,"unit")),i.hasOwnProperty(s)||(i[s]=n.getData(r).tuplesRef())}function xh(e){const t=this.context.data[e];return t?t.values.value:[]}const wh={};function kh(e,t,n){let i=e+":"+n,r=wh[i];return r&&r[0]===t||(wh[i]=r=[t,t(n)]),r[1]}function Dh(e,t){return kh("timeFormat",o.a,t)(e)}var Ah=new Date(2e3,0,1);function Oh(e,t,n){return Ah.setMonth(e),Ah.setDate(t),Dh(Ah,n)}function Ch(e,t){let n;return ie(e)?e:C(e)?(n=t.scales[e])&&n.value:void 0}function Th(e,t){return function(n,i,r){if(n){const t=Ch(n,(r||this).context);return t&&t.path[e](i)}return t(i)}}const Sh=Th("area",p.c),Fh=Th("bounds",p.f),jh=Th("centroid",p.g);function Eh(e,t,n){try{e[t].apply(e,["EXPRESSION"].concat([].slice.call(n)))}catch(t){e.warn(t)}return n[n.length-1]}function $h(e,t){return e===t||e!=e&&t!=t||!(!A(e)||!A(t)||e.length!==t.length)&&function(e,t){for(let n=0,i=e.length;n<i;++n)if(!$h(e[n],t[n]))return!1;return!0}(e,t)}function Mh(e){return function(t){for(let n in e)if(!$h(t[n],e[n]))return!1;return!0}}const zh={};function Nh(e){return e.data}function Bh(e,t){const n=xh.call(t,e);return n.root&&n.root.lookup||zh}const Ph="undefined"!=typeof window&&window||null;const Ih=":",Lh="@",qh="%",Rh="$";function Uh(e,t,n,i){t[0].type!==kd&&k("First argument to data functions must be a string literal.");const r=t[0].value,o=Ih+r;i.hasOwnProperty(o)||(i[o]=n.getData(r).tuplesRef())}function Wh(e,t,n,i){if(t[0].type===kd)Vh(n,i,t[0].value);else if(t[0].type===Ad)for(e in n.scales)Vh(n,i,e)}function Vh(e,t,n){const i=qh+n;if(!t.hasOwnProperty(i))try{t[i]=e.scaleRef(n)}catch(e){}}const Hh={random:function(){return Jt()},isArray:A,isBoolean:function(e){return"boolean"==typeof e},isDate:fe,isNumber:he,isObject:O,isRegExp:function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},isString:C,isTuple:Ce,toBoolean:ye,toDate:ve,toNumber:W,toString:_e,pad:function(e,t,n,i){var r=n||" ",o=e+"",a=t-o.length;return a<=0?o:"left"===i?ge(r,a)+o:"center"===i?ge(r,~~(a/2))+o+ge(r,Math.ceil(a/2)):o+ge(r,a)},peek:U,truncate:function(e,t,n,i){var r=null!=i?i:"…",o=e+"",a=o.length,s=Math.max(0,t-r.length);return a<=t?o:"left"===n?r+o.slice(a-s):"center"===n?o.slice(0,Math.ceil(s/2))+r+o.slice(a-~~(s/2)):o.slice(0,s)+r},rgb:b.f,lab:b.e,hcl:b.c,hsl:b.d,sequence:a.m,format:function(e,t){return kh("format",f.a,t)(e)},utcFormat:function(e,t){return kh("utcFormat",o.c,t)(e)},utcParse:function(e,t){return kh("utcParse",o.d,t)(e)},timeFormat:Dh,timeParse:function(e,t){return kh("timeParse",o.b,t)(e)},monthFormat:function(e){return Oh(e,1,"%B")},monthAbbrevFormat:function(e){return Oh(e,1,"%b")},dayFormat:function(e){return Oh(0,2+e,"%A")},dayAbbrevFormat:function(e){return Oh(0,2+e,"%a")},quarter:function(e){return 1+~~(new Date(e).getMonth()/3)},utcquarter:function(e){return 1+~~(new Date(e).getUTCMonth()/3)},warn:function(){return Eh(this.context.dataflow,"warn",arguments)},info:function(){return Eh(this.context.dataflow,"info",arguments)},debug:function(){return Eh(this.context.dataflow,"debug",arguments)},extent:function(e,t){var n,i,r,o,a=0;if(e&&(n=e.length))if(null==t){for(i=e[a];null==i||i!=i;i=e[++a]);for(r=o=i;a<n;++a)null!=(i=e[a])&&(i<r&&(r=i),i>o&&(o=i))}else{for(i=t(e[a]);null==i||i!=i;i=t(e[++a]));for(r=o=i;a<n;++a)null!=(i=t(e[a]))&&(i<r&&(r=i),i>o&&(o=i))}return[r,o]},inScope:function(e){let t=this.context.group,n=!1;if(t)for(;e;){if(e===t){n=!0;break}e=e.mark.group}return n},intersect:function(e,t,n){if(!e)return[];const[i,r]=e,o=(new Xi).set(i[0],i[1],r[0],r[1]);return function(e,t,n){const i=[],r=(new Xi).union(t),o=e.marktype;return o?us(e,r,n,i):"group"===o?cs(e,r,n,i):k("Intersect scene must be mark node or group item.")}(n||this.context.dataflow.scenegraph().root,o,function(e){let t=null;if(e){const n=ne(e.marktype),i=ne(e.markname);t=(e=>(!n.length||n.some(t=>e.marktype===t))&&(!i.length||i.some(t=>e.name===t)))}return t}(t))},clampRange:function(e,t,n){var i,r=e[0],o=e[1];return o<r&&(i=o,o=r,r=i),(i=o-r)>=n-t?[t,n]:[r=Math.min(Math.max(r,t),n-i),r+i]},pinchDistance:function(e){const t=e.touches,n=t[0].clientX-t[1].clientX,i=t[0].clientY-t[1].clientY;return Math.sqrt(n*n+i*i)},pinchAngle:function(e){const t=e.touches;return Math.atan2(t[0].clientY-t[1].clientY,t[0].clientX-t[1].clientX)},screen:function(){return Ph?Ph.screen:{}},containerSize:function(){const e=this.context.dataflow,t=e.container&&e.container();return t?[t.clientWidth,t.clientHeight]:[void 0,void 0]},windowSize:function(){return Ph?[Ph.innerWidth,Ph.innerHeight]:[void 0,void 0]},span:me,merge:function(){var e=[].slice.call(arguments);return e.unshift({}),se.apply(null,e)},flush:function(e,t,n,i,r,o){if(!n&&0!==n)return o;var a,s,l=e[0],u=U(e),c=+n;return u<l&&(a=l,l=u,u=a),(a=Math.abs(t-l))<(s=Math.abs(u-t))&&a<=c?i:s<=c?r:o},bandspace:function(e,t,n){return Ys(e||0,t||0,n||0)},inrange:de,setdata:function(e,t){const n=this.context.dataflow,i=this.context.data[e].input;return n.pulse(i,n.changeset().remove(z).insert(t)),1},pathShape:function(e){let t=null;return function(n){return n?wr(n,t=t||dr(e)):e}},panLinear:function(e,t){return X(e,t,W,E)},panLog:function(e,t){var n=Math.sign(e[0]);return X(e,t,H(n),V(n))},panPow:function(e,t,n){return X(e,t,J(n),J(1/n))},panSymlog:function(e,t,n){return X(e,t,Y(n),G(n))},zoomLinear:K,zoomLog:Z,zoomPow:ee,zoomSymlog:te,encode:function(e,t,n){if(e){const n=this.context.dataflow,i=e.mark.source;n.pulse(i,n.changeset().encode(e,t))}return void 0!==n?n:e},modify:function(e,t,n,i,r,o){let a,s,l=this.context.dataflow,u=this.context.data[e],c=u.input,d=u.changes,f=l.stamp();if(!1===l._trigger||!(c.value.length||t||i))return 0;if((!d||d.stamp<f)&&(u.changes=d=l.changeset(),d.stamp=f,l.runAfter(function(){u.modified=!0,l.pulse(c,d).run()},!0,1)),n&&(a=!0===n?z:A(n)||Ce(n)?n:Mh(n),d.remove(a)),t&&d.insert(t),i&&(a=Mh(i),c.value.some(a)?d.remove(a):d.insert(i)),r)for(s in o)d.modify(r,s,o[s]);return 1}},Yh=["view","item","group","xy","x","y"],Gh="event.vega.",Jh="this.",Xh={};function Qh(e,t,n){return 1===arguments.length?Hh[e]:(Hh[e]=t,n&&(Xh[e]=n),Zh&&(Zh.functions[e]=Jh+e),this)}Qh("bandwidth",function(e,t){const n=Ch(e,(t||this).context);return n&&n.bandwidth?n.bandwidth():0},Wh),Qh("copy",function(e,t){const n=Ch(e,(t||this).context);return n?n.copy():void 0},Wh),Qh("domain",function(e,t){const n=Ch(e,(t||this).context);return n?n.domain():[]},Wh),Qh("range",function(e,t){const n=Ch(e,(t||this).context);return n&&n.range?n.range():[]},Wh),Qh("invert",function(e,t,n){const i=Ch(e,(n||this).context);return i?A(t)?(i.invertRange||i.invert)(t):(i.invert||i.invertExtent)(t):void 0},Wh),Qh("scale",function(e,t,n){const i=Ch(e,(n||this).context);return i?i(t):void 0},Wh),Qh("gradient",function(e,t,n,i,r){e=Ch(e,(r||this).context);const o=function(e,t){var n,i=[];return n={id:"gradient_"+Ki++,x1:e?e[0]:0,y1:e?e[1]:0,x2:t?t[0]:1,y2:t?t[1]:0,stops:i,stop:function(e,t){return i.push({offset:e,color:t}),n}}}(t,n);let a=e.domain(),s=a[0],l=U(a),u=E;return l-s?u=Dl(e,s,l):e=(e.interpolator?vl("sequential")().interpolator(e.interpolator()):vl("linear")().interpolate(e.interpolate()).range(e.range())).domain([s=0,l=1]),e.ticks&&(s!==(a=e.ticks(+i||15))[0]&&a.unshift(s),l!==U(a)&&a.push(l)),a.forEach(t=>o.stop(u(t),e(t))),o},Wh),Qh("geoArea",Sh,Wh),Qh("geoBounds",Fh,Wh),Qh("geoCentroid",jh,Wh),Qh("geoShape",function(e,t,n){const i=Ch(e,(n||this).context);return function(e){return i?i.path.context(e)(t):""}},Wh),Qh("indata",function(e,t,n){const i=this.context.data[e]["index:"+t],r=i?i.value.get(n):void 0;return r?r.count:r},function(e,t,n,i){t[0].type!==kd&&k("First argument to indata must be a string literal."),t[1].type!==kd&&k("Second argument to indata must be a string literal.");const r=t[0].value,o=t[1].value,a=Lh+o;i.hasOwnProperty(a)||(i[a]=n.getData(r).indataRef(n,o))}),Qh("data",xh,Uh),Qh("treePath",function(e,t,n){const i=Bh(e,this),r=i[t],o=i[n];return r&&o?r.path(o).map(Nh):void 0},Uh),Qh("treeAncestors",function(e,t){const n=Bh(e,this)[t];return n?n.ancestors().map(Nh):void 0},Uh),Qh("vlSelectionTest",function(e,t,n){for(var i,r,o,a,s,l=this.context.data[e],u=l?l.values.value:[],c=l?l[gh]&&l[gh].value:void 0,d=n===lh,f=u.length,h=0;h<f;++h)if(i=u[h],c&&d){if(-1===(o=(r=r||{})[a=i.unit]||0))continue;if(s=mh(t,i),r[a]=s?-1:++o,s&&1===c.size)return!0;if(!s&&o===c.get(a).count)return!1}else if(d^(s=mh(t,i)))return s;return f&&d},_h),Qh("vlSelectionResolve",function(e,t){for(var n,i,r,o,a,s,l,u,c,d,f,h=this.context.data[e],p=h?h.values.value:[],g={},m={},y=p.length,b=0;b<y;++b)for(o=(n=p[b]).unit,i=n.fields,r=n.values,d=0,f=i.length;d<f;++d)a=i[d],l=(s=g[a.field]||(g[a.field]={}))[o]||(s[o]=[]),m[a.field]=u=a.type.charAt(0),c=yh[u+"_union"],s[o]=c(l,ne(r[d]));return t=t||uh,Object.keys(g).forEach(function(e){g[e]=Object.keys(g[e]).map(function(t){return g[e][t]}).reduce(function(n,i){return void 0===n?i:yh[m[e]+"_"+t](n,i)})}),g},_h);const Kh={blacklist:["_"],whitelist:["datum","event","item"],fieldvar:"datum",globalvar:function(e){return"_["+T(Rh+e)+"]"},functions:function(e){const t=sh(e);Yh.forEach(e=>t[e]=Gh+e);for(let e in Hh)t[e]=Jh+e;return t},constants:ah,visitors:Xh};var Zh=function(e){var t=(e=e||{}).whitelist?xe(e.whitelist):{},n=e.blacklist?xe(e.blacklist):{},i=e.constants||ah,r=(e.functions||sh)(d),o=e.globalvar,a=e.fieldvar,s={},l={},u=0,c=ie(o)?o:function(e){return o+'["'+e+'"]'};function d(e){if(C(e))return e;var t=f[e.type];return null==t&&k("Unsupported type: "+e.type),t(e)}var f={Literal:function(e){return e.raw},Identifier:function(e){var r=e.name;return u>0?r:n.hasOwnProperty(r)?k("Illegal identifier: "+r):i.hasOwnProperty(r)?i[r]:t.hasOwnProperty(r)?r:(s[r]=1,c(r))},MemberExpression:function(e){var t=!e.computed,n=d(e.object);t&&(u+=1);var i=d(e.property);return n===a&&(l[i]=1),t&&(u-=1),n+(t?"."+i:"["+i+"]")},CallExpression:function(e){"Identifier"!==e.callee.type&&k("Illegal callee type: "+e.callee.type);var t=e.callee.name,n=e.arguments,i=r.hasOwnProperty(t)&&r[t];return i||k("Unrecognized function: "+t),ie(i)?i(n):i+"("+n.map(d).join(",")+")"},ArrayExpression:function(e){return"["+e.elements.map(d).join(",")+"]"},BinaryExpression:function(e){return"("+d(e.left)+e.operator+d(e.right)+")"},UnaryExpression:function(e){return"("+e.operator+d(e.argument)+")"},ConditionalExpression:function(e){return"("+d(e.test)+"?"+d(e.consequent)+":"+d(e.alternate)+")"},LogicalExpression:function(e){return"("+d(e.left)+e.operator+d(e.right)+")"},ObjectExpression:function(e){return"{"+e.properties.map(d).join(",")+"}"},Property:function(e){u+=1;var t=d(e.key);return u-=1,t+":"+d(e.value)}};function h(e){var t={code:d(e),globals:Object.keys(s),fields:Object.keys(l)};return s={},l={},t}return h.functions=r,h.constants=i,h}(Kh);function ep(e,t,n){";"!==t[t.length-1]&&(t="return("+t+");");var i=Function.apply(null,e.concat(t));return n&&n.functions?i.bind(n.functions):i}function tp(e,t){return ep(["event"],e,t)}function np(e,t){return ep(["item","_"],e,t)}function ip(e,t,n){var i,r;for(i in n=n||{},e)r=e[i],n[i]=A(r)?r.map(function(e){return rp(e,t,n)}):rp(r,t,n);return n}function rp(e,t,n){if(!e||!O(e))return e;for(var i,r=0,o=op.length;r<o;++r)if(i=op[r],e.hasOwnProperty(i.key))return i.parse(e,t,n);return e}var op=[{key:"$ref",parse:function(e,t){return t.get(e.$ref)||k("Operator not defined: "+e.$ref)}},{key:"$key",parse:function(e,t){var n="k:"+e.$key+"_"+!!e.$flat;return t.fn[n]||(t.fn[n]=pe(e.$key,e.$flat))}},{key:"$expr",parse:function(e,t,n){e.$params&&ip(e.$params,t,n);var i="e:"+e.$expr+"_"+e.$name;return t.fn[i]||(t.fn[i]=_(function(e,t){return ep(["datum","_"],e,t)}(e.$expr,t),e.$fields,e.$name))}},{key:"$field",parse:function(e,t){if(!e.$field)return null;var n="f:"+e.$field+"_"+e.$name;return t.fn[n]||(t.fn[n]=S(e.$field,e.$name))}},{key:"$encode",parse:function(e,t){var n,i,r=e.$encode,o={};for(n in r)i=r[n],o[n]=_(np(i.$expr,t),i.$fields),o[n].output=i.$output;return o}},{key:"$compare",parse:function(e,t){var n="c:"+e.$compare+"_"+e.$order,i=ne(e.$compare).map(function(e){return e&&e.$tupleid?Te:e});return t.fn[n]||(t.fn[n]=re(i,e.$order))}},{key:"$context",parse:function(e,t){return t}},{key:"$subflow",parse:function(e,t){var n=e.$subflow;return function(e,i,r){var o=up(n,t.fork()),a=o.get(n.operators[0].id),s=o.signals.parent;return s&&s.set(r),a}}},{key:"$tupleid",parse:function(){return Te}}];function ap(e){return(e+"").toLowerCase()}function sp(e,t){"operator"!==ap(e.type)&&e.type?t.transform(e,e.type):t.operator(e,e.update?function(e,t){return ep(["_"],e,t)}(e.update,t):null)}function lp(e,t){var n=O(n=e.source)?n.$ref:n,i=t.get(n),r=null,o=e.update,a=void 0;i||k("Source not defined: "+e.source),r=e.target&&e.target.$expr?tp(e.target.$expr,t):t.get(e.target),o&&o.$expr&&(o.$params&&(a=ip(o.$params,t)),o=function(e,t){return ep(["_","event"],e,t)}(o.$expr,t)),t.update(e,i,r,o,a)}function up(e,t){var n=e.operators||[];return e.background&&(t.background=e.background),e.eventConfig&&(t.eventConfig=e.eventConfig),n.forEach(function(e){sp(e,t)}),n.forEach(function(e){!function(e,t){if(e.params){var n=t.get(e.id);n||k("Invalid operator id: "+e.id),t.dataflow.connect(n,n.parameters(ip(e.params,t),e.react,e.initonly))}}(e,t)}),(e.streams||[]).forEach(function(e){!function(e,t){var n,i=null!=e.filter?tp(e.filter,t):void 0,r=null!=e.stream?t.get(e.stream):void 0;e.source?r=t.events(e.source,e.type,i):e.merge&&(r=(n=e.merge.map(t.get.bind(t)))[0].merge.apply(n[0],n.slice(1))),e.between&&(n=e.between.map(t.get.bind(t)),r=r.between(n[0],n[1])),e.filter&&(r=r.filter(i)),null!=e.throttle&&(r=r.throttle(+e.throttle)),null!=e.debounce&&(r=r.debounce(+e.debounce)),null==r&&k("Invalid stream definition: "+JSON.stringify(e)),e.consume&&r.consume(!0),t.stream(e,r)}(e,t)}),(e.updates||[]).forEach(function(e){lp(e,t)}),t.resolve()}var cp={skip:!0};function dp(e,t,n){this.dataflow=e,this.transforms=t,this.events=e.events.bind(e),this.signals={},this.scales={},this.nodes={},this.data={},this.fn={},n&&(this.functions=Object.create(n),this.functions.context=this)}function fp(e){this.dataflow=e.dataflow,this.transforms=e.transforms,this.functions=e.functions,this.events=e.events,this.signals=Object.create(e.signals),this.scales=Object.create(e.scales),this.nodes=Object.create(e.nodes),this.data=Object.create(e.data),this.fn=Object.create(e.fn),e.functions&&(this.functions=Object.create(e.functions),this.functions.context=this)}function hp(e,t,n){return up(t,function(e,t,n){return new dp(e,t,n)}(e,Pt,n||Hh))}dp.prototype=fp.prototype={fork:function(){var e=new fp(this);return(this.subcontext||(this.subcontext=[])).push(e),e},get:function(e){return this.nodes[e]},set:function(e,t){return this.nodes[e]=t},add:function(e,t){var n,i=this,r=i.dataflow;if(i.set(e.id,t),"collect"===ap(e.type)&&(n=e.value)&&(n.$ingest?r.ingest(t,n.$ingest,n.$format):n.$request?r.preload(t,n.$request,n.$format):r.pulse(t,r.changeset().insert(n))),e.root&&(i.root=t),e.parent){var o=i.get(e.parent.$ref);o?(r.connect(o,[t]),t.targets().add(o)):(i.unresolved=i.unresolved||[]).push(function(){o=i.get(e.parent.$ref),r.connect(o,[t]),t.targets().add(o)})}if(e.signal&&(i.signals[e.signal]=t),e.scale&&(i.scales[e.scale]=t),e.data)for(var a in e.data)n=i.data[a]||(i.data[a]={}),e.data[a].forEach(function(e){n[e]=t})},resolve:function(){return(this.unresolved||[]).forEach(function(e){e()}),delete this.unresolved,this},operator:function(e,t){this.add(e,this.dataflow.add(e.value,t))},transform:function(e,t){this.add(e,this.dataflow.add(this.transforms[ap(t)]))},stream:function(e,t){this.set(e.id,t)},update:function(e,t,n,i,r){this.dataflow.on(t,n,i,r,e.options)},getState:function(e){var t=this,n={};if(e.signals){var i=n.signals={};Object.keys(t.signals).forEach(function(n){var r=t.signals[n];e.signals(n,r)&&(i[n]=r.value)})}if(e.data){var r=n.data={};Object.keys(t.data).forEach(function(n){var i=t.data[n];e.data(n,i)&&(r[n]=i.input.value)})}return t.subcontext&&!1!==e.recurse&&(n.subcontext=t.subcontext.map(function(t){return t.getState(e)})),n},setState:function(e){var t=this,n=t.dataflow,i=e.data,r=e.signals;Object.keys(r||{}).forEach(function(e){n.update(t.signals[e],r[e],cp)}),Object.keys(i||{}).forEach(function(e){n.pulse(t.data[e].input,n.changeset().remove(z).insert(i[e]))}),(e.subcontext||[]).forEach(function(e,n){var i=t.subcontext[n];i&&i.setState(e)})}};var pp="width",gp="height",mp="padding",yp={skip:!0};function bp(e,t){var n=e.autosize(),i=e.padding();return t-(n&&n.contains===mp?i.left+i.right:0)}function vp(e,t){var n=e.autosize(),i=e.padding();return t-(n&&n.contains===mp?i.top+i.bottom:0)}function _p(e,t){return t.modified&&A(t.input.value)&&e.indexOf("_:vega:_")}function xp(e,t){return!("parent"===e||t instanceof Pt.proxy)}function wp(e,t,n,i){var r=e.element();r&&r.setAttribute("title",function(e){return null==e?"":A(e)?kp(e):O(e)&&!fe(e)?(t=e,Object.keys(t).map(function(e){var n=t[e];return e+": "+(A(n)?kp(n):Dp(n))}).join("\n")):e+"";var t}(i))}function kp(e){return"["+e.map(Dp).join(", ")+"]"}function Dp(e){return A(e)?"[…]":O(e)&&!fe(e)?"{…}":e}var Ap=ce(function(e,t){t=t||{},$t.call(this),this.loader(t.loader||this._loader),this.logLevel(t.logLevel||0),this._el=null,this._elBind=null,this._renderType=t.renderer||as.Canvas,this._scenegraph=new ua;var n=this._scenegraph.root;this._renderer=null,this._tooltip=t.tooltip||wp,this._redraw=!0,this._handler=(new Da).scene(n),this._preventDefault=!1,this._timers=[],this._eventListeners=[],this._resizeListeners=[];var i,r,o=hp(this,e,t.functions);this._runtime=o,this._signals=o.signals,this._bind=(e.bindings||[]).map(function(e){return{state:null,param:se({},e)}}),o.root&&o.root.set(n),n.source=o.data.root.input,this.pulse(o.data.root.input,this.changeset().insert(n.items)),this._background=o.background||null,this._eventConfig=(i=o.eventConfig,(r=(i=se({},i)).defaults)&&(A(r.prevent)&&(r.prevent=xe(r.prevent)),A(r.allow)&&(r.allow=xe(r.allow))),i),this._width=this.width(),this._height=this.height(),this._viewWidth=bp(this,this._width),this._viewHeight=vp(this,this._height),this._origin=[0,0],this._resize=0,this._autosize=1,function(e){var t=e._signals,n=t[pp],i=t[gp],r=t[mp];function o(){e._autosize=e._resize=1}e._resizeWidth=e.add(null,function(t){e._width=t.size,e._viewWidth=bp(e,t.size),o()},{size:n}),e._resizeHeight=e.add(null,function(t){e._height=t.size,e._viewHeight=vp(e,t.size),o()},{size:i});var a=e.add(null,o,{pad:r});e._resizeWidth.rank=n.rank+1,e._resizeHeight.rank=i.rank+1,a.rank=r.rank+1}(this),qc(this)},$t);function Op(e,t){return e._signals.hasOwnProperty(t)?e._signals[t]:k("Unrecognized signal name: "+T(t))}function Cp(e,t){var n=(e._targets||[]).filter(function(e){var n=e._update;return n&&n.handler===t});return n.length?n[0]:null}function Tp(e,t,n,i){var r=Cp(n,i);return r||((r=pd(this,function(){i(t,n.value)})).handler=i,e.on(n,null,r)),e}function Sp(e,t,n){var i=Cp(t,n);return i&&t._targets.remove(i),e}Ap.evaluate=async function(e,t,n){if(await $t.prototype.evaluate.call(this,e,t),this._redraw||this._resize)try{this._renderer&&(this._resize&&(this._resize=0,r=Hc(i=this),o=Wc(i),a=Vc(i),i._renderer.background(i._background),i._renderer.resize(o,a,r),i._handler.origin(r),i._resizeListeners.forEach(function(e){try{e(o,a)}catch(e){i.error(e)}})),await this._renderer.renderAsync(this._scenegraph.root)),this._redraw=!1}catch(e){this.error(e)}var i,r,o,a;return n&&De(this,n),this},Ap.dirty=function(e){this._redraw=!0,this._renderer&&this._renderer.dirty(e)},Ap.container=function(){return this._el},Ap.scenegraph=function(){return this._scenegraph},Ap.origin=function(){return this._origin.slice()},Ap.signal=function(e,t,n){var i=Op(this,e);return 1===arguments.length?i.value:this.update(i,t,n)},Ap.background=function(e){return arguments.length?(this._background=e,this._resize=1,this):this._background},Ap.width=function(e){return arguments.length?this.signal("width",e):this.signal("width")},Ap.height=function(e){return arguments.length?this.signal("height",e):this.signal("height")},Ap.padding=function(e){return arguments.length?this.signal("padding",e):this.signal("padding")},Ap.autosize=function(e){return arguments.length?this.signal("autosize",e):this.signal("autosize")},Ap.renderer=function(e){return arguments.length?(ls(e)||k("Unrecognized renderer type: "+e),e!==this._renderType&&(this._renderType=e,this._resetRenderer()),this):this._renderType},Ap.tooltip=function(e){return arguments.length?(e!==this._tooltip&&(this._tooltip=e,this._resetRenderer()),this):this._tooltip},Ap.loader=function(e){return arguments.length?(e!==this._loader&&($t.prototype.loader.call(this,e),this._resetRenderer()),this):this._loader},Ap.resize=function(){return this._autosize=1,this.touch(Op(this,"autosize"))},Ap._resetRenderer=function(){this._renderer&&(this._renderer=null,this.initialize(this._el,this._elBind))},Ap._resizeView=function(e,t,n,i,r,o){this.runAfter(function(a){var s=0;a._autosize=0,a.width()!==n&&(s=1,a.signal(pp,n,yp),a._resizeWidth.skip(!0)),a.height()!==i&&(s=1,a.signal(gp,i,yp),a._resizeHeight.skip(!0)),a._viewWidth!==e&&(a._resize=1,a._viewWidth=e),a._viewHeight!==t&&(a._resize=1,a._viewHeight=t),a._origin[0]===r[0]&&a._origin[1]===r[1]||(a._resize=1,a._origin=r),s&&a.run("enter"),o&&a.runAfter(e=>e.resize())},!1,1)},Ap.addEventListener=function(e,t,n){var i=t;return n&&!1===n.trap||((i=pd(this,t)).raw=t),this._handler.on(e,i),this},Ap.removeEventListener=function(e,t){for(var n,i,r=this._handler.handlers(e),o=r.length;--o>=0;)if(i=r[o].type,n=r[o].handler,e===i&&(t===n||t===n.raw)){this._handler.off(i,n);break}return this},Ap.addResizeListener=function(e){var t=this._resizeListeners;return t.indexOf(e)<0&&t.push(e),this},Ap.removeResizeListener=function(e){var t=this._resizeListeners,n=t.indexOf(e);return n>=0&&t.splice(n,1),this},Ap.addSignalListener=function(e,t){return Tp(this,e,Op(this,e),t)},Ap.removeSignalListener=function(e,t){return Sp(this,Op(this,e),t)},Ap.addDataListener=function(e,t){return Tp(this,e,Rc(this,e).values,t)},Ap.removeDataListener=function(e,t){return Sp(this,Rc(this,e).values,t)},Ap.preventDefault=function(e){return arguments.length?(this._preventDefault=e,this):this._preventDefault},Ap.timer=function(e,t){this._timers.push(Object(v.a)(function(t){e({timestamp:Date.now(),elapsed:t})},t))},Ap.events=function(e,t,n){var i,r=this,o=new Ve(n),a=function(n,i){r.runAsync(null,()=>{e===Gc&&function(e,t){var n=e._eventConfig.defaults,i=n&&n.prevent,r=n&&n.allow;return!1!==i&&!0!==r&&(!0===i||!1===r||(i?i[t]:r?!r[t]:e.preventDefault()))}(r,t)&&n.preventDefault(),o.receive(Yc(r,n,i))})};if(e===Jc)r.timer(a,t);else if(e===Gc)r.addEventListener(t,a,Qc);else if(e===Xc?"undefined"!=typeof window&&(i=[window]):"undefined"!=typeof document&&(i=document.querySelectorAll(e)),i){for(var s=0,l=i.length;s<l;++s)i[s].addEventListener(t,a);r._eventListeners.push({type:t,sources:i,handler:a})}else r.warn("Can not resolve event source: "+e);return o},Ap.finalize=function(){var e,t,n,i=this._tooltip,r=this._timers,o=this._eventListeners;for(e=r.length;--e>=0;)r[e].stop();for(e=o.length;--e>=0;)for(t=(n=o[e]).sources.length;--t>=0;)n.sources[t].removeEventListener(n.type,n.handler);return i&&i.call(this,this._handler,null,null,null),this},Ap.hover=function(e,t){return t=[t||"update",(e=[e||"hover"])[0]],this.on(this.events("view","mouseover",Kc),Zc,ed(e)),this.on(this.events("view","mouseout",Kc),Zc,ed(t)),this},Ap.data=function(e){return Rc(this,e).values.value},Ap.change=Uc,Ap.insert=function(e,t){return Uc.call(this,e,ze().insert(t))},Ap.remove=function(e,t){return Uc.call(this,e,ze().remove(t))},Ap.scale=function(e){var t=this._runtime.scales;return t.hasOwnProperty(e)||k("Unrecognized scale or projection: "+e),t[e].value},Ap.initialize=function(e,t){var n,i,r=this,o=r._renderType,a=ls(o);return e=r._el=e?gd(r,e):null,a||r.error("Unrecognized renderer type: "+o),n=a.handler||Da,i=e?a.renderer:a.headless,r._renderer=i?hd(r,r._renderer,e,i):null,r._handler=function(e,t,n,i){var r=new i(e.loader(),pd(e,e.tooltip())).scene(e.scenegraph().root).initialize(n,Hc(e),e);return t&&t.handlers().forEach(function(e){r.on(e.type,e.handler)}),r}(r,r._handler,e,n),r._redraw=!0,e&&(t=t?r._elBind=gd(r,t):e.appendChild(td("div",{class:"vega-bindings"})),r._bind.forEach(function(e){e.param.element&&(e.element=gd(r,e.param.element))}),r._bind.forEach(function(e){ad(r,e.element||t,e)})),r},Ap.toImageURL=async function(e,t){e!==as.Canvas&&e!==as.SVG&&e!==as.PNG&&k("Unrecognized image type: "+e);const n=await md(this,e,t);return e===as.SVG?(i=n.svg(),r=new Blob([i],{type:"image/svg+xml"}),window.URL.createObjectURL(r)):n.canvas().toDataURL("image/png");var i,r},Ap.toCanvas=async function(e,t){return(await md(this,as.Canvas,e,t)).canvas()},Ap.toSVG=async function(e){return(await md(this,as.SVG,e)).svg()},Ap.getState=function(e){return this._runtime.getState(e||{data:_p,signals:xp,recurse:!0})},Ap.setState=function(e){return this.runAsync(null,t=>{t._trigger=!1,t._runtime.setState(e)},e=>{e._trigger=!0}),this};function Fp(e,t,n){var i,r,o={};try{i=function(e){vd=0,_d=(bd=e).length,xd=null,Mf();var t=oh();if(xd.type!==Nd)throw new Error("Unexpect token after expression.");return t}(e=C(e)?e:T(e)+"")}catch(t){k("Expression parse error: "+e)}return i.visit(function(e){if(e.type===Td){var n=e.callee.name,i=Kh.visitors[n];i&&i(n,e.arguments,t,o)}}),(r=Zh(i)).globals.forEach(function(e){var n=Rh+e;!o.hasOwnProperty(n)&&t.getSignal(e)&&(o[n]=t.signalRef(e))}),{$expr:n?n+"return("+r.code+");":r.code,$fields:r.fields,$params:o}}function jp(e,t,n,i){this.id=-1,this.type=e,this.value=t,this.params=n,i&&(this.parent=i)}function Ep(e,t,n,i){return new jp(e,t,n,i)}function $p(e,t){return Ep("operator",e,t)}function Mp(e){var t={$ref:e.id};return e.id<0&&(e.refs=e.refs||[]).push(t),t}var zp={$tupleid:1,toString:function(){return":_tupleid_:"}};function Np(e,t){return t?{$field:e,$name:t}:{$field:e}}var Bp=Np("key");function Pp(e,t){return{$compare:e,$order:t}}var Ip="descending";function Lp(e,t){return(e&&e.signal?"$"+e.signal:e||"")+(e&&t?"_":"")+(t&&t.signal?"$"+t.signal:t||"")}function qp(e){return e&&e.signal}function Rp(e){return function(t,n,i){return Ep(e,n,t||void 0,i)}}var Up=Rp("aggregate"),Wp=(Rp("axisticks"),Rp("bound"),Rp("collect")),Vp=Rp("compare"),Hp=(Rp("datajoin"),Rp("encode"),Rp("expression")),Yp=(Rp("facet"),Rp("field")),Gp=Rp("key"),Jp=(Rp("legendentries"),Rp("load"),Rp("mark"),Rp("multiextent"),Rp("multivalues"),Rp("overlap"),Rp("params"),Rp("prefacet"),Rp("projection")),Xp=Rp("proxy"),Qp=(Rp("relay"),Rp("render"),Rp("scale")),Kp=Rp("sieve");Rp("sortitems"),Rp("viewlayout"),Rp("values");var Zp="left",eg="right",tg="start",ng="end";xe(["rule"]),xe(["group","image","rect"]);function ig(e,t,n,i,r){this.scope=e,this.input=t,this.output=n,this.values=i,this.aggregate=r,this.index={}}ig.fromEntries=function(e,t){var n=t.length,i=1,r=t[0],o=t[n-1],a=t[n-2],s=null;for(r&&"load"===r.type&&(r=t[1]),e.add(t[0]);i<n;++i)t[i].params.pulse=Mp(t[i-1]),e.add(t[i]),"aggregate"===t[i].type&&(s=t[i]);return new ig(e,r,a,o,s)};var rg=ig.prototype;function og(e){return C(e)?e:null}function ag(e,t,n){var i,r=Lp(n.op,n.field);if(t.ops){for(var o=0,a=t.as.length;o<a;++o)if(t.as[o]===r)return}else t.ops=["count"],t.fields=[null],t.as=["count"];n.op&&(t.ops.push((i=n.op.signal)?e.signalRef(i):n.op),t.fields.push(e.fieldRef(n.field)),t.as.push(r))}function sg(e,t,n,i,r,o,a){var s,l,u=t[n]||(t[n]={}),c=function(e){return O(e)?(e.order===Ip?"-":"+")+Lp(e.op,e.field):""}(o),d=og(r);if(null!=d&&(e=t.scope,s=u[d+=c?"|"+c:""]),!s){var f=o?{field:Bp,pulse:t.countsRef(e,r,o)}:{field:e.fieldRef(r),pulse:Mp(t.output)};c&&(f.sort=e.sortRef(o)),l=e.add(Ep(i,void 0,f)),a&&(t.index[r]=l),s=Mp(l),null!=d&&(u[d]=s)}return s}function lg(e,t,n){return'item.anchor==="'+tg+'"?'+e+':item.anchor==="'+ng+'"?'+t+":"+n}rg.countsRef=function(e,t,n){var i,r,o,a=this.counts||(this.counts={}),s=og(t);return null!=s&&(e=this.scope,i=a[s]),i?n&&n.field&&ag(e,i.agg.params,n):(o={groupby:e.fieldRef(t,"key"),pulse:Mp(this.output)},n&&n.field&&ag(e,o,n),r=e.add(Up(o)),i=e.add(Wp({pulse:Mp(r)})),i={agg:r,ref:Mp(i)},null!=s&&(a[s]=i)),i.ref},rg.tuplesRef=function(){return Mp(this.values)},rg.extentRef=function(e,t){return sg(e,this,"extent","extent",t,!1)},rg.domainRef=function(e,t){return sg(e,this,"domain","values",t,!1)},rg.valuesRef=function(e,t,n){return sg(e,this,"vals","values",t,n||!0)},rg.lookupRef=function(e,t){return sg(e,this,"lookup","tupleindex",t,!1)},rg.indataRef=function(e,t){return sg(e,this,"indata","tupleindex",t,!0,!0)};lg(T(Zp),T(eg),T("center")),lg('+(item.orient==="'+eg+'")','+(item.orient!=="'+Zp+'")',"0.5");xe(["width","height","padding","autosize"]);function ug(e){this.config=e,this.bindings=[],this.field={},this.signals={},this.lambdas={},this.scales={},this.events={},this.data={},this.streams=[],this.updates=[],this.operators=[],this.background=null,this.eventConfig=null,this._id=0,this._subid=0,this._nextsub=[0],this._parent=[],this._encode=[],this._lookup=[],this._markpath=[]}function cg(e){this.config=e.config,this.field=Object.create(e.field),this.signals=Object.create(e.signals),this.lambdas=Object.create(e.lambdas),this.scales=Object.create(e.scales),this.events=Object.create(e.events),this.data=Object.create(e.data),this.streams=[],this.updates=[],this.operators=[],this._id=0,this._subid=++e._nextsub[0],this._nextsub=e._nextsub,this._parent=e._parent.slice(),this._encode=e._encode.slice(),this._lookup=e._lookup.slice(),this._markpath=e._markpath}var dg=ug.prototype=cg.prototype;function fg(e){return(A(e)?function(e){for(var t,n="[",i=0,r=e.length;i<r;++i)t=e[i],n+=(i>0?",":"")+(O(t)?t.signal||fg(t):T(t));return n+"]"}:function(e){var t,n,i="{",r=0;for(t in e)n=e[t],i+=(++r>1?",":"")+T(t)+":"+(O(n)?n.signal||fg(n):T(n));return i+"}"})(e)}dg.fork=function(){return new cg(this)},dg.isSubscope=function(){return this._subid>0},dg.toRuntime=function(){return this.finish(),{background:this.background,operators:this.operators,streams:this.streams,updates:this.updates,bindings:this.bindings,eventConfig:this.eventConfig}},dg.id=function(){return(this._subid?this._subid+":":0)+this._id++},dg.add=function(e){return this.operators.push(e),e.id=this.id(),e.refs&&(e.refs.forEach(function(t){t.$ref=e.id}),e.refs=null),e},dg.proxy=function(e){var t=e instanceof jp?Mp(e):e;return this.add(Xp({value:t}))},dg.addStream=function(e){return this.streams.push(e),e.id=this.id(),e},dg.addUpdate=function(e){return this.updates.push(e),e},dg.finish=function(){var e,t;for(e in this.root&&(this.root.root=!0),this.signals)this.signals[e].signal=e;for(e in this.scales)this.scales[e].scale=e;function n(e,t,n){var i;e&&((i=e.data||(e.data={}))[t]||(i[t]=[])).push(n)}for(e in this.data)for(var i in n((t=this.data[e]).input,e,"input"),n(t.output,e,"output"),n(t.values,e,"values"),t.index)n(t.index[i],e,"index:"+i);return this},dg.pushState=function(e,t,n){this._encode.push(Mp(this.add(Kp({pulse:e})))),this._parent.push(t),this._lookup.push(n?Mp(this.proxy(n)):null),this._markpath.push(-1)},dg.popState=function(){this._encode.pop(),this._parent.pop(),this._lookup.pop(),this._markpath.pop()},dg.parent=function(){return U(this._parent)},dg.encode=function(){return U(this._encode)},dg.lookup=function(){return U(this._lookup)},dg.markpath=function(){var e=this._markpath;return++e[e.length-1]},dg.fieldRef=function(e,t){if(C(e))return Np(e,t);e.signal||k("Unsupported field reference: "+T(e));var n,i=e.signal,r=this.field[i];return r||(n={name:this.signalRef(i)},t&&(n.as=t),this.field[i]=r=Mp(this.add(Yp(n)))),r},dg.compareRef=function(e,t){function n(e){return qp(e)?(r=!0,i.signalRef(e.signal)):e}var i=this,r=!1,o=ne(e.field).map(n),a=ne(e.order).map(n);return t&&o.push(zp),r?Mp(this.add(Vp({fields:o,orders:a}))):Pp(o,a)},dg.keyRef=function(e,t){var n=this.signals,i=!1;return e=ne(e).map(function(e){return qp(e)?(i=!0,Mp(n[e.signal])):e}),i?Mp(this.add(Gp({fields:e,flat:t}))):function(e,t){var n={$key:e};return t&&(n.$flat=!0),n}(e,t)},dg.sortRef=function(e){if(!e)return e;var t=[Lp(e.op,e.field),zp],n=e.order||"ascending";return n.signal?Mp(this.add(Vp({fields:t,orders:[n=this.signalRef(n.signal),n]}))):Pp(t,[n,n])},dg.event=function(e,t){var n=e+":"+t;if(!this.events[n]){var i=this.id();this.streams.push({id:i,source:e,type:t}),this.events[n]=i}return this.events[n]},dg.addSignal=function(e,t){this.signals.hasOwnProperty(e)&&k("Duplicate signal name: "+T(e));var n=t instanceof jp?t:this.add($p(t));return this.signals[e]=n},dg.getSignal=function(e){return this.signals[e]||k("Unrecognized signal name: "+T(e)),this.signals[e]},dg.signalRef=function(e){return this.signals[e]?Mp(this.signals[e]):(this.lambdas.hasOwnProperty(e)||(this.lambdas[e]=this.add($p(null))),Mp(this.lambdas[e]))},dg.parseLambdas=function(){for(var e=Object.keys(this.lambdas),t=0,n=e.length;t<n;++t){var i=e[t],r=Fp(i,this),o=this.lambdas[i];o.params=r.$params,o.update=r.$expr}},dg.property=function(e){return e&&e.signal?this.signalRef(e.signal):e},dg.objectProperty=function(e){return e&&O(e)?this.signalRef(e.signal||fg(e)):e},dg.exprRef=function(e,t){var n={expr:Fp(e,this)};return t&&(n.expr.$name=t),Mp(this.add(Hp(n)))},dg.addBinding=function(e,t){this.bindings||k("Nested signals do not support binding: "+T(e)),this.bindings.push(se({signal:e},t))},dg.addScaleProj=function(e,t){this.scales.hasOwnProperty(e)&&k("Duplicate scale or projection name: "+T(e)),this.scales[e]=this.add(t)},dg.addScale=function(e,t){this.addScaleProj(e,Qp(t))},dg.addProjection=function(e,t){this.addScaleProj(e,Jp(t))},dg.getScale=function(e){return this.scales[e]||k("Unrecognized scale name: "+T(e)),this.scales[e]},dg.projectionRef=dg.scaleRef=function(e){return Mp(this.getScale(e))},dg.projectionType=dg.scaleType=function(e){return this.getScale(e).params.type},dg.addData=function(e,t){return this.data.hasOwnProperty(e)&&k("Duplicate data set name: "+T(e)),this.data[e]=t},dg.getData=function(e){return this.data[e]||k("Undefined data set name: "+T(e)),this.data[e]},dg.addDataPipeline=function(e,t){return this.data.hasOwnProperty(e)&&k("Duplicate data set name: "+T(e)),this.addData(e,ig.fromEntries(this,t))};se(Pt,gi,Hs,pu,Eu,Wu,hc,yc,jc,Ic)}).call(this,n(221).Buffer)},215:function(e,t,n){"use strict";var i,r,o=0,a=0,s=0,l=1e3,u=0,c=0,d=0,f="object"==typeof performance&&performance.now?performance:Date,h="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(e){setTimeout(e,17)};function p(){return c||(h(g),c=f.now()+d)}function g(){c=0}function m(){this._call=this._time=this._next=null}function y(e,t,n){var i=new m;return i.restart(e,t,n),i}function b(){c=(u=f.now())+d,o=a=0;try{!function(){p(),++o;for(var e,t=i;t;)(e=c-t._time)>=0&&t._call.call(null,e),t=t._next;--o}()}finally{o=0,function(){var e,t,n=i,o=1/0;for(;n;)n._call?(o>n._time&&(o=n._time),e=n,n=n._next):(t=n._next,n._next=null,n=e?e._next=t:i=t);r=e,_(o)}(),c=0}}function v(){var e=f.now(),t=e-u;t>l&&(d-=t,u=e)}function _(e){o||(a&&(a=clearTimeout(a)),e-c>24?(e<1/0&&(a=setTimeout(b,e-f.now()-d)),s&&(s=clearInterval(s))):(s||(u=f.now(),s=setInterval(v,l)),o=1,h(b)))}m.prototype=y.prototype={constructor:m,restart:function(e,t,n){if("function"!=typeof e)throw new TypeError("callback is not a function");n=(null==n?p():+n)+(null==t?0:+t),this._next||r===this||(r?r._next=this:i=this,r=this),this._call=e,this._time=n,_()},stop:function(){this._call&&(this._call=null,this._time=1/0,_())}};var x=function(e,t,n){var i=new m,r=t;return null==t?(i.restart(e,t,n),i):(t=+t,n=null==n?p():+n,i.restart(function o(a){a+=r,i.restart(o,r+=t,n),e(a)},t,n),i)};n.d(t,"b",function(){return y}),n.d(t,"a",function(){return x})},218:function(e,t,n){"use strict";e.exports=function(e,t){t||(t={}),"function"==typeof t&&(t={cmp:t});var n,i="boolean"==typeof t.cycles&&t.cycles,r=t.cmp&&(n=t.cmp,function(e){return function(t,i){var r={key:t,value:e[t]},o={key:i,value:e[i]};return n(r,o)}}),o=[];return function e(t){if(t&&t.toJSON&&"function"==typeof t.toJSON&&(t=t.toJSON()),void 0!==t){if("number"==typeof t)return isFinite(t)?""+t:"null";if("object"!=typeof t)return JSON.stringify(t);var n,a;if(Array.isArray(t)){for(a="[",n=0;n<t.length;n++)n&&(a+=","),a+=e(t[n])||"null";return a+"]"}if(null===t)return"null";if(-1!==o.indexOf(t)){if(i)return JSON.stringify("__cycle__");throw new TypeError("Converting circular structure to JSON")}var s=o.push(t)-1,l=Object.keys(t).sort(r&&r(t));for(a="",n=0;n<l.length;n++){var u=l[n],c=e(t[u]);c&&(a&&(a+=","),a+=JSON.stringify(u)+":"+c)}return o.splice(s,1),"{"+a+"}"}}(e)}},232:function(e,t,n){"use strict";var i=function(e,t){return e<t?-1:e>t?1:e>=t?0:NaN};var r,o;1===(r=i).length&&(o=r,r=function(e,t){return i(o(e),t)});var a=function(e,t){var n,i,r,o=e.length,a=-1;if(null==t){for(;++a<o;)if(null!=(n=e[a])&&n>=n)for(i=r=n;++a<o;)null!=(n=e[a])&&(i>n&&(i=n),r<n&&(r=n))}else for(;++a<o;)if(null!=(n=t(e[a],a,e))&&n>=n)for(i=r=n;++a<o;)null!=(n=t(e[a],a,e))&&(i>n&&(i=n),r<n&&(r=n));return[i,r]},s=Array.prototype,l=(s.slice,s.map,function(e,t,n){e=+e,t=+t,n=(r=arguments.length)<2?(t=e,e=0,1):r<3?1:+n;for(var i=-1,r=0|Math.max(0,Math.ceil((t-e)/n)),o=new Array(r);++i<r;)o[i]=e+i*n;return o}),u=Math.sqrt(50),c=Math.sqrt(10),d=Math.sqrt(2);function f(e,t,n){var i=Math.abs(t-e)/Math.max(0,n),r=Math.pow(10,Math.floor(Math.log(i)/Math.LN10)),o=i/r;return o>=u?r*=10:o>=c?r*=5:o>=d&&(r*=2),t<e?-r:r}var h=function(e){return Math.ceil(Math.log(e.length)/Math.LN2)+1},p=function(e,t){var n,i,r=e.length,o=-1;if(null==t){for(;++o<r;)if(null!=(n=e[o])&&n>=n)for(i=n;++o<r;)null!=(n=e[o])&&n>i&&(i=n)}else for(;++o<r;)if(null!=(n=t(e[o],o,e))&&n>=n)for(i=n;++o<r;)null!=(n=t(e[o],o,e))&&n>i&&(i=n);return i};var g=Array.prototype.slice,m=function(e,t){return e-t},y=function(e){for(var t=0,n=e.length,i=e[n-1][1]*e[0][0]-e[n-1][0]*e[0][1];++t<n;)i+=e[t-1][1]*e[t][0]-e[t-1][0]*e[t][1];return i},b=function(e){return function(){return e}},v=function(e,t){for(var n,i=-1,r=t.length;++i<r;)if(n=_(e,t[i]))return n;return 0};function _(e,t){for(var n=t[0],i=t[1],r=-1,o=0,a=e.length,s=a-1;o<a;s=o++){var l=e[o],u=l[0],c=l[1],d=e[s],f=d[0],h=d[1];if(x(l,d,t))return 0;c>i!=h>i&&n<(f-u)*(i-c)/(h-c)+u&&(r=-r)}return r}function x(e,t,n){var i,r,o,a;return function(e,t,n){return(t[0]-e[0])*(n[1]-e[1])==(n[0]-e[0])*(t[1]-e[1])}(e,t,n)&&(r=e[i=+(e[0]===t[0])],o=n[i],a=t[i],r<=o&&o<=a||a<=o&&o<=r)}var w=function(){},k=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]],D=function(){var e=1,t=1,n=h,i=u;function r(e){var t=n(e);if(Array.isArray(t))t=t.slice().sort(m);else{var i=a(e),r=i[0],s=i[1];t=f(r,s,t),t=l(Math.floor(r/t)*t,Math.floor(s/t)*t,t)}return t.map(function(t){return o(e,t)})}function o(n,r){var o=[],a=[];return function(n,i,r){var o,a,l,u,c,d,f=new Array,h=new Array;o=a=-1,u=n[0]>=i,k[u<<1].forEach(p);for(;++o<e-1;)l=u,u=n[o+1]>=i,k[l|u<<1].forEach(p);k[u<<0].forEach(p);for(;++a<t-1;){for(o=-1,u=n[a*e+e]>=i,c=n[a*e]>=i,k[u<<1|c<<2].forEach(p);++o<e-1;)l=u,u=n[a*e+e+o+1]>=i,d=c,c=n[a*e+o+1]>=i,k[l|u<<1|c<<2|d<<3].forEach(p);k[u|c<<3].forEach(p)}o=-1,c=n[a*e]>=i,k[c<<2].forEach(p);for(;++o<e-1;)d=c,c=n[a*e+o+1]>=i,k[c<<2|d<<3].forEach(p);function p(e){var t,n,i=[e[0][0]+o,e[0][1]+a],l=[e[1][0]+o,e[1][1]+a],u=s(i),c=s(l);(t=h[u])?(n=f[c])?(delete h[t.end],delete f[n.start],t===n?(t.ring.push(l),r(t.ring)):f[t.start]=h[n.end]={start:t.start,end:n.end,ring:t.ring.concat(n.ring)}):(delete h[t.end],t.ring.push(l),h[t.end=c]=t):(t=f[c])?(n=h[u])?(delete f[t.start],delete h[n.end],t===n?(t.ring.push(l),r(t.ring)):f[n.start]=h[t.end]={start:n.start,end:t.end,ring:n.ring.concat(t.ring)}):(delete f[t.start],t.ring.unshift(i),f[t.start=u]=t):f[u]=h[c]={start:u,end:c,ring:[i,l]}}k[c<<3].forEach(p)}(n,r,function(e){i(e,n,r),y(e)>0?o.push([e]):a.push(e)}),a.forEach(function(e){for(var t,n=0,i=o.length;n<i;++n)if(-1!==v((t=o[n])[0],e))return void t.push(e)}),{type:"MultiPolygon",value:r,coordinates:o}}function s(t){return 2*t[0]+t[1]*(e+1)*4}function u(n,i,r){n.forEach(function(n){var o,a=n[0],s=n[1],l=0|a,u=0|s,c=i[u*e+l];a>0&&a<e&&l===a&&(o=i[u*e+l-1],n[0]=a+(r-o)/(c-o)-.5),s>0&&s<t&&u===s&&(o=i[(u-1)*e+l],n[1]=s+(r-o)/(c-o)-.5)})}return r.contour=o,r.size=function(n){if(!arguments.length)return[e,t];var i=Math.ceil(n[0]),o=Math.ceil(n[1]);if(!(i>0&&o>0))throw new Error("invalid size");return e=i,t=o,r},r.thresholds=function(e){return arguments.length?(n="function"==typeof e?e:Array.isArray(e)?b(g.call(e)):b(e),r):n},r.smooth=function(e){return arguments.length?(i=e?u:w,r):i===u},r};function A(e,t,n){for(var i=e.width,r=e.height,o=1+(n<<1),a=0;a<r;++a)for(var s=0,l=0;s<i+n;++s)s<i&&(l+=e.data[s+a*i]),s>=n&&(s>=o&&(l-=e.data[s-o+a*i]),t.data[s-n+a*i]=l/Math.min(s+1,i-1+o-s,o))}function O(e,t,n){for(var i=e.width,r=e.height,o=1+(n<<1),a=0;a<i;++a)for(var s=0,l=0;s<r+n;++s)s<r&&(l+=e.data[a+s*i]),s>=n&&(s>=o&&(l-=e.data[a+(s-o)*i]),t.data[a+(s-n)*i]=l/Math.min(s+1,r-1+o-s,o))}function C(e){return e[0]}function T(e){return e[1]}function S(){return 1}var F=function(){var e=C,t=T,n=S,i=960,r=500,o=20,a=2,s=3*o,u=i+2*s>>a,c=r+2*s>>a,d=b(20);function h(i){var r=new Float32Array(u*c),h=new Float32Array(u*c);i.forEach(function(i,o,l){var d=+e(i,o,l)+s>>a,f=+t(i,o,l)+s>>a,h=+n(i,o,l);d>=0&&d<u&&f>=0&&f<c&&(r[d+f*u]+=h)}),A({width:u,height:c,data:r},{width:u,height:c,data:h},o>>a),O({width:u,height:c,data:h},{width:u,height:c,data:r},o>>a),A({width:u,height:c,data:r},{width:u,height:c,data:h},o>>a),O({width:u,height:c,data:h},{width:u,height:c,data:r},o>>a),A({width:u,height:c,data:r},{width:u,height:c,data:h},o>>a),O({width:u,height:c,data:h},{width:u,height:c,data:r},o>>a);var g=d(r);if(!Array.isArray(g)){var y=p(r);g=f(0,y,g),(g=l(0,Math.floor(y/g)*g,g)).shift()}return D().thresholds(g).size([u,c])(r).map(m)}function m(e){return e.value*=Math.pow(2,-2*a),e.coordinates.forEach(y),e}function y(e){e.forEach(v)}function v(e){e.forEach(_)}function _(e){e[0]=e[0]*Math.pow(2,a)-s,e[1]=e[1]*Math.pow(2,a)-s}function x(){return u=i+2*(s=3*o)>>a,c=r+2*s>>a,h}return h.x=function(t){return arguments.length?(e="function"==typeof t?t:b(+t),h):e},h.y=function(e){return arguments.length?(t="function"==typeof e?e:b(+e),h):t},h.weight=function(e){return arguments.length?(n="function"==typeof e?e:b(+e),h):n},h.size=function(e){if(!arguments.length)return[i,r];var t=Math.ceil(e[0]),n=Math.ceil(e[1]);if(!(t>=0||t>=0))throw new Error("invalid size");return i=t,r=n,x()},h.cellSize=function(e){if(!arguments.length)return 1<<a;if(!((e=+e)>=1))throw new Error("invalid cell size");return a=Math.floor(Math.log(e)/Math.LN2),x()},h.thresholds=function(e){return arguments.length?(d="function"==typeof e?e:Array.isArray(e)?b(g.call(e)):b(e),h):d},h.bandwidth=function(e){if(!arguments.length)return Math.sqrt(o*(o+1));if(!((e=+e)>=0))throw new Error("invalid bandwidth");return o=Math.round((Math.sqrt(4*e*e+1)-1)/2),x()},h};n.d(t,"b",function(){return D}),n.d(t,"a",function(){return F})},234:function(e,t,n){"use strict";var i=function(e){return e},r=function(e){if(null==e)return i;var t,n,r=e.scale[0],o=e.scale[1],a=e.translate[0],s=e.translate[1];return function(e,i){i||(t=n=0);var l=2,u=e.length,c=new Array(u);for(c[0]=(t+=e[0])*r+a,c[1]=(n+=e[1])*o+s;l<u;)c[l]=e[l],++l;return c}},o=function(e,t){for(var n,i=e.length,r=i-t;r<--i;)n=e[r],e[r++]=e[i],e[i]=n},a=function(e,t){return"GeometryCollection"===t.type?{type:"FeatureCollection",features:t.geometries.map(function(t){return s(e,t)})}:s(e,t)};function s(e,t){var n=t.id,i=t.bbox,r=null==t.properties?{}:t.properties,o=l(e,t);return null==n&&null==i?{type:"Feature",properties:r,geometry:o}:null==i?{type:"Feature",id:n,properties:r,geometry:o}:{type:"Feature",id:n,bbox:i,properties:r,geometry:o}}function l(e,t){var n=r(e.transform),i=e.arcs;function a(e,t){t.length&&t.pop();for(var r=i[e<0?~e:e],a=0,s=r.length;a<s;++a)t.push(n(r[a],a));e<0&&o(t,s)}function s(e){return n(e)}function l(e){for(var t=[],n=0,i=e.length;n<i;++n)a(e[n],t);return t.length<2&&t.push(t[0]),t}function u(e){for(var t=l(e);t.length<4;)t.push(t[0]);return t}function c(e){return e.map(u)}return function e(t){var n,i=t.type;switch(i){case"GeometryCollection":return{type:i,geometries:t.geometries.map(e)};case"Point":n=s(t.coordinates);break;case"MultiPoint":n=t.coordinates.map(s);break;case"LineString":n=l(t.arcs);break;case"MultiLineString":n=t.arcs.map(l);break;case"Polygon":n=c(t.arcs);break;case"MultiPolygon":n=t.arcs.map(c);break;default:return null}return{type:i,coordinates:n}}(t)}var u=function(e,t){var n={},i={},r={},o=[],a=-1;function s(e,t){for(var i in e){var r=e[i];delete t[r.start],delete r.start,delete r.end,r.forEach(function(e){n[e<0?~e:e]=1}),o.push(r)}}return t.forEach(function(n,i){var r,o=e.arcs[n<0?~n:n];o.length<3&&!o[1][0]&&!o[1][1]&&(r=t[++a],t[a]=n,t[i]=r)}),t.forEach(function(t){var n,o,a=function(t){var n,i=e.arcs[t<0?~t:t],r=i[0];e.transform?(n=[0,0],i.forEach(function(e){n[0]+=e[0],n[1]+=e[1]})):n=i[i.length-1];return t<0?[n,r]:[r,n]}(t),s=a[0],l=a[1];if(n=r[s])if(delete r[n.end],n.push(t),n.end=l,o=i[l]){delete i[o.start];var u=o===n?n:n.concat(o);i[u.start=n.start]=r[u.end=o.end]=u}else i[n.start]=r[n.end]=n;else if(n=i[l])if(delete i[n.start],n.unshift(t),n.start=s,o=r[s]){delete r[o.end];var c=o===n?n:o.concat(n);i[c.start=o.start]=r[c.end=n.end]=c}else i[n.start]=r[n.end]=n;else i[(n=[t]).start=s]=r[n.end=l]=n}),s(r,i),s(i,r),t.forEach(function(e){n[e<0?~e:e]||o.push([e])}),o},c=function(e){return l(e,function(e,t,n){var i,r,o;if(arguments.length>1)i=function(e,t,n){var i,r=[],o=[];function a(e){var t=e<0?~e:e;(o[t]||(o[t]=[])).push({i:e,g:i})}function s(e){e.forEach(a)}function l(e){e.forEach(s)}return function e(t){switch(i=t,t.type){case"GeometryCollection":t.geometries.forEach(e);break;case"LineString":s(t.arcs);break;case"MultiLineString":case"Polygon":l(t.arcs);break;case"MultiPolygon":t.arcs.forEach(l)}}(t),o.forEach(null==n?function(e){r.push(e[0].i)}:function(e){n(e[0].g,e[e.length-1].g)&&r.push(e[0].i)}),r}(0,t,n);else for(r=0,i=new Array(o=e.arcs.length);r<o;++r)i[r]=r;return{type:"MultiLineString",arcs:u(e,i)}}.apply(this,arguments))};n.d(t,"a",function(){return a}),n.d(t,"b",function(){return c})},242:function(e){e.exports={$ref:"#/definitions/TopLevelSpec",$schema:"http://json-schema.org/draft-06/schema#",definitions:{Aggregate:{$ref:"#/definitions/AggregateOp"},AggregateOp:{enum:["argmax","argmin","average","count","distinct","max","mean","median","min","missing","q1","q3","ci0","ci1","stderr","stdev","stdevp","sum","valid","values","variance","variancep"],type:"string"},AggregateTransform:{additionalProperties:!1,properties:{aggregate:{description:"Array of objects that define fields to aggregate.",items:{$ref:"#/definitions/AggregatedFieldDef"},type:"array"},groupby:{description:"The data fields to group by. If not specified, a single group containing all data objects will be used.",items:{type:"string"},type:"array"}},required:["aggregate"],type:"object"},AggregatedFieldDef:{additionalProperties:!1,properties:{as:{description:"The output field names to use for each aggregated field.",type:"string"},field:{description:'The data field for which to compute aggregate function. This is required for all aggregation operations except `"count"`.',type:"string"},op:{$ref:"#/definitions/AggregateOp",description:"The aggregation operation to apply to the fields (e.g., sum, average or count).\nSee the [full list of supported aggregation operations](https://vega.github.io/vega-lite/docs/aggregate.html#ops)\nfor more information."}},required:["op","as"],type:"object"},Align:{enum:["left","center","right"],type:"string"},AnyMark:{anyOf:[{$ref:"#/definitions/CompositeMark"},{$ref:"#/definitions/CompositeMarkDef"},{$ref:"#/definitions/Mark"},{$ref:"#/definitions/MarkDef"}]},AreaConfig:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align",description:'The horizontal alignment of the text. One of `"left"`, `"right"`, `"center"`.'},angle:{description:"The rotation angle of the text, in degrees.",maximum:360,minimum:0,type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'The vertical alignment of the text. One of `"top"`, `"middle"`, `"bottom"`.\n\n__Default value:__ `"middle"`'},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},cursor:{$ref:"#/definitions/Cursor",description:"The mouse cursor used over the mark. Any valid [CSS cursor type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used."},dir:{$ref:"#/definitions/Dir",description:'The direction of the text. One of `"ltr"` (left-to-right) or `"rtl"` (right-to-left). This property determines on which side is truncated in response to the limit parameter.\n\n__Default value:__ `"ltr"`'},dx:{description:"The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},dy:{description:"The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},ellipsis:{description:'The ellipsis string for text truncated in response to the limit parameter.\n\n__Default value:__ `"…"`',type:"string"},fill:{$ref:"#/definitions/Color",description:"Default Fill Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},filled:{description:"Whether the mark's color should be used as fill color instead of stroke color.\n\n__Default value:__ `false` for `point`, `line` and `rule`; otherwise, `true`.\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).",type:"boolean"},font:{description:'The typeface to set the text in (e.g., `"Helvetica Neue"`).',type:"string"},fontSize:{description:"The font size, in pixels.",type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:'The font style (e.g., `"italic"`).'},fontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},href:{description:"A URL to load upon mouse click. If defined, the mark acts as a hyperlink.",format:"uri",type:"string"},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method to use for line and area marks. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: alternate between horizontal and vertical segments, as in a step function.\n- `"step-before"`: alternate between vertical and horizontal segments, as in a step function.\n- `"step-after"`: alternate between horizontal and vertical segments, as in a step function.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},limit:{description:"The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},line:{anyOf:[{type:"boolean"},{$ref:"#/definitions/OverlayMarkDef"}],description:"A flag for overlaying line on top of area marks, or an object defining the properties of the overlayed lines.\n\n- If this value is an empty object (`{}`) or `true`, lines with default properties will be used.\n\n- If this value is `false`, no lines would be automatically added to area marks.\n\n__Default value:__ `false`."},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},orient:{$ref:"#/definitions/Orient",description:"The orientation of a non-stacked bar, tick, area, and line charts.\nThe value is either horizontal (default) or vertical.\n- For bar, rule and tick, this determines whether the size of the bar and tick\nshould be applied to x or y dimension.\n- For area, this property determines the orient property of the Vega output.\n- For line and trail marks, this property determines the sort order of the points in the line\nif `config.sortLineBy` is not specified.\nFor stacked charts, this is always determined by the orientation of the stack;\ntherefore explicitly specified value will be ignored."},point:{anyOf:[{type:"boolean"},{$ref:"#/definitions/OverlayMarkDef"},{enum:["transparent"],type:"string"}],description:'A flag for overlaying points on top of line or area marks, or an object defining the properties of the overlayed points.\n\n- If this property is `"transparent"`, transparent points will be used (for enhancing tooltips and selections).\n\n- If this property is an empty object (`{}`) or `true`, filled points with default properties will be used.\n\n- If this property is `false`, no points would be automatically added to line or area marks.\n\n__Default value:__ `false`.'},radius:{description:"Polar coordinate radial offset, in pixels, of the text label from the origin determined by the `x` and `y` properties.",minimum:0,type:"number"},shape:{description:'The default symbol shape to use. One of: `"circle"` (default), `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, or `"triangle-down"`, or a custom SVG path.\n\n__Default value:__ `"circle"`',type:"string"},size:{description:"Default size for marks.\n- For `point`/`circle`/`square`, this represents the pixel area of the marks. For example: in the case of circles, the radius is determined in part by the square root of the size value.\n- For `bar`, this represents the band size of the bar, in pixels.\n- For `text`, this represents the font size, in pixels.\n\n__Default value:__ `30` for point, circle, square marks; `rangeStep` - 1 for bar marks with discrete dimensions; `5` for bar marks with continuous dimensions; `11` for text marks.",minimum:0,type:"number"},stroke:{$ref:"#/definitions/Color",description:"Default Stroke Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},tension:{description:"Depending on the interpolation type, sets the tension parameter (for line and area marks).",maximum:1,minimum:0,type:"number"},text:{description:"Placeholder text if the `text` channel is not specified",type:"string"},theta:{description:'Polar coordinate angle, in radians, of the text label from the origin determined by the `x` and `y` properties. Values for `theta` follow the same convention of `arc` mark `startAngle` and `endAngle` properties: angles are measured in radians, with `0` indicating "north".',type:"number"},tooltip:{anyOf:[{type:"string"},{$ref:"#/definitions/TooltipContent"},{type:"null"}],description:'The tooltip text string to show upon mouse hover or an object defining which fields should the tooltip be derived from.\n\n- If `tooltip` is `{"content": "encoding"}`, then all fields from `encoding` will be used.\n- If `tooltip` is `{"content": "data"}`, then all fields that appear in the highlighted data point will be used.\n- If set to `null`, then no tooltip will be used.'}},type:"object"},AutoSizeParams:{additionalProperties:!1,properties:{contains:{description:'Determines how size calculation should be performed, one of `"content"` or `"padding"`. The default setting (`"content"`) interprets the width and height settings as the data rectangle (plotting) dimensions, to which padding is then added. In contrast, the `"padding"` setting includes the padding within the view size calculations, such that the width and height settings indicate the **total** intended size of the view.\n\n__Default value__: `"content"`',enum:["content","padding"],type:"string"},resize:{description:"A boolean flag indicating if autosize layout should be re-calculated on every view update.\n\n__Default value__: `false`",type:"boolean"},type:{$ref:"#/definitions/AutosizeType",description:'The sizing format type. One of `"pad"`, `"fit"` or `"none"`. See the [autosize type](https://vega.github.io/vega-lite/docs/size.html#autosize) documentation for descriptions of each.\n\n__Default value__: `"pad"`'}},type:"object"},AutosizeType:{enum:["pad","fit","none"],type:"string"},Axis:{additionalProperties:!1,properties:{bandPosition:{description:"An interpolation fraction indicating where, for `band` scales, axis ticks should be positioned. A value of `0` places ticks at the left edge of their bands. A value of `0.5` places ticks in the middle of their bands.\n\n  __Default value:__ `0.5`",type:"number"},domain:{description:"A boolean flag indicating if the domain (the axis baseline) should be included as part of the axis.\n\n__Default value:__ `true`",type:"boolean"},domainColor:{$ref:"#/definitions/Color",description:'Color of axis domain line.\n\n__Default value:__ `"gray"`.'},domainOpacity:{description:"Opacity of the axis domain line.",type:"number"},domainWidth:{description:"Stroke width of axis domain line\n\n__Default value:__ `1`",type:"number"},format:{description:"The formatting pattern for labels. This is D3's [number format pattern](https://github.com/d3/d3-format#locale_format) for quantitative fields and D3's [time format pattern](https://github.com/d3/d3-time-format#locale_format) for time field.\n\nSee the [format documentation](https://vega.github.io/vega-lite/docs/format.html) for more information.\n\n__Default value:__  derived from [numberFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for quantitative fields and from [timeFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for temporal fields.",type:"string"},grid:{description:"A boolean flag indicating if grid lines should be included as part of the axis\n\n__Default value:__ `true` for [continuous scales](https://vega.github.io/vega-lite/docs/scale.html#continuous) that are not binned; otherwise, `false`.",type:"boolean"},gridColor:{$ref:"#/definitions/Color",description:'Color of gridlines.\n\n__Default value:__ `"lightGray"`.'},gridDash:{description:"The offset (in pixels) into which to begin drawing with the grid dash array.",items:{type:"number"},type:"array"},gridOpacity:{description:"The stroke opacity of grid (value between [0,1])\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},gridWidth:{description:"The grid width, in pixels.\n\n__Default value:__ `1`",minimum:0,type:"number"},labelAlign:{$ref:"#/definitions/Align",description:"Horizontal text alignment of axis tick labels, overriding the default setting for the current axis orientation."},labelAngle:{description:"The rotation angle of the axis labels.\n\n__Default value:__ `-90` for nominal and ordinal fields; `0` otherwise.",maximum:360,minimum:-360,type:"number"},labelBaseline:{$ref:"#/definitions/TextBaseline",description:'Vertical text baseline of axis tick labels, overriding the default setting for the current axis orientation. Can be `"top"`, `"middle"`, `"bottom"`, or `"alphabetic"`.'},labelBound:{description:"Indicates if labels should be hidden if they exceed the axis range. If `false` (the default) no bounds overlap analysis is performed. If `true`, labels will be hidden if they exceed the axis range by more than 1 pixel. If this property is a number, it specifies the pixel tolerance: the maximum amount by which a label bounding box may exceed the axis range.\n\n__Default value:__ `false`.",type:["number","boolean"]},labelColor:{$ref:"#/definitions/Color",description:"The color of the tick label, can be in hex color code or regular color name."},labelFlush:{description:"Indicates if the first and last axis labels should be aligned flush with the scale range. Flush alignment for a horizontal axis will left-align the first label and right-align the last label. For vertical axes, bottom and top text baselines are applied instead. If this property is a number, it also indicates the number of pixels by which to offset the first and last labels; for example, a value of 2 will flush-align the first and last labels and also push them 2 pixels outward from the center of the axis. The additional adjustment can sometimes help the labels better visually group with corresponding axis ticks.\n\n__Default value:__ `true` for axis of a continuous x-scale. Otherwise, `false`.",type:["boolean","number"]},labelFlushOffset:{description:"Indicates the number of pixels by which to offset flush-adjusted labels. For example, a value of `2` will push flush-adjusted labels 2 pixels outward from the center of the axis. Offsets can help the labels better visually group with corresponding axis ticks.\n\n__Default value:__ `0`.",type:"number"},labelFont:{description:"The font of the tick label.",type:"string"},labelFontSize:{description:"The font size of the label, in pixels.",minimum:0,type:"number"},labelFontStyle:{$ref:"#/definitions/FontStyle",description:"Font style of the title."},labelFontWeight:{$ref:"#/definitions/FontWeight",description:"Font weight of axis tick labels."},labelLimit:{description:"Maximum allowed pixel width of axis tick labels.\n\n__Default value:__ `180`",type:"number"},labelOpacity:{description:"The opacity of the labels.",type:"number"},labelOverlap:{$ref:"#/definitions/LabelOverlap",description:'The strategy to use for resolving overlap of axis labels. If `false` (the default), no overlap reduction is attempted. If set to `true` or `"parity"`, a strategy of removing every other label is used (this works well for standard linear axes). If set to `"greedy"`, a linear scan of the labels is performed, removing any labels that overlaps with the last visible label (this often works better for log-scaled axes).\n\n__Default value:__ `true` for non-nominal fields with non-log scales; `"greedy"` for log scales; otherwise `false`.'},labelPadding:{description:"The padding, in pixels, between axis and text labels.\n\n__Default value:__ `2`",type:"number"},labelSeparation:{description:"The minimum separation that must be between label bounding boxes for them to be considered non-overlapping (default `0`). This property is ignored if *labelOverlap* resolution is not enabled.",type:"number"},labels:{description:"A boolean flag indicating if labels should be included as part of the axis.\n\n__Default value:__ `true`.",type:"boolean"},maxExtent:{description:"The maximum extent in pixels that axis ticks and labels should use. This determines a maximum offset value for axis titles.\n\n__Default value:__ `undefined`.",type:"number"},minExtent:{description:"The minimum extent in pixels that axis ticks and labels should use. This determines a minimum offset value for axis titles.\n\n__Default value:__ `30` for y-axis; `undefined` for x-axis.",type:"number"},offset:{description:"The offset, in pixels, by which to displace the axis from the edge of the enclosing group or data rectangle.\n\n__Default value:__ derived from the [axis config](https://vega.github.io/vega-lite/docs/config.html#facet-scale-config)'s `offset` (`0` by default)",type:"number"},orient:{$ref:"#/definitions/AxisOrient",description:'The orientation of the axis. One of `"top"`, `"bottom"`, `"left"` or `"right"`. The orientation can be used to further specialize the axis type (e.g., a y axis oriented for the right edge of the chart).\n\n__Default value:__ `"bottom"` for x-axes and `"left"` for y-axes.'},position:{description:"The anchor position of the axis in pixels. For x-axes with top or bottom orientation, this sets the axis group x coordinate. For y-axes with left or right orientation, this sets the axis group y coordinate.\n\n__Default value__: `0`",type:"number"},tickColor:{$ref:"#/definitions/Color",description:'The color of the axis\'s tick.\n\n__Default value:__ `"gray"`'},tickCount:{description:'A desired number of ticks, for axes visualizing quantitative scales. The resulting number may be different so that values are "nice" (multiples of 2, 5, 10) and lie within the underlying scale\'s range.',type:"number"},tickExtra:{description:'Boolean flag indicating if an extra axis tick should be added for the initial position of the axis. This flag is useful for styling axes for `band` scales such that ticks are placed on band boundaries rather in the middle of a band. Use in conjunction with `"bandPostion": 1` and an axis `"padding"` value of `0`.',type:"boolean"},tickMinStep:{description:"The minimum desired step between axis ticks, in terms of scale domain values. For example, a value of `1` indicates that ticks should not be less than 1 unit apart. If `tickMinStep` is specified, the `tickCount` value will be adjusted, if necessary, to enforce the minimum step value.\n\n__Default value__: `undefined`",type:"number"},tickOffset:{description:"Position offset in pixels to apply to ticks, labels, and gridlines.",type:"number"},tickOpacity:{description:"Opacity of the ticks.",type:"number"},tickRound:{description:"Boolean flag indicating if pixel position values should be rounded to the nearest integer.\n\n__Default value:__ `true`",type:"boolean"},tickSize:{description:"The size in pixels of axis ticks.\n\n__Default value:__ `5`",minimum:0,type:"number"},tickWidth:{description:"The width, in pixels, of ticks.\n\n__Default value:__ `1`",minimum:0,type:"number"},ticks:{description:"Boolean value that determines whether the axis should include ticks.\n\n__Default value:__ `true`",type:"boolean"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},titleAlign:{$ref:"#/definitions/Align",description:"Horizontal text alignment of axis titles."},titleAngle:{description:"Angle in degrees of axis titles.",type:"number"},titleBaseline:{$ref:"#/definitions/TextBaseline",description:"Vertical text baseline for axis titles."},titleColor:{$ref:"#/definitions/Color",description:"Color of the title, can be in hex color code or regular color name."},titleFont:{description:'Font of the title. (e.g., `"Helvetica Neue"`).',type:"string"},titleFontSize:{description:"Font size of the title.",minimum:0,type:"number"},titleFontStyle:{$ref:"#/definitions/FontStyle",description:"Font style of the title."},titleFontWeight:{$ref:"#/definitions/FontWeight",description:'Font weight of the title.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},titleLimit:{description:"Maximum allowed pixel width of axis titles.",minimum:0,type:"number"},titleOpacity:{description:"Opacity of the axis title.",type:"number"},titlePadding:{description:"The padding, in pixels, between title and axis.",type:"number"},titleX:{description:"X-coordinate of the axis title relative to the axis group.",type:"number"},titleY:{description:"Y-coordinate of the axis title relative to the axis group.",type:"number"},values:{anyOf:[{items:{type:"number"},type:"array"},{items:{type:"string"},type:"array"},{items:{type:"boolean"},type:"array"},{items:{$ref:"#/definitions/DateTime"},type:"array"}],description:"Explicitly set the visible axis tick values."},zindex:{description:'A non-positive integer indicating z-index of the axis.\nIf zindex is 0, axes should be drawn behind all chart elements.\nTo put them in front, use `"zindex = 1"`.\n\n__Default value:__ `1` (in front of the marks) for actual axis and `0` (behind the marks) for grids.',minimum:0,type:"number"}},type:"object"},AxisConfig:{additionalProperties:!1,properties:{bandPosition:{description:"An interpolation fraction indicating where, for `band` scales, axis ticks should be positioned. A value of `0` places ticks at the left edge of their bands. A value of `0.5` places ticks in the middle of their bands.\n\n  __Default value:__ `0.5`",type:"number"},domain:{description:"A boolean flag indicating if the domain (the axis baseline) should be included as part of the axis.\n\n__Default value:__ `true`",type:"boolean"},domainColor:{$ref:"#/definitions/Color",description:'Color of axis domain line.\n\n__Default value:__ `"gray"`.'},domainOpacity:{description:"Opacity of the axis domain line.",type:"number"},domainWidth:{description:"Stroke width of axis domain line\n\n__Default value:__ `1`",type:"number"},grid:{description:"A boolean flag indicating if grid lines should be included as part of the axis\n\n__Default value:__ `true` for [continuous scales](https://vega.github.io/vega-lite/docs/scale.html#continuous) that are not binned; otherwise, `false`.",type:"boolean"},gridColor:{$ref:"#/definitions/Color",description:'Color of gridlines.\n\n__Default value:__ `"lightGray"`.'},gridDash:{description:"The offset (in pixels) into which to begin drawing with the grid dash array.",items:{type:"number"},type:"array"},gridOpacity:{description:"The stroke opacity of grid (value between [0,1])\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},gridWidth:{description:"The grid width, in pixels.\n\n__Default value:__ `1`",minimum:0,type:"number"},labelAlign:{$ref:"#/definitions/Align",description:"Horizontal text alignment of axis tick labels, overriding the default setting for the current axis orientation."},labelAngle:{description:"The rotation angle of the axis labels.\n\n__Default value:__ `-90` for nominal and ordinal fields; `0` otherwise.",maximum:360,minimum:-360,type:"number"},labelBaseline:{$ref:"#/definitions/TextBaseline",description:'Vertical text baseline of axis tick labels, overriding the default setting for the current axis orientation. Can be `"top"`, `"middle"`, `"bottom"`, or `"alphabetic"`.'},labelBound:{description:"Indicates if labels should be hidden if they exceed the axis range. If `false` (the default) no bounds overlap analysis is performed. If `true`, labels will be hidden if they exceed the axis range by more than 1 pixel. If this property is a number, it specifies the pixel tolerance: the maximum amount by which a label bounding box may exceed the axis range.\n\n__Default value:__ `false`.",type:["number","boolean"]},labelColor:{$ref:"#/definitions/Color",description:"The color of the tick label, can be in hex color code or regular color name."},labelFlush:{description:"Indicates if the first and last axis labels should be aligned flush with the scale range. Flush alignment for a horizontal axis will left-align the first label and right-align the last label. For vertical axes, bottom and top text baselines are applied instead. If this property is a number, it also indicates the number of pixels by which to offset the first and last labels; for example, a value of 2 will flush-align the first and last labels and also push them 2 pixels outward from the center of the axis. The additional adjustment can sometimes help the labels better visually group with corresponding axis ticks.\n\n__Default value:__ `true` for axis of a continuous x-scale. Otherwise, `false`.",type:["boolean","number"]},labelFlushOffset:{description:"Indicates the number of pixels by which to offset flush-adjusted labels. For example, a value of `2` will push flush-adjusted labels 2 pixels outward from the center of the axis. Offsets can help the labels better visually group with corresponding axis ticks.\n\n__Default value:__ `0`.",type:"number"},labelFont:{description:"The font of the tick label.",type:"string"},labelFontSize:{description:"The font size of the label, in pixels.",minimum:0,type:"number"},labelFontStyle:{$ref:"#/definitions/FontStyle",description:"Font style of the title."},labelFontWeight:{$ref:"#/definitions/FontWeight",description:"Font weight of axis tick labels."},labelLimit:{description:"Maximum allowed pixel width of axis tick labels.\n\n__Default value:__ `180`",type:"number"},labelOpacity:{description:"The opacity of the labels.",type:"number"},labelOverlap:{$ref:"#/definitions/LabelOverlap",description:'The strategy to use for resolving overlap of axis labels. If `false` (the default), no overlap reduction is attempted. If set to `true` or `"parity"`, a strategy of removing every other label is used (this works well for standard linear axes). If set to `"greedy"`, a linear scan of the labels is performed, removing any labels that overlaps with the last visible label (this often works better for log-scaled axes).\n\n__Default value:__ `true` for non-nominal fields with non-log scales; `"greedy"` for log scales; otherwise `false`.'},labelPadding:{description:"The padding, in pixels, between axis and text labels.\n\n__Default value:__ `2`",type:"number"},labelSeparation:{description:"The minimum separation that must be between label bounding boxes for them to be considered non-overlapping (default `0`). This property is ignored if *labelOverlap* resolution is not enabled.",type:"number"},labels:{description:"A boolean flag indicating if labels should be included as part of the axis.\n\n__Default value:__ `true`.",type:"boolean"},maxExtent:{description:"The maximum extent in pixels that axis ticks and labels should use. This determines a maximum offset value for axis titles.\n\n__Default value:__ `undefined`.",type:"number"},minExtent:{description:"The minimum extent in pixels that axis ticks and labels should use. This determines a minimum offset value for axis titles.\n\n__Default value:__ `30` for y-axis; `undefined` for x-axis.",type:"number"},shortTimeLabels:{description:"Whether month names and weekday names should be abbreviated.\n\n__Default value:__  `false`",type:"boolean"},tickColor:{$ref:"#/definitions/Color",description:'The color of the axis\'s tick.\n\n__Default value:__ `"gray"`'},tickExtra:{description:'Boolean flag indicating if an extra axis tick should be added for the initial position of the axis. This flag is useful for styling axes for `band` scales such that ticks are placed on band boundaries rather in the middle of a band. Use in conjunction with `"bandPostion": 1` and an axis `"padding"` value of `0`.',type:"boolean"},tickOffset:{description:"Position offset in pixels to apply to ticks, labels, and gridlines.",type:"number"},tickOpacity:{description:"Opacity of the ticks.",type:"number"},tickRound:{description:"Boolean flag indicating if pixel position values should be rounded to the nearest integer.\n\n__Default value:__ `true`",type:"boolean"},tickSize:{description:"The size in pixels of axis ticks.\n\n__Default value:__ `5`",minimum:0,type:"number"},tickWidth:{description:"The width, in pixels, of ticks.\n\n__Default value:__ `1`",minimum:0,type:"number"},ticks:{description:"Boolean value that determines whether the axis should include ticks.\n\n__Default value:__ `true`",type:"boolean"},titleAlign:{$ref:"#/definitions/Align",description:"Horizontal text alignment of axis titles."},titleAngle:{description:"Angle in degrees of axis titles.",type:"number"},titleBaseline:{$ref:"#/definitions/TextBaseline",description:"Vertical text baseline for axis titles."},titleColor:{$ref:"#/definitions/Color",description:"Color of the title, can be in hex color code or regular color name."},titleFont:{description:'Font of the title. (e.g., `"Helvetica Neue"`).',type:"string"},titleFontSize:{description:"Font size of the title.",minimum:0,type:"number"},titleFontStyle:{$ref:"#/definitions/FontStyle",description:"Font style of the title."},titleFontWeight:{$ref:"#/definitions/FontWeight",description:'Font weight of the title.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},titleLimit:{description:"Maximum allowed pixel width of axis titles.",minimum:0,type:"number"},titleOpacity:{description:"Opacity of the axis title.",type:"number"},titlePadding:{description:"The padding, in pixels, between title and axis.",type:"number"},titleX:{description:"X-coordinate of the axis title relative to the axis group.",type:"number"},titleY:{description:"Y-coordinate of the axis title relative to the axis group.",type:"number"}},type:"object"},AxisOrient:{enum:["top","bottom","left","right"],type:"string"},AxisResolveMap:{additionalProperties:!1,properties:{x:{$ref:"#/definitions/ResolveMode"},y:{$ref:"#/definitions/ResolveMode"}},type:"object"},BarConfig:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align",description:'The horizontal alignment of the text. One of `"left"`, `"right"`, `"center"`.'},angle:{description:"The rotation angle of the text, in degrees.",maximum:360,minimum:0,type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'The vertical alignment of the text. One of `"top"`, `"middle"`, `"bottom"`.\n\n__Default value:__ `"middle"`'},binSpacing:{description:"Offset between bars for binned field.  Ideal value for this is either 0 (Preferred by statisticians) or 1 (Vega-Lite Default, D3 example style).\n\n__Default value:__ `1`",minimum:0,type:"number"},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},continuousBandSize:{description:"The default size of the bars on continuous scales.\n\n__Default value:__ `5`",minimum:0,type:"number"},cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},cursor:{$ref:"#/definitions/Cursor",description:"The mouse cursor used over the mark. Any valid [CSS cursor type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used."},dir:{$ref:"#/definitions/Dir",description:'The direction of the text. One of `"ltr"` (left-to-right) or `"rtl"` (right-to-left). This property determines on which side is truncated in response to the limit parameter.\n\n__Default value:__ `"ltr"`'},discreteBandSize:{description:"The default size of the bars with discrete dimensions.  If unspecified, the default size is  `bandSize-1`,\nwhich provides 1 pixel offset between bars.",minimum:0,type:"number"},dx:{description:"The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},dy:{description:"The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},ellipsis:{description:'The ellipsis string for text truncated in response to the limit parameter.\n\n__Default value:__ `"…"`',type:"string"},fill:{$ref:"#/definitions/Color",description:"Default Fill Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},filled:{description:"Whether the mark's color should be used as fill color instead of stroke color.\n\n__Default value:__ `false` for `point`, `line` and `rule`; otherwise, `true`.\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).",type:"boolean"},font:{description:'The typeface to set the text in (e.g., `"Helvetica Neue"`).',type:"string"},fontSize:{description:"The font size, in pixels.",type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:'The font style (e.g., `"italic"`).'},fontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},href:{description:"A URL to load upon mouse click. If defined, the mark acts as a hyperlink.",format:"uri",type:"string"},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method to use for line and area marks. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: alternate between horizontal and vertical segments, as in a step function.\n- `"step-before"`: alternate between vertical and horizontal segments, as in a step function.\n- `"step-after"`: alternate between horizontal and vertical segments, as in a step function.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},limit:{description:"The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},orient:{$ref:"#/definitions/Orient",description:"The orientation of a non-stacked bar, tick, area, and line charts.\nThe value is either horizontal (default) or vertical.\n- For bar, rule and tick, this determines whether the size of the bar and tick\nshould be applied to x or y dimension.\n- For area, this property determines the orient property of the Vega output.\n- For line and trail marks, this property determines the sort order of the points in the line\nif `config.sortLineBy` is not specified.\nFor stacked charts, this is always determined by the orientation of the stack;\ntherefore explicitly specified value will be ignored."},radius:{description:"Polar coordinate radial offset, in pixels, of the text label from the origin determined by the `x` and `y` properties.",minimum:0,type:"number"},shape:{description:'The default symbol shape to use. One of: `"circle"` (default), `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, or `"triangle-down"`, or a custom SVG path.\n\n__Default value:__ `"circle"`',type:"string"},size:{description:"Default size for marks.\n- For `point`/`circle`/`square`, this represents the pixel area of the marks. For example: in the case of circles, the radius is determined in part by the square root of the size value.\n- For `bar`, this represents the band size of the bar, in pixels.\n- For `text`, this represents the font size, in pixels.\n\n__Default value:__ `30` for point, circle, square marks; `rangeStep` - 1 for bar marks with discrete dimensions; `5` for bar marks with continuous dimensions; `11` for text marks.",minimum:0,type:"number"},stroke:{$ref:"#/definitions/Color",description:"Default Stroke Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},tension:{description:"Depending on the interpolation type, sets the tension parameter (for line and area marks).",maximum:1,minimum:0,type:"number"},text:{description:"Placeholder text if the `text` channel is not specified",type:"string"},theta:{description:'Polar coordinate angle, in radians, of the text label from the origin determined by the `x` and `y` properties. Values for `theta` follow the same convention of `arc` mark `startAngle` and `endAngle` properties: angles are measured in radians, with `0` indicating "north".',type:"number"},tooltip:{anyOf:[{type:"string"},{$ref:"#/definitions/TooltipContent"},{type:"null"}],description:'The tooltip text string to show upon mouse hover or an object defining which fields should the tooltip be derived from.\n\n- If `tooltip` is `{"content": "encoding"}`, then all fields from `encoding` will be used.\n- If `tooltip` is `{"content": "data"}`, then all fields that appear in the highlighted data point will be used.\n- If set to `null`, then no tooltip will be used.'}},type:"object"},BaseBinding:{additionalProperties:!1,properties:{debounce:{type:"number"},element:{$ref:"#/definitions/Element"},name:{type:"string"},type:{type:"string"}},type:"object"},BaseMarkConfig:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align",description:'The horizontal alignment of the text. One of `"left"`, `"right"`, `"center"`.'},angle:{description:"The rotation angle of the text, in degrees.",maximum:360,minimum:0,type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'The vertical alignment of the text. One of `"top"`, `"middle"`, `"bottom"`.\n\n__Default value:__ `"middle"`'},cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},cursor:{$ref:"#/definitions/Cursor",description:"The mouse cursor used over the mark. Any valid [CSS cursor type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used."},dir:{$ref:"#/definitions/Dir",description:'The direction of the text. One of `"ltr"` (left-to-right) or `"rtl"` (right-to-left). This property determines on which side is truncated in response to the limit parameter.\n\n__Default value:__ `"ltr"`'},dx:{description:"The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},dy:{description:"The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},ellipsis:{description:'The ellipsis string for text truncated in response to the limit parameter.\n\n__Default value:__ `"…"`',type:"string"},fill:{$ref:"#/definitions/Color",description:"Default Fill Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},font:{description:'The typeface to set the text in (e.g., `"Helvetica Neue"`).',type:"string"},fontSize:{description:"The font size, in pixels.",type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:'The font style (e.g., `"italic"`).'},fontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},href:{description:"A URL to load upon mouse click. If defined, the mark acts as a hyperlink.",format:"uri",type:"string"},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method to use for line and area marks. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: alternate between horizontal and vertical segments, as in a step function.\n- `"step-before"`: alternate between vertical and horizontal segments, as in a step function.\n- `"step-after"`: alternate between horizontal and vertical segments, as in a step function.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},limit:{description:"The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},orient:{$ref:"#/definitions/Orient",description:"The orientation of a non-stacked bar, tick, area, and line charts.\nThe value is either horizontal (default) or vertical.\n- For bar, rule and tick, this determines whether the size of the bar and tick\nshould be applied to x or y dimension.\n- For area, this property determines the orient property of the Vega output.\n- For line and trail marks, this property determines the sort order of the points in the line\nif `config.sortLineBy` is not specified.\nFor stacked charts, this is always determined by the orientation of the stack;\ntherefore explicitly specified value will be ignored."},radius:{description:"Polar coordinate radial offset, in pixels, of the text label from the origin determined by the `x` and `y` properties.",minimum:0,type:"number"},shape:{description:'The default symbol shape to use. One of: `"circle"` (default), `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, or `"triangle-down"`, or a custom SVG path.\n\n__Default value:__ `"circle"`',type:"string"},size:{description:"The pixel area each the point/circle/square.\nFor example: in the case of circles, the radius is determined in part by the square root of the size value.\n\n__Default value:__ `30`",minimum:0,type:"number"},stroke:{$ref:"#/definitions/Color",description:"Default Stroke Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},tension:{description:"Depending on the interpolation type, sets the tension parameter (for line and area marks).",maximum:1,minimum:0,type:"number"},text:{description:"Placeholder text if the `text` channel is not specified",type:"string"},theta:{description:'Polar coordinate angle, in radians, of the text label from the origin determined by the `x` and `y` properties. Values for `theta` follow the same convention of `arc` mark `startAngle` and `endAngle` properties: angles are measured in radians, with `0` indicating "north".',type:"number"},tooltip:{description:"The tooltip text to show upon mouse hover."}},type:"object"},BaseTitleConfig:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align"},anchor:{$ref:"#/definitions/TitleAnchor",description:'The anchor position for placing the title. One of `"start"`, `"middle"`, or `"end"`. For example, with an orientation of top these anchor positions map to a left-, center-, or right-aligned title.'},angle:{description:"Angle in degrees of title text.",type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'Vertical text baseline for title text. One of `"top"`, `"middle"`, `"bottom"`, or `"alphabetic"`.'},color:{$ref:"#/definitions/Color",description:"Text color for title text."},font:{description:"Font name for title text.",type:"string"},fontSize:{description:"Font size in pixels for title text.\n\n__Default value:__ `10`.",minimum:0,type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:"Font style for title text."},fontWeight:{$ref:"#/definitions/FontWeight",description:'Font weight for title text.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},frame:{$ref:"#/definitions/TitleFrame",description:'The reference frame for the anchor position, one of `"bounds"` (to anchor relative to the full bounding box) or `"group"` (to anchor relative to the group width or height).'},limit:{description:"The maximum allowed length in pixels of legend labels.",minimum:0,type:"number"},offset:{description:"The orthogonal offset in pixels by which to displace the title from its position along the edge of the chart.",type:"number"},orient:{$ref:"#/definitions/TitleOrient",description:'Default title orientation (`"top"`, `"bottom"`, `"left"`, or `"right"`)'}},type:"object"},Baseline:{enum:["top","middle","bottom"],type:"string"},BinParams:{additionalProperties:!1,description:"Binning properties or boolean flag for determining whether to bin data or not.",properties:{anchor:{description:"A value in the binned domain at which to anchor the bins, shifting the bin boundaries if necessary to ensure that a boundary aligns with the anchor value.\n\n__Default Value:__ the minimum bin extent value",type:"number"},base:{description:"The number base to use for automatic bin determination (default is base 10).\n\n__Default value:__ `10`",type:"number"},binned:{description:"When set to true, Vega-Lite treats the input data as already binned.",type:"boolean"},divide:{description:"Scale factors indicating allowable subdivisions. The default value is [5, 2], which indicates that for base 10 numbers (the default base), the method may consider dividing bin sizes by 5 and/or 2. For example, for an initial step size of 10, the method can check if bin sizes of 2 (= 10/5), 5 (= 10/2), or 1 (= 10/(5*2)) might also satisfy the given constraints.\n\n__Default value:__ `[5, 2]`",items:{type:"number"},minItems:1,type:"array"},extent:{description:"A two-element (`[min, max]`) array indicating the range of desired bin values.",items:{type:"number"},maxItems:2,minItems:2,type:"array"},maxbins:{description:"Maximum number of bins.\n\n__Default value:__ `6` for `row`, `column` and `shape` channels; `10` for other channels",minimum:2,type:"number"},minstep:{description:"A minimum allowable step size (particularly useful for integer values).",type:"number"},nice:{description:"If true (the default), attempts to make the bin boundaries use human-friendly boundaries, such as multiples of ten.",type:"boolean"},step:{description:"An exact step size to use between bins.\n\n__Note:__ If provided, options such as maxbins will be ignored.",type:"number"},steps:{description:"An array of allowable step sizes to choose from.",items:{type:"number"},minItems:1,type:"array"}},type:"object"},BinTransform:{additionalProperties:!1,properties:{as:{anyOf:[{type:"string"},{items:{type:"string"},type:"array"}],description:"The output fields at which to write the start and end bin values."},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"}],description:"An object indicating bin properties, or simply `true` for using default bin parameters."},field:{description:"The data field to bin.",type:"string"}},required:["bin","field","as"],type:"object"},BindCheckbox:{additionalProperties:!1,properties:{debounce:{type:"number"},element:{$ref:"#/definitions/Element"},input:{enum:["checkbox"],type:"string"},name:{type:"string"},type:{type:"string"}},required:["input"],type:"object"},BindRadioSelect:{additionalProperties:!1,properties:{debounce:{type:"number"},element:{$ref:"#/definitions/Element"},input:{enum:["radio","select"],type:"string"},name:{type:"string"},options:{items:{},type:"array"},type:{type:"string"}},required:["input","options"],type:"object"},BindRange:{additionalProperties:!1,properties:{debounce:{type:"number"},element:{$ref:"#/definitions/Element"},input:{enum:["range"],type:"string"},max:{type:"number"},min:{type:"number"},name:{type:"string"},step:{type:"number"},type:{type:"string"}},required:["input"],type:"object"},Binding:{anyOf:[{$ref:"#/definitions/BaseBinding"},{$ref:"#/definitions/BindCheckbox"},{$ref:"#/definitions/BindRadioSelect"},{$ref:"#/definitions/BindRange"}]},BoxPlot:{enum:["boxplot"],type:"string"},BoxPlotConfig:{additionalProperties:!1,properties:{box:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},extent:{anyOf:[{enum:["min-max"],type:"string"},{type:"number"}],description:'The extent of the whiskers. Available options include:\n- `"min-max"`: min and max are the lower and upper whiskers respectively.\n- A number representing multiple of the interquartile range.  This number will be multiplied by the IQR to determine whisker boundary, which spans from the smallest data to the largest data within the range _[Q1 - k * IQR, Q3 + k * IQR]_ where _Q1_ and _Q3_ are the first and third quartiles while _IQR_ is the interquartile range (_Q3-Q1_).\n\n__Default value:__ `1.5`.'},median:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},outliers:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},rule:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},size:{description:"Size of the box and median tick of a box plot",type:"number"},ticks:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]}},type:"object"},BoxPlotDef:{additionalProperties:!1,properties:{box:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},clip:{description:"Whether a composite mark be clipped to the enclosing group’s width and height.",type:"boolean"},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},extent:{anyOf:[{enum:["min-max"],type:"string"},{type:"number"}],description:'The extent of the whiskers. Available options include:\n- `"min-max"`: min and max are the lower and upper whiskers respectively.\n- A number representing multiple of the interquartile range.  This number will be multiplied by the IQR to determine whisker boundary, which spans from the smallest data to the largest data within the range _[Q1 - k * IQR, Q3 + k * IQR]_ where _Q1_ and _Q3_ are the first and third quartiles while _IQR_ is the interquartile range (_Q3-Q1_).\n\n__Default value:__ `1.5`.'},median:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},opacity:{description:"The opacity (value between [0,1]) of the mark.",type:"number"},orient:{$ref:"#/definitions/Orient",description:'Orientation of the box plot.  This is normally automatically determined based on types of fields on x and y channels. However, an explicit `orient` be specified when the orientation is ambiguous.\n\n__Default value:__ `"vertical"`.'},outliers:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},rule:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},size:{description:"Size of the box and median tick of a box plot",type:"number"},ticks:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},type:{$ref:"#/definitions/BoxPlot",description:'The mark type. This could a primitive mark type\n(one of `"bar"`, `"circle"`, `"square"`, `"tick"`, `"line"`,\n`"area"`, `"point"`, `"geoshape"`, `"rule"`, and `"text"`)\nor a composite mark type (`"boxplot"`, `"errorband"`, `"errorbar"`).'}},required:["type"],type:"object"},BrushConfig:{additionalProperties:!1,properties:{fill:{description:"The fill color of the interval mark.\n\n__Default value:__ `#333333`",type:"string"},fillOpacity:{description:"The fill opacity of the interval mark (a value between 0 and 1).\n\n__Default value:__ `0.125`",type:"number"},stroke:{description:"The stroke color of the interval mark.\n\n__Default value:__ `#ffffff`",type:"string"},strokeDash:{description:"An array of alternating stroke and space lengths,\nfor creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) with which to begin drawing the stroke dash array.",type:"number"},strokeOpacity:{description:"The stroke opacity of the interval mark (a value between 0 and 1).",type:"number"},strokeWidth:{description:"The stroke width of the interval mark.",type:"number"}},type:"object"},CalculateTransform:{additionalProperties:!1,properties:{as:{description:"The field for storing the computed formula value.",type:"string"},calculate:{description:"A [expression](https://vega.github.io/vega-lite/docs/types.html#expression) string. Use the variable `datum` to refer to the current data object.",type:"string"}},required:["calculate","as"],type:"object"},Color:{type:"string"},ColorFieldDefWithCondition:{$ref:"#/definitions/FieldDefWithCondition<MarkPropFieldDef,(string|null)>"},ColorValueDefWithCondition:{$ref:"#/definitions/ValueDefWithCondition<MarkPropFieldDef,(string|null)>"},Encoding:{additionalProperties:!1,properties:{color:{anyOf:[{$ref:"#/definitions/ColorFieldDefWithCondition"},{$ref:"#/definitions/ColorValueDefWithCondition"}],description:'Color of the marks – either fill or stroke color based on  the `filled` property of mark definition.\nBy default, `color` represents fill color for `"area"`, `"bar"`, `"tick"`,\n`"text"`, `"trail"`, `"circle"`, and `"square"` / stroke color for `"line"` and `"point"`.\n\n__Default value:__ If undefined, the default color depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)\'s `color` property.\n\n_Note:_\n1) For fine-grained control over both fill and stroke colors of the marks, please use the `fill` and `stroke` channels.  If either `fill` or `stroke` channel is specified, `color` channel will be ignored.\n2) See the scale documentation for more information about customizing [color scheme](https://vega.github.io/vega-lite/docs/scale.html#scheme).'},detail:{anyOf:[{$ref:"#/definitions/FieldDef"},{items:{$ref:"#/definitions/FieldDef"},type:"array"}],description:"Additional levels of detail for grouping data in aggregate views and\nin line, trail, and area marks without mapping data to a specific visual channel."},fill:{anyOf:[{$ref:"#/definitions/ColorFieldDefWithCondition"},{$ref:"#/definitions/ColorValueDefWithCondition"}],description:"Fill color of the marks.\n__Default value:__ If undefined, the default color depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `color` property.\n\n_Note:_ When using `fill` channel, `color ` channel will be ignored. To customize both fill and stroke, please use `fill` and `stroke` channels (not `fill` and `color`)."},fillOpacity:{anyOf:[{$ref:"#/definitions/NumericFieldDefWithCondition"},{$ref:"#/definitions/NumericValueDefWithCondition"}],description:"Fill opacity of the marks.\n\n__Default value:__ If undefined, the default opacity depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `fillOpacity` property."},href:{anyOf:[{$ref:"#/definitions/StringFieldDefWithCondition"},{$ref:"#/definitions/StringValueDefWithCondition"}],description:"A URL to load upon mouse click."},key:{$ref:"#/definitions/FieldDef",description:"A data field to use as a unique key for data binding. When a visualization’s data is updated, the key value will be used to match data elements to existing mark instances. Use a key channel to enable object constancy for transitions over dynamic data."},latitude:{$ref:"#/definitions/LatLongFieldDef",description:"Latitude position of geographically projected marks."},latitude2:{$ref:"#/definitions/SecondaryFieldDef",description:'Latitude-2 position for geographically projected ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.'},longitude:{$ref:"#/definitions/LatLongFieldDef",description:"Longitude position of geographically projected marks."},longitude2:{$ref:"#/definitions/SecondaryFieldDef",description:'Longitude-2 position for geographically projected ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.'},opacity:{anyOf:[{$ref:"#/definitions/NumericFieldDefWithCondition"},{$ref:"#/definitions/NumericValueDefWithCondition"}],description:"Opacity of the marks.\n\n__Default value:__ If undefined, the default opacity depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `opacity` property."},order:{anyOf:[{$ref:"#/definitions/OrderFieldDef"},{items:{$ref:"#/definitions/OrderFieldDef"},type:"array"},{$ref:"#/definitions/NumberValueDef"}],description:'Order of the marks.\n- For stacked marks, this `order` channel encodes [stack order](https://vega.github.io/vega-lite/docs/stack.html#order).\n- For line and trail marks, this `order` channel encodes order of data points in the lines. This can be useful for creating [a connected scatterplot](https://vega.github.io/vega-lite/examples/connected_scatterplot.html).  Setting `order` to `{"value": null}` makes the line marks use the original order in the data sources.\n- Otherwise, this `order` channel encodes layer order of the marks.\n\n__Note__: In aggregate plots, `order` field should be `aggregate`d to avoid creating additional aggregation grouping.'},shape:{anyOf:[{$ref:"#/definitions/ShapeFieldDefWithCondition"},{$ref:"#/definitions/ShapeValueDefWithCondition"}],description:'For `point` marks the supported values are\n`"circle"` (default), `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`,\nor `"triangle-down"`, or else a custom SVG path string.\nFor `geoshape` marks it should be a field definition of the geojson data\n\n__Default value:__ If undefined, the default shape depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#point-config)\'s `shape` property.'},size:{anyOf:[{$ref:"#/definitions/NumericFieldDefWithCondition"},{$ref:"#/definitions/NumericValueDefWithCondition"}],description:'Size of the mark.\n- For `"point"`, `"square"` and `"circle"`, – the symbol size, or pixel area of the mark.\n- For `"bar"` and `"tick"` – the bar and tick\'s size.\n- For `"text"` – the text\'s font size.\n- Size is unsupported for `"line"`, `"area"`, and `"rect"`. (Use `"trail"` instead of line with varying size)'},stroke:{anyOf:[{$ref:"#/definitions/ColorFieldDefWithCondition"},{$ref:"#/definitions/ColorValueDefWithCondition"}],description:"Stroke color of the marks.\n__Default value:__ If undefined, the default color depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `color` property.\n\n_Note:_ When using `stroke` channel, `color ` channel will be ignored. To customize both stroke and fill, please use `stroke` and `fill` channels (not `stroke` and `color`)."},strokeOpacity:{anyOf:[{$ref:"#/definitions/NumericFieldDefWithCondition"},{$ref:"#/definitions/NumericValueDefWithCondition"}],description:"Stroke opacity of the marks.\n\n__Default value:__ If undefined, the default opacity depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `strokeOpacity` property."},strokeWidth:{anyOf:[{$ref:"#/definitions/NumericFieldDefWithCondition"},{$ref:"#/definitions/NumericValueDefWithCondition"}],description:"Stroke width of the marks.\n\n__Default value:__ If undefined, the default stroke width depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `strokeWidth` property."},text:{anyOf:[{$ref:"#/definitions/TextFieldDefWithCondition"},{$ref:"#/definitions/TextValueDefWithCondition"}],description:"Text of the `text` mark."},tooltip:{anyOf:[{$ref:"#/definitions/TextFieldDefWithCondition"},{$ref:"#/definitions/TextValueDefWithCondition"},{items:{$ref:"#/definitions/TextFieldDef"},type:"array"},{type:"null"}],description:"The tooltip text to show upon mouse hover."},x:{anyOf:[{$ref:"#/definitions/PositionFieldDef"},{$ref:"#/definitions/XValueDef"}],description:'X coordinates of the marks, or width of horizontal `"bar"` and `"area"`.\n\nThe `value` of this channel can be a number or a string `"width"`.'},x2:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/XValueDef"}],description:'X2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.\n\nThe `value` of this channel can be a number or a string `"width"`.'},xError:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/NumberValueDef"}],description:'Error value of x coordinates for error specified `"errorbar"` and `"errorband"`.'},xError2:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/NumberValueDef"}],description:'Secondary error value of x coordinates for error specified `"errorbar"` and `"errorband"`.'},y:{anyOf:[{$ref:"#/definitions/PositionFieldDef"},{$ref:"#/definitions/YValueDef"}],description:'Y coordinates of the marks, or height of vertical `"bar"` and `"area"`.\n\nThe `value` of this channel can be a number or a string `"height"`.'},y2:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/YValueDef"}],description:'Y2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.\n\nThe `value` of this channel can be a number or a string `"height"`.'},yError:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/NumberValueDef"}],description:'Error value of y coordinates for error specified `"errorbar"` and `"errorband"`.'},yError2:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/NumberValueDef"}],description:'Secondary error value of y coordinates for error specified `"errorbar"` and `"errorband"`.'}},type:"object"},CompositeMark:{anyOf:[{$ref:"#/definitions/BoxPlot"},{$ref:"#/definitions/ErrorBar"},{$ref:"#/definitions/ErrorBand"}]},CompositeMarkDef:{anyOf:[{$ref:"#/definitions/BoxPlotDef"},{$ref:"#/definitions/ErrorBarDef"},{$ref:"#/definitions/ErrorBandDef"}]},'ConditionOnlyDef<MarkPropFieldDef<"nominal">>':{additionalProperties:!1,description:"A Condition<ValueDef | FieldDef> only definition.\n{\n   condition: {field: ...} | {value: ...}\n}",properties:{condition:{anyOf:[{$ref:'#/definitions/ConditionalMarkPropFieldDef<"nominal">'},{$ref:"#/definitions/ConditionalValueDef"},{items:{$ref:"#/definitions/ConditionalValueDef"},type:"array"}],description:"A field definition or one or more value definition(s) with a selection predicate."}},required:["condition"],type:"object"},"ConditionOnlyDef<MarkPropFieldDef>":{additionalProperties:!1,description:"A Condition<ValueDef | FieldDef> only definition.\n{\n   condition: {field: ...} | {value: ...}\n}",properties:{condition:{anyOf:[{$ref:"#/definitions/ConditionalMarkPropFieldDef"},{$ref:"#/definitions/ConditionalValueDef"},{items:{$ref:"#/definitions/ConditionalValueDef"},type:"array"}],description:"A field definition or one or more value definition(s) with a selection predicate."}},required:["condition"],type:"object"},"ConditionOnlyDef<MarkPropFieldDef<TypeForShape>>":{additionalProperties:!1,description:"A Condition<ValueDef | FieldDef> only definition.\n{\n   condition: {field: ...} | {value: ...}\n}",properties:{condition:{anyOf:[{$ref:"#/definitions/ConditionalMarkPropFieldDef<TypeForShape>"},{$ref:"#/definitions/ConditionalValueDef"},{items:{$ref:"#/definitions/ConditionalValueDef"},type:"array"}],description:"A field definition or one or more value definition(s) with a selection predicate."}},required:["condition"],type:"object"},"ConditionOnlyDef<TextFieldDef>":{additionalProperties:!1,description:"A Condition<ValueDef | FieldDef> only definition.\n{\n   condition: {field: ...} | {value: ...}\n}",properties:{condition:{anyOf:[{$ref:"#/definitions/ConditionalTextFieldDef"},{$ref:"#/definitions/ConditionalValueDef"},{items:{$ref:"#/definitions/ConditionalValueDef"},type:"array"}],description:"A field definition or one or more value definition(s) with a selection predicate."}},required:["condition"],type:"object"},'ConditionalMarkPropFieldDef<"nominal">':{anyOf:[{$ref:'#/definitions/ConditionalPredicate<MarkPropFieldDef<"nominal">>'},{$ref:'#/definitions/ConditionalSelection<MarkPropFieldDef<"nominal">>'}]},ConditionalMarkPropFieldDef:{anyOf:[{$ref:"#/definitions/ConditionalPredicate<MarkPropFieldDef>"},{$ref:"#/definitions/ConditionalSelection<MarkPropFieldDef>"}]},"ConditionalMarkPropFieldDef<TypeForShape>":{anyOf:[{$ref:"#/definitions/ConditionalPredicate<MarkPropFieldDef<TypeForShape>>"},{$ref:"#/definitions/ConditionalSelection<MarkPropFieldDef<TypeForShape>>"}]},ConditionalTextFieldDef:{anyOf:[{$ref:"#/definitions/ConditionalPredicate<TextFieldDef>"},{$ref:"#/definitions/ConditionalSelection<TextFieldDef>"}]},ConditionalValueDef:{anyOf:[{$ref:"#/definitions/ConditionalPredicate<ValueDef>"},{$ref:"#/definitions/ConditionalSelection<ValueDef>"}]},ConditionalColorValueDef:{anyOf:[{$ref:"#/definitions/ConditionalPredicate<ColorValueDef>"},{$ref:"#/definitions/ConditionalSelection<ColorValueDef>"}]},ConditionalTextValueDef:{anyOf:[{$ref:"#/definitions/ConditionalPredicate<TextValueDef>"},{$ref:"#/definitions/ConditionalSelection<TextValueDef>"}]},ConditionalNumberValueDef:{anyOf:[{$ref:"#/definitions/ConditionalPredicate<NumberValueDef>"},{$ref:"#/definitions/ConditionalSelection<NumberValueDef>"}]},ConditionalStringValueDef:{anyOf:[{$ref:"#/definitions/ConditionalPredicate<StringValueDef>"},{$ref:"#/definitions/ConditionalSelection<StringValueDef>"}]},'ConditionalPredicate<MarkPropFieldDef<"nominal">>':{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},legend:{anyOf:[{$ref:"#/definitions/Legend"},{type:"null"}],description:"An object defining properties of the legend.\nIf `null`, the legend for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [legend properties](https://vega.github.io/vega-lite/docs/legend.html) are applied."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},test:{$ref:"#/definitions/LogicalOperand<Predicate>"},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n__Note:__ Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`)',enum:["nominal"],type:"string"}},required:["test","type"],type:"object"},"ConditionalPredicate<MarkPropFieldDef>":{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},legend:{anyOf:[{$ref:"#/definitions/Legend"},{type:"null"}],description:"An object defining properties of the legend.\nIf `null`, the legend for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [legend properties](https://vega.github.io/vega-lite/docs/legend.html) are applied."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},test:{$ref:"#/definitions/LogicalOperand<Predicate>"},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n__Note:__ Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`)'}},required:["test","type"],type:"object"},"ConditionalPredicate<MarkPropFieldDef<TypeForShape>>":{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},legend:{anyOf:[{$ref:"#/definitions/Legend"},{type:"null"}],description:"An object defining properties of the legend.\nIf `null`, the legend for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [legend properties](https://vega.github.io/vega-lite/docs/legend.html) are applied."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},test:{$ref:"#/definitions/LogicalOperand<Predicate>"},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/TypeForShape",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n__Note:__ Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`)'}},required:["test","type"],type:"object"},"ConditionalPredicate<TextFieldDef>":{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},format:{description:"The [formatting pattern](https://vega.github.io/vega-lite/docs/format.html) for a text field. If not defined, this will be determined automatically.",type:"string"},test:{$ref:"#/definitions/LogicalOperand<Predicate>"},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n__Note:__ Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`)'}},required:["test","type"],type:"object"},"ConditionalPredicate<ValueDef>":{additionalProperties:!1,properties:{test:{$ref:"#/definitions/LogicalOperand<Predicate>"},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:["number","string","boolean","null"]}},required:["test","value"],type:"object"},"ConditionalPredicate<ColorValueDef>":{additionalProperties:!1,properties:{test:{$ref:"#/definitions/LogicalOperand<Predicate>"},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:["string","null"]}},required:["test","value"],type:"object"},"ConditionalPredicate<TextValueDef>":{additionalProperties:!1,properties:{test:{$ref:"#/definitions/LogicalOperand<Predicate>"},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:["string","number","boolean"]}},required:["test","value"],type:"object"},"ConditionalPredicate<NumberValueDef>":{additionalProperties:!1,properties:{test:{$ref:"#/definitions/LogicalOperand<Predicate>"},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:"number"}},required:["test","value"],type:"object"},"ConditionalPredicate<StringValueDef>":{additionalProperties:!1,properties:{test:{$ref:"#/definitions/LogicalOperand<Predicate>"},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:"string"}},required:["test","value"],type:"object"},'ConditionalSelection<MarkPropFieldDef<"nominal">>':{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},legend:{anyOf:[{$ref:"#/definitions/Legend"},{type:"null"}],description:"An object defining properties of the legend.\nIf `null`, the legend for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [legend properties](https://vega.github.io/vega-lite/docs/legend.html) are applied."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},selection:{$ref:"#/definitions/SelectionOperand",description:"A [selection name](https://vega.github.io/vega-lite/docs/selection.html), or a series of [composed selections](https://vega.github.io/vega-lite/docs/selection.html#compose)."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n__Note:__ Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`)',enum:["nominal"],type:"string"}},required:["selection","type"],type:"object"},"ConditionalSelection<MarkPropFieldDef>":{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},legend:{anyOf:[{$ref:"#/definitions/Legend"},{type:"null"}],description:"An object defining properties of the legend.\nIf `null`, the legend for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [legend properties](https://vega.github.io/vega-lite/docs/legend.html) are applied."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},selection:{$ref:"#/definitions/SelectionOperand",description:"A [selection name](https://vega.github.io/vega-lite/docs/selection.html), or a series of [composed selections](https://vega.github.io/vega-lite/docs/selection.html#compose)."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n__Note:__ Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`)'}},required:["selection","type"],type:"object"},"ConditionalSelection<MarkPropFieldDef<TypeForShape>>":{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},legend:{anyOf:[{$ref:"#/definitions/Legend"},{type:"null"}],description:"An object defining properties of the legend.\nIf `null`, the legend for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [legend properties](https://vega.github.io/vega-lite/docs/legend.html) are applied."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},selection:{$ref:"#/definitions/SelectionOperand",description:"A [selection name](https://vega.github.io/vega-lite/docs/selection.html), or a series of [composed selections](https://vega.github.io/vega-lite/docs/selection.html#compose)."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/TypeForShape",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n__Note:__ Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`)'}},required:["selection","type"],type:"object"},"ConditionalSelection<TextFieldDef>":{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},format:{description:"The [formatting pattern](https://vega.github.io/vega-lite/docs/format.html) for a text field. If not defined, this will be determined automatically.",type:"string"},selection:{$ref:"#/definitions/SelectionOperand",description:"A [selection name](https://vega.github.io/vega-lite/docs/selection.html), or a series of [composed selections](https://vega.github.io/vega-lite/docs/selection.html#compose)."},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n__Note:__ Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`)'}},required:["selection","type"],type:"object"},"ConditionalSelection<ValueDef>":{additionalProperties:!1,properties:{selection:{$ref:"#/definitions/SelectionOperand",description:"A [selection name](https://vega.github.io/vega-lite/docs/selection.html), or a series of [composed selections](https://vega.github.io/vega-lite/docs/selection.html#compose)."},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:["number","string","boolean","null"]}},required:["selection","value"],type:"object"},"ConditionalSelection<ColorValueDef>":{additionalProperties:!1,properties:{selection:{$ref:"#/definitions/SelectionOperand",description:"A [selection name](https://vega.github.io/vega-lite/docs/selection.html), or a series of [composed selections](https://vega.github.io/vega-lite/docs/selection.html#compose)."},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:["string","null"]}},required:["selection","value"],type:"object"},"ConditionalSelection<TextValueDef>":{additionalProperties:!1,properties:{selection:{$ref:"#/definitions/SelectionOperand",description:"A [selection name](https://vega.github.io/vega-lite/docs/selection.html), or a series of [composed selections](https://vega.github.io/vega-lite/docs/selection.html#compose)."},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:["string","number","boolean"]}},required:["selection","value"],type:"object"},"ConditionalSelection<NumberValueDef>":{additionalProperties:!1,properties:{selection:{$ref:"#/definitions/SelectionOperand",description:"A [selection name](https://vega.github.io/vega-lite/docs/selection.html), or a series of [composed selections](https://vega.github.io/vega-lite/docs/selection.html#compose)."},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:"number"}},required:["selection","value"],type:"object"},"ConditionalSelection<StringValueDef>":{additionalProperties:!1,properties:{selection:{$ref:"#/definitions/SelectionOperand",description:"A [selection name](https://vega.github.io/vega-lite/docs/selection.html), or a series of [composed selections](https://vega.github.io/vega-lite/docs/selection.html#compose)."},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:"string"}},required:["selection","value"],type:"object"},Config:{additionalProperties:!1,properties:{area:{$ref:"#/definitions/AreaConfig",description:"Area-Specific Config"},autosize:{anyOf:[{$ref:"#/definitions/AutosizeType"},{$ref:"#/definitions/AutoSizeParams"}],description:'Sets how the visualization size should be determined. If a string, should be one of `"pad"`, `"fit"` or `"none"`.\nObject values can additionally specify parameters for content sizing and automatic resizing.\n`"fit"` is only supported for single and layered views that don\'t use `rangeStep`.\n\n__Default value__: `pad`'},axis:{$ref:"#/definitions/AxisConfig",description:"Axis configuration, which determines default properties for all `x` and `y` [axes](https://vega.github.io/vega-lite/docs/axis.html). For a full list of axis configuration options, please see the [corresponding section of the axis documentation](https://vega.github.io/vega-lite/docs/axis.html#config)."},axisBand:{$ref:"#/definitions/AxisConfig",description:'Specific axis config for axes with "band" scales.'},axisBottom:{$ref:"#/definitions/AxisConfig",description:"Specific axis config for x-axis along the bottom edge of the chart."},axisLeft:{$ref:"#/definitions/AxisConfig",description:"Specific axis config for y-axis along the left edge of the chart."},axisRight:{$ref:"#/definitions/AxisConfig",description:"Specific axis config for y-axis along the right edge of the chart."},axisTop:{$ref:"#/definitions/AxisConfig",description:"Specific axis config for x-axis along the top edge of the chart."},axisX:{$ref:"#/definitions/AxisConfig",description:"X-axis specific config."},axisY:{$ref:"#/definitions/AxisConfig",description:"Y-axis specific config."},background:{description:"CSS color property to use as the background of the whole Vega-Lite view\n\n__Default value:__ none (transparent)",type:"string"},bar:{$ref:"#/definitions/BarConfig",description:"Bar-Specific Config"},boxplot:{$ref:"#/definitions/BoxPlotConfig",description:"Box Config"},circle:{$ref:"#/definitions/MarkConfig",description:"Circle-Specific Config"},countTitle:{description:"Default axis and legend title for count fields.\n\n__Default value:__ `'Count of Records`.",type:"string"},errorband:{$ref:"#/definitions/ErrorBandConfig",description:"ErrorBand Config"},errorbar:{$ref:"#/definitions/ErrorBarConfig",description:"ErrorBar Config"},fieldTitle:{description:'Defines how Vega-Lite generates title for fields.  There are three possible styles:\n- `"verbal"` (Default) - displays function in a verbal style (e.g., "Sum of field", "Year-month of date", "field (binned)").\n- `"function"` - displays function using parentheses and capitalized texts (e.g., "SUM(field)", "YEARMONTH(date)", "BIN(field)").\n- `"plain"` - displays only the field name without functions (e.g., "field", "date", "field").',enum:["verbal","functional","plain"],type:"string"},geoshape:{$ref:"#/definitions/MarkConfig",description:"Geoshape-Specific Config"},header:{$ref:"#/definitions/HeaderConfig",description:"Header configuration, which determines default properties for all [header](https://vega.github.io/vega-lite/docs/header.html). For a full list of header configuration options, please see the [corresponding section of in the header documentation](https://vega.github.io/vega-lite/docs/header.html#config)."},invalidValues:{description:'Defines how Vega-Lite should handle invalid values (`null` and `NaN`).\n- If set to `"filter"` (default), all data items with null values will be skipped (for line, trail, and area marks) or filtered (for other marks).\n- If `null`, all data items are included. In this case, invalid values will be interpreted as zeroes.',enum:["filter",null],type:["string","null"]},legend:{$ref:"#/definitions/LegendConfig",description:"Legend configuration, which determines default properties for all [legends](https://vega.github.io/vega-lite/docs/legend.html). For a full list of legend configuration options, please see the [corresponding section of in the legend documentation](https://vega.github.io/vega-lite/docs/legend.html#config)."},line:{$ref:"#/definitions/LineConfig",description:"Line-Specific Config"},mark:{$ref:"#/definitions/MarkConfig",description:"Mark Config"},numberFormat:{description:'D3 Number format for guide labels and text marks. For example "s" for SI units. Use [D3\'s number format pattern](https://github.com/d3/d3-format#locale_format).',type:"string"},padding:{$ref:"#/definitions/Padding",description:'The default visualization padding, in pixels, from the edge of the visualization canvas to the data rectangle.  If a number, specifies padding for all sides.\nIf an object, the value should have the format `{"left": 5, "top": 5, "right": 5, "bottom": 5}` to specify padding for each side of the visualization.\n\n__Default value__: `5`'},point:{$ref:"#/definitions/MarkConfig",description:"Point-Specific Config"},projection:{$ref:"#/definitions/ProjectionConfig",description:"Projection configuration, which determines default properties for all [projections](https://vega.github.io/vega-lite/docs/projection.html). For a full list of projection configuration options, please see the [corresponding section of the projection documentation](https://vega.github.io/vega-lite/docs/projection.html#config)."},range:{$ref:"#/definitions/RangeConfig",description:"An object hash that defines default range arrays or schemes for using with scales.\nFor a full list of scale range configuration options, please see the [corresponding section of the scale documentation](https://vega.github.io/vega-lite/docs/scale.html#config)."},rect:{$ref:"#/definitions/MarkConfig",description:"Rect-Specific Config"},rule:{$ref:"#/definitions/MarkConfig",description:"Rule-Specific Config"},scale:{$ref:"#/definitions/ScaleConfig",description:"Scale configuration determines default properties for all [scales](https://vega.github.io/vega-lite/docs/scale.html). For a full list of scale configuration options, please see the [corresponding section of the scale documentation](https://vega.github.io/vega-lite/docs/scale.html#config)."},selection:{$ref:"#/definitions/SelectionConfig",description:"An object hash for defining default properties for each type of selections."},square:{$ref:"#/definitions/MarkConfig",description:"Square-Specific Config"},stack:{$ref:"#/definitions/StackOffset",description:"Default stack offset for stackable mark."},style:{$ref:"#/definitions/StyleConfigIndex",description:"An object hash that defines key-value mappings to determine default properties for marks with a given [style](https://vega.github.io/vega-lite/docs/mark.html#mark-def).  The keys represent styles names; the values have to be valid [mark configuration objects](https://vega.github.io/vega-lite/docs/mark.html#config)."},text:{$ref:"#/definitions/TextConfig",description:"Text-Specific Config"},tick:{$ref:"#/definitions/TickConfig",description:"Tick-Specific Config"},timeFormat:{description:'Default time format for raw time values (without time units) in text marks, legend labels and header labels.\n\n__Default value:__ `"%b %d, %Y"`\n__Note:__ Axes automatically determine format each label automatically so this config would not affect axes.',type:"string"},title:{$ref:"#/definitions/TitleConfig",description:"Title configuration, which determines default properties for all [titles](https://vega.github.io/vega-lite/docs/title.html). For a full list of title configuration options, please see the [corresponding section of the title documentation](https://vega.github.io/vega-lite/docs/title.html#config)."},trail:{$ref:"#/definitions/LineConfig",description:"Trail-Specific Config"},view:{$ref:"#/definitions/ViewConfig",description:"Default properties for [single view plots](https://vega.github.io/vega-lite/docs/spec.html#single)."}},type:"object"},CsvDataFormat:{additionalProperties:!1,properties:{parse:{anyOf:[{$ref:"#/definitions/Parse"},{type:"null"}],description:'If set to `null`, disable type inference based on the spec and only use type inference based on the data.\nAlternatively, a parsing directive object can be provided for explicit data types. Each property of the object corresponds to a field name, and the value to the desired data type (one of `"number"`, `"boolean"`, `"date"`, or null (do not parse the field)).\nFor example, `"parse": {"modified_on": "date"}` parses the `modified_on` field in each input record a Date value.\n\nFor `"date"`, we parse data based using Javascript\'s [`Date.parse()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).\nFor Specific date formats can be provided (e.g., `{foo: \'date:"%m%d%Y"\'}`), using the [d3-time-format syntax](https://github.com/d3/d3-time-format#locale_format). UTC date format parsing is supported similarly (e.g., `{foo: \'utc:"%m%d%Y"\'}`). See more about [UTC time](https://vega.github.io/vega-lite/docs/timeunit.html#utc)'},type:{description:'Type of input data: `"json"`, `"csv"`, `"tsv"`, `"dsv"`.\nThe default format type is determined by the extension of the file URL.\nIf no extension is detected, `"json"` will be used by default.',enum:["csv","tsv"],type:"string"}},type:"object"},Cursor:{enum:["auto","default","none","context-menu","help","pointer","progress","wait","cell","crosshair","text","vertical-text","alias","copy","move","no-drop","not-allowed","e-resize","n-resize","ne-resize","nw-resize","s-resize","se-resize","sw-resize","w-resize","ew-resize","ns-resize","nesw-resize","nwse-resize","col-resize","row-resize","all-scroll","zoom-in","zoom-out","grab","grabbing"],type:"string"},Data:{anyOf:[{$ref:"#/definitions/UrlData"},{$ref:"#/definitions/InlineData"},{$ref:"#/definitions/NamedData"}]},DataFormat:{anyOf:[{$ref:"#/definitions/CsvDataFormat"},{$ref:"#/definitions/DsvDataFormat"},{$ref:"#/definitions/JsonDataFormat"},{$ref:"#/definitions/TopoDataFormat"}]},Datasets:{$ref:"#/definitions/Dict<InlineDataset>"},DateTime:{additionalProperties:!1,description:"Object for defining datetime in Vega-Lite Filter.\nIf both month and quarter are provided, month has higher precedence.\n`day` cannot be combined with other date.\nWe accept string for month and day names.",properties:{date:{description:"Integer value representing the date from 1-31.",maximum:31,minimum:1,type:"number"},day:{anyOf:[{$ref:"#/definitions/Day"},{type:"string"}],description:'Value representing the day of a week.  This can be one of: (1) integer value -- `1` represents Monday; (2) case-insensitive day name (e.g., `"Monday"`);  (3) case-insensitive, 3-character short day name (e.g., `"Mon"`).   <br/> **Warning:** A DateTime definition object with `day`** should not be combined with `year`, `quarter`, `month`, or `date`.'},hours:{description:"Integer value representing the hour of a day from 0-23.",maximum:23,minimum:0,type:"number"},milliseconds:{description:"Integer value representing the millisecond segment of time.",maximum:999,minimum:0,type:"number"},minutes:{description:"Integer value representing the minute segment of time from 0-59.",maximum:59,minimum:0,type:"number"},month:{anyOf:[{$ref:"#/definitions/Month"},{type:"string"}],description:'One of: (1) integer value representing the month from `1`-`12`. `1` represents January;  (2) case-insensitive month name (e.g., `"January"`);  (3) case-insensitive, 3-character short month name (e.g., `"Jan"`).'},quarter:{description:"Integer value representing the quarter of the year (from 1-4).",maximum:4,minimum:1,type:"number"},seconds:{description:"Integer value representing the second segment (0-59) of a time value",maximum:59,minimum:0,type:"number"},utc:{description:"A boolean flag indicating if date time is in utc time. If false, the date time is in local time",type:"boolean"},year:{description:"Integer value representing the year.",type:"number"}},type:"object"},Day:{maximum:7,minimum:1,type:"number"},"Dict<InlineDataset>":{additionalProperties:{$ref:"#/definitions/InlineDataset"},type:"object"},Dir:{enum:["ltr","rtl"],type:"string"},DsvDataFormat:{additionalProperties:!1,properties:{delimiter:{description:"The delimiter between records. The delimiter must be a single character (i.e., a single 16-bit code unit); so, ASCII delimiters are fine, but emoji delimiters are not.",maxLength:1,minLength:1,type:"string"},parse:{anyOf:[{$ref:"#/definitions/Parse"},{type:"null"}],description:'If set to `null`, disable type inference based on the spec and only use type inference based on the data.\nAlternatively, a parsing directive object can be provided for explicit data types. Each property of the object corresponds to a field name, and the value to the desired data type (one of `"number"`, `"boolean"`, `"date"`, or null (do not parse the field)).\nFor example, `"parse": {"modified_on": "date"}` parses the `modified_on` field in each input record a Date value.\n\nFor `"date"`, we parse data based using Javascript\'s [`Date.parse()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).\nFor Specific date formats can be provided (e.g., `{foo: \'date:"%m%d%Y"\'}`), using the [d3-time-format syntax](https://github.com/d3/d3-time-format#locale_format). UTC date format parsing is supported similarly (e.g., `{foo: \'utc:"%m%d%Y"\'}`). See more about [UTC time](https://vega.github.io/vega-lite/docs/timeunit.html#utc)'},type:{description:'Type of input data: `"json"`, `"csv"`, `"tsv"`, `"dsv"`.\nThe default format type is determined by the extension of the file URL.\nIf no extension is detected, `"json"` will be used by default.',enum:["dsv"],type:"string"}},required:["delimiter"],type:"object"},Element:{type:"string"},EncodingSortField:{additionalProperties:!1,description:"A sort definition for sorting a discrete scale in an encoding field definition.",properties:{field:{$ref:"#/definitions/Field",description:"The data [field](https://vega.github.io/vega-lite/docs/field.html) to sort by.\n\n__Default value:__ If unspecified, defaults to the field specified in the outer data reference."},op:{$ref:"#/definitions/AggregateOp",description:'An [aggregate operation](https://vega.github.io/vega-lite/docs/aggregate.html#ops) to perform on the field prior to sorting (e.g., `"count"`, `"mean"` and `"median"`).\nAn aggregation is required when there are multiple values of the sort field for each encoded data field.\nThe input data objects will be aggregated, grouped by the encoded data field.\n\nFor a full list of operations, please see the documentation for [aggregate](https://vega.github.io/vega-lite/docs/aggregate.html#ops).\n\n__Default value:__ `"sum"` for stacked plots. Otherwise, `"mean"`.'},order:{anyOf:[{$ref:"#/definitions/SortOrder"},{type:"null"}],description:'The sort order. One of `"ascending"` (default), `"descending"`, or `null` (no not sort).'}},type:"object"},ErrorBand:{enum:["errorband"],type:"string"},ErrorBandConfig:{additionalProperties:!1,properties:{band:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},borders:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},extent:{$ref:"#/definitions/ErrorBarExtent",description:'The extent of the band. Available options include:\n- `"ci"`: Extend the band to the confidence interval of the mean.\n- `"stderr"`: The size of band are set to the value of standard error, extending from the mean.\n- `"stdev"`: The size of band are set to the value of standard deviation, extending from the mean.\n- `"iqr"`: Extend the band to the q1 and q3.\n\n__Default value:__ `"stderr"`.'},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method for the error band. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: alternate between horizontal and vertical segments, as in a step function.\n- `"step-before"`: alternate between vertical and horizontal segments, as in a step function.\n- `"step-after"`: alternate between horizontal and vertical segments, as in a step function.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},tension:{description:"The tension parameter for the interpolation type of the error band.",maximum:1,minimum:0,type:"number"}},type:"object"},ErrorBandDef:{additionalProperties:!1,properties:{band:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},borders:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},clip:{description:"Whether a composite mark be clipped to the enclosing group’s width and height.",type:"boolean"},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},extent:{$ref:"#/definitions/ErrorBarExtent",description:'The extent of the band. Available options include:\n- `"ci"`: Extend the band to the confidence interval of the mean.\n- `"stderr"`: The size of band are set to the value of standard error, extending from the mean.\n- `"stdev"`: The size of band are set to the value of standard deviation, extending from the mean.\n- `"iqr"`: Extend the band to the q1 and q3.\n\n__Default value:__ `"stderr"`.'},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method for the error band. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: alternate between horizontal and vertical segments, as in a step function.\n- `"step-before"`: alternate between vertical and horizontal segments, as in a step function.\n- `"step-after"`: alternate between horizontal and vertical segments, as in a step function.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},opacity:{description:"The opacity (value between [0,1]) of the mark.",type:"number"},orient:{$ref:"#/definitions/Orient",description:"Orientation of the error band. This is normally automatically determined, but can be specified when the orientation is ambiguous and cannot be automatically determined."},tension:{description:"The tension parameter for the interpolation type of the error band.",maximum:1,minimum:0,type:"number"},type:{$ref:"#/definitions/ErrorBand",description:'The mark type. This could a primitive mark type\n(one of `"bar"`, `"circle"`, `"square"`, `"tick"`, `"line"`,\n`"area"`, `"point"`, `"geoshape"`, `"rule"`, and `"text"`)\nor a composite mark type (`"boxplot"`, `"errorband"`, `"errorbar"`).'}},required:["type"],type:"object"},ErrorBar:{enum:["errorbar"],type:"string"},ErrorBarConfig:{additionalProperties:!1,properties:{extent:{$ref:"#/definitions/ErrorBarExtent",description:'The extent of the rule. Available options include:\n- `"ci"`: Extend the rule to the confidence interval of the mean.\n- `"stderr"`: The size of rule are set to the value of standard error, extending from the mean.\n- `"stdev"`: The size of rule are set to the value of standard deviation, extending from the mean.\n- `"iqr"`: Extend the rule to the q1 and q3.\n\n__Default value:__ `"stderr"`.'},rule:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},ticks:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]}},type:"object"},ErrorBarDef:{additionalProperties:!1,properties:{clip:{description:"Whether a composite mark be clipped to the enclosing group’s width and height.",type:"boolean"},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},extent:{$ref:"#/definitions/ErrorBarExtent",description:'The extent of the rule. Available options include:\n- `"ci"`: Extend the rule to the confidence interval of the mean.\n- `"stderr"`: The size of rule are set to the value of standard error, extending from the mean.\n- `"stdev"`: The size of rule are set to the value of standard deviation, extending from the mean.\n- `"iqr"`: Extend the rule to the q1 and q3.\n\n__Default value:__ `"stderr"`.'},opacity:{description:"The opacity (value between [0,1]) of the mark.",type:"number"},orient:{$ref:"#/definitions/Orient",description:"Orientation of the error bar.  This is normally automatically determined, but can be specified when the orientation is ambiguous and cannot be automatically determined."},rule:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},ticks:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},type:{$ref:"#/definitions/ErrorBar",description:'The mark type. This could a primitive mark type\n(one of `"bar"`, `"circle"`, `"square"`, `"tick"`, `"line"`,\n`"area"`, `"point"`, `"geoshape"`, `"rule"`, and `"text"`)\nor a composite mark type (`"boxplot"`, `"errorband"`, `"errorbar"`).'}},required:["type"],type:"object"},ErrorBarExtent:{enum:["ci","iqr","stderr","stdev"],type:"string"},EventStream:{},FacetFieldDef:{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},header:{$ref:"#/definitions/Header",description:"An object defining properties of a facet's header."},sort:{anyOf:[{$ref:"#/definitions/SortArray"},{$ref:"#/definitions/SortOrder"},{$ref:"#/definitions/EncodingSortField"},{type:"null"}],description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/Type",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n__Note:__ Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`)'}},required:["type"],type:"object"},FacetMapping:{additionalProperties:!1,properties:{column:{$ref:"#/definitions/FacetFieldDef",description:"Horizontal facets for trellis plots."},row:{$ref:"#/definitions/FacetFieldDef",description:"Vertical facets for trellis plots."}},type:"object"},FacetedEncoding:{additionalProperties:!1,properties:{color:{anyOf:[{$ref:"#/definitions/ColorFieldDefWithCondition"},{$ref:"#/definitions/ColorValueDefWithCondition"}],description:'Color of the marks – either fill or stroke color based on  the `filled` property of mark definition.\nBy default, `color` represents fill color for `"area"`, `"bar"`, `"tick"`,\n`"text"`, `"trail"`, `"circle"`, and `"square"` / stroke color for `"line"` and `"point"`.\n\n__Default value:__ If undefined, the default color depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)\'s `color` property.\n\n_Note:_\n1) For fine-grained control over both fill and stroke colors of the marks, please use the `fill` and `stroke` channels.  If either `fill` or `stroke` channel is specified, `color` channel will be ignored.\n2) See the scale documentation for more information about customizing [color scheme](https://vega.github.io/vega-lite/docs/scale.html#scheme).'},column:{$ref:"#/definitions/FacetFieldDef",description:"Horizontal facets for trellis plots."},detail:{anyOf:[{$ref:"#/definitions/FieldDef"},{items:{$ref:"#/definitions/FieldDef"},type:"array"}],description:"Additional levels of detail for grouping data in aggregate views and\nin line, trail, and area marks without mapping data to a specific visual channel."},facet:{$ref:"#/definitions/FacetFieldDef",description:"Faceted field for trellis plots.\nIf either `row` or `column` is specified, this channel will be ignored."},fill:{anyOf:[{$ref:"#/definitions/ColorFieldDefWithCondition"},{$ref:"#/definitions/ColorValueDefWithCondition"}],description:"Fill color of the marks.\n__Default value:__ If undefined, the default color depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `color` property.\n\n_Note:_ When using `fill` channel, `color ` channel will be ignored. To customize both fill and stroke, please use `fill` and `stroke` channels (not `fill` and `color`)."},fillOpacity:{anyOf:[{$ref:"#/definitions/NumericFieldDefWithCondition"},{$ref:"#/definitions/NumericValueDefWithCondition"}],description:"Fill opacity of the marks.\n\n__Default value:__ If undefined, the default opacity depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `fillOpacity` property."},href:{anyOf:[{$ref:"#/definitions/StringFieldDefWithCondition"},{$ref:"#/definitions/StringValueDefWithCondition"}],description:"A URL to load upon mouse click."},key:{$ref:"#/definitions/FieldDef",description:"A data field to use as a unique key for data binding. When a visualization’s data is updated, the key value will be used to match data elements to existing mark instances. Use a key channel to enable object constancy for transitions over dynamic data."},latitude:{$ref:"#/definitions/LatLongFieldDef",description:"Latitude position of geographically projected marks."},latitude2:{$ref:"#/definitions/SecondaryFieldDef",description:'Latitude-2 position for geographically projected ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.'},longitude:{$ref:"#/definitions/LatLongFieldDef",description:"Longitude position of geographically projected marks."},longitude2:{$ref:"#/definitions/SecondaryFieldDef",description:'Longitude-2 position for geographically projected ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.'},opacity:{anyOf:[{$ref:"#/definitions/NumericFieldDefWithCondition"},{$ref:"#/definitions/NumericValueDefWithCondition"}],description:"Opacity of the marks.\n\n__Default value:__ If undefined, the default opacity depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `opacity` property."},order:{anyOf:[{$ref:"#/definitions/OrderFieldDef"},{items:{$ref:"#/definitions/OrderFieldDef"},type:"array"},{$ref:"#/definitions/NumberValueDef"}],description:'Order of the marks.\n- For stacked marks, this `order` channel encodes [stack order](https://vega.github.io/vega-lite/docs/stack.html#order).\n- For line and trail marks, this `order` channel encodes order of data points in the lines. This can be useful for creating [a connected scatterplot](https://vega.github.io/vega-lite/examples/connected_scatterplot.html).  Setting `order` to `{"value": null}` makes the line marks use the original order in the data sources.\n- Otherwise, this `order` channel encodes layer order of the marks.\n\n__Note__: In aggregate plots, `order` field should be `aggregate`d to avoid creating additional aggregation grouping.'},row:{$ref:"#/definitions/FacetFieldDef",description:"Vertical facets for trellis plots."},shape:{anyOf:[{$ref:"#/definitions/ShapeFieldDefWithCondition"},{$ref:"#/definitions/ShapeValueDefWithCondition"}],description:'For `point` marks the supported values are\n`"circle"` (default), `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`,\nor `"triangle-down"`, or else a custom SVG path string.\nFor `geoshape` marks it should be a field definition of the geojson data\n\n__Default value:__ If undefined, the default shape depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#point-config)\'s `shape` property.'},size:{anyOf:[{$ref:"#/definitions/NumericFieldDefWithCondition"},{$ref:"#/definitions/NumericValueDefWithCondition"}],description:'Size of the mark.\n- For `"point"`, `"square"` and `"circle"`, – the symbol size, or pixel area of the mark.\n- For `"bar"` and `"tick"` – the bar and tick\'s size.\n- For `"text"` – the text\'s font size.\n- Size is unsupported for `"line"`, `"area"`, and `"rect"`. (Use `"trail"` instead of line with varying size)'},stroke:{anyOf:[{$ref:"#/definitions/ColorFieldDefWithCondition"},{$ref:"#/definitions/ColorValueDefWithCondition"}],description:"Stroke color of the marks.\n__Default value:__ If undefined, the default color depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `color` property.\n\n_Note:_ When using `stroke` channel, `color ` channel will be ignored. To customize both stroke and fill, please use `stroke` and `fill` channels (not `stroke` and `color`)."},strokeOpacity:{anyOf:[{$ref:"#/definitions/NumericFieldDefWithCondition"},{$ref:"#/definitions/NumericValueDefWithCondition"}],description:"Stroke opacity of the marks.\n\n__Default value:__ If undefined, the default opacity depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `strokeOpacity` property."},strokeWidth:{anyOf:[{$ref:"#/definitions/NumericFieldDefWithCondition"},{$ref:"#/definitions/NumericValueDefWithCondition"}],description:"Stroke width of the marks.\n\n__Default value:__ If undefined, the default stroke width depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `strokeWidth` property."},text:{anyOf:[{$ref:"#/definitions/TextFieldDefWithCondition"},{$ref:"#/definitions/TextValueDefWithCondition"}],description:"Text of the `text` mark."},tooltip:{anyOf:[{$ref:"#/definitions/TextFieldDefWithCondition"},{$ref:"#/definitions/TextValueDefWithCondition"},{items:{$ref:"#/definitions/TextFieldDef"},type:"array"},{type:"null"}],description:"The tooltip text to show upon mouse hover."},x:{anyOf:[{$ref:"#/definitions/PositionFieldDef"},{$ref:"#/definitions/XValueDef"}],description:'X coordinates of the marks, or width of horizontal `"bar"` and `"area"`.\n\nThe `value` of this channel can be a number or a string `"width"`.'},x2:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/XValueDef"}],description:'X2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.\n\nThe `value` of this channel can be a number or a string `"width"`.'},xError:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/NumberValueDef"}],description:'Error value of x coordinates for error specified `"errorbar"` and `"errorband"`.'},xError2:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/NumberValueDef"}],description:'Secondary error value of x coordinates for error specified `"errorbar"` and `"errorband"`.'},y:{anyOf:[{$ref:"#/definitions/PositionFieldDef"},{$ref:"#/definitions/YValueDef"}],description:'Y coordinates of the marks, or height of vertical `"bar"` and `"area"`.\n\nThe `value` of this channel can be a number or a string `"height"`.'},y2:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/YValueDef"}],description:'Y2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.\n\nThe `value` of this channel can be a number or a string `"height"`.'},yError:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/NumberValueDef"}],description:'Error value of y coordinates for error specified `"errorbar"` and `"errorband"`.'},yError2:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/NumberValueDef"}],description:'Secondary error value of y coordinates for error specified `"errorbar"` and `"errorband"`.'}},type:"object"},FacetedUnitSpec:{additionalProperties:!1,description:"Unit spec that can have a composite mark and row or column channels (shorthand for a facet spec).",properties:{align:{anyOf:[{$ref:"#/definitions/LayoutAlign"},{$ref:"#/definitions/RowCol<LayoutAlign>"}],description:'The alignment to apply to grid rows and columns.\nThe supported string values are `"all"`, `"each"`, and `"none"`.\n\n- For `"none"`, a flow layout will be used, in which adjacent subviews are simply placed one after the other.\n- For `"each"`, subviews will be aligned into a clean grid structure, but each row or column may be of variable size.\n- For `"all"`, subviews will be aligned and each row or column will be sized identically based on the maximum observed size. String values for this property will be applied to both grid rows and columns.\n\nAlternatively, an object value of the form `{"row": string, "column": string}` can be used to supply different alignments for rows and columns.\n\n__Default value:__ `"all"`.'},bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{anyOf:[{type:"boolean"},{$ref:"#/definitions/RowCol<boolean>"}],description:'Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\nAn object value of the form `{"row": boolean, "column": boolean}` can be used to supply different centering values for rows and columns.\n\n__Default value:__ `false`'},columns:{description:"The number of columns to include in the view composition layout. If unspecified, an infinite number of columns (a single row) will be assumed.",type:"number"},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},description:{description:"Description of this mark for commenting purpose.",type:"string"},encoding:{$ref:"#/definitions/FacetedEncoding",description:"A key-value mapping between encoding channels and definition of fields."},height:{description:'The height of a visualization.\n\n__Default value:__\n- If a view\'s [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `"fit"` or its y-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- For y-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the height is [determined by the range step, paddings, and the cardinality of the field mapped to y-channel](https://vega.github.io/vega-lite/docs/scale.html#band). Otherwise, if the `rangeStep` is `null`, the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- If no field is mapped to `y` channel, the `height` will be the value of `rangeStep`.\n\n__Note__: For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the height of a single view.\n\n__See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.',type:"number"},mark:{$ref:"#/definitions/AnyMark",description:'A string describing the mark type (one of `"bar"`, `"circle"`, `"square"`, `"tick"`, `"line"`,\n`"area"`, `"point"`, `"rule"`, `"geoshape"`, and `"text"`) or a [mark definition object](https://vega.github.io/vega-lite/docs/mark.html#mark-def).'},name:{description:"Name of the visualization for later reference.",type:"string"},projection:{$ref:"#/definitions/Projection",description:'An object defining properties of geographic projection, which will be applied to `shape` path for `"geoshape"` marks\nand to `latitude` and `"longitude"` channels for other marks.'},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},selection:{additionalProperties:{$ref:"#/definitions/SelectionDef"},description:"A key-value mapping between selection names and definitions.",type:"object"},spacing:{anyOf:[{type:"number"},{$ref:"#/definitions/RowCol<number>"}],description:'The spacing in pixels between sub-views of the composition operator.\nAn object of the form `{"row": number, "column": number}` can be used to set\ndifferent spacing values for rows and columns.\n\n__Default value__: `20`'},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},view:{$ref:"#/definitions/ViewBackground",description:"An object defining the view background's fill and stroke.\n\n__Default value:__ none (transparent)"},width:{description:'The width of a visualization.\n\n__Default value:__ This will be determined by the following rules:\n\n- If a view\'s [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `"fit"` or its x-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- For x-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the width is [determined by the range step, paddings, and the cardinality of the field mapped to x-channel](https://vega.github.io/vega-lite/docs/scale.html#band).   Otherwise, if the `rangeStep` is `null`, the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- If no field is mapped to `x` channel, the `width` will be the value of [`config.scale.textXRangeStep`](https://vega.github.io/vega-lite/docs/size.html#default-width-and-height) for `text` mark and the value of `rangeStep` for other marks.\n\n__Note:__ For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the width of a single view.\n\n__See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.',type:"number"}},required:["mark"],type:"object"},Field:{anyOf:[{type:"string"},{$ref:"#/definitions/RepeatRef"}]},'FieldDefWithCondition<MarkPropFieldDef<"nominal">,string>':{additionalProperties:!1,description:"A FieldDef with Condition<ValueDef>\n{\n   condition: {value: ...},\n   field: ...,\n   ...\n}",properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},condition:{anyOf:[{$ref:"#/definitions/ConditionalStringValueDef"},{items:{$ref:"#/definitions/ConditionalStringValueDef"},type:"array"}],description:"One or more value definition(s) with a selection predicate.\n\n__Note:__ A field definition's `condition` property can only contain [value definitions](https://vega.github.io/vega-lite/docs/encoding.html#value-def)\nsince Vega-Lite only allows at most one encoded field per encoding channel."},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},legend:{anyOf:[{$ref:"#/definitions/Legend"},{type:"null"}],description:"An object defining properties of the legend.\nIf `null`, the legend for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [legend properties](https://vega.github.io/vega-lite/docs/legend.html) are applied."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n__Note:__ Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`)',enum:["nominal"],type:"string"}},required:["type"],type:"object"},"FieldDefWithCondition<MarkPropFieldDef,(string|null)>":{additionalProperties:!1,description:"A FieldDef with Condition<ValueDef>\n{\n   condition: {value: ...},\n   field: ...,\n   ...\n}",properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},condition:{anyOf:[{$ref:"#/definitions/ConditionalColorValueDef"},{items:{$ref:"#/definitions/ConditionalColorValueDef"},type:"array"}],description:"One or more value definition(s) with a selection predicate.\n\n__Note:__ A field definition's `condition` property can only contain [value definitions](https://vega.github.io/vega-lite/docs/encoding.html#value-def)\nsince Vega-Lite only allows at most one encoded field per encoding channel."},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},legend:{anyOf:[{$ref:"#/definitions/Legend"},{type:"null"}],description:"An object defining properties of the legend.\nIf `null`, the legend for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [legend properties](https://vega.github.io/vega-lite/docs/legend.html) are applied."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n__Note:__ Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`)'}},required:["type"],type:"object"},"FieldDefWithCondition<MarkPropFieldDef,number>":{additionalProperties:!1,description:"A FieldDef with Condition<ValueDef>\n{\n   condition: {value: ...},\n   field: ...,\n   ...\n}",properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},condition:{anyOf:[{$ref:"#/definitions/ConditionalNumberValueDef"},{items:{$ref:"#/definitions/ConditionalNumberValueDef"},type:"array"}],description:"One or more value definition(s) with a selection predicate.\n\n__Note:__ A field definition's `condition` property can only contain [value definitions](https://vega.github.io/vega-lite/docs/encoding.html#value-def)\nsince Vega-Lite only allows at most one encoded field per encoding channel."},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},legend:{anyOf:[{$ref:"#/definitions/Legend"},{type:"null"}],description:"An object defining properties of the legend.\nIf `null`, the legend for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [legend properties](https://vega.github.io/vega-lite/docs/legend.html) are applied."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n__Note:__ Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`)'}},required:["type"],type:"object"},"FieldDefWithCondition<MarkPropFieldDef<TypeForShape>,string>":{additionalProperties:!1,description:"A FieldDef with Condition<ValueDef>\n{\n   condition: {value: ...},\n   field: ...,\n   ...\n}",properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},condition:{anyOf:[{$ref:"#/definitions/ConditionalStringValueDef"},{items:{$ref:"#/definitions/ConditionalStringValueDef"},type:"array"}],description:"One or more value definition(s) with a selection predicate.\n\n__Note:__ A field definition's `condition` property can only contain [value definitions](https://vega.github.io/vega-lite/docs/encoding.html#value-def)\nsince Vega-Lite only allows at most one encoded field per encoding channel."},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},legend:{anyOf:[{$ref:"#/definitions/Legend"},{type:"null"}],description:"An object defining properties of the legend.\nIf `null`, the legend for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [legend properties](https://vega.github.io/vega-lite/docs/legend.html) are applied."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/TypeForShape",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n__Note:__ Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`)'}},required:["type"],type:"object"},"FieldDefWithCondition<TextFieldDef,(string|number|boolean)>":{additionalProperties:!1,description:"A FieldDef with Condition<ValueDef>\n{\n   condition: {value: ...},\n   field: ...,\n   ...\n}",properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},condition:{anyOf:[{$ref:"#/definitions/ConditionalTextValueDef"},{items:{$ref:"#/definitions/ConditionalTextValueDef"},type:"array"}],description:"One or more value definition(s) with a selection predicate.\n\n__Note:__ A field definition's `condition` property can only contain [value definitions](https://vega.github.io/vega-lite/docs/encoding.html#value-def)\nsince Vega-Lite only allows at most one encoded field per encoding channel."},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},format:{description:"The [formatting pattern](https://vega.github.io/vega-lite/docs/format.html) for a text field. If not defined, this will be determined automatically.",type:"string"},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n__Note:__ Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`)'}},required:["type"],type:"object"},FieldDef:{additionalProperties:!1,description:'Field Def without scale (and without bin: "binned" support).',properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n__Note:__ Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`)'}},required:["type"],type:"object"},FieldEqualPredicate:{additionalProperties:!1,properties:{equal:{anyOf:[{type:"string"},{type:"number"},{type:"boolean"},{$ref:"#/definitions/DateTime"}],description:"The value that the field should be equal to."},field:{description:"Field to be filtered.",type:"string"},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit for the field to be filtered."}},required:["equal","field"],type:"object"},FieldGTEPredicate:{additionalProperties:!1,properties:{field:{description:"Field to be filtered.",type:"string"},gte:{anyOf:[{type:"string"},{type:"number"},{$ref:"#/definitions/DateTime"}],description:"The value that the field should be greater than or equals to."},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit for the field to be filtered."}},required:["field","gte"],type:"object"},FieldGTPredicate:{additionalProperties:!1,properties:{field:{description:"Field to be filtered.",type:"string"},gt:{anyOf:[{type:"string"},{type:"number"},{$ref:"#/definitions/DateTime"}],description:"The value that the field should be greater than."},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit for the field to be filtered."}},required:["field","gt"],type:"object"},FieldLTEPredicate:{additionalProperties:!1,properties:{field:{description:"Field to be filtered.",type:"string"},lte:{anyOf:[{type:"string"},{type:"number"},{$ref:"#/definitions/DateTime"}],description:"The value that the field should be less than or equals to."},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit for the field to be filtered."}},required:["field","lte"],type:"object"},FieldLTPredicate:{additionalProperties:!1,properties:{field:{description:"Field to be filtered.",type:"string"},lt:{anyOf:[{type:"string"},{type:"number"},{$ref:"#/definitions/DateTime"}],description:"The value that the field should be less than."},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit for the field to be filtered."}},required:["field","lt"],type:"object"},FieldOneOfPredicate:{additionalProperties:!1,properties:{field:{description:"Field to be filtered.",type:"string"},oneOf:{anyOf:[{items:{type:"string"},type:"array"},{items:{type:"number"},type:"array"},{items:{type:"boolean"},type:"array"},{items:{$ref:"#/definitions/DateTime"},type:"array"}],description:"A set of values that the `field`'s value should be a member of,\nfor a data item included in the filtered data."},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit for the field to be filtered."}},required:["field","oneOf"],type:"object"},FieldRangePredicate:{additionalProperties:!1,properties:{field:{description:"Field to be filtered.",type:"string"},range:{description:"An array of inclusive minimum and maximum values\nfor a field value of a data item to be included in the filtered data.",items:{anyOf:[{type:"number"},{$ref:"#/definitions/DateTime"},{type:"null"}]},maxItems:2,minItems:2,type:"array"},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit for the field to be filtered."}},required:["field","range"],type:"object"},FieldValidPredicate:{additionalProperties:!1,properties:{field:{description:"Field to be filtered.",type:"string"},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit for the field to be filtered."},valid:{description:"If set to true the field's value has to be valid, meaning both not `null` and not [`NaN`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN).",type:"boolean"}},required:["field","valid"],type:"object"},FilterTransform:{additionalProperties:!1,properties:{filter:{$ref:"#/definitions/LogicalOperand<Predicate>",description:"The `filter` property must be one of the predicate definitions:\n\n1) an [expression](https://vega.github.io/vega-lite/docs/types.html#expression) string,\nwhere `datum` can be used to refer to the current data object\n\n2) one of the field predicates: [`equal`](https://vega.github.io/vega-lite/docs/filter.html#equal-predicate),\n[`lt`](https://vega.github.io/vega-lite/docs/filter.html#lt-predicate),\n[`lte`](https://vega.github.io/vega-lite/docs/filter.html#lte-predicate),\n[`gt`](https://vega.github.io/vega-lite/docs/filter.html#gt-predicate),\n[`gte`](https://vega.github.io/vega-lite/docs/filter.html#gte-predicate),\n[`range`](https://vega.github.io/vega-lite/docs/filter.html#range-predicate),\n[`oneOf`](https://vega.github.io/vega-lite/docs/filter.html#one-of-predicate),\nor [`valid`](https://vega.github.io/vega-lite/docs/filter.html#valid-predicate),\n\n3) a [selection predicate](https://vega.github.io/vega-lite/docs/filter.html#selection-predicate)\n\n4) a logical operand that combines (1), (2), or (3)."}},required:["filter"],type:"object"},FlattenTransform:{additionalProperties:!1,properties:{as:{description:"The output field names for extracted array values.\n\n__Default value:__ The field name of the corresponding array field",items:{type:"string"},type:"array"},flatten:{description:"An array of one or more data fields containing arrays to flatten.\nIf multiple fields are specified, their array values should have a parallel structure, ideally with the same length.\nIf the lengths of parallel arrays do not match,\nthe longest array will be used with `null` values added for missing entries.",items:{type:"string"},type:"array"}},required:["flatten"],type:"object"},FoldTransform:{additionalProperties:!1,properties:{as:{description:'The output field names for the key and value properties produced by the fold transform.\n__Default value:__ `["key", "value"]`',items:[{type:"string"},{type:"string"}],maxItems:2,minItems:2,type:"array"},fold:{description:"An array of data fields indicating the properties to fold.",items:{type:"string"},type:"array"}},required:["fold"],type:"object"},FontStyle:{type:"string"},FontWeight:{enum:["normal","bold","lighter","bolder",100,200,300,400,500,600,700,800,900],type:["string","number"]},"GenericBinMixins<(boolean|BinParams)>":{additionalProperties:!1,properties:{bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'}},type:"object"},'GenericBinMixins<(boolean|BinParams|"binned"|null)>':{additionalProperties:!1,properties:{bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'}},type:"object"},ConcatSpec:{additionalProperties:!1,description:"Base interface for a generalized concatenation specification.",properties:{align:{anyOf:[{$ref:"#/definitions/LayoutAlign"},{$ref:"#/definitions/RowCol<LayoutAlign>"}],description:'The alignment to apply to grid rows and columns.\nThe supported string values are `"all"`, `"each"`, and `"none"`.\n\n- For `"none"`, a flow layout will be used, in which adjacent subviews are simply placed one after the other.\n- For `"each"`, subviews will be aligned into a clean grid structure, but each row or column may be of variable size.\n- For `"all"`, subviews will be aligned and each row or column will be sized identically based on the maximum observed size. String values for this property will be applied to both grid rows and columns.\n\nAlternatively, an object value of the form `{"row": string, "column": string}` can be used to supply different alignments for rows and columns.\n\n__Default value:__ `"all"`.'},bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{anyOf:[{type:"boolean"},{$ref:"#/definitions/RowCol<boolean>"}],description:'Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\nAn object value of the form `{"row": boolean, "column": boolean}` can be used to supply different centering values for rows and columns.\n\n__Default value:__ `false`'},columns:{description:"The number of columns to include in the view composition layout. If unspecified, an infinite number of columns (a single row) will be assumed.",type:"number"},concat:{description:"A list of views to be concatenated.",items:{$ref:"#/definitions/Spec"},type:"array"},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},description:{description:"Description of this mark for commenting purpose.",type:"string"},name:{description:"Name of the visualization for later reference.",type:"string"},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},spacing:{anyOf:[{type:"number"},{$ref:"#/definitions/RowCol<number>"}],description:'The spacing in pixels between sub-views of the composition operator.\nAn object of the form `{"row": number, "column": number}` can be used to set\ndifferent spacing values for rows and columns.\n\n__Default value__: `20`'},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"}},required:["concat"],type:"object"},FacetSpec:{additionalProperties:!1,description:"Base interface for a facet specification.",properties:{align:{anyOf:[{$ref:"#/definitions/LayoutAlign"},{$ref:"#/definitions/RowCol<LayoutAlign>"}],description:'The alignment to apply to grid rows and columns.\nThe supported string values are `"all"`, `"each"`, and `"none"`.\n\n- For `"none"`, a flow layout will be used, in which adjacent subviews are simply placed one after the other.\n- For `"each"`, subviews will be aligned into a clean grid structure, but each row or column may be of variable size.\n- For `"all"`, subviews will be aligned and each row or column will be sized identically based on the maximum observed size. String values for this property will be applied to both grid rows and columns.\n\nAlternatively, an object value of the form `{"row": string, "column": string}` can be used to supply different alignments for rows and columns.\n\n__Default value:__ `"all"`.'},bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{anyOf:[{type:"boolean"},{$ref:"#/definitions/RowCol<boolean>"}],description:'Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\nAn object value of the form `{"row": boolean, "column": boolean}` can be used to supply different centering values for rows and columns.\n\n__Default value:__ `false`'},columns:{description:"The number of columns to include in the view composition layout. If unspecified, an infinite number of columns (a single row) will be assumed.",type:"number"},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},description:{description:"Description of this mark for commenting purpose.",type:"string"},facet:{anyOf:[{$ref:"#/definitions/FacetFieldDef"},{$ref:"#/definitions/FacetMapping"}],description:"A field definition for faceting the plot or an object that describes mappings between `row` and `column` channels and their field definitions."},name:{description:"Name of the visualization for later reference.",type:"string"},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},spacing:{anyOf:[{type:"number"},{$ref:"#/definitions/RowCol<number>"}],description:'The spacing in pixels between sub-views of the composition operator.\nAn object of the form `{"row": number, "column": number}` can be used to set\ndifferent spacing values for rows and columns.\n\n__Default value__: `20`'},spec:{anyOf:[{$ref:"#/definitions/LayerSpec"},{$ref:"#/definitions/FacetedUnitSpec"}],description:"A specification of the view that gets faceted."},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"}},required:["facet","spec"],type:"object"},HConcatSpec:{additionalProperties:!1,description:"Base interface for a horizontal concatenation specification.",properties:{bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{description:"Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\n__Default value:__ `false`",type:"boolean"},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},description:{description:"Description of this mark for commenting purpose.",type:"string"},hconcat:{description:"A list of views to be concatenated and put into a row.",items:{$ref:"#/definitions/Spec"},type:"array"},name:{description:"Name of the visualization for later reference.",type:"string"},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},spacing:{description:"The spacing in pixels between sub-views of the concat operator.\n\n__Default value__: `10`",type:"number"},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"}},required:["hconcat"],type:"object"},RepeatSpec:{additionalProperties:!1,description:"Base interface for a repeat specification.",properties:{align:{anyOf:[{$ref:"#/definitions/LayoutAlign"},{$ref:"#/definitions/RowCol<LayoutAlign>"}],description:'The alignment to apply to grid rows and columns.\nThe supported string values are `"all"`, `"each"`, and `"none"`.\n\n- For `"none"`, a flow layout will be used, in which adjacent subviews are simply placed one after the other.\n- For `"each"`, subviews will be aligned into a clean grid structure, but each row or column may be of variable size.\n- For `"all"`, subviews will be aligned and each row or column will be sized identically based on the maximum observed size. String values for this property will be applied to both grid rows and columns.\n\nAlternatively, an object value of the form `{"row": string, "column": string}` can be used to supply different alignments for rows and columns.\n\n__Default value:__ `"all"`.'},bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{anyOf:[{type:"boolean"},{$ref:"#/definitions/RowCol<boolean>"}],description:'Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\nAn object value of the form `{"row": boolean, "column": boolean}` can be used to supply different centering values for rows and columns.\n\n__Default value:__ `false`'},columns:{description:"The number of columns to include in the view composition layout. If unspecified, an infinite number of columns (a single row) will be assumed.",type:"number"},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},description:{description:"Description of this mark for commenting purpose.",type:"string"},name:{description:"Name of the visualization for later reference.",type:"string"},repeat:{anyOf:[{$ref:"#/definitions/Repeat"},{items:{type:"string"},type:"array"}],description:"An object that describes what fields should be repeated into views that are laid out as a `row` or `column`."},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},spacing:{anyOf:[{type:"number"},{$ref:"#/definitions/RowCol<number>"}],description:'The spacing in pixels between sub-views of the composition operator.\nAn object of the form `{"row": number, "column": number}` can be used to set\ndifferent spacing values for rows and columns.\n\n__Default value__: `20`'},spec:{$ref:"#/definitions/Spec"},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"}},required:["repeat","spec"],type:"object"},Spec:{anyOf:[{$ref:"#/definitions/FacetedUnitSpec"},{$ref:"#/definitions/LayerSpec"},{$ref:"#/definitions/FacetSpec"},{$ref:"#/definitions/RepeatSpec"},{$ref:"#/definitions/ConcatSpec"},{$ref:"#/definitions/VConcatSpec"},{$ref:"#/definitions/HConcatSpec"}],description:"Any specification in Vega-Lite."},"GenericUnitSpec<Encoding,AnyMark>":{additionalProperties:!1,description:"Base interface for a unit (single-view) specification.",properties:{data:{$ref:"#/definitions/Data",description:"An object describing the data source"},description:{description:"Description of this mark for commenting purpose.",type:"string"},encoding:{$ref:"#/definitions/Encoding",description:"A key-value mapping between encoding channels and definition of fields."},height:{description:'The height of a visualization.\n\n__Default value:__\n- If a view\'s [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `"fit"` or its y-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- For y-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the height is [determined by the range step, paddings, and the cardinality of the field mapped to y-channel](https://vega.github.io/vega-lite/docs/scale.html#band). Otherwise, if the `rangeStep` is `null`, the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- If no field is mapped to `y` channel, the `height` will be the value of `rangeStep`.\n\n__Note__: For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the height of a single view.\n\n__See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.',type:"number"},mark:{$ref:"#/definitions/AnyMark",description:'A string describing the mark type (one of `"bar"`, `"circle"`, `"square"`, `"tick"`, `"line"`,\n`"area"`, `"point"`, `"rule"`, `"geoshape"`, and `"text"`) or a [mark definition object](https://vega.github.io/vega-lite/docs/mark.html#mark-def).'},name:{description:"Name of the visualization for later reference.",type:"string"},projection:{$ref:"#/definitions/Projection",description:'An object defining properties of geographic projection, which will be applied to `shape` path for `"geoshape"` marks\nand to `latitude` and `"longitude"` channels for other marks.'},selection:{additionalProperties:{$ref:"#/definitions/SelectionDef"},description:"A key-value mapping between selection names and definitions.",type:"object"},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},view:{$ref:"#/definitions/ViewBackground",description:"An object defining the view background's fill and stroke.\n\n__Default value:__ none (transparent)"},width:{description:'The width of a visualization.\n\n__Default value:__ This will be determined by the following rules:\n\n- If a view\'s [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `"fit"` or its x-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- For x-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the width is [determined by the range step, paddings, and the cardinality of the field mapped to x-channel](https://vega.github.io/vega-lite/docs/scale.html#band).   Otherwise, if the `rangeStep` is `null`, the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- If no field is mapped to `x` channel, the `width` will be the value of [`config.scale.textXRangeStep`](https://vega.github.io/vega-lite/docs/size.html#default-width-and-height) for `text` mark and the value of `rangeStep` for other marks.\n\n__Note:__ For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the width of a single view.\n\n__See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.',type:"number"}},required:["mark"],type:"object"},VConcatSpec:{additionalProperties:!1,description:"Base interface for a vertical concatenation specification.",properties:{bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{description:"Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\n__Default value:__ `false`",type:"boolean"},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},description:{description:"Description of this mark for commenting purpose.",type:"string"},name:{description:"Name of the visualization for later reference.",type:"string"},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},spacing:{description:"The spacing in pixels between sub-views of the concat operator.\n\n__Default value__: `10`",type:"number"},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},vconcat:{description:"A list of views to be concatenated and put into a column.",items:{$ref:"#/definitions/Spec"},type:"array"}},required:["vconcat"],type:"object"},Header:{additionalProperties:!1,description:"Headers of row / column channels for faceted plots.",properties:{format:{description:"The formatting pattern for labels. This is D3's [number format pattern](https://github.com/d3/d3-format#locale_format) for quantitative fields and D3's [time format pattern](https://github.com/d3/d3-time-format#locale_format) for time field.\n\nSee the [format documentation](https://vega.github.io/vega-lite/docs/format.html) for more information.\n\n__Default value:__  derived from [numberFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for quantitative fields and from [timeFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for temporal fields.",type:"string"},labelAngle:{description:"The rotation angle of the header labels.\n\n__Default value:__ `0` for column header, `-90` for row header.",maximum:360,minimum:-360,type:"number"},labelColor:{description:"The color of the header label, can be in hex color code or regular color name.",type:"string"},labelFont:{description:"The font of the header label.",type:"string"},labelFontSize:{description:"The font size of the header label, in pixels.",minimum:0,type:"number"},labelLimit:{description:"The maximum length of the header label in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},labelPadding:{description:"The padding, in pixel, between facet header's label and the plot.\n\n__Default value:__ `10`",type:"number"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},titleAnchor:{description:'The anchor position for placing the title. One of `"start"`, `"middle"`, or `"end"`. For example, with an orientation of top these anchor positions map to a left-, center-, or right-aligned title.\n\n__Default value:__ `"middle"` for [single](https://vega.github.io/vega-lite/docs/spec.html) and [layered](https://vega.github.io/vega-lite/docs/layer.html) views.\n`"start"` for other composite views.\n\n__Note:__ [For now](https://github.com/vega/vega-lite/issues/2875), `anchor` is only customizable only for [single](https://vega.github.io/vega-lite/docs/spec.html) and [layered](https://vega.github.io/vega-lite/docs/layer.html) views.  For other composite views, `anchor` is always `"start"`.',type:"string"},titleAngle:{description:"The rotation angle of the header title.\n\n__Default value:__ `0`.",maximum:360,minimum:-360,type:"number"},titleBaseline:{$ref:"#/definitions/TextBaseline",description:'Vertical text baseline for the header title. One of `"top"`, `"bottom"`, `"middle"`.\n\n__Default value:__ `"middle"`'},titleColor:{description:"Color of the header title, can be in hex color code or regular color name.",type:"string"},titleFont:{description:'Font of the header title. (e.g., `"Helvetica Neue"`).',type:"string"},titleFontSize:{description:"Font size of the header title.",minimum:0,type:"number"},titleFontWeight:{$ref:"#/definitions/FontWeight",description:'Font weight of the header title.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},titleLimit:{description:"The maximum length of the header title in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},titlePadding:{description:"The padding, in pixel, between facet header's title and the label.\n\n__Default value:__ `10`",type:"number"}},type:"object"},HeaderConfig:{additionalProperties:!1,properties:{labelAngle:{description:"The rotation angle of the header labels.\n\n__Default value:__ `0` for column header, `-90` for row header.",maximum:360,minimum:-360,type:"number"},labelColor:{description:"The color of the header label, can be in hex color code or regular color name.",type:"string"},labelFont:{description:"The font of the header label.",type:"string"},labelFontSize:{description:"The font size of the header label, in pixels.",minimum:0,type:"number"},labelLimit:{description:"The maximum length of the header label in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},labelPadding:{description:"The padding, in pixel, between facet header's label and the plot.\n\n__Default value:__ `10`",type:"number"},titleAnchor:{description:'The anchor position for placing the title. One of `"start"`, `"middle"`, or `"end"`. For example, with an orientation of top these anchor positions map to a left-, center-, or right-aligned title.\n\n__Default value:__ `"middle"` for [single](https://vega.github.io/vega-lite/docs/spec.html) and [layered](https://vega.github.io/vega-lite/docs/layer.html) views.\n`"start"` for other composite views.\n\n__Note:__ [For now](https://github.com/vega/vega-lite/issues/2875), `anchor` is only customizable only for [single](https://vega.github.io/vega-lite/docs/spec.html) and [layered](https://vega.github.io/vega-lite/docs/layer.html) views.  For other composite views, `anchor` is always `"start"`.',type:"string"},titleAngle:{description:"The rotation angle of the header title.\n\n__Default value:__ `0`.",maximum:360,minimum:-360,type:"number"},titleBaseline:{$ref:"#/definitions/TextBaseline",description:'Vertical text baseline for the header title. One of `"top"`, `"bottom"`, `"middle"`.\n\n__Default value:__ `"middle"`'},titleColor:{description:"Color of the header title, can be in hex color code or regular color name.",type:"string"},titleFont:{description:'Font of the header title. (e.g., `"Helvetica Neue"`).',type:"string"},titleFontSize:{description:"Font size of the header title.",minimum:0,type:"number"},titleFontWeight:{$ref:"#/definitions/FontWeight",description:'Font weight of the header title.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},titleLimit:{description:"The maximum length of the header title in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},titlePadding:{description:"The padding, in pixel, between facet header's title and the label.\n\n__Default value:__ `10`",type:"number"}},type:"object"},ImputeMethod:{enum:["value","median","max","min","mean"],type:"string"},ImputeParams:{additionalProperties:!1,properties:{frame:{description:"A frame specification as a two-element array used to control the window over which the specified method is applied. The array entries should either be a number indicating the offset from the current data object, or null to indicate unbounded rows preceding or following the current data object.  For example, the value `[-5, 5]` indicates that the window should include five objects preceding and five objects following the current object.\n\n__Default value:__:  `[null, null]` indicating that the window includes all objects.",items:{type:["null","number"]},type:"array"},keyvals:{anyOf:[{items:{},type:"array"},{$ref:"#/definitions/ImputeSequence"}],description:"Defines the key values that should be considered for imputation.\nAn array of key values or an object defining a [number sequence](https://vega.github.io/vega-lite/docs/impute.html#sequence-def).\n\nIf provided, this will be used in addition to the key values observed within the input data.  If not provided, the values will be derived from all unique values of the `key` field. For `impute` in `encoding`, the key field is the x-field if the y-field is imputed, or vice versa.\n\nIf there is no impute grouping, this property _must_ be specified."},method:{$ref:"#/definitions/ImputeMethod",description:'The imputation method to use for the field value of imputed data objects.\nOne of `value`, `mean`, `median`, `max` or `min`.\n\n__Default value:__  `"value"`'},value:{description:'The field value to use when the imputation `method` is `"value"`.'}},type:"object"},ImputeSequence:{additionalProperties:!1,properties:{start:{description:"The starting value of the sequence.\n__Default value:__ `0`",type:"number"},step:{description:"The step value between sequence entries.\n__Default value:__ `1` or `-1` if `stop < start`",type:"number"},stop:{description:"The ending value(exclusive) of the sequence.",type:"number"}},required:["stop"],type:"object"},ImputeTransform:{additionalProperties:!1,properties:{frame:{description:"A frame specification as a two-element array used to control the window over which the specified method is applied. The array entries should either be a number indicating the offset from the current data object, or null to indicate unbounded rows preceding or following the current data object.  For example, the value `[-5, 5]` indicates that the window should include five objects preceding and five objects following the current object.\n\n__Default value:__:  `[null, null]` indicating that the window includes all objects.",items:{type:["null","number"]},type:"array"},groupby:{description:"An optional array of fields by which to group the values.\nImputation will then be performed on a per-group basis.",items:{type:"string"},type:"array"},impute:{description:"The data field for which the missing values should be imputed.",type:"string"},key:{description:"A key field that uniquely identifies data objects within a group.\nMissing key values (those occurring in the data but not in the current group) will be imputed.",type:"string"},keyvals:{anyOf:[{items:{},type:"array"},{$ref:"#/definitions/ImputeSequence"}],description:"Defines the key values that should be considered for imputation.\nAn array of key values or an object defining a [number sequence](https://vega.github.io/vega-lite/docs/impute.html#sequence-def).\n\nIf provided, this will be used in addition to the key values observed within the input data.  If not provided, the values will be derived from all unique values of the `key` field. For `impute` in `encoding`, the key field is the x-field if the y-field is imputed, or vice versa.\n\nIf there is no impute grouping, this property _must_ be specified."},method:{$ref:"#/definitions/ImputeMethod",description:'The imputation method to use for the field value of imputed data objects.\nOne of `value`, `mean`, `median`, `max` or `min`.\n\n__Default value:__  `"value"`'},value:{description:'The field value to use when the imputation `method` is `"value"`.'}},required:["impute","key"],type:"object"},InlineData:{additionalProperties:!1,properties:{format:{$ref:"#/definitions/DataFormat",description:"An object that specifies the format for parsing the data."},name:{description:"Provide a placeholder name and bind data at runtime.",type:"string"},values:{$ref:"#/definitions/InlineDataset",description:"The full data set, included inline. This can be an array of objects or primitive values, an object, or a string.\nArrays of primitive values are ingested as objects with a `data` property. Strings are parsed according to the specified format type."}},required:["values"],type:"object"},InlineDataset:{anyOf:[{items:{type:"number"},type:"array"},{items:{type:"string"},type:"array"},{items:{type:"boolean"},type:"array"},{items:{type:"object"},type:"array"},{type:"string"},{type:"object"}]},Interpolate:{enum:["linear","linear-closed","step","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","bundle","monotone"],type:"string"},IntervalSelection:{additionalProperties:!1,properties:{bind:{description:"Establishes a two-way binding between the interval selection and the scales\nused within the same view. This allows a user to interactively pan and\nzoom the view.",enum:["scales"],type:"string"},empty:{description:"By default, all data values are considered to lie within an empty selection.\nWhen set to `none`, empty selections contain no data values.",enum:["all","none"],type:"string"},encodings:{description:"An array of encoding channels. The corresponding data field values\nmust match for a data tuple to fall within the selection.",items:{$ref:"#/definitions/SingleDefChannel"},type:"array"},fields:{description:"An array of field names whose values must match for a data tuple to\nfall within the selection.",items:{type:"string"},type:"array"},init:{$ref:"#/definitions/SelectionInitArrayMapping",description:"Initialize the selection with a mapping between [projected channels or field names](https://vega.github.io/vega-lite/docs/project.html) and arrays of\ninitial values."},mark:{$ref:"#/definitions/BrushConfig",description:"An interval selection also adds a rectangle mark to depict the\nextents of the interval. The `mark` property can be used to customize the\nappearance of the mark."},on:{$ref:"#/definitions/EventStream",description:"A [Vega event stream](https://vega.github.io/vega/docs/event-streams/) (object or selector) that triggers the selection.\nFor interval selections, the event stream must specify a [start and end](https://vega.github.io/vega/docs/event-streams/#between-filters)."},resolve:{$ref:"#/definitions/SelectionResolution",description:"With layered and multi-view displays, a strategy that determines how\nselections' data queries are resolved when applied in a filter transform,\nconditional encoding rule, or scale domain."},translate:{description:"When truthy, allows a user to interactively move an interval selection\nback-and-forth. Can be `true`, `false` (to disable panning), or a\n[Vega event stream definition](https://vega.github.io/vega/docs/event-streams/)\nwhich must include a start and end event to trigger continuous panning.\n\n__Default value:__ `true`, which corresponds to\n`[mousedown, window:mouseup] > window:mousemove!` which corresponds to\nclicks and dragging within an interval selection to reposition it.",type:["string","boolean"]},type:{enum:["interval"],type:"string"},zoom:{description:"When truthy, allows a user to interactively resize an interval selection.\nCan be `true`, `false` (to disable zooming), or a [Vega event stream\ndefinition](https://vega.github.io/vega/docs/event-streams/). Currently,\nonly `wheel` events are supported.\n\n\n__Default value:__ `true`, which corresponds to `wheel!`.",type:["string","boolean"]}},required:["type"],type:"object"},IntervalSelectionConfig:{additionalProperties:!1,properties:{bind:{description:"Establishes a two-way binding between the interval selection and the scales\nused within the same view. This allows a user to interactively pan and\nzoom the view.",enum:["scales"],type:"string"},empty:{description:"By default, all data values are considered to lie within an empty selection.\nWhen set to `none`, empty selections contain no data values.",enum:["all","none"],type:"string"},encodings:{description:"An array of encoding channels. The corresponding data field values\nmust match for a data tuple to fall within the selection.",items:{$ref:"#/definitions/SingleDefChannel"},type:"array"},fields:{description:"An array of field names whose values must match for a data tuple to\nfall within the selection.",items:{type:"string"},type:"array"},init:{$ref:"#/definitions/SelectionInitArrayMapping",description:"Initialize the selection with a mapping between [projected channels or field names](https://vega.github.io/vega-lite/docs/project.html) and arrays of\ninitial values."},mark:{$ref:"#/definitions/BrushConfig",description:"An interval selection also adds a rectangle mark to depict the\nextents of the interval. The `mark` property can be used to customize the\nappearance of the mark."},on:{$ref:"#/definitions/EventStream",description:"A [Vega event stream](https://vega.github.io/vega/docs/event-streams/) (object or selector) that triggers the selection.\nFor interval selections, the event stream must specify a [start and end](https://vega.github.io/vega/docs/event-streams/#between-filters)."},resolve:{$ref:"#/definitions/SelectionResolution",description:"With layered and multi-view displays, a strategy that determines how\nselections' data queries are resolved when applied in a filter transform,\nconditional encoding rule, or scale domain."},translate:{description:"When truthy, allows a user to interactively move an interval selection\nback-and-forth. Can be `true`, `false` (to disable panning), or a\n[Vega event stream definition](https://vega.github.io/vega/docs/event-streams/)\nwhich must include a start and end event to trigger continuous panning.\n\n__Default value:__ `true`, which corresponds to\n`[mousedown, window:mouseup] > window:mousemove!` which corresponds to\nclicks and dragging within an interval selection to reposition it.",type:["string","boolean"]},zoom:{description:"When truthy, allows a user to interactively resize an interval selection.\nCan be `true`, `false` (to disable zooming), or a [Vega event stream\ndefinition](https://vega.github.io/vega/docs/event-streams/). Currently,\nonly `wheel` events are supported.\n\n\n__Default value:__ `true`, which corresponds to `wheel!`.",type:["string","boolean"]}},type:"object"},JoinAggregateFieldDef:{additionalProperties:!1,properties:{as:{description:"The output name for the join aggregate operation.",type:"string"},field:{description:"The data field for which to compute the aggregate function. This can be omitted for functions that do not operate over a field such as `count`.",type:"string"},op:{$ref:"#/definitions/AggregateOp",description:"The aggregation operation to apply (e.g., sum, average or count). See the list of all supported operations [here](https://vega.github.io/vega-lite/docs/aggregate.html#ops)."}},required:["op","as"],type:"object"},JoinAggregateTransform:{additionalProperties:!1,properties:{groupby:{description:"The data fields for partitioning the data objects into separate groups. If unspecified, all data points will be in a single group.",items:{type:"string"},type:"array"},joinaggregate:{description:"The definition of the fields in the join aggregate, and what calculations to use.",items:{$ref:"#/definitions/JoinAggregateFieldDef"},type:"array"}},required:["joinaggregate"],type:"object"},JsonDataFormat:{additionalProperties:!1,properties:{parse:{anyOf:[{$ref:"#/definitions/Parse"},{type:"null"}],description:'If set to `null`, disable type inference based on the spec and only use type inference based on the data.\nAlternatively, a parsing directive object can be provided for explicit data types. Each property of the object corresponds to a field name, and the value to the desired data type (one of `"number"`, `"boolean"`, `"date"`, or null (do not parse the field)).\nFor example, `"parse": {"modified_on": "date"}` parses the `modified_on` field in each input record a Date value.\n\nFor `"date"`, we parse data based using Javascript\'s [`Date.parse()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).\nFor Specific date formats can be provided (e.g., `{foo: \'date:"%m%d%Y"\'}`), using the [d3-time-format syntax](https://github.com/d3/d3-time-format#locale_format). UTC date format parsing is supported similarly (e.g., `{foo: \'utc:"%m%d%Y"\'}`). See more about [UTC time](https://vega.github.io/vega-lite/docs/timeunit.html#utc)'},property:{description:'The JSON property containing the desired data.\nThis parameter can be used when the loaded JSON file may have surrounding structure or meta-data.\nFor example `"property": "values.features"` is equivalent to retrieving `json.values.features`\nfrom the loaded JSON object.',type:"string"},type:{description:'Type of input data: `"json"`, `"csv"`, `"tsv"`, `"dsv"`.\nThe default format type is determined by the extension of the file URL.\nIf no extension is detected, `"json"` will be used by default.',enum:["json"],type:"string"}},type:"object"},LabelOverlap:{anyOf:[{type:"boolean"},{enum:["parity"],type:"string"},{enum:["greedy"],type:"string"}]},LatLongFieldDef:{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n__Note:__ Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`)',enum:["quantitative"],type:"string"}},type:"object"},LayerSpec:{additionalProperties:!1,description:"A full layered plot specification, which may contains `encoding` and `projection` properties that will be applied to underlying unit (single-view) specifications.",properties:{data:{$ref:"#/definitions/Data",description:"An object describing the data source"},description:{description:"Description of this mark for commenting purpose.",type:"string"},encoding:{$ref:"#/definitions/Encoding",description:"A shared key-value mapping between encoding channels and definition of fields in the underlying layers."},height:{description:'The height of a visualization.\n\n__Default value:__\n- If a view\'s [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `"fit"` or its y-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- For y-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the height is [determined by the range step, paddings, and the cardinality of the field mapped to y-channel](https://vega.github.io/vega-lite/docs/scale.html#band). Otherwise, if the `rangeStep` is `null`, the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- If no field is mapped to `y` channel, the `height` will be the value of `rangeStep`.\n\n__Note__: For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the height of a single view.\n\n__See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.',type:"number"},layer:{description:"Layer or single view specifications to be layered.\n\n__Note__: Specifications inside `layer` cannot use `row` and `column` channels as layering facet specifications is not allowed. Instead, use the [facet operator](https://vega.github.io/vega-lite/docs/facet.html) and place a layer inside a facet.",items:{anyOf:[{$ref:"#/definitions/LayerSpec"},{$ref:"#/definitions/UnitSpec"}]},type:"array"},name:{description:"Name of the visualization for later reference.",type:"string"},projection:{$ref:"#/definitions/Projection",description:"An object defining properties of the geographic projection shared by underlying layers."},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},view:{$ref:"#/definitions/ViewBackground",description:"An object defining the view background's fill and stroke.\n\n__Default value:__ none (transparent)"},width:{description:'The width of a visualization.\n\n__Default value:__ This will be determined by the following rules:\n\n- If a view\'s [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `"fit"` or its x-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- For x-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the width is [determined by the range step, paddings, and the cardinality of the field mapped to x-channel](https://vega.github.io/vega-lite/docs/scale.html#band).   Otherwise, if the `rangeStep` is `null`, the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- If no field is mapped to `x` channel, the `width` will be the value of [`config.scale.textXRangeStep`](https://vega.github.io/vega-lite/docs/size.html#default-width-and-height) for `text` mark and the value of `rangeStep` for other marks.\n\n__Note:__ For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the width of a single view.\n\n__See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.',type:"number"}},required:["layer"],type:"object"},LayoutAlign:{enum:["all","each","none"],type:"string"},Legend:{additionalProperties:!1,description:"Properties of a legend or boolean flag for determining whether to show it.",properties:{clipHeight:{description:"The height in pixels to clip symbol legend entries and limit their size.",type:"number"},columnPadding:{description:"The horizontal padding in pixels between symbol legend entries.\n\n__Default value:__ `10`.",type:"number"},columns:{description:"The number of columns in which to arrange symbol legend entries. A value of `0` or lower indicates a single row with one column per entry.",type:"number"},cornerRadius:{description:"Corner radius for the full legend.",type:"number"},direction:{$ref:"#/definitions/Orientation",description:'The direction of the legend, one of `"vertical"` or `"horizontal"`.\n\n__Default value:__\n- For top-/bottom-`orient`ed legends, `"horizontal"`\n- For left-/right-`orient`ed legends, `"vertical"`\n- For top/bottom-left/right-`orient`ed legends, `"horizontal"` for gradient legends and `"vertical"` for symbol legends.'},fillColor:{$ref:"#/definitions/Color",description:"Background fill color for the full legend."},format:{description:"The formatting pattern for labels. This is D3's [number format pattern](https://github.com/d3/d3-format#locale_format) for quantitative fields and D3's [time format pattern](https://github.com/d3/d3-time-format#locale_format) for time field.\n\nSee the [format documentation](https://vega.github.io/vega-lite/docs/format.html) for more information.\n\n__Default value:__  derived from [numberFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for quantitative fields and from [timeFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for temporal fields.",type:"string"},gradientLength:{description:"The length in pixels of the primary axis of a color gradient. This value corresponds to the height of a vertical gradient or the width of a horizontal gradient.\n\n__Default value:__ `200`.",minimum:0,type:"number"},gradientOpacity:{description:"Opacity of the color gradient.",type:"number"},gradientStrokeColor:{$ref:"#/definitions/Color",description:'The color of the gradient stroke, can be in hex color code or regular color name.\n\n__Default value:__ `"lightGray"`.'},gradientStrokeWidth:{description:"The width of the gradient stroke, in pixels.\n\n__Default value:__ `0`.",minimum:0,type:"number"},gradientThickness:{description:"The thickness in pixels of the color gradient. This value corresponds to the width of a vertical gradient or the height of a horizontal gradient.\n\n__Default value:__ `16`.",minimum:0,type:"number"},gridAlign:{$ref:"#/definitions/LayoutAlign",description:'The alignment to apply to symbol legends rows and columns. The supported string values are `"all"`, `"each"` (the default), and `none`. For more information, see the [grid layout documentation](https://vega.github.io/vega/docs/layout).\n\n__Default value:__ `"each"`.'},labelAlign:{$ref:"#/definitions/Align",description:"The alignment of the legend label, can be left, center, or right."},labelBaseline:{$ref:"#/definitions/TextBaseline",description:'The position of the baseline of legend label, can be `"top"`, `"middle"`, `"bottom"`, or `"alphabetic"`.\n\n__Default value:__ `"middle"`.'},labelColor:{$ref:"#/definitions/Color",description:"The color of the legend label, can be in hex color code or regular color name."},labelFont:{description:"The font of the legend label.",type:"string"},labelFontSize:{description:"The font size of legend label.\n\n__Default value:__ `10`.",minimum:0,type:"number"},labelFontStyle:{$ref:"#/definitions/FontStyle",description:"The font style of legend label."},labelFontWeight:{$ref:"#/definitions/FontWeight",description:"The font weight of legend label."},labelLimit:{description:"Maximum allowed pixel width of axis tick labels.\n\n__Default value:__ `160`.",type:"number"},labelOffset:{description:"The offset of the legend label.",type:"number"},labelOpacity:{description:"Opacity of labels.",type:"number"},labelOverlap:{$ref:"#/definitions/LabelOverlap",description:'The strategy to use for resolving overlap of labels in gradient legends. If `false`, no overlap reduction is attempted. If set to `true` (default) or `"parity"`, a strategy of removing every other label is used. If set to `"greedy"`, a linear scan of the labels is performed, removing any label that overlaps with the last visible label (this often works better for log-scaled axes).\n\n__Default value:__ `true`.'},labelPadding:{description:"Padding in pixels between the legend and legend labels.",type:"number"},labelSeparation:{description:"The minimum separation that must be between label bounding boxes for them to be considered non-overlapping (default `0`). This property is ignored if *labelOverlap* resolution is not enabled.",type:"number"},offset:{description:"The offset in pixels by which to displace the legend from the data rectangle and axes.\n\n__Default value:__ `18`.",type:"number"},orient:{$ref:"#/definitions/LegendOrient",description:'The orientation of the legend, which determines how the legend is positioned within the scene. One of `"left"`, `"right"`, `"top-left"`, `"top-right"`, `"bottom-left"`, `"bottom-right"`, `"none"`.\n\n__Default value:__ `"right"`'},padding:{description:"The padding between the border and content of the legend group.\n\n__Default value:__ `0`.",type:"number"},rowPadding:{description:"The vertical padding in pixels between symbol legend entries.\n\n__Default value:__ `2`.",type:"number"},strokeColor:{$ref:"#/definitions/Color",description:"Border stroke color for the full legend."},symbolFillColor:{$ref:"#/definitions/Color",description:"The color of the legend symbol,"},symbolOffset:{description:"Horizontal pixel offset for legend symbols.\n\n__Default value:__ `0`.",type:"number"},symbolOpacity:{description:"Opacity of the legend symbols.",type:"number"},symbolSize:{description:"The size of the legend symbol, in pixels.\n\n__Default value:__ `100`.",minimum:0,type:"number"},symbolStrokeColor:{$ref:"#/definitions/Color",description:"Stroke color for legend symbols."},symbolStrokeWidth:{description:"The width of the symbol's stroke.\n\n__Default value:__ `1.5`.",minimum:0,type:"number"},symbolType:{$ref:"#/definitions/SymbolShape",description:'Default shape type (such as "circle") for legend symbols.\nCan be one of ``"circle"`, `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, `"triangle-down"`, `"triangle-right"`, or `"triangle-left"`.\n   * In addition to a set of built-in shapes, custom shapes can be defined using [SVG path strings](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths).\n   *\n   * __Default value:__ `"circle"`.\n   *'},tickCount:{description:"The desired number of tick values for quantitative legends.",type:"number"},tickMinStep:{description:"The minimum desired step between legend ticks, in terms of scale domain values. For example, a value of `1` indicates that ticks should not be less than 1 unit apart. If `tickMinStep` is specified, the `tickCount` value will be adjusted, if necessary, to enforce the minimum step value.\n\n__Default value__: `undefined`",type:"number"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},titleAlign:{$ref:"#/definitions/Align",description:'Horizontal text alignment for legend titles.\n\n__Default value:__ `"left"`.'},titleBaseline:{$ref:"#/definitions/TextBaseline",description:'Vertical text baseline for legend titles.\n\n__Default value:__ `"top"`.'},titleColor:{$ref:"#/definitions/Color",description:"The color of the legend title, can be in hex color code or regular color name."},titleFont:{description:"The font of the legend title.",type:"string"},titleFontSize:{description:"The font size of the legend title.",type:"number"},titleFontStyle:{$ref:"#/definitions/FontStyle",description:"The font style of the legend title."},titleFontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight of the legend title.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},titleLimit:{description:"Maximum allowed pixel width of axis titles.\n\n__Default value:__ `180`.",minimum:0,type:"number"},titleOpacity:{description:"Opacity of the legend title.",type:"number"},titlePadding:{description:"The padding, in pixels, between title and legend.\n\n__Default value:__ `5`.",type:"number"},type:{description:'The type of the legend. Use `"symbol"` to create a discrete legend and `"gradient"` for a continuous color gradient.\n\n__Default value:__ `"gradient"` for non-binned quantitative fields and temporal fields; `"symbol"` otherwise.',enum:["symbol","gradient"],type:"string"},values:{description:"Explicitly set the visible legend values.",items:{anyOf:[{type:"number"},{type:"string"},{type:"boolean"},{$ref:"#/definitions/DateTime"}]},type:"array"},zindex:{description:"A non-positive integer indicating z-index of the legend.\nIf zindex is 0, legend should be drawn behind all chart elements.\nTo put them in front, use zindex = 1.",minimum:0,type:"number"}},type:"object"},LegendConfig:{additionalProperties:!1,properties:{clipHeight:{description:"The height in pixels to clip symbol legend entries and limit their size.",type:"number"},columnPadding:{description:"The horizontal padding in pixels between symbol legend entries.\n\n__Default value:__ `10`.",type:"number"},columns:{description:"The number of columns in which to arrange symbol legend entries. A value of `0` or lower indicates a single row with one column per entry.",type:"number"},cornerRadius:{description:"Corner radius for the full legend.",type:"number"},fillColor:{$ref:"#/definitions/Color",description:"Background fill color for the full legend."},gradientDirection:{$ref:"#/definitions/Orientation",description:'The default direction (`"horizontal"` or `"vertical"`) for gradient legends.\n\n__Default value:__ `"vertical"`.'},gradientHorizontalMaxLength:{description:"Max legend length for a horizontal gradient when `config.legend.gradientLength` is undefined.\n\n__Default value:__ `200`",type:"number"},gradientHorizontalMinLength:{description:"Min legend length for a horizontal gradient when `config.legend.gradientLength` is undefined.\n\n__Default value:__ `100`",type:"number"},gradientLabelLimit:{description:"The maximum allowed length in pixels of color ramp gradient labels.",type:"number"},gradientLabelOffset:{description:"Vertical offset in pixels for color ramp gradient labels.\n\n__Default value:__ `2`.",type:"number"},gradientLength:{description:"The length in pixels of the primary axis of a color gradient. This value corresponds to the height of a vertical gradient or the width of a horizontal gradient.\n\n__Default value:__ `200`.",minimum:0,type:"number"},gradientOpacity:{description:"Opacity of the color gradient.",type:"number"},gradientStrokeColor:{$ref:"#/definitions/Color",description:'The color of the gradient stroke, can be in hex color code or regular color name.\n\n__Default value:__ `"lightGray"`.'},gradientStrokeWidth:{description:"The width of the gradient stroke, in pixels.\n\n__Default value:__ `0`.",minimum:0,type:"number"},gradientThickness:{description:"The thickness in pixels of the color gradient. This value corresponds to the width of a vertical gradient or the height of a horizontal gradient.\n\n__Default value:__ `16`.",minimum:0,type:"number"},gradientVerticalMaxLength:{description:"Max legend length for a vertical gradient when `config.legend.gradientLength` is undefined.\n\n__Default value:__ `200`",type:"number"},gradientVerticalMinLength:{description:"Min legend length for a vertical gradient when `config.legend.gradientLength` is undefined.\n\n__Default value:__ `100`",type:"number"},gridAlign:{$ref:"#/definitions/LayoutAlign",description:'The alignment to apply to symbol legends rows and columns. The supported string values are `"all"`, `"each"` (the default), and `none`. For more information, see the [grid layout documentation](https://vega.github.io/vega/docs/layout).\n\n__Default value:__ `"each"`.'},labelAlign:{$ref:"#/definitions/Align",description:"The alignment of the legend label, can be left, center, or right."},labelBaseline:{$ref:"#/definitions/TextBaseline",description:'The position of the baseline of legend label, can be `"top"`, `"middle"`, `"bottom"`, or `"alphabetic"`.\n\n__Default value:__ `"middle"`.'},labelColor:{$ref:"#/definitions/Color",description:"The color of the legend label, can be in hex color code or regular color name."},labelFont:{description:"The font of the legend label.",type:"string"},labelFontSize:{description:"The font size of legend label.\n\n__Default value:__ `10`.",minimum:0,type:"number"},labelFontStyle:{$ref:"#/definitions/FontStyle",description:"The font style of legend label."},labelFontWeight:{$ref:"#/definitions/FontWeight",description:"The font weight of legend label."},labelLimit:{description:"Maximum allowed pixel width of axis tick labels.\n\n__Default value:__ `160`.",type:"number"},labelOffset:{description:"The offset of the legend label.",type:"number"},labelOpacity:{description:"Opacity of labels.",type:"number"},labelOverlap:{$ref:"#/definitions/LabelOverlap",description:'The strategy to use for resolving overlap of labels in gradient legends. If `false`, no overlap reduction is attempted. If set to `true` or `"parity"`, a strategy of removing every other label is used. If set to `"greedy"`, a linear scan of the labels is performed, removing any label that overlaps with the last visible label (this often works better for log-scaled axes).\n\n__Default value:__ `"greedy"` for `log scales otherwise `true`.\n   *'},labelPadding:{description:"Padding in pixels between the legend and legend labels.",type:"number"},labelSeparation:{description:"The minimum separation that must be between label bounding boxes for them to be considered non-overlapping (default `0`). This property is ignored if *labelOverlap* resolution is not enabled.",type:"number"},offset:{description:"The offset in pixels by which to displace the legend from the data rectangle and axes.\n\n__Default value:__ `18`.",type:"number"},orient:{$ref:"#/definitions/LegendOrient",description:'The orientation of the legend, which determines how the legend is positioned within the scene. One of "left", "right", "top-left", "top-right", "bottom-left", "bottom-right", "none".\n\n__Default value:__ `"right"`'},padding:{description:"The padding between the border and content of the legend group.\n\n__Default value:__ `0`.",type:"number"},rowPadding:{description:"The vertical padding in pixels between symbol legend entries.\n\n__Default value:__ `2`.",type:"number"},shortTimeLabels:{description:"Whether month names and weekday names should be abbreviated.\n\n__Default value:__  `false`",type:"boolean"},strokeColor:{$ref:"#/definitions/Color",description:"Border stroke color for the full legend."},strokeDash:{description:"Border stroke dash pattern for the full legend.",items:{type:"number"},type:"array"},strokeWidth:{description:"Border stroke width for the full legend.",type:"number"},symbolBaseFillColor:{$ref:"#/definitions/Color",description:'Default fill color for legend symbols. Only applied if there is no `"fill"` scale color encoding for the legend.\n\n__Default value:__ `"transparent"`.'},symbolBaseStrokeColor:{$ref:"#/definitions/Color",description:'Default stroke color for legend symbols. Only applied if there is no `"fill"` scale color encoding for the legend.\n\n__Default value:__ `"gray"`.'},symbolDirection:{$ref:"#/definitions/Orientation",description:'The default direction (`"horizontal"` or `"vertical"`) for symbol legends.\n\n__Default value:__ `"vertical"`.'},symbolFillColor:{$ref:"#/definitions/Color",description:"The color of the legend symbol,"},symbolOffset:{description:"Horizontal pixel offset for legend symbols.\n\n__Default value:__ `0`.",type:"number"},symbolOpacity:{description:"Opacity of the legend symbols.",type:"number"},symbolSize:{description:"The size of the legend symbol, in pixels.\n\n__Default value:__ `100`.",minimum:0,type:"number"},symbolStrokeColor:{$ref:"#/definitions/Color",description:"Stroke color for legend symbols."},symbolStrokeWidth:{description:"The width of the symbol's stroke.\n\n__Default value:__ `1.5`.",minimum:0,type:"number"},symbolType:{$ref:"#/definitions/SymbolShape",description:'Default shape type (such as "circle") for legend symbols.\nCan be one of ``"circle"`, `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, `"triangle-down"`, `"triangle-right"`, or `"triangle-left"`.\n   * In addition to a set of built-in shapes, custom shapes can be defined using [SVG path strings](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths).\n   *\n   * __Default value:__ `"circle"`.\n   *'},titleAlign:{$ref:"#/definitions/Align",description:'Horizontal text alignment for legend titles.\n\n__Default value:__ `"left"`.'},titleBaseline:{$ref:"#/definitions/TextBaseline",description:'Vertical text baseline for legend titles.\n\n__Default value:__ `"top"`.'},titleColor:{$ref:"#/definitions/Color",description:"The color of the legend title, can be in hex color code or regular color name."},titleFont:{description:"The font of the legend title.",type:"string"},titleFontSize:{description:"The font size of the legend title.",type:"number"},titleFontStyle:{$ref:"#/definitions/FontStyle",description:"The font style of the legend title."},titleFontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight of the legend title.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},titleLimit:{description:"Maximum allowed pixel width of axis titles.\n\n__Default value:__ `180`.",minimum:0,type:"number"},titleOpacity:{description:"Opacity of the legend title.",type:"number"},titlePadding:{description:"The padding, in pixels, between title and legend.\n\n__Default value:__ `5`.",type:"number"}},type:"object"},LegendOrient:{enum:["none","left","right","top","bottom","top-left","top-right","bottom-left","bottom-right"],type:"string"},LegendResolveMap:{additionalProperties:!1,properties:{color:{$ref:"#/definitions/ResolveMode"},fill:{$ref:"#/definitions/ResolveMode"},fillOpacity:{$ref:"#/definitions/ResolveMode"},opacity:{$ref:"#/definitions/ResolveMode"},shape:{$ref:"#/definitions/ResolveMode"},size:{$ref:"#/definitions/ResolveMode"},stroke:{$ref:"#/definitions/ResolveMode"},strokeOpacity:{$ref:"#/definitions/ResolveMode"},strokeWidth:{$ref:"#/definitions/ResolveMode"}},type:"object"},LineConfig:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align",description:'The horizontal alignment of the text. One of `"left"`, `"right"`, `"center"`.'},angle:{description:"The rotation angle of the text, in degrees.",maximum:360,minimum:0,type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'The vertical alignment of the text. One of `"top"`, `"middle"`, `"bottom"`.\n\n__Default value:__ `"middle"`'},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},cursor:{$ref:"#/definitions/Cursor",description:"The mouse cursor used over the mark. Any valid [CSS cursor type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used."},dir:{$ref:"#/definitions/Dir",description:'The direction of the text. One of `"ltr"` (left-to-right) or `"rtl"` (right-to-left). This property determines on which side is truncated in response to the limit parameter.\n\n__Default value:__ `"ltr"`'},dx:{description:"The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},dy:{description:"The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},ellipsis:{description:'The ellipsis string for text truncated in response to the limit parameter.\n\n__Default value:__ `"…"`',type:"string"},fill:{$ref:"#/definitions/Color",description:"Default Fill Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},filled:{description:"Whether the mark's color should be used as fill color instead of stroke color.\n\n__Default value:__ `false` for `point`, `line` and `rule`; otherwise, `true`.\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).",type:"boolean"},font:{description:'The typeface to set the text in (e.g., `"Helvetica Neue"`).',type:"string"},fontSize:{description:"The font size, in pixels.",type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:'The font style (e.g., `"italic"`).'},fontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},href:{description:"A URL to load upon mouse click. If defined, the mark acts as a hyperlink.",format:"uri",type:"string"},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method to use for line and area marks. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: alternate between horizontal and vertical segments, as in a step function.\n- `"step-before"`: alternate between vertical and horizontal segments, as in a step function.\n- `"step-after"`: alternate between horizontal and vertical segments, as in a step function.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},limit:{description:"The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},orient:{$ref:"#/definitions/Orient",description:"The orientation of a non-stacked bar, tick, area, and line charts.\nThe value is either horizontal (default) or vertical.\n- For bar, rule and tick, this determines whether the size of the bar and tick\nshould be applied to x or y dimension.\n- For area, this property determines the orient property of the Vega output.\n- For line and trail marks, this property determines the sort order of the points in the line\nif `config.sortLineBy` is not specified.\nFor stacked charts, this is always determined by the orientation of the stack;\ntherefore explicitly specified value will be ignored."},point:{anyOf:[{type:"boolean"},{$ref:"#/definitions/OverlayMarkDef"},{enum:["transparent"],type:"string"}],description:'A flag for overlaying points on top of line or area marks, or an object defining the properties of the overlayed points.\n\n- If this property is `"transparent"`, transparent points will be used (for enhancing tooltips and selections).\n\n- If this property is an empty object (`{}`) or `true`, filled points with default properties will be used.\n\n- If this property is `false`, no points would be automatically added to line or area marks.\n\n__Default value:__ `false`.'},radius:{description:"Polar coordinate radial offset, in pixels, of the text label from the origin determined by the `x` and `y` properties.",minimum:0,type:"number"},shape:{description:'The default symbol shape to use. One of: `"circle"` (default), `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, or `"triangle-down"`, or a custom SVG path.\n\n__Default value:__ `"circle"`',type:"string"},size:{description:"Default size for marks.\n- For `point`/`circle`/`square`, this represents the pixel area of the marks. For example: in the case of circles, the radius is determined in part by the square root of the size value.\n- For `bar`, this represents the band size of the bar, in pixels.\n- For `text`, this represents the font size, in pixels.\n\n__Default value:__ `30` for point, circle, square marks; `rangeStep` - 1 for bar marks with discrete dimensions; `5` for bar marks with continuous dimensions; `11` for text marks.",minimum:0,type:"number"},stroke:{$ref:"#/definitions/Color",description:"Default Stroke Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},tension:{description:"Depending on the interpolation type, sets the tension parameter (for line and area marks).",maximum:1,minimum:0,type:"number"},text:{description:"Placeholder text if the `text` channel is not specified",type:"string"},theta:{description:'Polar coordinate angle, in radians, of the text label from the origin determined by the `x` and `y` properties. Values for `theta` follow the same convention of `arc` mark `startAngle` and `endAngle` properties: angles are measured in radians, with `0` indicating "north".',type:"number"},tooltip:{anyOf:[{type:"string"},{$ref:"#/definitions/TooltipContent"},{type:"null"}],description:'The tooltip text string to show upon mouse hover or an object defining which fields should the tooltip be derived from.\n\n- If `tooltip` is `{"content": "encoding"}`, then all fields from `encoding` will be used.\n- If `tooltip` is `{"content": "data"}`, then all fields that appear in the highlighted data point will be used.\n- If set to `null`, then no tooltip will be used.'}},type:"object"},LocalMultiTimeUnit:{enum:["yearquarter","yearquartermonth","yearmonth","yearmonthdate","yearmonthdatehours","yearmonthdatehoursminutes","yearmonthdatehoursminutesseconds","quartermonth","monthdate","monthdatehours","hoursminutes","hoursminutesseconds","minutesseconds","secondsmilliseconds"],type:"string"},LocalSingleTimeUnit:{enum:["year","quarter","month","day","date","hours","minutes","seconds","milliseconds"],type:"string"},"LogicalAnd<Predicate>":{additionalProperties:!1,properties:{and:{items:{$ref:"#/definitions/LogicalOperand<Predicate>"},type:"array"}},required:["and"],type:"object"},SelectionAnd:{additionalProperties:!1,properties:{and:{items:{$ref:"#/definitions/SelectionOperand"},type:"array"}},required:["and"],type:"object"},"LogicalNot<Predicate>":{additionalProperties:!1,properties:{not:{$ref:"#/definitions/LogicalOperand<Predicate>"}},required:["not"],type:"object"},SelectionNot:{additionalProperties:!1,properties:{not:{$ref:"#/definitions/SelectionOperand"}},required:["not"],type:"object"},"LogicalOperand<Predicate>":{anyOf:[{$ref:"#/definitions/LogicalNot<Predicate>"},{$ref:"#/definitions/LogicalAnd<Predicate>"},{$ref:"#/definitions/LogicalOr<Predicate>"},{$ref:"#/definitions/Predicate"}]},SelectionOperand:{anyOf:[{$ref:"#/definitions/SelectionNot"},{$ref:"#/definitions/SelectionAnd"},{$ref:"#/definitions/SelectionOr"},{type:"string"}]},"LogicalOr<Predicate>":{additionalProperties:!1,properties:{or:{items:{$ref:"#/definitions/LogicalOperand<Predicate>"},type:"array"}},required:["or"],type:"object"},SelectionOr:{additionalProperties:!1,properties:{or:{items:{$ref:"#/definitions/SelectionOperand"},type:"array"}},required:["or"],type:"object"},LookupData:{additionalProperties:!1,properties:{data:{$ref:"#/definitions/Data",description:"Secondary data source to lookup in."},fields:{description:"Fields in foreign data to lookup.\nIf not specified, the entire object is queried.",items:{type:"string"},type:"array"},key:{description:"Key in data to lookup.",type:"string"}},required:["data","key"],type:"object"},LookupTransform:{additionalProperties:!1,properties:{as:{anyOf:[{type:"string"},{items:{type:"string"},type:"array"}],description:"The field or fields for storing the computed formula value.\nIf `from.fields` is specified, the transform will use the same names for `as`.\nIf `from.fields` is not specified, `as` has to be a string and we put the whole object into the data under the specified name."},default:{description:"The default value to use if lookup fails.\n\n__Default value:__ `null`",type:"string"},from:{$ref:"#/definitions/LookupData",description:"Secondary data reference."},lookup:{description:"Key in primary data source.",type:"string"}},required:["lookup","from"],type:"object"},Mark:{description:"All types of primitive marks.",enum:["area","bar","line","trail","point","text","tick","rect","rule","circle","square","geoshape"],type:"string"},MarkConfig:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align",description:'The horizontal alignment of the text. One of `"left"`, `"right"`, `"center"`.'},angle:{description:"The rotation angle of the text, in degrees.",maximum:360,minimum:0,type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'The vertical alignment of the text. One of `"top"`, `"middle"`, `"bottom"`.\n\n__Default value:__ `"middle"`'},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},cursor:{$ref:"#/definitions/Cursor",description:"The mouse cursor used over the mark. Any valid [CSS cursor type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used."},dir:{$ref:"#/definitions/Dir",description:'The direction of the text. One of `"ltr"` (left-to-right) or `"rtl"` (right-to-left). This property determines on which side is truncated in response to the limit parameter.\n\n__Default value:__ `"ltr"`'},dx:{description:"The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},dy:{description:"The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},ellipsis:{description:'The ellipsis string for text truncated in response to the limit parameter.\n\n__Default value:__ `"…"`',type:"string"},fill:{$ref:"#/definitions/Color",description:"Default Fill Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},filled:{description:"Whether the mark's color should be used as fill color instead of stroke color.\n\n__Default value:__ `false` for `point`, `line` and `rule`; otherwise, `true`.\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).",type:"boolean"},font:{description:'The typeface to set the text in (e.g., `"Helvetica Neue"`).',type:"string"},fontSize:{description:"The font size, in pixels.",type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:'The font style (e.g., `"italic"`).'},fontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},href:{description:"A URL to load upon mouse click. If defined, the mark acts as a hyperlink.",format:"uri",type:"string"},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method to use for line and area marks. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: alternate between horizontal and vertical segments, as in a step function.\n- `"step-before"`: alternate between vertical and horizontal segments, as in a step function.\n- `"step-after"`: alternate between horizontal and vertical segments, as in a step function.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},limit:{description:"The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},orient:{$ref:"#/definitions/Orient",description:"The orientation of a non-stacked bar, tick, area, and line charts.\nThe value is either horizontal (default) or vertical.\n- For bar, rule and tick, this determines whether the size of the bar and tick\nshould be applied to x or y dimension.\n- For area, this property determines the orient property of the Vega output.\n- For line and trail marks, this property determines the sort order of the points in the line\nif `config.sortLineBy` is not specified.\nFor stacked charts, this is always determined by the orientation of the stack;\ntherefore explicitly specified value will be ignored."},radius:{description:"Polar coordinate radial offset, in pixels, of the text label from the origin determined by the `x` and `y` properties.",minimum:0,type:"number"},shape:{description:'The default symbol shape to use. One of: `"circle"` (default), `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, or `"triangle-down"`, or a custom SVG path.\n\n__Default value:__ `"circle"`',type:"string"},size:{description:"Default size for marks.\n- For `point`/`circle`/`square`, this represents the pixel area of the marks. For example: in the case of circles, the radius is determined in part by the square root of the size value.\n- For `bar`, this represents the band size of the bar, in pixels.\n- For `text`, this represents the font size, in pixels.\n\n__Default value:__ `30` for point, circle, square marks; `rangeStep` - 1 for bar marks with discrete dimensions; `5` for bar marks with continuous dimensions; `11` for text marks.",minimum:0,type:"number"},stroke:{$ref:"#/definitions/Color",description:"Default Stroke Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},tension:{description:"Depending on the interpolation type, sets the tension parameter (for line and area marks).",maximum:1,minimum:0,type:"number"},text:{description:"Placeholder text if the `text` channel is not specified",type:"string"},theta:{description:'Polar coordinate angle, in radians, of the text label from the origin determined by the `x` and `y` properties. Values for `theta` follow the same convention of `arc` mark `startAngle` and `endAngle` properties: angles are measured in radians, with `0` indicating "north".',type:"number"},tooltip:{anyOf:[{type:"string"},{$ref:"#/definitions/TooltipContent"},{type:"null"}],description:'The tooltip text string to show upon mouse hover or an object defining which fields should the tooltip be derived from.\n\n- If `tooltip` is `{"content": "encoding"}`, then all fields from `encoding` will be used.\n- If `tooltip` is `{"content": "data"}`, then all fields that appear in the highlighted data point will be used.\n- If set to `null`, then no tooltip will be used.'}},type:"object"},MarkDef:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align",description:'The horizontal alignment of the text. One of `"left"`, `"right"`, `"center"`.'},angle:{description:"The rotation angle of the text, in degrees.",maximum:360,minimum:0,type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'The vertical alignment of the text. One of `"top"`, `"middle"`, `"bottom"`.\n\n__Default value:__ `"middle"`'},binSpacing:{description:"Offset between bars for binned field.  Ideal value for this is either 0 (Preferred by statisticians) or 1 (Vega-Lite Default, D3 example style).\n\n__Default value:__ `1`",minimum:0,type:"number"},clip:{description:"Whether a mark be clipped to the enclosing group’s width and height.",type:"boolean"},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},cursor:{$ref:"#/definitions/Cursor",description:"The mouse cursor used over the mark. Any valid [CSS cursor type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used."},dir:{$ref:"#/definitions/Dir",description:'The direction of the text. One of `"ltr"` (left-to-right) or `"rtl"` (right-to-left). This property determines on which side is truncated in response to the limit parameter.\n\n__Default value:__ `"ltr"`'},dx:{description:"The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},dy:{description:"The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},ellipsis:{description:'The ellipsis string for text truncated in response to the limit parameter.\n\n__Default value:__ `"…"`',type:"string"},fill:{$ref:"#/definitions/Color",description:"Default Fill Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},filled:{description:"Whether the mark's color should be used as fill color instead of stroke color.\n\n__Default value:__ `false` for `point`, `line` and `rule`; otherwise, `true`.\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).",type:"boolean"},font:{description:'The typeface to set the text in (e.g., `"Helvetica Neue"`).',type:"string"},fontSize:{description:"The font size, in pixels.",type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:'The font style (e.g., `"italic"`).'},fontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},href:{description:"A URL to load upon mouse click. If defined, the mark acts as a hyperlink.",format:"uri",type:"string"},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method to use for line and area marks. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: alternate between horizontal and vertical segments, as in a step function.\n- `"step-before"`: alternate between vertical and horizontal segments, as in a step function.\n- `"step-after"`: alternate between horizontal and vertical segments, as in a step function.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},limit:{description:"The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},line:{anyOf:[{type:"boolean"},{$ref:"#/definitions/OverlayMarkDef"}],description:"A flag for overlaying line on top of area marks, or an object defining the properties of the overlayed lines.\n\n- If this value is an empty object (`{}`) or `true`, lines with default properties will be used.\n\n- If this value is `false`, no lines would be automatically added to area marks.\n\n__Default value:__ `false`."},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},orient:{$ref:"#/definitions/Orient",description:"The orientation of a non-stacked bar, tick, area, and line charts.\nThe value is either horizontal (default) or vertical.\n- For bar, rule and tick, this determines whether the size of the bar and tick\nshould be applied to x or y dimension.\n- For area, this property determines the orient property of the Vega output.\n- For line and trail marks, this property determines the sort order of the points in the line\nif `config.sortLineBy` is not specified.\nFor stacked charts, this is always determined by the orientation of the stack;\ntherefore explicitly specified value will be ignored."},point:{anyOf:[{type:"boolean"},{$ref:"#/definitions/OverlayMarkDef"},{enum:["transparent"],type:"string"}],description:'A flag for overlaying points on top of line or area marks, or an object defining the properties of the overlayed points.\n\n- If this property is `"transparent"`, transparent points will be used (for enhancing tooltips and selections).\n\n- If this property is an empty object (`{}`) or `true`, filled points with default properties will be used.\n\n- If this property is `false`, no points would be automatically added to line or area marks.\n\n__Default value:__ `false`.'},radius:{description:"Polar coordinate radial offset, in pixels, of the text label from the origin determined by the `x` and `y` properties.",minimum:0,type:"number"},shape:{description:'The default symbol shape to use. One of: `"circle"` (default), `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, or `"triangle-down"`, or a custom SVG path.\n\n__Default value:__ `"circle"`',type:"string"},size:{description:"Default size for marks.\n- For `point`/`circle`/`square`, this represents the pixel area of the marks. For example: in the case of circles, the radius is determined in part by the square root of the size value.\n- For `bar`, this represents the band size of the bar, in pixels.\n- For `text`, this represents the font size, in pixels.\n\n__Default value:__ `30` for point, circle, square marks; `rangeStep` - 1 for bar marks with discrete dimensions; `5` for bar marks with continuous dimensions; `11` for text marks.",minimum:0,type:"number"},stroke:{$ref:"#/definitions/Color",description:"Default Stroke Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},style:{anyOf:[{type:"string"},{items:{type:"string"},type:"array"}],description:'A string or array of strings indicating the name of custom styles to apply to the mark. A style is a named collection of mark property defaults defined within the [style configuration](https://vega.github.io/vega-lite/docs/mark.html#style-config). If style is an array, later styles will override earlier styles. Any [mark properties](https://vega.github.io/vega-lite/docs/encoding.html#mark-prop) explicitly defined within the `encoding` will override a style default.\n\n__Default value:__ The mark\'s name.  For example, a bar mark will have style `"bar"` by default.\n__Note:__ Any specified style will augment the default style. For example, a bar mark with `"style": "foo"` will receive from `config.style.bar` and `config.style.foo` (the specified style `"foo"` has higher precedence).'},tension:{description:"Depending on the interpolation type, sets the tension parameter (for line and area marks).",maximum:1,minimum:0,type:"number"},text:{description:"Placeholder text if the `text` channel is not specified",type:"string"},theta:{description:'Polar coordinate angle, in radians, of the text label from the origin determined by the `x` and `y` properties. Values for `theta` follow the same convention of `arc` mark `startAngle` and `endAngle` properties: angles are measured in radians, with `0` indicating "north".',type:"number"},thickness:{description:"Thickness of the tick mark.\n\n__Default value:__  `1`",minimum:0,type:"number"},tooltip:{anyOf:[{type:"string"},{$ref:"#/definitions/TooltipContent"},{type:"null"}],description:'The tooltip text string to show upon mouse hover or an object defining which fields should the tooltip be derived from.\n\n- If `tooltip` is `{"content": "encoding"}`, then all fields from `encoding` will be used.\n- If `tooltip` is `{"content": "data"}`, then all fields that appear in the highlighted data point will be used.\n- If set to `null`, then no tooltip will be used.'},type:{$ref:"#/definitions/Mark",description:'The mark type. This could a primitive mark type\n(one of `"bar"`, `"circle"`, `"square"`, `"tick"`, `"line"`,\n`"area"`, `"point"`, `"geoshape"`, `"rule"`, and `"text"`)\nor a composite mark type (`"boxplot"`, `"errorband"`, `"errorbar"`).'},x2Offset:{description:"Offset for x2-position.",type:"number"},xOffset:{description:"Offset for x-position.",type:"number"},y2Offset:{description:"Offset for y2-position.",type:"number"},yOffset:{description:"Offset for y-position.",type:"number"}},required:["type"],type:"object"},Month:{maximum:12,minimum:1,type:"number"},MultiSelection:{additionalProperties:!1,properties:{empty:{description:"By default, all data values are considered to lie within an empty selection.\nWhen set to `none`, empty selections contain no data values.",enum:["all","none"],type:"string"},encodings:{description:"An array of encoding channels. The corresponding data field values\nmust match for a data tuple to fall within the selection.",items:{$ref:"#/definitions/SingleDefChannel"},type:"array"},fields:{description:"An array of field names whose values must match for a data tuple to\nfall within the selection.",items:{type:"string"},type:"array"},init:{anyOf:[{$ref:"#/definitions/SelectionInitMapping"},{items:{$ref:"#/definitions/SelectionInitMapping"},type:"array"}],description:"Initialize the selection with a mapping between [projected channels or field names](https://vega.github.io/vega-lite/docs/project.html) and an initial\nvalue (or array of values)."},nearest:{description:"When true, an invisible voronoi diagram is computed to accelerate discrete\nselection. The data value _nearest_ the mouse cursor is added to the selection.\n\nSee the [nearest transform](https://vega.github.io/vega-lite/docs/nearest.html) documentation for more information.",type:"boolean"},on:{$ref:"#/definitions/EventStream",description:"A [Vega event stream](https://vega.github.io/vega/docs/event-streams/) (object or selector) that triggers the selection.\nFor interval selections, the event stream must specify a [start and end](https://vega.github.io/vega/docs/event-streams/#between-filters)."},resolve:{$ref:"#/definitions/SelectionResolution",description:"With layered and multi-view displays, a strategy that determines how\nselections' data queries are resolved when applied in a filter transform,\nconditional encoding rule, or scale domain."},toggle:{description:"Controls whether data values should be toggled or only ever inserted into\nmulti selections. Can be `true`, `false` (for insertion only), or a\n[Vega expression](https://vega.github.io/vega/docs/expressions/).\n\n__Default value:__ `true`, which corresponds to `event.shiftKey` (i.e.,\ndata values are toggled when a user interacts with the shift-key pressed).\n\nSee the [toggle transform](https://vega.github.io/vega-lite/docs/toggle.html) documentation for more information.",type:["string","boolean"]},type:{enum:["multi"],type:"string"}},required:["type"],type:"object"},MultiSelectionConfig:{additionalProperties:!1,properties:{empty:{description:"By default, all data values are considered to lie within an empty selection.\nWhen set to `none`, empty selections contain no data values.",enum:["all","none"],type:"string"},encodings:{description:"An array of encoding channels. The corresponding data field values\nmust match for a data tuple to fall within the selection.",items:{$ref:"#/definitions/SingleDefChannel"},type:"array"},fields:{description:"An array of field names whose values must match for a data tuple to\nfall within the selection.",items:{type:"string"},type:"array"},init:{anyOf:[{$ref:"#/definitions/SelectionInitMapping"},{items:{$ref:"#/definitions/SelectionInitMapping"},type:"array"}],description:"Initialize the selection with a mapping between [projected channels or field names](https://vega.github.io/vega-lite/docs/project.html) and an initial\nvalue (or array of values)."},nearest:{description:"When true, an invisible voronoi diagram is computed to accelerate discrete\nselection. The data value _nearest_ the mouse cursor is added to the selection.\n\nSee the [nearest transform](https://vega.github.io/vega-lite/docs/nearest.html) documentation for more information.",type:"boolean"},on:{$ref:"#/definitions/EventStream",description:"A [Vega event stream](https://vega.github.io/vega/docs/event-streams/) (object or selector) that triggers the selection.\nFor interval selections, the event stream must specify a [start and end](https://vega.github.io/vega/docs/event-streams/#between-filters)."},resolve:{$ref:"#/definitions/SelectionResolution",description:"With layered and multi-view displays, a strategy that determines how\nselections' data queries are resolved when applied in a filter transform,\nconditional encoding rule, or scale domain."},toggle:{description:"Controls whether data values should be toggled or only ever inserted into\nmulti selections. Can be `true`, `false` (for insertion only), or a\n[Vega expression](https://vega.github.io/vega/docs/expressions/).\n\n__Default value:__ `true`, which corresponds to `event.shiftKey` (i.e.,\ndata values are toggled when a user interacts with the shift-key pressed).\n\nSee the [toggle transform](https://vega.github.io/vega-lite/docs/toggle.html) documentation for more information.",type:["string","boolean"]}},type:"object"},MultiTimeUnit:{anyOf:[{$ref:"#/definitions/LocalMultiTimeUnit"},{$ref:"#/definitions/UtcMultiTimeUnit"}]},NamedData:{additionalProperties:!1,properties:{format:{$ref:"#/definitions/DataFormat",description:"An object that specifies the format for parsing the data."},name:{description:"Provide a placeholder name and bind data at runtime.",type:"string"}},required:["name"],type:"object"},NiceTime:{enum:["second","minute","hour","day","week","month","year"],type:"string"},NumericFieldDefWithCondition:{$ref:"#/definitions/FieldDefWithCondition<MarkPropFieldDef,number>"},NumericValueDefWithCondition:{$ref:"#/definitions/ValueDefWithCondition<MarkPropFieldDef,number>"},OrderFieldDef:{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},sort:{$ref:"#/definitions/SortOrder",description:'The sort order. One of `"ascending"` (default) or `"descending"`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n__Note:__ Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`)'}},required:["type"],type:"object"},Orient:{enum:["horizontal","vertical"],type:"string"},Orientation:{enum:["horizontal","vertical"],type:"string"},OverlayMarkDef:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align",description:'The horizontal alignment of the text. One of `"left"`, `"right"`, `"center"`.'},angle:{description:"The rotation angle of the text, in degrees.",maximum:360,minimum:0,type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'The vertical alignment of the text. One of `"top"`, `"middle"`, `"bottom"`.\n\n__Default value:__ `"middle"`'},clip:{description:"Whether a mark be clipped to the enclosing group’s width and height.",type:"boolean"},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},cursor:{$ref:"#/definitions/Cursor",description:"The mouse cursor used over the mark. Any valid [CSS cursor type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used."},dir:{$ref:"#/definitions/Dir",description:'The direction of the text. One of `"ltr"` (left-to-right) or `"rtl"` (right-to-left). This property determines on which side is truncated in response to the limit parameter.\n\n__Default value:__ `"ltr"`'},dx:{description:"The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},dy:{description:"The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},ellipsis:{description:'The ellipsis string for text truncated in response to the limit parameter.\n\n__Default value:__ `"…"`',type:"string"},fill:{$ref:"#/definitions/Color",description:"Default Fill Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},filled:{description:"Whether the mark's color should be used as fill color instead of stroke color.\n\n__Default value:__ `false` for `point`, `line` and `rule`; otherwise, `true`.\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).",type:"boolean"},font:{description:'The typeface to set the text in (e.g., `"Helvetica Neue"`).',type:"string"},fontSize:{description:"The font size, in pixels.",type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:'The font style (e.g., `"italic"`).'},fontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},href:{description:"A URL to load upon mouse click. If defined, the mark acts as a hyperlink.",format:"uri",type:"string"},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method to use for line and area marks. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: alternate between horizontal and vertical segments, as in a step function.\n- `"step-before"`: alternate between vertical and horizontal segments, as in a step function.\n- `"step-after"`: alternate between horizontal and vertical segments, as in a step function.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},limit:{description:"The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},orient:{$ref:"#/definitions/Orient",description:"The orientation of a non-stacked bar, tick, area, and line charts.\nThe value is either horizontal (default) or vertical.\n- For bar, rule and tick, this determines whether the size of the bar and tick\nshould be applied to x or y dimension.\n- For area, this property determines the orient property of the Vega output.\n- For line and trail marks, this property determines the sort order of the points in the line\nif `config.sortLineBy` is not specified.\nFor stacked charts, this is always determined by the orientation of the stack;\ntherefore explicitly specified value will be ignored."},radius:{description:"Polar coordinate radial offset, in pixels, of the text label from the origin determined by the `x` and `y` properties.",minimum:0,type:"number"},shape:{description:'The default symbol shape to use. One of: `"circle"` (default), `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, or `"triangle-down"`, or a custom SVG path.\n\n__Default value:__ `"circle"`',type:"string"},size:{description:"Default size for marks.\n- For `point`/`circle`/`square`, this represents the pixel area of the marks. For example: in the case of circles, the radius is determined in part by the square root of the size value.\n- For `bar`, this represents the band size of the bar, in pixels.\n- For `text`, this represents the font size, in pixels.\n\n__Default value:__ `30` for point, circle, square marks; `rangeStep` - 1 for bar marks with discrete dimensions; `5` for bar marks with continuous dimensions; `11` for text marks.",minimum:0,type:"number"},stroke:{$ref:"#/definitions/Color",description:"Default Stroke Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},style:{anyOf:[{type:"string"},{items:{type:"string"},type:"array"}],description:'A string or array of strings indicating the name of custom styles to apply to the mark. A style is a named collection of mark property defaults defined within the [style configuration](https://vega.github.io/vega-lite/docs/mark.html#style-config). If style is an array, later styles will override earlier styles. Any [mark properties](https://vega.github.io/vega-lite/docs/encoding.html#mark-prop) explicitly defined within the `encoding` will override a style default.\n\n__Default value:__ The mark\'s name.  For example, a bar mark will have style `"bar"` by default.\n__Note:__ Any specified style will augment the default style. For example, a bar mark with `"style": "foo"` will receive from `config.style.bar` and `config.style.foo` (the specified style `"foo"` has higher precedence).'},tension:{description:"Depending on the interpolation type, sets the tension parameter (for line and area marks).",maximum:1,minimum:0,type:"number"},text:{description:"Placeholder text if the `text` channel is not specified",type:"string"},theta:{description:'Polar coordinate angle, in radians, of the text label from the origin determined by the `x` and `y` properties. Values for `theta` follow the same convention of `arc` mark `startAngle` and `endAngle` properties: angles are measured in radians, with `0` indicating "north".',type:"number"},tooltip:{anyOf:[{type:"string"},{$ref:"#/definitions/TooltipContent"},{type:"null"}],description:'The tooltip text string to show upon mouse hover or an object defining which fields should the tooltip be derived from.\n\n- If `tooltip` is `{"content": "encoding"}`, then all fields from `encoding` will be used.\n- If `tooltip` is `{"content": "data"}`, then all fields that appear in the highlighted data point will be used.\n- If set to `null`, then no tooltip will be used.'},x2Offset:{description:"Offset for x2-position.",type:"number"},xOffset:{description:"Offset for x-position.",type:"number"},y2Offset:{description:"Offset for y2-position.",type:"number"},yOffset:{description:"Offset for y-position.",type:"number"}},type:"object"},Padding:{anyOf:[{type:"number"},{additionalProperties:!1,properties:{bottom:{type:"number"},left:{type:"number"},right:{type:"number"},top:{type:"number"}},type:"object"}],minimum:0},Parse:{additionalProperties:{$ref:"#/definitions/ParseValue"},type:"object"},ParseValue:{anyOf:[{type:"null"},{type:"string"},{enum:["string"],type:"string"},{enum:["boolean"],type:"string"},{enum:["date"],type:"string"},{enum:["number"],type:"string"}]},"PartsMixins<BoxPlotPart>":{additionalProperties:!1,description:"Make all properties in T optional",properties:{box:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},median:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},outliers:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},rule:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},ticks:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]}},type:"object"},"PartsMixins<ErrorBandPart>":{additionalProperties:!1,description:"Make all properties in T optional",properties:{band:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},borders:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]}},type:"object"},"PartsMixins<ErrorBarPart>":{additionalProperties:!1,description:"Make all properties in T optional",properties:{rule:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},ticks:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]}},type:"object"},PositionFieldDef:{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},axis:{anyOf:[{$ref:"#/definitions/Axis"},{type:"null"}],description:"An object defining properties of axis's gridlines, ticks and labels.\nIf `null`, the axis for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [axis properties](https://vega.github.io/vega-lite/docs/axis.html) are applied."},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},impute:{$ref:"#/definitions/ImputeParams",description:"An object defining the properties of the Impute Operation to be applied.\nThe field value of the other positional channel is taken as `key` of the `Impute` Operation.\nThe field of the `color` channel if specified is used as `groupby` of the `Impute` Operation."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},stack:{anyOf:[{$ref:"#/definitions/StackOffset"},{type:"null"}],description:'Type of stacking offset if the field should be stacked.\n`stack` is only applicable for `x` and `y` channels with continuous domains.\nFor example, `stack` of `y` can be used to customize stacking for a vertical bar chart.\n\n`stack` can be one of the following values:\n- `"zero"`: stacking with baseline offset at zero value of the scale (for creating typical stacked [bar](https://vega.github.io/vega-lite/docs/stack.html#bar) and [area](https://vega.github.io/vega-lite/docs/stack.html#area) chart).\n- `"normalize"` - stacking with normalized domain (for creating [normalized stacked bar and area charts](https://vega.github.io/vega-lite/docs/stack.html#normalized). <br/>\n-`"center"` - stacking with center baseline (for [streamgraph](https://vega.github.io/vega-lite/docs/stack.html#streamgraph)).\n- `null` - No-stacking. This will produce layered [bar](https://vega.github.io/vega-lite/docs/stack.html#layered-bar-chart) and area chart.\n\n__Default value:__ `zero` for plots with all of the following conditions are true:\n(1) the mark is `bar` or `area`;\n(2) the stacked measure channel (x or y) has a linear scale;\n(3) At least one of non-position channels mapped to an unaggregated field that is different from x and y.  Otherwise, `null` by default.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n__Note:__ Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`)'}},required:["type"],type:"object"},Predicate:{anyOf:[{$ref:"#/definitions/FieldEqualPredicate"},{$ref:"#/definitions/FieldRangePredicate"},{$ref:"#/definitions/FieldOneOfPredicate"},{$ref:"#/definitions/FieldLTPredicate"},{$ref:"#/definitions/FieldGTPredicate"},{$ref:"#/definitions/FieldLTEPredicate"},{$ref:"#/definitions/FieldGTEPredicate"},{$ref:"#/definitions/FieldValidPredicate"},{$ref:"#/definitions/SelectionPredicate"},{type:"string"}]},Projection:{additionalProperties:!1,properties:{center:{description:"Sets the projection’s center to the specified center, a two-element array of longitude and latitude in degrees.\n\n__Default value:__ `[0, 0]`",items:{type:"number"},type:"array"},clipAngle:{description:"Sets the projection’s clipping circle radius to the specified angle in degrees. If `null`, switches to [antimeridian](http://bl.ocks.org/mbostock/3788999) cutting rather than small-circle clipping.",type:"number"},clipExtent:{description:"Sets the projection’s viewport clip extent to the specified bounds in pixels. The extent bounds are specified as an array `[[x0, y0], [x1, y1]]`, where `x0` is the left-side of the viewport, `y0` is the top, `x1` is the right and `y1` is the bottom. If `null`, no viewport clipping is performed.",items:{items:{type:"number"},type:"array"},type:"array"},coefficient:{type:"number"},distance:{type:"number"},fraction:{type:"number"},lobes:{type:"number"},parallel:{type:"number"},precision:{description:"Sets the threshold for the projection’s [adaptive resampling](http://bl.ocks.org/mbostock/3795544) to the specified value in pixels. This value corresponds to the [Douglas–Peucker distance](http://en.wikipedia.org/wiki/Ramer%E2%80%93Douglas%E2%80%93Peucker_algorithm). If precision is not specified, returns the projection’s current resampling precision which defaults to `√0.5 ≅ 0.70710…`.",type:"string"},radius:{type:"number"},ratio:{type:"number"},rotate:{description:"Sets the projection’s three-axis rotation to the specified angles, which must be a two- or three-element array of numbers [`lambda`, `phi`, `gamma`] specifying the rotation angles in degrees about each spherical axis. (These correspond to yaw, pitch and roll.)\n\n__Default value:__ `[0, 0, 0]`",items:{type:"number"},type:"array"},spacing:{type:"number"},tilt:{type:"number"},type:{$ref:"#/definitions/ProjectionType",description:'The cartographic projection to use. This value is case-insensitive, for example `"albers"` and `"Albers"` indicate the same projection type. You can find all valid projection types [in the documentation](https://vega.github.io/vega-lite/docs/projection.html#projection-types).\n\n__Default value:__ `mercator`'}},type:"object"},ProjectionConfig:{$ref:"#/definitions/Projection",description:"Any property of Projection can be in config"},ProjectionType:{enum:["albers","albersUsa","azimuthalEqualArea","azimuthalEquidistant","conicConformal","conicEqualArea","conicEquidistant","equirectangular","gnomonic","identity","mercator","orthographic","stereographic","transverseMercator"],type:"string"},RangeConfig:{additionalProperties:{$ref:"#/definitions/RangeConfigValue"},properties:{category:{anyOf:[{items:{type:"string"},type:"array"},{$ref:"#/definitions/SchemeConfig"}],description:"Default range for _nominal_ (categorical) fields."},diverging:{anyOf:[{items:{type:"string"},type:"array"},{$ref:"#/definitions/SchemeConfig"}],description:"Default range for diverging _quantitative_ fields."},heatmap:{anyOf:[{items:{type:"string"},type:"array"},{$ref:"#/definitions/SchemeConfig"}],description:"Default range for _quantitative_ heatmaps."},ordinal:{anyOf:[{items:{type:"string"},type:"array"},{$ref:"#/definitions/SchemeConfig"}],description:"Default range for _ordinal_ fields."},ramp:{anyOf:[{items:{type:"string"},type:"array"},{$ref:"#/definitions/SchemeConfig"}],description:"Default range for _quantitative_ and _temporal_ fields."},symbol:{description:"Default range palette for the `shape` channel.",items:{type:"string"},type:"array"}},type:"object"},RangeConfigValue:{anyOf:[{items:{type:["number","string"]},type:"array"},{$ref:"#/definitions/SchemeConfig"},{additionalProperties:!1,properties:{step:{type:"number"}},required:["step"],type:"object"}]},Repeat:{additionalProperties:!1,properties:{column:{description:"Horizontal repeated views.",items:{type:"string"},type:"array"},row:{description:"Vertical repeated views.",items:{type:"string"},type:"array"}},type:"object"},RepeatRef:{additionalProperties:!1,description:"Reference to a repeated value.",properties:{repeat:{enum:["row","column"],type:"string"}},required:["repeat"],type:"object"},Resolve:{additionalProperties:!1,description:"Defines how scales, axes, and legends from different specs should be combined. Resolve is a mapping from `scale`, `axis`, and `legend` to a mapping from channels to resolutions.",properties:{axis:{$ref:"#/definitions/AxisResolveMap"},legend:{$ref:"#/definitions/LegendResolveMap"},scale:{$ref:"#/definitions/ScaleResolveMap"}},type:"object"},ResolveMode:{enum:["independent","shared"],type:"string"},"RowCol<LayoutAlign>":{additionalProperties:!1,properties:{column:{$ref:"#/definitions/LayoutAlign"},row:{$ref:"#/definitions/LayoutAlign"}},type:"object"},"RowCol<boolean>":{additionalProperties:!1,properties:{column:{type:"boolean"},row:{type:"boolean"}},type:"object"},"RowCol<number>":{additionalProperties:!1,properties:{column:{type:"number"},row:{type:"number"}},type:"object"},SampleTransform:{additionalProperties:!1,properties:{sample:{description:"The maximum number of data objects to include in the sample.\n\n__Default value:__ `1000`",type:"number"}},required:["sample"],type:"object"},Scale:{additionalProperties:!1,properties:{base:{description:"The logarithm base of the `log` scale (default `10`).",type:"number"},bins:{description:"An array of bin boundaries over the scale domain. If provided, axes and legends will use the bin boundaries to inform the choice of tick marks and text labels.",items:{type:"number"},type:"array"},clamp:{description:"If `true`, values that exceed the data domain are clamped to either the minimum or maximum range value\n\n__Default value:__ derived from the [scale config](https://vega.github.io/vega-lite/docs/config.html#scale-config)'s `clamp` (`true` by default).",type:"boolean"},constant:{description:"A constant determining the slope of the symlog function around zero. Only used for `symlog` scales.\n\n__Default value:__ `1`",type:"number"},domain:{anyOf:[{items:{type:"number"},type:"array"},{items:{type:"string"},type:"array"},{items:{type:"boolean"},type:"array"},{items:{$ref:"#/definitions/DateTime"},type:"array"},{enum:["unaggregated"],type:"string"},{$ref:"#/definitions/SelectionDomain"}],description:'Customized domain values.\n\nFor _quantitative_ fields, `domain` can take the form of a two-element array with minimum and maximum values.  [Piecewise scales](https://vega.github.io/vega-lite/docs/scale.html#piecewise) can be created by providing a `domain` with more than two entries.\nIf the input field is aggregated, `domain` can also be a string value `"unaggregated"`, indicating that the domain should include the raw data values prior to the aggregation.\n\nFor _temporal_ fields, `domain` can be a two-element array minimum and maximum values, in the form of either timestamps or the [DateTime definition objects](https://vega.github.io/vega-lite/docs/types.html#datetime).\n\nFor _ordinal_ and _nominal_ fields, `domain` can be an array that lists valid input values.\n\nThe `selection` property can be used to [interactively determine](https://vega.github.io/vega-lite/docs/selection.html#scale-domains) the scale domain.'},exponent:{description:"The exponent of the `pow` scale.",type:"number"},interpolate:{anyOf:[{$ref:"#/definitions/ScaleInterpolate"},{$ref:"#/definitions/ScaleInterpolateParams"}],description:"The interpolation method for range values. By default, a general interpolator for numbers, dates, strings and colors (in HCL space) is used. For color ranges, this property allows interpolation in alternative color spaces. Legal values include `rgb`, `hsl`, `hsl-long`, `lab`, `hcl`, `hcl-long`, `cubehelix` and `cubehelix-long` ('-long' variants use longer paths in polar coordinate spaces). If object-valued, this property accepts an object with a string-valued _type_ property and an optional numeric _gamma_ property applicable to rgb and cubehelix interpolators. For more, see the [d3-interpolate documentation](https://github.com/d3/d3-interpolate).\n\n* __Default value:__ `hcl`"},nice:{anyOf:[{type:"boolean"},{type:"number"},{$ref:"#/definitions/NiceTime"},{additionalProperties:!1,properties:{interval:{type:"string"},step:{type:"number"}},required:["interval","step"],type:"object"}],description:'Extending the domain so that it starts and ends on nice round values. This method typically modifies the scale’s domain, and may only extend the bounds to the nearest round value. Nicing is useful if the domain is computed from data and may be irregular. For example, for a domain of _[0.201479…, 0.996679…]_, a nice domain might be _[0.2, 1.0]_.\n\nFor quantitative scales such as linear, `nice` can be either a boolean flag or a number. If `nice` is a number, it will represent a desired tick count. This allows greater control over the step size used to extend the bounds, guaranteeing that the returned ticks will exactly cover the domain.\n\nFor temporal fields with time and utc scales, the `nice` value can be a string indicating the desired time interval. Legal values are `"millisecond"`, `"second"`, `"minute"`, `"hour"`, `"day"`, `"week"`, `"month"`, and `"year"`. Alternatively, `time` and `utc` scales can accept an object-valued interval specifier of the form `{"interval": "month", "step": 3}`, which includes a desired number of interval steps. Here, the domain would snap to quarter (Jan, Apr, Jul, Oct) boundaries.\n\n__Default value:__ `true` for unbinned _quantitative_ fields; `false` otherwise.'},padding:{description:"For _[continuous](https://vega.github.io/vega-lite/docs/scale.html#continuous)_ scales, expands the scale domain to accommodate the specified number of pixels on each of the scale range. The scale range must represent pixels for this parameter to function as intended. Padding adjustment is performed prior to all other adjustments, including the effects of the zero, nice, domainMin, and domainMax properties.\n\nFor _[band](https://vega.github.io/vega-lite/docs/scale.html#band)_ scales, shortcut for setting `paddingInner` and `paddingOuter` to the same value.\n\nFor _[point](https://vega.github.io/vega-lite/docs/scale.html#point)_ scales, alias for `paddingOuter`.\n\n__Default value:__ For _continuous_ scales, derived from the [scale config](https://vega.github.io/vega-lite/docs/scale.html#config)'s `continuousPadding`.\nFor _band and point_ scales, see `paddingInner` and `paddingOuter`.",minimum:0,type:"number"},paddingInner:{description:"The inner padding (spacing) within each band step of band scales, as a fraction of the step size. This value must lie in the range [0,1].\n\nFor point scale, this property is invalid as point scales do not have internal band widths (only step sizes between bands).\n\n__Default value:__ derived from the [scale config](https://vega.github.io/vega-lite/docs/scale.html#config)'s `bandPaddingInner`.",maximum:1,minimum:0,type:"number"},paddingOuter:{description:"The outer padding (spacing) at the ends of the range of band and point scales,\nas a fraction of the step size. This value must lie in the range [0,1].\n\n__Default value:__ derived from the [scale config](https://vega.github.io/vega-lite/docs/scale.html#config)'s `bandPaddingOuter` for band scales and `pointPadding` for point scales.",maximum:1,minimum:0,type:"number"},range:{anyOf:[{items:{type:"number"},type:"array"},{items:{type:"string"},type:"array"},{type:"string"}],description:'The range of the scale. One of:\n\n- A string indicating a [pre-defined named scale range](https://vega.github.io/vega-lite/docs/scale.html#range-config) (e.g., example, `"symbol"`, or `"diverging"`).\n\n- For [continuous scales](https://vega.github.io/vega-lite/docs/scale.html#continuous), two-element array indicating  minimum and maximum values, or an array with more than two entries for specifying a [piecewise scale](https://vega.github.io/vega-lite/docs/scale.html#piecewise).\n\n- For [discrete](https://vega.github.io/vega-lite/docs/scale.html#discrete) and [discretizing](https://vega.github.io/vega-lite/docs/scale.html#discretizing) scales, an array of desired output values.\n\n__Notes:__\n\n1) For color scales you can also specify a color [`scheme`](https://vega.github.io/vega-lite/docs/scale.html#scheme) instead of `range`.\n\n2) Any directly specified `range` for `x` and `y` channels will be ignored. Range can be customized via the view\'s corresponding [size](https://vega.github.io/vega-lite/docs/size.html) (`width` and `height`) or via [range steps and paddings properties](#range-step) for [band](#band) and [point](#point) scales.'},rangeStep:{description:"The distance between the starts of adjacent bands or points in [band](https://vega.github.io/vega-lite/docs/scale.html#band) and [point](https://vega.github.io/vega-lite/docs/scale.html#point) scales.\n\nIf `rangeStep` is `null` or if the view contains the scale's corresponding [size](https://vega.github.io/vega-lite/docs/size.html) (`width` for `x` scales and `height` for `y` scales), `rangeStep` will be automatically determined to fit the size of the view.\n\n__Default value:__  derived the [scale config](https://vega.github.io/vega-lite/docs/config.html#scale-config)'s `textXRangeStep` (`90` by default) for x-scales of `text` marks and `rangeStep` (`21` by default) for x-scales of other marks and y-scales.\n\n__Warning__: If `rangeStep` is `null` and the cardinality of the scale's domain is higher than `width` or `height`, the rangeStep might become less than one pixel and the mark might not appear correctly.",minimum:0,type:["number","null"]},round:{description:"If `true`, rounds numeric output values to integers. This can be helpful for snapping to the pixel grid.\n\n__Default value:__ `false`.",type:"boolean"},scheme:{anyOf:[{type:"string"},{$ref:"#/definitions/SchemeParams"}],description:'A string indicating a color [scheme](https://vega.github.io/vega-lite/docs/scale.html#scheme) name (e.g., `"category10"` or `"blues"`) or a [scheme parameter object](https://vega.github.io/vega-lite/docs/scale.html#scheme-params).\n\nDiscrete color schemes may be used with [discrete](https://vega.github.io/vega-lite/docs/scale.html#discrete) or [discretizing](https://vega.github.io/vega-lite/docs/scale.html#discretizing) scales. Continuous color schemes are intended for use with color scales.\n\nFor the full list of supported schemes, please refer to the [Vega Scheme](https://vega.github.io/vega/docs/schemes/#reference) reference.'},type:{$ref:"#/definitions/ScaleType",description:'The type of scale.  Vega-Lite supports the following categories of scale types:\n\n1) [**Continuous Scales**](https://vega.github.io/vega-lite/docs/scale.html#continuous) -- mapping continuous domains to continuous output ranges ([`"linear"`](https://vega.github.io/vega-lite/docs/scale.html#linear), [`"pow"`](https://vega.github.io/vega-lite/docs/scale.html#pow), [`"sqrt"`](https://vega.github.io/vega-lite/docs/scale.html#sqrt), [`"symlog"`](https://vega.github.io/vega-lite/docs/scale.html#symlog), [`"log"`](https://vega.github.io/vega-lite/docs/scale.html#log), [`"time"`](https://vega.github.io/vega-lite/docs/scale.html#time), [`"utc"`](https://vega.github.io/vega-lite/docs/scale.html#utc).\n\n2) [**Discrete Scales**](https://vega.github.io/vega-lite/docs/scale.html#discrete) -- mapping discrete domains to discrete ([`"ordinal"`](https://vega.github.io/vega-lite/docs/scale.html#ordinal)) or continuous ([`"band"`](https://vega.github.io/vega-lite/docs/scale.html#band) and [`"point"`](https://vega.github.io/vega-lite/docs/scale.html#point)) output ranges.\n\n3) [**Discretizing Scales**](https://vega.github.io/vega-lite/docs/scale.html#discretizing) -- mapping continuous domains to discrete output ranges [`"bin-ordinal"`](https://vega.github.io/vega-lite/docs/scale.html#bin-ordinal), [`"quantile"`](https://vega.github.io/vega-lite/docs/scale.html#quantile), [`"quantize"`](https://vega.github.io/vega-lite/docs/scale.html#quantize) and [`"threshold"`](https://vega.github.io/vega-lite/docs/scale.html#threshold).\n\n__Default value:__ please see the [scale type table](https://vega.github.io/vega-lite/docs/scale.html#type).'},zero:{description:"If `true`, ensures that a zero baseline value is included in the scale domain.\n\n__Default value:__ `true` for x and y channels if the quantitative field is not binned and no custom `domain` is provided; `false` otherwise.\n\n__Note:__ Log, time, and utc scales do not support `zero`.",type:"boolean"}},type:"object"},ScaleConfig:{additionalProperties:!1,properties:{bandPaddingInner:{description:"Default inner padding for `x` and `y` band-ordinal scales.\n\n__Default value:__\n- `barBandPaddingInner` for bar marks (`0.1` by default)\n- `rectBandPaddingInner` for rect and other marks (`0` by default)",maximum:1,minimum:0,type:"number"},bandPaddingOuter:{description:"Default outer padding for `x` and `y` band-ordinal scales.\n\nIf not specified, by default, band scale's paddingOuter is paddingInner/2.",maximum:1,minimum:0,type:"number"},barBandPaddingInner:{description:'Default inner padding for `x` and `y` band-ordinal scales of `"bar"` marks.\n\n__Default value:__ `0.1`',maximum:1,minimum:0,type:"number"},barBandPaddingOuter:{description:'Default outer padding for `x` and `y` band-ordinal scales of `"bar"` marks.\nIf not specified, by default, band scale\'s paddingOuter is paddingInner/2.',maximum:1,minimum:0,type:"number"},clamp:{description:"If true, values that exceed the data domain are clamped to either the minimum or maximum range value",type:"boolean"},continuousPadding:{description:"Default padding for continuous scales.\n\n__Default:__ `5` for continuous x-scale of a vertical bar and continuous y-scale of a horizontal bar.; `0` otherwise.",minimum:0,type:"number"},maxBandSize:{description:"The default max value for mapping quantitative fields to bar's size/bandSize.\n\nIf undefined (default), we will use the scale's `rangeStep` - 1.",minimum:0,type:"number"},maxFontSize:{description:"The default max value for mapping quantitative fields to text's size/fontSize.\n\n__Default value:__ `40`",minimum:0,type:"number"},maxOpacity:{description:"Default max opacity for mapping a field to opacity.\n\n__Default value:__ `0.8`",maximum:1,minimum:0,type:"number"},maxSize:{description:"Default max value for point size scale.",minimum:0,type:"number"},maxStrokeWidth:{description:"Default max strokeWidth for the scale of strokeWidth for rule and line marks and of size for trail marks.\n\n__Default value:__ `4`",minimum:0,type:"number"},minBandSize:{description:"The default min value for mapping quantitative fields to bar and tick's size/bandSize scale with zero=false.\n\n__Default value:__ `2`",minimum:0,type:"number"},minFontSize:{description:"The default min value for mapping quantitative fields to tick's size/fontSize scale with zero=false\n\n__Default value:__ `8`",minimum:0,type:"number"},minOpacity:{description:"Default minimum opacity for mapping a field to opacity.\n\n__Default value:__ `0.3`",maximum:1,minimum:0,type:"number"},minSize:{description:"Default minimum value for point size scale with zero=false.\n\n__Default value:__ `9`",minimum:0,type:"number"},minStrokeWidth:{description:"Default minimum strokeWidth for the scale of strokeWidth for rule and line marks and of size for trail marks with zero=false.\n\n__Default value:__ `1`",minimum:0,type:"number"},pointPadding:{description:"Default outer padding for `x` and `y` point-ordinal scales.\n\n__Default value:__ `0.5`",maximum:1,minimum:0,type:"number"},quantileCount:{description:"Default range cardinality for [`quantile`](https://vega.github.io/vega-lite/docs/scale.html#quantile) scale.\n\n__Default value:__ `4`",minimum:0,type:"number"},quantizeCount:{description:"Default range cardinality for [`quantize`](https://vega.github.io/vega-lite/docs/scale.html#quantize) scale.\n\n__Default value:__ `4`",minimum:0,type:"number"},rangeStep:{description:"Default range step for band and point scales of (1) the `y` channel\nand (2) the `x` channel when the mark is not `text`.\n\n__Default value:__ `20`",minimum:0,type:["number","null"]},rectBandPaddingInner:{description:'Default inner padding for `x` and `y` band-ordinal scales of `"rect"` marks.\n\n__Default value:__ `0`',maximum:1,minimum:0,type:"number"},rectBandPaddingOuter:{description:'Default outer padding for `x` and `y` band-ordinal scales of `"rect"` marks.\nIf not specified, by default, band scale\'s paddingOuter is paddingInner/2.',maximum:1,minimum:0,type:"number"},round:{description:"If true, rounds numeric output values to integers.\nThis can be helpful for snapping to the pixel grid.\n(Only available for `x`, `y`, and `size` scales.)",type:"boolean"},textXRangeStep:{description:"Default range step for `x` band and point scales of text marks.\n\n__Default value:__ `90`",minimum:0,type:"number"},useUnaggregatedDomain:{description:'Use the source data range before aggregation as scale domain instead of aggregated data for aggregate axis.\n\nThis is equivalent to setting `domain` to `"unaggregate"` for aggregated _quantitative_ fields by default.\n\nThis property only works with aggregate functions that produce values within the raw data domain (`"mean"`, `"average"`, `"median"`, `"q1"`, `"q3"`, `"min"`, `"max"`). For other aggregations that produce values outside of the raw data domain (e.g. `"count"`, `"sum"`), this property is ignored.\n\n__Default value:__ `false`',type:"boolean"}},type:"object"},ScaleInterpolate:{enum:["rgb","lab","hcl","hsl","hsl-long","hcl-long","cubehelix","cubehelix-long"],type:"string"},ScaleInterpolateParams:{additionalProperties:!1,properties:{gamma:{type:"number"},type:{enum:["rgb","cubehelix","cubehelix-long"],type:"string"}},required:["type"],type:"object"},ScaleResolveMap:{additionalProperties:!1,properties:{color:{$ref:"#/definitions/ResolveMode"},fill:{$ref:"#/definitions/ResolveMode"},fillOpacity:{$ref:"#/definitions/ResolveMode"},opacity:{$ref:"#/definitions/ResolveMode"},shape:{$ref:"#/definitions/ResolveMode"},size:{$ref:"#/definitions/ResolveMode"},stroke:{$ref:"#/definitions/ResolveMode"},strokeOpacity:{$ref:"#/definitions/ResolveMode"},strokeWidth:{$ref:"#/definitions/ResolveMode"},x:{$ref:"#/definitions/ResolveMode"},y:{$ref:"#/definitions/ResolveMode"}},type:"object"},ScaleType:{enum:["linear","log","pow","sqrt","symlog","time","utc","quantile","quantize","threshold","bin-ordinal","ordinal","point","band"],type:"string"},SchemeConfig:{additionalProperties:!1,properties:{count:{type:"number"},extent:{items:{type:"number"},type:"array"},scheme:{type:"string"}},required:["scheme"],type:"object"},SchemeParams:{additionalProperties:!1,properties:{count:{description:'The number of colors to use in the scheme. This can be useful for scale types such as `"quantize"`, which use the length of the scale range to determine the number of discrete bins for the scale domain.',type:"number"},extent:{description:"The extent of the color range to use. For example `[0.2, 1]` will rescale the color scheme such that color values in the range _[0, 0.2)_ are excluded from the scheme.",items:{type:"number"},type:"array"},name:{description:'A color scheme name for ordinal scales (e.g., `"category10"` or `"blues"`).\n\nFor the full list of supported schemes, please refer to the [Vega Scheme](https://vega.github.io/vega/docs/schemes/#reference) reference.',type:"string"}},required:["name"],type:"object"},SecondaryFieldDef:{additionalProperties:!1,description:"A field definition of a secondary channel that shares a scale with another primary channel.  For example, `x2`, `xError` and `xError2` share the same scale with `x`.",properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]}},type:"object"},SelectionConfig:{additionalProperties:!1,properties:{interval:{$ref:"#/definitions/IntervalSelectionConfig",description:'The default definition for an [`interval`](https://vega.github.io/vega-lite/docs/selection.html#type) selection. All properties and transformations\nfor an interval selection definition (except `type`) may be specified here.\n\nFor instance, setting `interval` to `{"translate": false}` disables the ability to move\ninterval selections by default.'},multi:{$ref:"#/definitions/MultiSelectionConfig",description:'The default definition for a [`multi`](https://vega.github.io/vega-lite/docs/selection.html#type) selection. All properties and transformations\nfor a multi selection definition (except `type`) may be specified here.\n\nFor instance, setting `multi` to `{"toggle": "event.altKey"}` adds additional values to\nmulti selections when clicking with the alt-key pressed by default.'},single:{$ref:"#/definitions/SingleSelectionConfig",description:'The default definition for a [`single`](https://vega.github.io/vega-lite/docs/selection.html#type) selection. All properties and transformations\n  for a single selection definition (except `type`) may be specified here.\n\nFor instance, setting `single` to `{"on": "dblclick"}` populates single selections on double-click by default.'}},type:"object"},SelectionDef:{anyOf:[{$ref:"#/definitions/SingleSelection"},{$ref:"#/definitions/MultiSelection"},{$ref:"#/definitions/IntervalSelection"}]},SelectionDomain:{anyOf:[{additionalProperties:!1,properties:{field:{description:"The field name to extract selected values for, when a selection is [projected](https://vega.github.io/vega-lite/docs/project.html)\nover multiple fields or encodings.",type:"string"},selection:{description:"The name of a selection.",type:"string"}},required:["selection"],type:"object"},{additionalProperties:!1,properties:{encoding:{description:"The encoding channel to extract selected values for, when a selection is [projected](https://vega.github.io/vega-lite/docs/project.html)\nover multiple fields or encodings.",type:"string"},selection:{description:"The name of a selection.",type:"string"}},required:["selection"],type:"object"}]},SelectionInit:{anyOf:[{type:"boolean"},{type:"number"},{type:"string"},{$ref:"#/definitions/DateTime"}]},SelectionInitArray:{anyOf:[{items:{type:"boolean"},type:"array"},{items:{type:"number"},type:"array"},{items:{type:"string"},type:"array"},{items:{$ref:"#/definitions/DateTime"},type:"array"}]},SelectionInitArrayMapping:{additionalProperties:{$ref:"#/definitions/SelectionInitArray"},type:"object"},SelectionInitMapping:{additionalProperties:{$ref:"#/definitions/SelectionInit"},type:"object"},SelectionPredicate:{additionalProperties:!1,properties:{selection:{$ref:"#/definitions/SelectionOperand",description:"Filter using a selection name."}},required:["selection"],type:"object"},SelectionResolution:{enum:["global","union","intersect"],type:"string"},ShapeFieldDefWithCondition:{$ref:"#/definitions/StringFieldDefWithCondition<TypeForShape>"},ShapeValueDefWithCondition:{$ref:"#/definitions/StringValueDefWithCondition<TypeForShape>"},SingleDefChannel:{anyOf:[{$ref:"#/definitions/SingleDefUnitChannel"},{enum:["row"],type:"string"},{enum:["column"],type:"string"},{enum:["facet"],type:"string"}]},SingleDefUnitChannel:{enum:["x","y","x2","y2","longitude","latitude","longitude2","latitude2","color","fill","stroke","strokeWidth","size","shape","fillOpacity","strokeOpacity","opacity","text","tooltip","href","key"],type:"string"},SingleSelection:{additionalProperties:!1,properties:{bind:{anyOf:[{$ref:"#/definitions/Binding"},{additionalProperties:{$ref:"#/definitions/Binding"},type:"object"}],description:"Establish a two-way binding between a single selection and input elements\n(also known as dynamic query widgets). A binding takes the form of\nVega's [input element binding definition](https://vega.github.io/vega/docs/signals/#bind)\nor can be a mapping between projected field/encodings and binding definitions.\n\nSee the [bind transform](https://vega.github.io/vega-lite/docs/bind.html) documentation for more information."},empty:{description:"By default, all data values are considered to lie within an empty selection.\nWhen set to `none`, empty selections contain no data values.",enum:["all","none"],type:"string"},encodings:{description:"An array of encoding channels. The corresponding data field values\nmust match for a data tuple to fall within the selection.",items:{$ref:"#/definitions/SingleDefChannel"},type:"array"},fields:{description:"An array of field names whose values must match for a data tuple to\nfall within the selection.",items:{type:"string"},type:"array"},init:{$ref:"#/definitions/SelectionInitMapping",description:"Initialize the selection with a mapping between [projected channels or field names](https://vega.github.io/vega-lite/docs/project.html) and initial values."},nearest:{description:"When true, an invisible voronoi diagram is computed to accelerate discrete\nselection. The data value _nearest_ the mouse cursor is added to the selection.\n\nSee the [nearest transform](https://vega.github.io/vega-lite/docs/nearest.html) documentation for more information.",type:"boolean"},on:{$ref:"#/definitions/EventStream",description:"A [Vega event stream](https://vega.github.io/vega/docs/event-streams/) (object or selector) that triggers the selection.\nFor interval selections, the event stream must specify a [start and end](https://vega.github.io/vega/docs/event-streams/#between-filters)."},resolve:{$ref:"#/definitions/SelectionResolution",description:"With layered and multi-view displays, a strategy that determines how\nselections' data queries are resolved when applied in a filter transform,\nconditional encoding rule, or scale domain."},type:{enum:["single"],type:"string"}},required:["type"],type:"object"},SingleSelectionConfig:{additionalProperties:!1,properties:{bind:{anyOf:[{$ref:"#/definitions/Binding"},{additionalProperties:{$ref:"#/definitions/Binding"},type:"object"}],description:"Establish a two-way binding between a single selection and input elements\n(also known as dynamic query widgets). A binding takes the form of\nVega's [input element binding definition](https://vega.github.io/vega/docs/signals/#bind)\nor can be a mapping between projected field/encodings and binding definitions.\n\nSee the [bind transform](https://vega.github.io/vega-lite/docs/bind.html) documentation for more information."},empty:{description:"By default, all data values are considered to lie within an empty selection.\nWhen set to `none`, empty selections contain no data values.",enum:["all","none"],type:"string"},encodings:{description:"An array of encoding channels. The corresponding data field values\nmust match for a data tuple to fall within the selection.",items:{$ref:"#/definitions/SingleDefChannel"},type:"array"},fields:{description:"An array of field names whose values must match for a data tuple to\nfall within the selection.",items:{type:"string"},type:"array"},init:{$ref:"#/definitions/SelectionInitMapping",description:"Initialize the selection with a mapping between [projected channels or field names](https://vega.github.io/vega-lite/docs/project.html) and initial values."},nearest:{description:"When true, an invisible voronoi diagram is computed to accelerate discrete\nselection. The data value _nearest_ the mouse cursor is added to the selection.\n\nSee the [nearest transform](https://vega.github.io/vega-lite/docs/nearest.html) documentation for more information.",type:"boolean"},on:{$ref:"#/definitions/EventStream",description:"A [Vega event stream](https://vega.github.io/vega/docs/event-streams/) (object or selector) that triggers the selection.\nFor interval selections, the event stream must specify a [start and end](https://vega.github.io/vega/docs/event-streams/#between-filters)."},resolve:{$ref:"#/definitions/SelectionResolution",description:"With layered and multi-view displays, a strategy that determines how\nselections' data queries are resolved when applied in a filter transform,\nconditional encoding rule, or scale domain."}},type:"object"},SingleTimeUnit:{anyOf:[{$ref:"#/definitions/LocalSingleTimeUnit"},{$ref:"#/definitions/UtcSingleTimeUnit"}]},Sort:{anyOf:[{$ref:"#/definitions/SortArray"},{$ref:"#/definitions/SortOrder"},{$ref:"#/definitions/EncodingSortField"},{$ref:"#/definitions/SortByEncoding"},{type:"null"}]},SortArray:{anyOf:[{items:{type:"number"},type:"array"},{items:{type:"string"},type:"array"},{items:{type:"boolean"},type:"array"},{items:{$ref:"#/definitions/DateTime"},type:"array"}]},SortByEncoding:{additionalProperties:!1,properties:{encoding:{$ref:"#/definitions/SingleDefUnitChannel",description:'The [encoding channel](https://vega.github.io/vega-lite/docs/encoding.html#channels) to sort by (e.g., `"x"`, `"y"`)'},order:{anyOf:[{$ref:"#/definitions/SortOrder"},{type:"null"}],description:'The sort order. One of `"ascending"` (default), `"descending"`, or `null` (no not sort).'}},required:["encoding"],type:"object"},SortField:{additionalProperties:!1,description:"A sort definition for transform",properties:{field:{description:"The name of the field to sort.",type:"string"},order:{anyOf:[{$ref:"#/definitions/SortOrder"},{type:"null"}],description:'Whether to sort the field in ascending or descending order. One of `"ascending"` (default), `"descending"`, or `null` (no not sort).'}},required:["field"],type:"object"},SortOrder:{enum:["ascending","descending"],type:"string"},StackOffset:{enum:["zero","center","normalize"],type:"string"},StackTransform:{additionalProperties:!1,properties:{as:{anyOf:[{type:"string"},{items:{type:"string"},type:"array"}],description:'Output field names. This can be either a string or an array of strings with\ntwo elements denoting the name for the fields for stack start and stack end\nrespectively.\nIf a single string(eg."val") is provided, the end field will be "val_end".'},groupby:{description:"The data fields to group by.",items:{type:"string"},type:"array"},offset:{description:'Mode for stacking marks.\n__Default value:__ `"zero"`',enum:["zero","center","normalize"],type:"string"},sort:{description:"Field that determines the order of leaves in the stacked charts.",items:{$ref:"#/definitions/SortField"},type:"array"},stack:{description:"The field which is stacked.",type:"string"}},required:["stack","groupby","as"],type:"object"},StandardType:{enum:["quantitative","ordinal","temporal","nominal"],type:"string"},"StringFieldDefWithCondition<TypeForShape>":{$ref:"#/definitions/FieldDefWithCondition<MarkPropFieldDef<TypeForShape>,string>"},StringFieldDefWithCondition:{$ref:'#/definitions/FieldDefWithCondition<MarkPropFieldDef<"nominal">,string>'},"StringValueDefWithCondition<TypeForShape>":{$ref:"#/definitions/ValueDefWithCondition<MarkPropFieldDef<TypeForShape>,string>"},StringValueDefWithCondition:{$ref:'#/definitions/ValueDefWithCondition<MarkPropFieldDef<"nominal">,string>'},StrokeCap:{enum:["butt","round","square"],type:"string"},StrokeJoin:{enum:["miter","round","bevel"],type:"string"},StyleConfigIndex:{additionalProperties:{$ref:"#/definitions/BaseMarkConfig"},type:"object"},SymbolShape:{type:"string"},TextBaseline:{anyOf:[{enum:["alphabetic"],type:"string"},{$ref:"#/definitions/Baseline"}]},TextConfig:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align",description:'The horizontal alignment of the text. One of `"left"`, `"right"`, `"center"`.'},angle:{description:"The rotation angle of the text, in degrees.",maximum:360,minimum:0,type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'The vertical alignment of the text. One of `"top"`, `"middle"`, `"bottom"`.\n\n__Default value:__ `"middle"`'},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},cursor:{$ref:"#/definitions/Cursor",description:"The mouse cursor used over the mark. Any valid [CSS cursor type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used."},dir:{$ref:"#/definitions/Dir",description:'The direction of the text. One of `"ltr"` (left-to-right) or `"rtl"` (right-to-left). This property determines on which side is truncated in response to the limit parameter.\n\n__Default value:__ `"ltr"`'},dx:{description:"The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},dy:{description:"The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},ellipsis:{description:'The ellipsis string for text truncated in response to the limit parameter.\n\n__Default value:__ `"…"`',type:"string"},fill:{$ref:"#/definitions/Color",description:"Default Fill Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},filled:{description:"Whether the mark's color should be used as fill color instead of stroke color.\n\n__Default value:__ `false` for `point`, `line` and `rule`; otherwise, `true`.\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).",type:"boolean"},font:{description:'The typeface to set the text in (e.g., `"Helvetica Neue"`).',type:"string"},fontSize:{description:"The font size, in pixels.",type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:'The font style (e.g., `"italic"`).'},fontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},href:{description:"A URL to load upon mouse click. If defined, the mark acts as a hyperlink.",format:"uri",type:"string"},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method to use for line and area marks. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: alternate between horizontal and vertical segments, as in a step function.\n- `"step-before"`: alternate between vertical and horizontal segments, as in a step function.\n- `"step-after"`: alternate between horizontal and vertical segments, as in a step function.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},limit:{description:"The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},orient:{$ref:"#/definitions/Orient",description:"The orientation of a non-stacked bar, tick, area, and line charts.\nThe value is either horizontal (default) or vertical.\n- For bar, rule and tick, this determines whether the size of the bar and tick\nshould be applied to x or y dimension.\n- For area, this property determines the orient property of the Vega output.\n- For line and trail marks, this property determines the sort order of the points in the line\nif `config.sortLineBy` is not specified.\nFor stacked charts, this is always determined by the orientation of the stack;\ntherefore explicitly specified value will be ignored."},radius:{description:"Polar coordinate radial offset, in pixels, of the text label from the origin determined by the `x` and `y` properties.",minimum:0,type:"number"},shape:{description:'The default symbol shape to use. One of: `"circle"` (default), `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, or `"triangle-down"`, or a custom SVG path.\n\n__Default value:__ `"circle"`',type:"string"},shortTimeLabels:{description:"Whether month names and weekday names should be abbreviated.",type:"boolean"},size:{description:"Default size for marks.\n- For `point`/`circle`/`square`, this represents the pixel area of the marks. For example: in the case of circles, the radius is determined in part by the square root of the size value.\n- For `bar`, this represents the band size of the bar, in pixels.\n- For `text`, this represents the font size, in pixels.\n\n__Default value:__ `30` for point, circle, square marks; `rangeStep` - 1 for bar marks with discrete dimensions; `5` for bar marks with continuous dimensions; `11` for text marks.",minimum:0,type:"number"},stroke:{$ref:"#/definitions/Color",description:"Default Stroke Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},tension:{description:"Depending on the interpolation type, sets the tension parameter (for line and area marks).",maximum:1,minimum:0,type:"number"},text:{description:"Placeholder text if the `text` channel is not specified",type:"string"},theta:{description:'Polar coordinate angle, in radians, of the text label from the origin determined by the `x` and `y` properties. Values for `theta` follow the same convention of `arc` mark `startAngle` and `endAngle` properties: angles are measured in radians, with `0` indicating "north".',type:"number"},tooltip:{anyOf:[{type:"string"},{$ref:"#/definitions/TooltipContent"},{type:"null"}],description:'The tooltip text string to show upon mouse hover or an object defining which fields should the tooltip be derived from.\n\n- If `tooltip` is `{"content": "encoding"}`, then all fields from `encoding` will be used.\n- If `tooltip` is `{"content": "data"}`, then all fields that appear in the highlighted data point will be used.\n- If set to `null`, then no tooltip will be used.'}},type:"object"},TextFieldDef:{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- To indicate that the data for the `x` (or `y`) channel are already binned, you can set the `bin` property of the `x` (or `y`) channel to `"binned"` and map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},format:{description:"The [formatting pattern](https://vega.github.io/vega-lite/docs/format.html) for a text field. If not defined, this will be determined automatically.",type:"string"},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n__Note:__ Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`)'}},required:["type"],type:"object"},TextFieldDefWithCondition:{$ref:"#/definitions/FieldDefWithCondition<TextFieldDef,(string|number|boolean)>"},TextValueDefWithCondition:{$ref:"#/definitions/ValueDefWithCondition<TextFieldDef,(string|number|boolean)>"},TickConfig:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align",description:'The horizontal alignment of the text. One of `"left"`, `"right"`, `"center"`.'},angle:{description:"The rotation angle of the text, in degrees.",maximum:360,minimum:0,type:"number"},bandSize:{description:"The width of the ticks.\n\n__Default value:__  3/4 of rangeStep.",minimum:0,type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'The vertical alignment of the text. One of `"top"`, `"middle"`, `"bottom"`.\n\n__Default value:__ `"middle"`'},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},cursor:{$ref:"#/definitions/Cursor",description:"The mouse cursor used over the mark. Any valid [CSS cursor type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used."},dir:{$ref:"#/definitions/Dir",description:'The direction of the text. One of `"ltr"` (left-to-right) or `"rtl"` (right-to-left). This property determines on which side is truncated in response to the limit parameter.\n\n__Default value:__ `"ltr"`'},dx:{description:"The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},dy:{description:"The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},ellipsis:{description:'The ellipsis string for text truncated in response to the limit parameter.\n\n__Default value:__ `"…"`',type:"string"},fill:{$ref:"#/definitions/Color",description:"Default Fill Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},filled:{description:"Whether the mark's color should be used as fill color instead of stroke color.\n\n__Default value:__ `false` for `point`, `line` and `rule`; otherwise, `true`.\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).",type:"boolean"},font:{description:'The typeface to set the text in (e.g., `"Helvetica Neue"`).',type:"string"},fontSize:{description:"The font size, in pixels.",type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:'The font style (e.g., `"italic"`).'},fontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},href:{description:"A URL to load upon mouse click. If defined, the mark acts as a hyperlink.",format:"uri",type:"string"},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method to use for line and area marks. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: alternate between horizontal and vertical segments, as in a step function.\n- `"step-before"`: alternate between vertical and horizontal segments, as in a step function.\n- `"step-after"`: alternate between horizontal and vertical segments, as in a step function.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},limit:{description:"The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},orient:{$ref:"#/definitions/Orient",description:"The orientation of a non-stacked bar, tick, area, and line charts.\nThe value is either horizontal (default) or vertical.\n- For bar, rule and tick, this determines whether the size of the bar and tick\nshould be applied to x or y dimension.\n- For area, this property determines the orient property of the Vega output.\n- For line and trail marks, this property determines the sort order of the points in the line\nif `config.sortLineBy` is not specified.\nFor stacked charts, this is always determined by the orientation of the stack;\ntherefore explicitly specified value will be ignored."},radius:{description:"Polar coordinate radial offset, in pixels, of the text label from the origin determined by the `x` and `y` properties.",minimum:0,type:"number"},shape:{description:'The default symbol shape to use. One of: `"circle"` (default), `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, or `"triangle-down"`, or a custom SVG path.\n\n__Default value:__ `"circle"`',type:"string"},size:{description:"Default size for marks.\n- For `point`/`circle`/`square`, this represents the pixel area of the marks. For example: in the case of circles, the radius is determined in part by the square root of the size value.\n- For `bar`, this represents the band size of the bar, in pixels.\n- For `text`, this represents the font size, in pixels.\n\n__Default value:__ `30` for point, circle, square marks; `rangeStep` - 1 for bar marks with discrete dimensions; `5` for bar marks with continuous dimensions; `11` for text marks.",minimum:0,type:"number"},stroke:{$ref:"#/definitions/Color",description:"Default Stroke Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},tension:{description:"Depending on the interpolation type, sets the tension parameter (for line and area marks).",maximum:1,minimum:0,type:"number"},text:{description:"Placeholder text if the `text` channel is not specified",type:"string"},theta:{description:'Polar coordinate angle, in radians, of the text label from the origin determined by the `x` and `y` properties. Values for `theta` follow the same convention of `arc` mark `startAngle` and `endAngle` properties: angles are measured in radians, with `0` indicating "north".',type:"number"},thickness:{description:"Thickness of the tick mark.\n\n__Default value:__  `1`",minimum:0,type:"number"},tooltip:{anyOf:[{type:"string"},{$ref:"#/definitions/TooltipContent"},{type:"null"}],description:'The tooltip text string to show upon mouse hover or an object defining which fields should the tooltip be derived from.\n\n- If `tooltip` is `{"content": "encoding"}`, then all fields from `encoding` will be used.\n- If `tooltip` is `{"content": "data"}`, then all fields that appear in the highlighted data point will be used.\n- If set to `null`, then no tooltip will be used.'}},type:"object"},TimeUnit:{anyOf:[{$ref:"#/definitions/SingleTimeUnit"},{$ref:"#/definitions/MultiTimeUnit"}]},TimeUnitTransform:{additionalProperties:!1,properties:{as:{description:"The output field to write the timeUnit value.",type:"string"},field:{description:"The data field to apply time unit.",type:"string"},timeUnit:{$ref:"#/definitions/TimeUnit",description:"The timeUnit."}},required:["timeUnit","field","as"],type:"object"},TitleAnchor:{enum:["start","middle","end"],type:"string"},TitleConfig:{$ref:"#/definitions/BaseTitleConfig"},TitleFrame:{enum:["bounds","group"],type:"string"},TitleOrient:{enum:["none","left","right","top","bottom"],type:"string"},TitleParams:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align"},anchor:{$ref:"#/definitions/TitleAnchor",description:'The anchor position for placing the title. One of `"start"`, `"middle"`, or `"end"`. For example, with an orientation of top these anchor positions map to a left-, center-, or right-aligned title.\n\n__Default value:__ `"middle"` for [single](https://vega.github.io/vega-lite/docs/spec.html) and [layered](https://vega.github.io/vega-lite/docs/layer.html) views.\n`"start"` for other composite views.\n\n__Note:__ [For now](https://github.com/vega/vega-lite/issues/2875), `anchor` is only customizable only for [single](https://vega.github.io/vega-lite/docs/spec.html) and [layered](https://vega.github.io/vega-lite/docs/layer.html) views.  For other composite views, `anchor` is always `"start"`.'},angle:{description:"Angle in degrees of title text.",type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'Vertical text baseline for title text. One of `"top"`, `"middle"`, `"bottom"`, or `"alphabetic"`.'},color:{$ref:"#/definitions/Color",description:"Text color for title text."},font:{description:"Font name for title text.",type:"string"},fontSize:{description:"Font size in pixels for title text.\n\n__Default value:__ `10`.",minimum:0,type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:"Font style for title text."},fontWeight:{$ref:"#/definitions/FontWeight",description:'Font weight for title text.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},frame:{$ref:"#/definitions/TitleFrame",description:'The reference frame for the anchor position, one of `"bounds"` (to anchor relative to the full bounding box) or `"group"` (to anchor relative to the group width or height).'},limit:{description:"The maximum allowed length in pixels of legend labels.",minimum:0,type:"number"},offset:{description:"The orthogonal offset in pixels by which to displace the title from its position along the edge of the chart.",type:"number"},orient:{$ref:"#/definitions/TitleOrient",description:'Default title orientation (`"top"`, `"bottom"`, `"left"`, or `"right"`)'},style:{anyOf:[{type:"string"},{items:{type:"string"},type:"array"}],description:'A [mark style property](https://vega.github.io/vega-lite/docs/config.html#style) to apply to the title text mark.\n\n__Default value:__ `"group-title"`.'},text:{description:"The title text.",type:"string"},zindex:{description:"The integer z-index indicating the layering of the title group relative to other axis, mark and legend groups.\n\n__Default value:__ `0`.",minimum:0,type:"number"}},required:["text"],type:"object"},TooltipContent:{additionalProperties:!1,properties:{content:{enum:["encoding","data"],type:"string"}},required:["content"],type:"object"},TopLevelConcatSpec:{additionalProperties:!1,properties:{$schema:{description:"URL to [JSON schema](http://json-schema.org/) for a Vega-Lite specification. Unless you have a reason to change this, use `https://vega.github.io/schema/vega-lite/v3.json`. Setting the `$schema` property allows automatic validation and autocomplete in editors that support JSON schema.",format:"uri",type:"string"},align:{anyOf:[{$ref:"#/definitions/LayoutAlign"},{$ref:"#/definitions/RowCol<LayoutAlign>"}],description:'The alignment to apply to grid rows and columns.\nThe supported string values are `"all"`, `"each"`, and `"none"`.\n\n- For `"none"`, a flow layout will be used, in which adjacent subviews are simply placed one after the other.\n- For `"each"`, subviews will be aligned into a clean grid structure, but each row or column may be of variable size.\n- For `"all"`, subviews will be aligned and each row or column will be sized identically based on the maximum observed size. String values for this property will be applied to both grid rows and columns.\n\nAlternatively, an object value of the form `{"row": string, "column": string}` can be used to supply different alignments for rows and columns.\n\n__Default value:__ `"all"`.'},autosize:{anyOf:[{$ref:"#/definitions/AutosizeType"},{$ref:"#/definitions/AutoSizeParams"}],description:'Sets how the visualization size should be determined. If a string, should be one of `"pad"`, `"fit"` or `"none"`.\nObject values can additionally specify parameters for content sizing and automatic resizing.\n`"fit"` is only supported for single and layered views that don\'t use `rangeStep`.\n\n__Default value__: `pad`'},background:{description:"CSS color property to use as the background of the entire view.\n\n__Default value:__ none (transparent)",type:"string"},bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{anyOf:[{type:"boolean"},{$ref:"#/definitions/RowCol<boolean>"}],description:'Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\nAn object value of the form `{"row": boolean, "column": boolean}` can be used to supply different centering values for rows and columns.\n\n__Default value:__ `false`'},columns:{description:"The number of columns to include in the view composition layout. If unspecified, an infinite number of columns (a single row) will be assumed.",type:"number"},concat:{description:"A list of views to be concatenated.",items:{$ref:"#/definitions/Spec"},type:"array"},config:{$ref:"#/definitions/Config",description:"Vega-Lite configuration object.  This property can only be defined at the top-level of a specification."},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},datasets:{$ref:"#/definitions/Datasets",description:"A global data store for named datasets. This is a mapping from names to inline datasets.\nThis can be an array of objects or primitive values or a string. Arrays of primitive values are ingested as objects with a `data` property."},description:{description:"Description of this mark for commenting purpose.",type:"string"},name:{description:"Name of the visualization for later reference.",type:"string"},padding:{$ref:"#/definitions/Padding",description:'The default visualization padding, in pixels, from the edge of the visualization canvas to the data rectangle.  If a number, specifies padding for all sides.\nIf an object, the value should have the format `{"left": 5, "top": 5, "right": 5, "bottom": 5}` to specify padding for each side of the visualization.\n\n__Default value__: `5`'},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},spacing:{anyOf:[{type:"number"},{$ref:"#/definitions/RowCol<number>"}],description:'The spacing in pixels between sub-views of the composition operator.\nAn object of the form `{"row": number, "column": number}` can be used to set\ndifferent spacing values for rows and columns.\n\n__Default value__: `20`'},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},usermeta:{description:"Optional metadata that will be passed to Vega.\nThis object is completely ignored by Vega and Vega-Lite and can be used for custom metadata.",type:"object"}},required:["concat"],type:"object"},TopLevelHConcatSpec:{additionalProperties:!1,properties:{$schema:{description:"URL to [JSON schema](http://json-schema.org/) for a Vega-Lite specification. Unless you have a reason to change this, use `https://vega.github.io/schema/vega-lite/v3.json`. Setting the `$schema` property allows automatic validation and autocomplete in editors that support JSON schema.",format:"uri",type:"string"},autosize:{anyOf:[{$ref:"#/definitions/AutosizeType"},{$ref:"#/definitions/AutoSizeParams"}],description:'Sets how the visualization size should be determined. If a string, should be one of `"pad"`, `"fit"` or `"none"`.\nObject values can additionally specify parameters for content sizing and automatic resizing.\n`"fit"` is only supported for single and layered views that don\'t use `rangeStep`.\n\n__Default value__: `pad`'},background:{description:"CSS color property to use as the background of the entire view.\n\n__Default value:__ none (transparent)",type:"string"},bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{description:"Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\n__Default value:__ `false`",type:"boolean"},config:{$ref:"#/definitions/Config",description:"Vega-Lite configuration object.  This property can only be defined at the top-level of a specification."},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},datasets:{$ref:"#/definitions/Datasets",description:"A global data store for named datasets. This is a mapping from names to inline datasets.\nThis can be an array of objects or primitive values or a string. Arrays of primitive values are ingested as objects with a `data` property."},description:{description:"Description of this mark for commenting purpose.",type:"string"},hconcat:{description:"A list of views to be concatenated and put into a row.",items:{$ref:"#/definitions/Spec"},type:"array"},name:{description:"Name of the visualization for later reference.",type:"string"},padding:{$ref:"#/definitions/Padding",description:'The default visualization padding, in pixels, from the edge of the visualization canvas to the data rectangle.  If a number, specifies padding for all sides.\nIf an object, the value should have the format `{"left": 5, "top": 5, "right": 5, "bottom": 5}` to specify padding for each side of the visualization.\n\n__Default value__: `5`'},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},spacing:{description:"The spacing in pixels between sub-views of the concat operator.\n\n__Default value__: `10`",type:"number"},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},usermeta:{description:"Optional metadata that will be passed to Vega.\nThis object is completely ignored by Vega and Vega-Lite and can be used for custom metadata.",type:"object"}},required:["hconcat"],type:"object"},TopLevelRepeatSpec:{additionalProperties:!1,properties:{$schema:{description:"URL to [JSON schema](http://json-schema.org/) for a Vega-Lite specification. Unless you have a reason to change this, use `https://vega.github.io/schema/vega-lite/v3.json`. Setting the `$schema` property allows automatic validation and autocomplete in editors that support JSON schema.",format:"uri",type:"string"},align:{anyOf:[{$ref:"#/definitions/LayoutAlign"},{$ref:"#/definitions/RowCol<LayoutAlign>"}],description:'The alignment to apply to grid rows and columns.\nThe supported string values are `"all"`, `"each"`, and `"none"`.\n\n- For `"none"`, a flow layout will be used, in which adjacent subviews are simply placed one after the other.\n- For `"each"`, subviews will be aligned into a clean grid structure, but each row or column may be of variable size.\n- For `"all"`, subviews will be aligned and each row or column will be sized identically based on the maximum observed size. String values for this property will be applied to both grid rows and columns.\n\nAlternatively, an object value of the form `{"row": string, "column": string}` can be used to supply different alignments for rows and columns.\n\n__Default value:__ `"all"`.'},autosize:{anyOf:[{$ref:"#/definitions/AutosizeType"},{$ref:"#/definitions/AutoSizeParams"}],description:'Sets how the visualization size should be determined. If a string, should be one of `"pad"`, `"fit"` or `"none"`.\nObject values can additionally specify parameters for content sizing and automatic resizing.\n`"fit"` is only supported for single and layered views that don\'t use `rangeStep`.\n\n__Default value__: `pad`'},background:{description:"CSS color property to use as the background of the entire view.\n\n__Default value:__ none (transparent)",type:"string"},bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{anyOf:[{type:"boolean"},{$ref:"#/definitions/RowCol<boolean>"}],description:'Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\nAn object value of the form `{"row": boolean, "column": boolean}` can be used to supply different centering values for rows and columns.\n\n__Default value:__ `false`'},columns:{description:"The number of columns to include in the view composition layout. If unspecified, an infinite number of columns (a single row) will be assumed.",type:"number"},config:{$ref:"#/definitions/Config",description:"Vega-Lite configuration object.  This property can only be defined at the top-level of a specification."},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},datasets:{$ref:"#/definitions/Datasets",description:"A global data store for named datasets. This is a mapping from names to inline datasets.\nThis can be an array of objects or primitive values or a string. Arrays of primitive values are ingested as objects with a `data` property."},description:{description:"Description of this mark for commenting purpose.",type:"string"},name:{description:"Name of the visualization for later reference.",type:"string"},padding:{$ref:"#/definitions/Padding",description:'The default visualization padding, in pixels, from the edge of the visualization canvas to the data rectangle.  If a number, specifies padding for all sides.\nIf an object, the value should have the format `{"left": 5, "top": 5, "right": 5, "bottom": 5}` to specify padding for each side of the visualization.\n\n__Default value__: `5`'},repeat:{anyOf:[{$ref:"#/definitions/Repeat"},{items:{type:"string"},type:"array"}],description:"An object that describes what fields should be repeated into views that are laid out as a `row` or `column`."},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},spacing:{anyOf:[{type:"number"},{$ref:"#/definitions/RowCol<number>"}],description:'The spacing in pixels between sub-views of the composition operator.\nAn object of the form `{"row": number, "column": number}` can be used to set\ndifferent spacing values for rows and columns.\n\n__Default value__: `20`'},spec:{$ref:"#/definitions/Spec"},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},usermeta:{description:"Optional metadata that will be passed to Vega.\nThis object is completely ignored by Vega and Vega-Lite and can be used for custom metadata.",type:"object"}},required:["repeat","spec"],type:"object"},TopLevelVConcatSpec:{additionalProperties:!1,properties:{$schema:{description:"URL to [JSON schema](http://json-schema.org/) for a Vega-Lite specification. Unless you have a reason to change this, use `https://vega.github.io/schema/vega-lite/v3.json`. Setting the `$schema` property allows automatic validation and autocomplete in editors that support JSON schema.",format:"uri",type:"string"},autosize:{anyOf:[{$ref:"#/definitions/AutosizeType"},{$ref:"#/definitions/AutoSizeParams"}],description:'Sets how the visualization size should be determined. If a string, should be one of `"pad"`, `"fit"` or `"none"`.\nObject values can additionally specify parameters for content sizing and automatic resizing.\n`"fit"` is only supported for single and layered views that don\'t use `rangeStep`.\n\n__Default value__: `pad`'},background:{description:"CSS color property to use as the background of the entire view.\n\n__Default value:__ none (transparent)",type:"string"},bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{description:"Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\n__Default value:__ `false`",type:"boolean"},config:{$ref:"#/definitions/Config",description:"Vega-Lite configuration object.  This property can only be defined at the top-level of a specification."},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},datasets:{$ref:"#/definitions/Datasets",description:"A global data store for named datasets. This is a mapping from names to inline datasets.\nThis can be an array of objects or primitive values or a string. Arrays of primitive values are ingested as objects with a `data` property."},description:{description:"Description of this mark for commenting purpose.",type:"string"},name:{description:"Name of the visualization for later reference.",type:"string"},padding:{$ref:"#/definitions/Padding",description:'The default visualization padding, in pixels, from the edge of the visualization canvas to the data rectangle.  If a number, specifies padding for all sides.\nIf an object, the value should have the format `{"left": 5, "top": 5, "right": 5, "bottom": 5}` to specify padding for each side of the visualization.\n\n__Default value__: `5`'},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},spacing:{description:"The spacing in pixels between sub-views of the concat operator.\n\n__Default value__: `10`",type:"number"},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},usermeta:{description:"Optional metadata that will be passed to Vega.\nThis object is completely ignored by Vega and Vega-Lite and can be used for custom metadata.",type:"object"},vconcat:{description:"A list of views to be concatenated and put into a column.",items:{$ref:"#/definitions/Spec"},type:"array"}},required:["vconcat"],type:"object"},TopLevelLayerSpec:{additionalProperties:!1,properties:{$schema:{description:"URL to [JSON schema](http://json-schema.org/) for a Vega-Lite specification. Unless you have a reason to change this, use `https://vega.github.io/schema/vega-lite/v3.json`. Setting the `$schema` property allows automatic validation and autocomplete in editors that support JSON schema.",format:"uri",type:"string"},autosize:{anyOf:[{$ref:"#/definitions/AutosizeType"},{$ref:"#/definitions/AutoSizeParams"}],description:'Sets how the visualization size should be determined. If a string, should be one of `"pad"`, `"fit"` or `"none"`.\nObject values can additionally specify parameters for content sizing and automatic resizing.\n`"fit"` is only supported for single and layered views that don\'t use `rangeStep`.\n\n__Default value__: `pad`'},background:{description:"CSS color property to use as the background of the entire view.\n\n__Default value:__ none (transparent)",type:"string"},config:{$ref:"#/definitions/Config",description:"Vega-Lite configuration object.  This property can only be defined at the top-level of a specification."},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},datasets:{$ref:"#/definitions/Datasets",description:"A global data store for named datasets. This is a mapping from names to inline datasets.\nThis can be an array of objects or primitive values or a string. Arrays of primitive values are ingested as objects with a `data` property."},description:{description:"Description of this mark for commenting purpose.",type:"string"},encoding:{$ref:"#/definitions/Encoding",description:"A shared key-value mapping between encoding channels and definition of fields in the underlying layers."},height:{description:'The height of a visualization.\n\n__Default value:__\n- If a view\'s [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `"fit"` or its y-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- For y-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the height is [determined by the range step, paddings, and the cardinality of the field mapped to y-channel](https://vega.github.io/vega-lite/docs/scale.html#band). Otherwise, if the `rangeStep` is `null`, the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- If no field is mapped to `y` channel, the `height` will be the value of `rangeStep`.\n\n__Note__: For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the height of a single view.\n\n__See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.',type:"number"},layer:{description:"Layer or single view specifications to be layered.\n\n__Note__: Specifications inside `layer` cannot use `row` and `column` channels as layering facet specifications is not allowed. Instead, use the [facet operator](https://vega.github.io/vega-lite/docs/facet.html) and place a layer inside a facet.",items:{anyOf:[{$ref:"#/definitions/LayerSpec"},{$ref:"#/definitions/UnitSpec"}]},type:"array"},name:{description:"Name of the visualization for later reference.",type:"string"},padding:{$ref:"#/definitions/Padding",description:'The default visualization padding, in pixels, from the edge of the visualization canvas to the data rectangle.  If a number, specifies padding for all sides.\nIf an object, the value should have the format `{"left": 5, "top": 5, "right": 5, "bottom": 5}` to specify padding for each side of the visualization.\n\n__Default value__: `5`'},projection:{$ref:"#/definitions/Projection",description:"An object defining properties of the geographic projection shared by underlying layers."},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},usermeta:{description:"Optional metadata that will be passed to Vega.\nThis object is completely ignored by Vega and Vega-Lite and can be used for custom metadata.",type:"object"},view:{$ref:"#/definitions/ViewBackground",description:"An object defining the view background's fill and stroke.\n\n__Default value:__ none (transparent)"},width:{description:'The width of a visualization.\n\n__Default value:__ This will be determined by the following rules:\n\n- If a view\'s [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `"fit"` or its x-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- For x-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the width is [determined by the range step, paddings, and the cardinality of the field mapped to x-channel](https://vega.github.io/vega-lite/docs/scale.html#band).   Otherwise, if the `rangeStep` is `null`, the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- If no field is mapped to `x` channel, the `width` will be the value of [`config.scale.textXRangeStep`](https://vega.github.io/vega-lite/docs/size.html#default-width-and-height) for `text` mark and the value of `rangeStep` for other marks.\n\n__Note:__ For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the width of a single view.\n\n__See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.',type:"number"}},required:["layer"],type:"object"},TopLevelFacetSpec:{additionalProperties:!1,properties:{$schema:{description:"URL to [JSON schema](http://json-schema.org/) for a Vega-Lite specification. Unless you have a reason to change this, use `https://vega.github.io/schema/vega-lite/v3.json`. Setting the `$schema` property allows automatic validation and autocomplete in editors that support JSON schema.",format:"uri",type:"string"},align:{anyOf:[{$ref:"#/definitions/LayoutAlign"},{$ref:"#/definitions/RowCol<LayoutAlign>"}],description:'The alignment to apply to grid rows and columns.\nThe supported string values are `"all"`, `"each"`, and `"none"`.\n\n- For `"none"`, a flow layout will be used, in which adjacent subviews are simply placed one after the other.\n- For `"each"`, subviews will be aligned into a clean grid structure, but each row or column may be of variable size.\n- For `"all"`, subviews will be aligned and each row or column will be sized identically based on the maximum observed size. String values for this property will be applied to both grid rows and columns.\n\nAlternatively, an object value of the form `{"row": string, "column": string}` can be used to supply different alignments for rows and columns.\n\n__Default value:__ `"all"`.'},autosize:{anyOf:[{$ref:"#/definitions/AutosizeType"},{$ref:"#/definitions/AutoSizeParams"}],description:'Sets how the visualization size should be determined. If a string, should be one of `"pad"`, `"fit"` or `"none"`.\nObject values can additionally specify parameters for content sizing and automatic resizing.\n`"fit"` is only supported for single and layered views that don\'t use `rangeStep`.\n\n__Default value__: `pad`'},background:{description:"CSS color property to use as the background of the entire view.\n\n__Default value:__ none (transparent)",type:"string"},bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{anyOf:[{type:"boolean"},{$ref:"#/definitions/RowCol<boolean>"}],description:'Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\nAn object value of the form `{"row": boolean, "column": boolean}` can be used to supply different centering values for rows and columns.\n\n__Default value:__ `false`'},columns:{description:"The number of columns to include in the view composition layout. If unspecified, an infinite number of columns (a single row) will be assumed.",type:"number"},config:{$ref:"#/definitions/Config",description:"Vega-Lite configuration object.  This property can only be defined at the top-level of a specification."},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},datasets:{$ref:"#/definitions/Datasets",description:"A global data store for named datasets. This is a mapping from names to inline datasets.\nThis can be an array of objects or primitive values or a string. Arrays of primitive values are ingested as objects with a `data` property."},description:{description:"Description of this mark for commenting purpose.",type:"string"},facet:{anyOf:[{$ref:"#/definitions/FacetFieldDef"},{$ref:"#/definitions/FacetMapping"}],description:"A field definition for faceting the plot or an object that describes mappings between `row` and `column` channels and their field definitions."},name:{description:"Name of the visualization for later reference.",type:"string"},padding:{$ref:"#/definitions/Padding",description:'The default visualization padding, in pixels, from the edge of the visualization canvas to the data rectangle.  If a number, specifies padding for all sides.\nIf an object, the value should have the format `{"left": 5, "top": 5, "right": 5, "bottom": 5}` to specify padding for each side of the visualization.\n\n__Default value__: `5`'},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},spacing:{anyOf:[{type:"number"},{$ref:"#/definitions/RowCol<number>"}],description:'The spacing in pixels between sub-views of the composition operator.\nAn object of the form `{"row": number, "column": number}` can be used to set\ndifferent spacing values for rows and columns.\n\n__Default value__: `20`'},spec:{anyOf:[{$ref:"#/definitions/LayerSpec"},{$ref:"#/definitions/FacetedUnitSpec"}],description:"A specification of the view that gets faceted."},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},usermeta:{description:"Optional metadata that will be passed to Vega.\nThis object is completely ignored by Vega and Vega-Lite and can be used for custom metadata.",type:"object"}},required:["data","facet","spec"],type:"object"},TopLevelSpec:{anyOf:[{$ref:"#/definitions/TopLevelUnitSpec"},{$ref:"#/definitions/TopLevelFacetSpec"},{$ref:"#/definitions/TopLevelLayerSpec"},{$ref:"#/definitions/TopLevelRepeatSpec"},{$ref:"#/definitions/TopLevelConcatSpec"},{$ref:"#/definitions/TopLevelVConcatSpec"},{$ref:"#/definitions/TopLevelHConcatSpec"}],description:"A Vega-Lite top-level specification.\nThis is the root class for all Vega-Lite specifications.\n(The json schema is generated from this type.)"},TopLevelUnitSpec:{additionalProperties:!1,properties:{$schema:{description:"URL to [JSON schema](http://json-schema.org/) for a Vega-Lite specification. Unless you have a reason to change this, use `https://vega.github.io/schema/vega-lite/v3.json`. Setting the `$schema` property allows automatic validation and autocomplete in editors that support JSON schema.",format:"uri",type:"string"},align:{anyOf:[{$ref:"#/definitions/LayoutAlign"},{$ref:"#/definitions/RowCol<LayoutAlign>"}],description:'The alignment to apply to grid rows and columns.\nThe supported string values are `"all"`, `"each"`, and `"none"`.\n\n- For `"none"`, a flow layout will be used, in which adjacent subviews are simply placed one after the other.\n- For `"each"`, subviews will be aligned into a clean grid structure, but each row or column may be of variable size.\n- For `"all"`, subviews will be aligned and each row or column will be sized identically based on the maximum observed size. String values for this property will be applied to both grid rows and columns.\n\nAlternatively, an object value of the form `{"row": string, "column": string}` can be used to supply different alignments for rows and columns.\n\n__Default value:__ `"all"`.'},autosize:{anyOf:[{$ref:"#/definitions/AutosizeType"},{$ref:"#/definitions/AutoSizeParams"}],description:'Sets how the visualization size should be determined. If a string, should be one of `"pad"`, `"fit"` or `"none"`.\nObject values can additionally specify parameters for content sizing and automatic resizing.\n`"fit"` is only supported for single and layered views that don\'t use `rangeStep`.\n\n__Default value__: `pad`'},background:{description:"CSS color property to use as the background of the entire view.\n\n__Default value:__ none (transparent)",type:"string"},bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{anyOf:[{type:"boolean"},{$ref:"#/definitions/RowCol<boolean>"}],description:'Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\nAn object value of the form `{"row": boolean, "column": boolean}` can be used to supply different centering values for rows and columns.\n\n__Default value:__ `false`'},columns:{description:"The number of columns to include in the view composition layout. If unspecified, an infinite number of columns (a single row) will be assumed.",type:"number"},config:{$ref:"#/definitions/Config",description:"Vega-Lite configuration object.  This property can only be defined at the top-level of a specification."},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},datasets:{$ref:"#/definitions/Datasets",description:"A global data store for named datasets. This is a mapping from names to inline datasets.\nThis can be an array of objects or primitive values or a string. Arrays of primitive values are ingested as objects with a `data` property."},description:{description:"Description of this mark for commenting purpose.",type:"string"},encoding:{$ref:"#/definitions/FacetedEncoding",description:"A key-value mapping between encoding channels and definition of fields."},height:{description:'The height of a visualization.\n\n__Default value:__\n- If a view\'s [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `"fit"` or its y-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- For y-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the height is [determined by the range step, paddings, and the cardinality of the field mapped to y-channel](https://vega.github.io/vega-lite/docs/scale.html#band). Otherwise, if the `rangeStep` is `null`, the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- If no field is mapped to `y` channel, the `height` will be the value of `rangeStep`.\n\n__Note__: For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the height of a single view.\n\n__See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.',type:"number"},mark:{$ref:"#/definitions/AnyMark",description:'A string describing the mark type (one of `"bar"`, `"circle"`, `"square"`, `"tick"`, `"line"`,\n`"area"`, `"point"`, `"rule"`, `"geoshape"`, and `"text"`) or a [mark definition object](https://vega.github.io/vega-lite/docs/mark.html#mark-def).'},name:{description:"Name of the visualization for later reference.",type:"string"},padding:{$ref:"#/definitions/Padding",description:'The default visualization padding, in pixels, from the edge of the visualization canvas to the data rectangle.  If a number, specifies padding for all sides.\nIf an object, the value should have the format `{"left": 5, "top": 5, "right": 5, "bottom": 5}` to specify padding for each side of the visualization.\n\n__Default value__: `5`'},projection:{$ref:"#/definitions/Projection",description:'An object defining properties of geographic projection, which will be applied to `shape` path for `"geoshape"` marks\nand to `latitude` and `"longitude"` channels for other marks.'},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},selection:{additionalProperties:{$ref:"#/definitions/SelectionDef"},description:"A key-value mapping between selection names and definitions.",type:"object"},spacing:{anyOf:[{type:"number"},{$ref:"#/definitions/RowCol<number>"}],description:'The spacing in pixels between sub-views of the composition operator.\nAn object of the form `{"row": number, "column": number}` can be used to set\ndifferent spacing values for rows and columns.\n\n__Default value__: `20`'},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},usermeta:{description:"Optional metadata that will be passed to Vega.\nThis object is completely ignored by Vega and Vega-Lite and can be used for custom metadata.",type:"object"},view:{$ref:"#/definitions/ViewBackground",description:"An object defining the view background's fill and stroke.\n\n__Default value:__ none (transparent)"},width:{description:'The width of a visualization.\n\n__Default value:__ This will be determined by the following rules:\n\n- If a view\'s [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `"fit"` or its x-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- For x-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the width is [determined by the range step, paddings, and the cardinality of the field mapped to x-channel](https://vega.github.io/vega-lite/docs/scale.html#band).   Otherwise, if the `rangeStep` is `null`, the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- If no field is mapped to `x` channel, the `width` will be the value of [`config.scale.textXRangeStep`](https://vega.github.io/vega-lite/docs/size.html#default-width-and-height) for `text` mark and the value of `rangeStep` for other marks.\n\n__Note:__ For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the width of a single view.\n\n__See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.',type:"number"}},required:["data","mark"],type:"object"},TopoDataFormat:{additionalProperties:!1,properties:{feature:{description:'The name of the TopoJSON object set to convert to a GeoJSON feature collection.\nFor example, in a map of the world, there may be an object set named `"countries"`.\nUsing the feature property, we can extract this set and generate a GeoJSON feature object for each country.',type:"string"},mesh:{description:"The name of the TopoJSON object set to convert to mesh.\nSimilar to the `feature` option, `mesh` extracts a named TopoJSON object set.\n  Unlike the `feature` option, the corresponding geo data is returned as a single, unified mesh instance, not as individual GeoJSON features.\nExtracting a mesh is useful for more efficiently drawing borders or other geographic elements that you do not need to associate with specific regions such as individual countries, states or counties.",type:"string"},parse:{anyOf:[{$ref:"#/definitions/Parse"},{type:"null"}],description:'If set to `null`, disable type inference based on the spec and only use type inference based on the data.\nAlternatively, a parsing directive object can be provided for explicit data types. Each property of the object corresponds to a field name, and the value to the desired data type (one of `"number"`, `"boolean"`, `"date"`, or null (do not parse the field)).\nFor example, `"parse": {"modified_on": "date"}` parses the `modified_on` field in each input record a Date value.\n\nFor `"date"`, we parse data based using Javascript\'s [`Date.parse()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).\nFor Specific date formats can be provided (e.g., `{foo: \'date:"%m%d%Y"\'}`), using the [d3-time-format syntax](https://github.com/d3/d3-time-format#locale_format). UTC date format parsing is supported similarly (e.g., `{foo: \'utc:"%m%d%Y"\'}`). See more about [UTC time](https://vega.github.io/vega-lite/docs/timeunit.html#utc)'},type:{description:'Type of input data: `"json"`, `"csv"`, `"tsv"`, `"dsv"`.\nThe default format type is determined by the extension of the file URL.\nIf no extension is detected, `"json"` will be used by default.',enum:["topojson"],type:"string"}},type:"object"},Transform:{anyOf:[{$ref:"#/definitions/FilterTransform"},{$ref:"#/definitions/CalculateTransform"},{$ref:"#/definitions/LookupTransform"},{$ref:"#/definitions/BinTransform"},{$ref:"#/definitions/TimeUnitTransform"},{$ref:"#/definitions/ImputeTransform"},{$ref:"#/definitions/AggregateTransform"},{$ref:"#/definitions/WindowTransform"},{$ref:"#/definitions/JoinAggregateTransform"},{$ref:"#/definitions/StackTransform"},{$ref:"#/definitions/FlattenTransform"},{$ref:"#/definitions/FoldTransform"},{$ref:"#/definitions/SampleTransform"}]},Type:{anyOf:[{$ref:"#/definitions/StandardType"},{enum:["geojson"],type:"string"}],description:"Constants and utilities for data type \n Data type based on level of measurement"},TypeForShape:{enum:["nominal","ordinal","geojson"],type:"string"},UnitSpec:{$ref:"#/definitions/GenericUnitSpec<Encoding,AnyMark>",description:"A unit specification, which can contain either [primitive marks or composite marks](https://vega.github.io/vega-lite/docs/mark.html#types)."},UrlData:{additionalProperties:!1,properties:{format:{$ref:"#/definitions/DataFormat",description:"An object that specifies the format for parsing the data."},name:{description:"Provide a placeholder name and bind data at runtime.",type:"string"},url:{description:"An URL from which to load the data set. Use the `format.type` property\nto ensure the loaded data is correctly parsed.",type:"string"}},required:["url"],type:"object"},UtcMultiTimeUnit:{enum:["utcyearquarter","utcyearquartermonth","utcyearmonth","utcyearmonthdate","utcyearmonthdatehours","utcyearmonthdatehoursminutes","utcyearmonthdatehoursminutesseconds","utcquartermonth","utcmonthdate","utcmonthdatehours","utchoursminutes","utchoursminutesseconds","utcminutesseconds","utcsecondsmilliseconds"],type:"string"},UtcSingleTimeUnit:{enum:["utcyear","utcquarter","utcmonth","utcday","utcdate","utchours","utcminutes","utcseconds","utcmilliseconds"],type:"string"},YValueDef:{additionalProperties:!1,description:"Definition object for a constant value of an encoding channel.",properties:{value:{anyOf:[{type:"number"},{enum:["height"],type:"string"}],description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).'}},required:["value"],type:"object"},XValueDef:{additionalProperties:!1,description:"Definition object for a constant value of an encoding channel.",properties:{value:{anyOf:[{type:"number"},{enum:["width"],type:"string"}],description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).'}},required:["value"],type:"object"},NumberValueDef:{additionalProperties:!1,description:"Definition object for a constant value of an encoding channel.",properties:{value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:"number"}},required:["value"],type:"object"},'ValueDefWithCondition<MarkPropFieldDef<"nominal">,string>':{anyOf:[{$ref:'#/definitions/ValueDefWithOptionalCondition<MarkPropFieldDef<"nominal">,string>'},{$ref:'#/definitions/ConditionOnlyDef<MarkPropFieldDef<"nominal">>'}],description:"A ValueDef with Condition<ValueDef | FieldDef> where either the conition or the value are optional.\n{\n   condition: {field: ...} | {value: ...},\n   value: ...,\n}"},"ValueDefWithCondition<MarkPropFieldDef,(string|null)>":{anyOf:[{$ref:"#/definitions/ValueDefWithOptionalCondition<MarkPropFieldDef,(string|null)>"},{$ref:"#/definitions/ConditionOnlyDef<MarkPropFieldDef>"}],description:"A ValueDef with Condition<ValueDef | FieldDef> where either the conition or the value are optional.\n{\n   condition: {field: ...} | {value: ...},\n   value: ...,\n}"},"ValueDefWithCondition<MarkPropFieldDef,number>":{anyOf:[{$ref:"#/definitions/ValueDefWithOptionalCondition<MarkPropFieldDef,number>"},{$ref:"#/definitions/ConditionOnlyDef<MarkPropFieldDef>"}],description:"A ValueDef with Condition<ValueDef | FieldDef> where either the conition or the value are optional.\n{\n   condition: {field: ...} | {value: ...},\n   value: ...,\n}"},"ValueDefWithCondition<MarkPropFieldDef<TypeForShape>,string>":{anyOf:[{$ref:"#/definitions/ValueDefWithOptionalCondition<MarkPropFieldDef<TypeForShape>,string>"},{$ref:"#/definitions/ConditionOnlyDef<MarkPropFieldDef<TypeForShape>>"}],description:"A ValueDef with Condition<ValueDef | FieldDef> where either the conition or the value are optional.\n{\n   condition: {field: ...} | {value: ...},\n   value: ...,\n}"},"ValueDefWithCondition<TextFieldDef,(string|number|boolean)>":{anyOf:[{$ref:"#/definitions/ValueDefWithOptionalCondition<TextFieldDef,(string|number|boolean)>"},{$ref:"#/definitions/ConditionOnlyDef<TextFieldDef>"}],description:"A ValueDef with Condition<ValueDef | FieldDef> where either the conition or the value are optional.\n{\n   condition: {field: ...} | {value: ...},\n   value: ...,\n}"},'ValueDefWithOptionalCondition<MarkPropFieldDef<"nominal">,string>':{additionalProperties:!1,description:"A ValueDef with optional Condition<ValueDef | FieldDef>\n{\n   condition: {field: ...} | {value: ...},\n   value: ...,\n}",properties:{condition:{anyOf:[{$ref:'#/definitions/ConditionalMarkPropFieldDef<"nominal">'},{$ref:"#/definitions/ConditionalStringValueDef"},{items:{$ref:"#/definitions/ConditionalStringValueDef"},type:"array"}],description:"A field definition or one or more value definition(s) with a selection predicate."},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:"string"}},required:["value"],type:"object"},"ValueDefWithOptionalCondition<MarkPropFieldDef,(string|null)>":{additionalProperties:!1,description:"A ValueDef with optional Condition<ValueDef | FieldDef>\n{\n   condition: {field: ...} | {value: ...},\n   value: ...,\n}",properties:{condition:{anyOf:[{$ref:"#/definitions/ConditionalMarkPropFieldDef"},{$ref:"#/definitions/ConditionalColorValueDef"},{items:{$ref:"#/definitions/ConditionalColorValueDef"},type:"array"}],description:"A field definition or one or more value definition(s) with a selection predicate."},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:["string","null"]}},required:["value"],type:"object"},"ValueDefWithOptionalCondition<MarkPropFieldDef,number>":{additionalProperties:!1,description:"A ValueDef with optional Condition<ValueDef | FieldDef>\n{\n   condition: {field: ...} | {value: ...},\n   value: ...,\n}",properties:{condition:{anyOf:[{$ref:"#/definitions/ConditionalMarkPropFieldDef"},{$ref:"#/definitions/ConditionalNumberValueDef"},{items:{$ref:"#/definitions/ConditionalNumberValueDef"},type:"array"}],description:"A field definition or one or more value definition(s) with a selection predicate."},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:"number"}},required:["value"],type:"object"},"ValueDefWithOptionalCondition<MarkPropFieldDef<TypeForShape>,string>":{additionalProperties:!1,description:"A ValueDef with optional Condition<ValueDef | FieldDef>\n{\n   condition: {field: ...} | {value: ...},\n   value: ...,\n}",properties:{condition:{anyOf:[{$ref:"#/definitions/ConditionalMarkPropFieldDef<TypeForShape>"},{$ref:"#/definitions/ConditionalStringValueDef"},{items:{$ref:"#/definitions/ConditionalStringValueDef"},type:"array"}],description:"A field definition or one or more value definition(s) with a selection predicate."},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:"string"}},required:["value"],type:"object"},"ValueDefWithOptionalCondition<TextFieldDef,(string|number|boolean)>":{additionalProperties:!1,description:"A ValueDef with optional Condition<ValueDef | FieldDef>\n{\n   condition: {field: ...} | {value: ...},\n   value: ...,\n}",properties:{condition:{anyOf:[{$ref:"#/definitions/ConditionalTextFieldDef"},{$ref:"#/definitions/ConditionalTextValueDef"},{items:{$ref:"#/definitions/ConditionalTextValueDef"},type:"array"}],description:"A field definition or one or more value definition(s) with a selection predicate."},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:["string","number","boolean"]}},required:["value"],type:"object"},ViewBackground:{additionalProperties:!1,properties:{cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},fill:{description:"The fill color.\n\n__Default value:__ `undefined`",type:["string","null"]},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},stroke:{description:'The stroke color.\n\n__Default value:__ `"#ddd"`',type:["string","null"]},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},style:{description:'A string or array of strings indicating the name of custom styles to apply to the view background. A style is a named collection of mark property defaults defined within the [style configuration](https://vega.github.io/vega-lite/docs/mark.html#style-config). If style is an array, later styles will override earlier styles.\n\n__Default value:__ `"cell"`\n__Note:__ Any specified view background properties will augment the default style.',type:"string"}},type:"object"},ViewConfig:{additionalProperties:!1,properties:{clip:{description:"Whether the view should be clipped.",type:"boolean"},cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},fill:{description:"The fill color.\n\n__Default value:__ `undefined`",type:["string","null"]},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},height:{description:"The default height of the single plot or each plot in a trellis plot when the visualization has a continuous (non-ordinal) y-scale with `rangeStep` = `null`.\n\n__Default value:__ `200`",type:"number"},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},stroke:{description:'The stroke color.\n\n__Default value:__ `"#ddd"`',type:["string","null"]},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},width:{description:"The default width of the single plot or each plot in a trellis plot when the visualization has a continuous (non-ordinal) x-scale or ordinal x-scale with `rangeStep` = `null`.\n\n__Default value:__ `200`",type:"number"}},type:"object"},WindowFieldDef:{additionalProperties:!1,properties:{as:{description:"The output name for the window operation.",type:"string"},field:{description:"The data field for which to compute the aggregate or window function. This can be omitted for window functions that do not operate over a field such as `count`, `rank`, `dense_rank`.",type:"string"},op:{anyOf:[{$ref:"#/definitions/AggregateOp"},{$ref:"#/definitions/WindowOnlyOp"}],description:"The window or aggregation operation to apply within a window (e.g.,`rank`, `lead`, `sum`, `average` or `count`). See the list of all supported operations [here](https://vega.github.io/vega-lite/docs/window.html#ops)."},param:{description:"Parameter values for the window functions. Parameter values can be omitted for operations that do not accept a parameter.\n\nSee the list of all supported operations and their parameters [here](https://vega.github.io/vega-lite/docs/transforms/window.html).",type:"number"}},required:["op","as"],type:"object"},WindowOnlyOp:{enum:["row_number","rank","dense_rank","percent_rank","cume_dist","ntile","lag","lead","first_value","last_value","nth_value"],type:"string"},WindowTransform:{additionalProperties:!1,properties:{frame:{description:"A frame specification as a two-element array indicating how the sliding window should proceed. The array entries should either be a number indicating the offset from the current data object, or null to indicate unbounded rows preceding or following the current data object. The default value is `[null, 0]`, indicating that the sliding window includes the current object and all preceding objects. The value `[-5, 5]` indicates that the window should include five objects preceding and five objects following the current object. Finally, `[null, null]` indicates that the window frame should always include all data objects. If you this frame and want to assign the same value to add objects, you can use the simpler [join aggregate transform](https://vega.github.io/vega-lite/docs/joinaggregate.html). The only operators affected are the aggregation operations and the `first_value`, `last_value`, and `nth_value` window operations. The other window operations are not affected by this.\n\n__Default value:__:  `[null, 0]` (includes the current object and all preceding objects)",items:{type:["null","number"]},type:"array"},groupby:{description:"The data fields for partitioning the data objects into separate windows. If unspecified, all data points will be in a single window.",items:{type:"string"},type:"array"},ignorePeers:{description:"Indicates if the sliding window frame should ignore peer values (data that are considered identical by the sort criteria). The default is false, causing the window frame to expand to include all peer values. If set to true, the window frame will be defined by offset values only. This setting only affects those operations that depend on the window frame, namely aggregation operations and the first_value, last_value, and nth_value window operations.\n\n__Default value:__ `false`",type:"boolean"},sort:{description:"A sort field definition for sorting data objects within a window. If two data objects are considered equal by the comparator, they are considered “peer” values of equal rank. If sort is not specified, the order is undefined: data objects are processed in the order they are observed and none are considered peers (the ignorePeers parameter is ignored and treated as if set to `true`).",items:{$ref:"#/definitions/SortField"},type:"array"},window:{description:"The definition of the fields in the window, and what calculations to use.",items:{$ref:"#/definitions/WindowFieldDef"},type:"array"}},required:["window"],type:"object"}}}},254:function(e){e.exports={name:"vega-lite",author:'Jeffrey Heer, Dominik Moritz, Kanit "Ham" Wongsuphasawat',version:"3.0.0-rc13",collaborators:["Kanit Wongsuphasawat <kanitw@gmail.com> (http://kanitw.yellowpigz.com)","Dominik Moritz <domoritz@cs.washington.edu> (https://www.domoritz.de)","Jeffrey Heer <jheer@uw.edu> (http://jheer.org)"],homepage:"https://vega.github.io/vega-lite/",description:"Vega-Lite is a concise high-level language for interactive visualization.",main:"build/vega-lite.js",unpkg:"build/vega-lite.min.js",jsdelivr:"build/vega-lite.min.js",module:"build/src/index",types:"build/src/index.d.ts",bin:{vl2png:"./bin/vl2png",vl2svg:"./bin/vl2svg",vl2vg:"./bin/vl2vg"},directories:{test:"test"},scripts:{prebuild:"mkdir -p build/src",build:"npm run build:only","build:only":"tsc && rollup -c",postbuild:"terser build/vega-lite.js -cm --source-map content=build/vega-lite.js.map,filename=build/vega-lite.min.js.map -o build/vega-lite.min.js && npm run schema","build:examples":"npm run build:only","postbuild:examples":"npm run data && TZ=America/Los_Angeles scripts/build-examples.sh","build:examples-full":"npm run build:only","postbuild:examples-full":"TZ=America/Los_Angeles scripts/build-examples.sh 1","build:example":"TZ=America/Los_Angeles scripts/build-example.sh","build:toc":"bundle exec jekyll build -q && scripts/generate-toc","build:site":"tsc -p site && webpack --config site/webpack.config.js","build:versions":"scripts/update-version.sh",clean:"rm -rf build && rm -f examples/compiled/*.png && find site/examples ! -name 'index.md' -type f -delete",data:"rsync -r node_modules/vega-datasets/data/* data",deploy:"scripts/deploy.sh","deploy:gh":"scripts/deploy-gh.sh","deploy:schema":"scripts/deploy-schema.sh",preschema:"npm run prebuild",schema:"node --stack-size=4000 ./node_modules/.bin/ts-json-schema-generator --no-type-check --path tsconfig.json --type TopLevelSpec > build/vega-lite-schema.json && npm run renameschema && cp build/vega-lite-schema.json _data/",renameschema:"scripts/rename-schema.sh",presite:"npm run prebuild && npm run data && npm run build:site && npm run build:toc && npm run build:versions && scripts/create-example-pages",site:"bundle exec jekyll serve --incremental",prettierbase:"prettier '{src,test,test-runtime,site,typings}/**/*.{ts,md,css}'",format:"tslint -p . --fix -e 'package.json' && npm run prettierbase -- --write",lint:"tslint -p . -e 'package.json' && npm run prettierbase -- --check",test:"jest test/ && npm run lint && npm run schema && jest examples/ && npm run test:runtime","test:inspect":"node --inspect-brk ./node_modules/.bin/jest --runInBand test","test:runtime":"TZ=America/Los_Angeles jest test-runtime/","test:runtime:generate":"rm -Rf test-runtime/resources && VL_GENERATE_TESTS=true npm run test:runtime","watch:build":"npm run build:only && concurrently --kill-others -n Typescript,Rollup 'tsc -w' 'rollup -c -w'","watch:site":"concurrently --kill-others -n Typescript,Webpack 'tsc -p site --watch' 'webpack --config site/webpack.config.js --mode development --watch'","watch:test":"jest --watch"},repository:{type:"git",url:"https://github.com/vega/vega-lite.git"},license:"BSD-3-Clause",bugs:{url:"https://github.com/vega/vega-lite/issues"},devDependencies:{"@types/chai":"^4.1.7","@types/d3":"^5.7.1","@types/highlight.js":"^9.12.3","@types/jest":"^24.0.6","@types/mkdirp":"^0.5.2","@types/node":"^11.9.5","@types/puppeteer":"^1.12.1",ajv:"^6.9.2",chai:"^4.2.0",cheerio:"^1.0.0-rc.2",codecov:"^3.2.0",concurrently:"^4.1.0",d3:"^5.9.1","highlight.js":"^9.14.2","http-server":"^0.11.1",jest:"^24.1.0","jest-puppeteer":"^4.0.0",mkdirp:"^0.5.1",prettier:"^1.16.4",puppeteer:"^1.12.2",rollup:"^1.2.3","rollup-plugin-commonjs":"^9.2.1","rollup-plugin-json":"^3.1.0","rollup-plugin-node-resolve":"^4.0.1","rollup-plugin-sourcemaps":"^0.4.2","svg2png-many":"^0.0.7",terser:"^3.16.1","ts-jest":"^24.0.0","ts-json-schema-generator":"^0.40.0",tslint:"5.13.0","tslint-config-prettier":"^1.18.0",typescript:"^3.3.3333","vega-cli":"^5.0.0-rc2","vega-datasets":"^1.22.0","vega-embed":"^3.29.1","vega-tooltip":"^0.16.0",webpack:"^4.29.5","webpack-cli":"^3.2.3","yaml-front-matter":"^4.0.0"},dependencies:{"@types/clone":"^0.1.30",clone:"^2.1.2","fast-deep-equal":"^2.0.1","fast-json-stable-stringify":"^2.0.0","json-stringify-pretty-compact":"^2.0.0",tslib:"^1.9.3","vega-event-selector":"^2.0.0","vega-expression":"^2.5.0","vega-typings":"0.5.0","vega-util":"^1.8.0",yargs:"^13.2.1"},jest:{preset:"jest-puppeteer",transform:{"^.+\\.tsx?$":"ts-jest"},testRegex:"(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",moduleFileExtensions:["ts","tsx","js","jsx","json","node"],testPathIgnorePatterns:["node_modules","<rootDir>/build","_site","src"],coverageDirectory:"./coverage/",collectCoverage:!1}}},255:function(e,t,n){(function(t){var n=function(){"use strict";function e(e,t){return null!=t&&e instanceof t}var n,i,r;try{n=Map}catch(e){n=function(){}}try{i=Set}catch(e){i=function(){}}try{r=Promise}catch(e){r=function(){}}function o(a,l,u,c,d){"object"==typeof l&&(u=l.depth,c=l.prototype,d=l.includeNonEnumerable,l=l.circular);var f=[],h=[],p=void 0!==t;return void 0===l&&(l=!0),void 0===u&&(u=1/0),function a(u,g){if(null===u)return null;if(0===g)return u;var m,y;if("object"!=typeof u)return u;if(e(u,n))m=new n;else if(e(u,i))m=new i;else if(e(u,r))m=new r(function(e,t){u.then(function(t){e(a(t,g-1))},function(e){t(a(e,g-1))})});else if(o.__isArray(u))m=[];else if(o.__isRegExp(u))m=new RegExp(u.source,s(u)),u.lastIndex&&(m.lastIndex=u.lastIndex);else if(o.__isDate(u))m=new Date(u.getTime());else{if(p&&t.isBuffer(u))return m=t.allocUnsafe?t.allocUnsafe(u.length):new t(u.length),u.copy(m),m;e(u,Error)?m=Object.create(u):void 0===c?(y=Object.getPrototypeOf(u),m=Object.create(y)):(m=Object.create(c),y=c)}if(l){var b=f.indexOf(u);if(-1!=b)return h[b];f.push(u),h.push(m)}for(var v in e(u,n)&&u.forEach(function(e,t){var n=a(t,g-1),i=a(e,g-1);m.set(n,i)}),e(u,i)&&u.forEach(function(e){var t=a(e,g-1);m.add(t)}),u){var _;y&&(_=Object.getOwnPropertyDescriptor(y,v)),_&&null==_.set||(m[v]=a(u[v],g-1))}if(Object.getOwnPropertySymbols){var x=Object.getOwnPropertySymbols(u);for(v=0;v<x.length;v++){var w=x[v];(!(D=Object.getOwnPropertyDescriptor(u,w))||D.enumerable||d)&&(m[w]=a(u[w],g-1),D.enumerable||Object.defineProperty(m,w,{enumerable:!1}))}}if(d){var k=Object.getOwnPropertyNames(u);for(v=0;v<k.length;v++){var D,A=k[v];(D=Object.getOwnPropertyDescriptor(u,A))&&D.enumerable||(m[A]=a(u[A],g-1),Object.defineProperty(m,A,{enumerable:!1}))}}return m}(a,u)}function a(e){return Object.prototype.toString.call(e)}function s(e){var t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),t}return o.clonePrototype=function(e){if(null===e)return null;var t=function(){};return t.prototype=e,new t},o.__objToStr=a,o.__isDate=function(e){return"object"==typeof e&&"[object Date]"===a(e)},o.__isArray=function(e){return"object"==typeof e&&"[object Array]"===a(e)},o.__isRegExp=function(e){return"object"==typeof e&&"[object RegExp]"===a(e)},o.__getRegExpFlags=s,o}();e.exports&&(e.exports=n)}).call(this,n(221).Buffer)},256:function(e,t,n){"use strict";var i=Array.isArray,r=Object.keys,o=Object.prototype.hasOwnProperty;e.exports=function e(t,n){if(t===n)return!0;if(t&&n&&"object"==typeof t&&"object"==typeof n){var a,s,l,u=i(t),c=i(n);if(u&&c){if((s=t.length)!=n.length)return!1;for(a=s;0!=a--;)if(!e(t[a],n[a]))return!1;return!0}if(u!=c)return!1;var d=t instanceof Date,f=n instanceof Date;if(d!=f)return!1;if(d&&f)return t.getTime()==n.getTime();var h=t instanceof RegExp,p=n instanceof RegExp;if(h!=p)return!1;if(h&&p)return t.toString()==n.toString();var g=r(t);if((s=g.length)!==r(n).length)return!1;for(a=s;0!=a--;)if(!o.call(n,g[a]))return!1;for(a=s;0!=a--;)if(!e(t[l=g[a]],n[l]))return!1;return!0}return t!=t&&n!=n}},271:function(e,t,n){"use strict";var i=function(e){return function(){return e}};function r(e){return e[0]}function o(e){return e[1]}function a(){this._=null}function s(e){e.U=e.C=e.L=e.R=e.P=e.N=null}function l(e,t){var n=t,i=t.R,r=n.U;r?r.L===n?r.L=i:r.R=i:e._=i,i.U=r,n.U=i,n.R=i.L,n.R&&(n.R.U=n),i.L=n}function u(e,t){var n=t,i=t.L,r=n.U;r?r.L===n?r.L=i:r.R=i:e._=i,i.U=r,n.U=i,n.L=i.R,n.L&&(n.L.U=n),i.R=n}function c(e){for(;e.L;)e=e.L;return e}a.prototype={constructor:a,insert:function(e,t){var n,i,r;if(e){if(t.P=e,t.N=e.N,e.N&&(e.N.P=t),e.N=t,e.R){for(e=e.R;e.L;)e=e.L;e.L=t}else e.R=t;n=e}else this._?(e=c(this._),t.P=null,t.N=e,e.P=e.L=t,n=e):(t.P=t.N=null,this._=t,n=null);for(t.L=t.R=null,t.U=n,t.C=!0,e=t;n&&n.C;)n===(i=n.U).L?(r=i.R)&&r.C?(n.C=r.C=!1,i.C=!0,e=i):(e===n.R&&(l(this,n),n=(e=n).U),n.C=!1,i.C=!0,u(this,i)):(r=i.L)&&r.C?(n.C=r.C=!1,i.C=!0,e=i):(e===n.L&&(u(this,n),n=(e=n).U),n.C=!1,i.C=!0,l(this,i)),n=e.U;this._.C=!1},remove:function(e){e.N&&(e.N.P=e.P),e.P&&(e.P.N=e.N),e.N=e.P=null;var t,n,i,r=e.U,o=e.L,a=e.R;if(n=o?a?c(a):o:a,r?r.L===e?r.L=n:r.R=n:this._=n,o&&a?(i=n.C,n.C=e.C,n.L=o,o.U=n,n!==a?(r=n.U,n.U=e.U,e=n.R,r.L=e,n.R=a,a.U=n):(n.U=r,r=n,e=n.R)):(i=e.C,e=n),e&&(e.U=r),!i)if(e&&e.C)e.C=!1;else{do{if(e===this._)break;if(e===r.L){if((t=r.R).C&&(t.C=!1,r.C=!0,l(this,r),t=r.R),t.L&&t.L.C||t.R&&t.R.C){t.R&&t.R.C||(t.L.C=!1,t.C=!0,u(this,t),t=r.R),t.C=r.C,r.C=t.R.C=!1,l(this,r),e=this._;break}}else if((t=r.L).C&&(t.C=!1,r.C=!0,u(this,r),t=r.L),t.L&&t.L.C||t.R&&t.R.C){t.L&&t.L.C||(t.R.C=!1,t.C=!0,l(this,t),t=r.L),t.C=r.C,r.C=t.L.C=!1,u(this,r),e=this._;break}t.C=!0,e=r,r=r.U}while(!e.C);e&&(e.C=!1)}}};var d=a;function f(e,t,n,i){var r=[null,null],o=N.push(r)-1;return r.left=e,r.right=t,n&&p(r,e,t,n),i&&p(r,t,e,i),M[e.index].halfedges.push(o),M[t.index].halfedges.push(o),r}function h(e,t,n){var i=[t,n];return i.left=e,i}function p(e,t,n,i){e[0]||e[1]?e.left===n?e[1]=i:e[0]=i:(e[0]=i,e.left=t,e.right=n)}function g(e,t,n,i,r){var o,a=e[0],s=e[1],l=a[0],u=a[1],c=0,d=1,f=s[0]-l,h=s[1]-u;if(o=t-l,f||!(o>0)){if(o/=f,f<0){if(o<c)return;o<d&&(d=o)}else if(f>0){if(o>d)return;o>c&&(c=o)}if(o=i-l,f||!(o<0)){if(o/=f,f<0){if(o>d)return;o>c&&(c=o)}else if(f>0){if(o<c)return;o<d&&(d=o)}if(o=n-u,h||!(o>0)){if(o/=h,h<0){if(o<c)return;o<d&&(d=o)}else if(h>0){if(o>d)return;o>c&&(c=o)}if(o=r-u,h||!(o<0)){if(o/=h,h<0){if(o>d)return;o>c&&(c=o)}else if(h>0){if(o<c)return;o<d&&(d=o)}return!(c>0||d<1)||(c>0&&(e[0]=[l+c*f,u+c*h]),d<1&&(e[1]=[l+d*f,u+d*h]),!0)}}}}}function m(e,t,n,i,r){var o=e[1];if(o)return!0;var a,s,l=e[0],u=e.left,c=e.right,d=u[0],f=u[1],h=c[0],p=c[1],g=(d+h)/2,m=(f+p)/2;if(p===f){if(g<t||g>=i)return;if(d>h){if(l){if(l[1]>=r)return}else l=[g,n];o=[g,r]}else{if(l){if(l[1]<n)return}else l=[g,r];o=[g,n]}}else if(s=m-(a=(d-h)/(p-f))*g,a<-1||a>1)if(d>h){if(l){if(l[1]>=r)return}else l=[(n-s)/a,n];o=[(r-s)/a,r]}else{if(l){if(l[1]<n)return}else l=[(r-s)/a,r];o=[(n-s)/a,n]}else if(f<p){if(l){if(l[0]>=i)return}else l=[t,a*t+s];o=[i,a*i+s]}else{if(l){if(l[0]<t)return}else l=[i,a*i+s];o=[t,a*t+s]}return e[0]=l,e[1]=o,!0}function y(e,t){var n=e.site,i=t.left,r=t.right;return n===r&&(r=i,i=n),r?Math.atan2(r[1]-i[1],r[0]-i[0]):(n===i?(i=t[1],r=t[0]):(i=t[0],r=t[1]),Math.atan2(i[0]-r[0],r[1]-i[1]))}function b(e,t){return t[+(t.left!==e.site)]}function v(e,t){return t[+(t.left===e.site)]}var _,x=[];function w(){s(this),this.x=this.y=this.arc=this.site=this.cy=null}function k(e){var t=e.P,n=e.N;if(t&&n){var i=t.site,r=e.site,o=n.site;if(i!==o){var a=r[0],s=r[1],l=i[0]-a,u=i[1]-s,c=o[0]-a,d=o[1]-s,f=2*(l*d-u*c);if(!(f>=-P)){var h=l*l+u*u,p=c*c+d*d,g=(d*h-u*p)/f,m=(l*p-c*h)/f,y=x.pop()||new w;y.arc=e,y.site=r,y.x=g+a,y.y=(y.cy=m+s)+Math.sqrt(g*g+m*m),e.circle=y;for(var b=null,v=z._;v;)if(y.y<v.y||y.y===v.y&&y.x<=v.x){if(!v.L){b=v.P;break}v=v.L}else{if(!v.R){b=v;break}v=v.R}z.insert(b,y),b||(_=y)}}}}function D(e){var t=e.circle;t&&(t.P||(_=t.N),z.remove(t),x.push(t),s(t),e.circle=null)}var A=[];function O(){s(this),this.edge=this.site=this.circle=null}function C(e){var t=A.pop()||new O;return t.site=e,t}function T(e){D(e),$.remove(e),A.push(e),s(e)}function S(e){var t=e.circle,n=t.x,i=t.cy,r=[n,i],o=e.P,a=e.N,s=[e];T(e);for(var l=o;l.circle&&Math.abs(n-l.circle.x)<B&&Math.abs(i-l.circle.cy)<B;)o=l.P,s.unshift(l),T(l),l=o;s.unshift(l),D(l);for(var u=a;u.circle&&Math.abs(n-u.circle.x)<B&&Math.abs(i-u.circle.cy)<B;)a=u.N,s.push(u),T(u),u=a;s.push(u),D(u);var c,d=s.length;for(c=1;c<d;++c)u=s[c],l=s[c-1],p(u.edge,l.site,u.site,r);l=s[0],(u=s[d-1]).edge=f(l.site,u.site,null,r),k(l),k(u)}function F(e){for(var t,n,i,r,o=e[0],a=e[1],s=$._;s;)if((i=j(s,a)-o)>B)s=s.L;else{if(!((r=o-E(s,a))>B)){i>-B?(t=s.P,n=s):r>-B?(t=s,n=s.N):t=n=s;break}if(!s.R){t=s;break}s=s.R}!function(e){M[e.index]={site:e,halfedges:[]}}(e);var l=C(e);if($.insert(t,l),t||n){if(t===n)return D(t),n=C(t.site),$.insert(l,n),l.edge=n.edge=f(t.site,l.site),k(t),void k(n);if(n){D(t),D(n);var u=t.site,c=u[0],d=u[1],h=e[0]-c,g=e[1]-d,m=n.site,y=m[0]-c,b=m[1]-d,v=2*(h*b-g*y),_=h*h+g*g,x=y*y+b*b,w=[(b*_-g*x)/v+c,(h*x-y*_)/v+d];p(n.edge,u,m,w),l.edge=f(u,e,null,w),n.edge=f(e,m,null,w),k(t),k(n)}else l.edge=f(t.site,l.site)}}function j(e,t){var n=e.site,i=n[0],r=n[1],o=r-t;if(!o)return i;var a=e.P;if(!a)return-1/0;var s=(n=a.site)[0],l=n[1],u=l-t;if(!u)return s;var c=s-i,d=1/o-1/u,f=c/u;return d?(-f+Math.sqrt(f*f-2*d*(c*c/(-2*u)-l+u/2+r-o/2)))/d+i:(i+s)/2}function E(e,t){var n=e.N;if(n)return j(n,t);var i=e.site;return i[1]===t?i[0]:1/0}var $,M,z,N,B=1e-6,P=1e-12;function I(e,t){return t[1]-e[1]||t[0]-e[0]}function L(e,t){var n,i,r,o=e.sort(I).pop();for(N=[],M=new Array(e.length),$=new d,z=new d;;)if(r=_,o&&(!r||o[1]<r.y||o[1]===r.y&&o[0]<r.x))o[0]===n&&o[1]===i||(F(o),n=o[0],i=o[1]),o=e.pop();else{if(!r)break;S(r.arc)}if(function(){for(var e,t,n,i,r=0,o=M.length;r<o;++r)if((e=M[r])&&(i=(t=e.halfedges).length)){var a=new Array(i),s=new Array(i);for(n=0;n<i;++n)a[n]=n,s[n]=y(e,N[t[n]]);for(a.sort(function(e,t){return s[t]-s[e]}),n=0;n<i;++n)s[n]=t[a[n]];for(n=0;n<i;++n)t[n]=s[n]}}(),t){var a=+t[0][0],s=+t[0][1],l=+t[1][0],u=+t[1][1];!function(e,t,n,i){for(var r,o=N.length;o--;)m(r=N[o],e,t,n,i)&&g(r,e,t,n,i)&&(Math.abs(r[0][0]-r[1][0])>B||Math.abs(r[0][1]-r[1][1])>B)||delete N[o]}(a,s,l,u),function(e,t,n,i){var r,o,a,s,l,u,c,d,f,p,g,m,y=M.length,_=!0;for(r=0;r<y;++r)if(o=M[r]){for(a=o.site,s=(l=o.halfedges).length;s--;)N[l[s]]||l.splice(s,1);for(s=0,u=l.length;s<u;)g=(p=v(o,N[l[s]]))[0],m=p[1],d=(c=b(o,N[l[++s%u]]))[0],f=c[1],(Math.abs(g-d)>B||Math.abs(m-f)>B)&&(l.splice(s,0,N.push(h(a,p,Math.abs(g-e)<B&&i-m>B?[e,Math.abs(d-e)<B?f:i]:Math.abs(m-i)<B&&n-g>B?[Math.abs(f-i)<B?d:n,i]:Math.abs(g-n)<B&&m-t>B?[n,Math.abs(d-n)<B?f:t]:Math.abs(m-t)<B&&g-e>B?[Math.abs(f-t)<B?d:e,t]:null))-1),++u);u&&(_=!1)}if(_){var x,w,k,D=1/0;for(r=0,_=null;r<y;++r)(o=M[r])&&(k=(x=(a=o.site)[0]-e)*x+(w=a[1]-t)*w)<D&&(D=k,_=o);if(_){var A=[e,t],O=[e,i],C=[n,i],T=[n,t];_.halfedges.push(N.push(h(a=_.site,A,O))-1,N.push(h(a,O,C))-1,N.push(h(a,C,T))-1,N.push(h(a,T,A))-1)}}for(r=0;r<y;++r)(o=M[r])&&(o.halfedges.length||delete M[r])}(a,s,l,u)}this.edges=N,this.cells=M,$=z=N=M=null}L.prototype={constructor:L,polygons:function(){var e=this.edges;return this.cells.map(function(t){var n=t.halfedges.map(function(n){return b(t,e[n])});return n.data=t.site.data,n})},triangles:function(){var e=[],t=this.edges;return this.cells.forEach(function(n,i){if(o=(r=n.halfedges).length)for(var r,o,a,s,l,u,c=n.site,d=-1,f=t[r[o-1]],h=f.left===c?f.right:f.left;++d<o;)a=h,h=(f=t[r[d]]).left===c?f.right:f.left,a&&h&&i<a.index&&i<h.index&&(l=a,u=h,((s=c)[0]-u[0])*(l[1]-s[1])-(s[0]-l[0])*(u[1]-s[1])<0)&&e.push([c.data,a.data,h.data])}),e},links:function(){return this.edges.filter(function(e){return e.right}).map(function(e){return{source:e.left.data,target:e.right.data}})},find:function(e,t,n){for(var i,r,o=this,a=o._found||0,s=o.cells.length;!(r=o.cells[a]);)if(++a>=s)return null;var l=e-r.site[0],u=t-r.site[1],c=l*l+u*u;do{r=o.cells[i=a],a=null,r.halfedges.forEach(function(n){var i=o.edges[n],s=i.left;if(s!==r.site&&s||(s=i.right)){var l=e-s[0],u=t-s[1],d=l*l+u*u;d<c&&(c=d,a=s.index)}})}while(null!==a);return o._found=i,null==n||c<=n*n?r.site:null}};var q=function(){var e=r,t=o,n=null;function a(i){return new L(i.map(function(n,r){var o=[Math.round(e(n,r,i)/B)*B,Math.round(t(n,r,i)/B)*B];return o.index=r,o.data=n,o}),n)}return a.polygons=function(e){return a(e).polygons()},a.links=function(e){return a(e).links()},a.triangles=function(e){return a(e).triangles()},a.x=function(t){return arguments.length?(e="function"==typeof t?t:i(+t),a):e},a.y=function(e){return arguments.length?(t="function"==typeof e?e:i(+e),a):t},a.extent=function(e){return arguments.length?(n=null==e?null:[[+e[0][0],+e[0][1]],[+e[1][0],+e[1][1]]],a):n&&[[n[0][0],n[0][1]],[n[1][0],n[1][1]]]},a.size=function(e){return arguments.length?(n=null==e?null:[[0,0],[+e[0],+e[1]]],a):n&&[n[1][0]-n[0][0],n[1][1]-n[0][1]]},a};n.d(t,"a",function(){return q})},272:function(e,t,n){"use strict";var i={},r={},o=34,a=10,s=13;function l(e){return new Function("d","return {"+e.map(function(e,t){return JSON.stringify(e)+": d["+t+"]"}).join(",")+"}")}function u(e){var t=Object.create(null),n=[];return e.forEach(function(e){for(var i in e)i in t||n.push(t[i]=i)}),n}function c(e,t){var n=e+"",i=n.length;return i<t?new Array(t-i+1).join(0)+n:n}function d(e){var t,n=e.getUTCHours(),i=e.getUTCMinutes(),r=e.getUTCSeconds(),o=e.getUTCMilliseconds();return isNaN(e)?"Invalid Date":((t=e.getUTCFullYear())<0?"-"+c(-t,6):t>9999?"+"+c(t,6):c(t,4))+"-"+c(e.getUTCMonth()+1,2)+"-"+c(e.getUTCDate(),2)+(o?"T"+c(n,2)+":"+c(i,2)+":"+c(r,2)+"."+c(o,3)+"Z":r?"T"+c(n,2)+":"+c(i,2)+":"+c(r,2)+"Z":i||n?"T"+c(n,2)+":"+c(i,2)+"Z":"")}var f=function(e){var t=new RegExp('["'+e+"\n\r]"),n=e.charCodeAt(0);function c(e,t){var l,u=[],c=e.length,d=0,f=0,h=c<=0,p=!1;function g(){if(h)return r;if(p)return p=!1,i;var t,l,u=d;if(e.charCodeAt(u)===o){for(;d++<c&&e.charCodeAt(d)!==o||e.charCodeAt(++d)===o;);return(t=d)>=c?h=!0:(l=e.charCodeAt(d++))===a?p=!0:l===s&&(p=!0,e.charCodeAt(d)===a&&++d),e.slice(u+1,t-1).replace(/""/g,'"')}for(;d<c;){if((l=e.charCodeAt(t=d++))===a)p=!0;else if(l===s)p=!0,e.charCodeAt(d)===a&&++d;else if(l!==n)continue;return e.slice(u,t)}return h=!0,e.slice(u,c)}for(e.charCodeAt(c-1)===a&&--c,e.charCodeAt(c-1)===s&&--c;(l=g())!==r;){for(var m=[];l!==i&&l!==r;)m.push(l),l=g();t&&null==(m=t(m,f++))||u.push(m)}return u}function f(t,n){return t.map(function(t){return n.map(function(e){return p(t[e])}).join(e)})}function h(t){return t.map(p).join(e)}function p(e){return null==e?"":e instanceof Date?d(e):t.test(e+="")?'"'+e.replace(/"/g,'""')+'"':e}return{parse:function(e,t){var n,i,r=c(e,function(e,r){if(n)return n(e,r-1);i=e,n=t?function(e,t){var n=l(e);return function(i,r){return t(n(i),r,e)}}(e,t):l(e)});return r.columns=i||[],r},parseRows:c,format:function(t,n){return null==n&&(n=u(t)),[n.map(p).join(e)].concat(f(t,n)).join("\n")},formatBody:function(e,t){return null==t&&(t=u(e)),f(e,t).join("\n")},formatRows:function(e){return e.map(h).join("\n")}}},h=f(","),p=(h.parse,h.parseRows,h.format,h.formatBody,h.formatRows,f("\t"));p.parse,p.parseRows,p.format,p.formatBody,p.formatRows;n.d(t,"a",function(){return f})},292:function(e){e.exports={"Single-View Plots":{"Bar Charts & Histograms":[{name:"bar",title:"Simple Bar Chart",description:"A bar chart encodes quantitative values as the extent of rectangular bars",style:"background-size: auto 105%; background-position: center center !important;"},{name:"histogram",title:"Histogram",style:"background-size: auto 105%; background-position: center center !important;"},{name:"bar_aggregate",title:"Aggregate Bar Chart"},{name:"bar_grouped",title:"Grouped Bar Chart"},{name:"stacked_bar_weather",title:"Stacked Bar Chart"},{name:"stacked_bar_h",title:"Horizontal Stacked Bar Chart"},{name:"stacked_bar_normalize",title:"Normalized Stacked Bar Chart"},{name:"bar_gantt",title:"Gantt Chart (Ranged Bar Marks)",style:"background-size: auto 75%; background-position-y: center !important;"},{name:"bar_color_disabled_scale",title:"A bar chart encoding color names in the data"},{name:"bar_layered_transparent",title:"Layered Bar Chart"},{name:"bar_diverging_stack_transform",title:"Diverging Stacked Bar Chart"},{name:"layer_bar_labels",title:"Simple Bar Chart with Labels",style:"background-size: auto 70%; background-position-y: center;"},{name:"isotype_bar_chart",title:"Isotype Bar Chart",description:"Inspired by this [Only An Ocean Between, 1943](http://www.thomwhite.co.uk/?p=1303). Population Live Stock, p.13. This example was created by [@jwoLondon](https://github.com/jwoLondon)"},{name:"isotype_bar_chart_emoji",title:"Isotype Bar Chart with Emoji",description:"This example was inspired by [@jakevdp](https://github.com/jakevdp) and Isotype Bar Chart by [@jwoLondon](https://github.com/jwoLondon)"}],"Scatter & Strip Plots":[{name:"point_2d",title:"Scatterplot",style:"background-size: auto 105%; background-position: center center !important;"},{name:"tick_dot",title:"Dot Plot",style:"background-size: auto 50%; background-position-y: center !important;"},{name:"tick_strip",title:"Strip Plot",style:"background-size: auto 85%; background-position-y: center !important;"},{name:"point_color_with_shape",title:"Colored Scatterplot"},{name:"circle_binned",title:"Binned Scatterplot"},{name:"point_bubble",title:"Bubble Plot"},{name:"point_invalid_color",png:!0,title:"Scatterplot with Null Values in Grey"},{name:"circle",title:"Scatterplot with Filled Circles",style:"background-size: auto 105%; background-position: center center !important;"},{name:"circle_bubble_health_income",title:"Bubble Plot (Gapminder)"},{name:"circle_natural_disasters",description:"Visualization of global deaths from natural disasters. Copy of chart from [Our World in Data](https://ourworldindata.org/natural-catastrophes)",title:"Bubble Plot (Natural Disasters)"},{name:"text_scatterplot_colored",title:"Scatter Plot with Text Marks"}],"Line Charts":[{name:"line",title:"Line Chart",style:"background-size: auto 105%; background-position: center center !important;"},{name:"line_overlay",title:"Line Chart with Point Markers",style:"background-size: auto 105%; background-position: center center !important;",description:'By setting the `point` property of the line mark definition to an object defining a property of the overlaying point marks, we can overlay point markers on top of line. \n\n Notes&#58; (1) This is equivalent to adding another layer of point marks. \n (2) While `"point"` marks are normally semi-transparent, the overlay point marker has `opacity` = 1 by default.'},{name:"line_overlay_stroked",title:"Line Chart with Stroked Point Markers",style:"background-size: auto 105%; background-position: center center !important;",description:'By setting the `point` property of the line mark definition to an object defining a property of the overlaying point marks, we can overlay point markers on top of line. Here we create stroked points by setting their `"filled"` to `false` and their `fill` to `"white"`. \n\n Notes&#58; (1) This is equivalent to adding another layer of point marks. \n (2) While `"point"` marks are normally semi-transparent, the overlay point marker has `opacity` = 1 by default.'},{name:"line_color",title:"Multi Series Line Chart"},{name:"line_slope",title:"Slope Graph",style:"background-size: auto 105%; background-position: center center !important;"},{name:"line_step",title:"Step Chart",style:"background-size: auto 105%; background-position: center center !important;"},{name:"line_monotone",title:"Line Chart with Monotone Interpolation",style:"background-size: auto 105%; background-position: center center !important;"},{name:"connected_scatterplot",title:"Connected Scatterplot (Lines with Custom Paths)",description:"A connected scatterplot can be created by customizing line `order` and adding `point` overlay in the line mark definition.",style:"background-size: auto 105%; background-position: center center !important;"},{name:"trail_color",title:"Line Chart with Varying Size (using the trail mark)"},{name:"line_skip_invalid_mid_overlay",title:"Line Chart with Markers and Invalid Values",style:"background-size: auto 105%; background-position: center center !important;"},{name:"layer_line_co2_concentration",title:"Carbon Dioxide in the Atmosphere",description:"This example was inspired by [Gregor Aisch](https://github.com/gka)'s [Carbon Dioxide Concentration By Decade](https://www.datawrapper.de/_/OHgEm/)"},{name:"window_rank",title:"Line Charts Showing Ranks Over Time"}],"Area Charts & Streamgraphs":[{name:"area",title:"Area Chart"},{name:"area_overlay",title:"Area Chart with Overlaying Lines and Point Markers"},{name:"stacked_area",title:"Stacked Area Chart"},{name:"stacked_area_normalize",title:"Normalized Stacked Area Chart"},{name:"stacked_area_stream",title:"Streamgraph"},{name:"area_horizon",title:"Horizon Graph",style:"background-size: auto 70%; background-position-y: center;"},{name:"rect_mosaic_labelled_with_offset",title:"Mosaic Chart with Labels"}],"Table-based Plots":[{name:"rect_heatmap",title:"Table Heatmap",style:"background-size: auto"},{name:"rect_heatmap_weather",title:"Annual Weather Heatmap"},{name:"rect_binned_heatmap",title:"Table Binned heatmap"},{name:"circle_github_punchcard",title:"Table Bubble Plot (Github Punch Card)"},{name:"layer_text_heatmap",title:"Layering text over heatmap",style:"background-size: auto 55%; background-position-y: center !important;"}],"Advanced Calculations":[{name:"window_percent_of_total",title:"Calculate Percentage of Total"},{name:"window_mean_difference",title:"Calculate Difference from Average"},{name:"window_mean_difference_by_year",title:"Calculate Difference from Annual Average"},{name:"window_residual_graph",title:"Calculate Residuals",style:"background-size: auto 105%; background-position: center center !important;"},{name:"window_rank",title:"Line Charts Showing Ranks Over Time"},{name:"window_sum_waterfall_chart",title:"Waterfall Chart of Monthly Profit and Loss"},{name:"window_top_k",title:"Filtering top-K items",description:"Here we use window transform to derive the total number of students along with the rank of the current student to determine the top K students and display their score.",style:"background-size: 110%"},{name:"lookup",title:"Using the lookup transform to combine data",style:"background-size: 75%; background-position-x: center;"},{name:"area_cumulative_freq",title:"Cumulative Frequency Distribution",style:"background-size: auto 105%; background-position: center center !important;"},{name:"layer_cumulative_histogram",title:"Layered Histogram and Cumulative Histogram",style:"background-size: auto 105%; background-position: center center !important;"}]},"Composite Mark":{"Error Bars & Error Bands":[{name:"layer_point_errorbar_ci",title:"Error Bars showing Confidence Interval"},{name:"layer_point_errorbar_stdev",title:"Error Bars showing Standard Deviation"},{name:"layer_line_errorband_ci",title:"Line Chart with Confidence Interval Band"},{name:"layer_scatter_errorband_1D_stdev_global_mean",title:"Scatterplot with Mean and Standard Deviation Overlay"}],"Box Plots":[{name:"boxplot_minmax_2D_vertical",title:"Box Plot with Min/Max Whiskers"},{name:"boxplot_2D_vertical",title:"Tukey Box Plot (1.5 IQR)"}]},"Layered Plots":{"Labeling & Annotation":[{name:"layer_bar_labels",title:"Simple Bar Chart with Labels",style:"background-size: auto 70%; background-position-y: center;"},{name:"layer_text_heatmap",title:"Layering text over heatmap",style:"background-size: auto 55%; background-position-y: center !important;"},{name:"layer_line_co2_concentration",title:"Carbon Dioxide in the Atmosphere",description:"This example was inspired by [Gregor Aisch](https://github.com/gka)'s [Carbon Dioxide Concentration By Decade](https://www.datawrapper.de/_/OHgEm/)"},{name:"layer_bar_annotations",title:"Bar chart that highlights values beyond a threshold",description:"To create a bar chart that highlights values beyond a threshold, we use two `layer`s of `bar` marks. The lower layer shows all the bars while the upper layer shows bar with values above the threshold in red (`#e45755`).  We then `layer` a `rule` mark and a `text` mark over the bars to annotate the threshold value"},{name:"layer_precipitation_mean",title:"Mean overlay over precipitation chart"},{name:"layer_histogram_global_mean",title:"Histogram with a Global Mean Overlay",style:"background-size: auto 105%; background-position: center center !important;"},{name:"layer_falkensee",title:"Line Chart with Highlighted Rectangles",style:"background-size: auto 90%; background-position-y: center !important;"}],"Other Layered Plots":[{name:"layer_candlestick",title:"Candlestick Chart"},{name:"layer_ranged_dot",title:"Ranged Dot Plot",style:"background-size: auto 70%; background-position-y: center;"},{name:"facet_bullet",title:"Bullet Chart"},{name:"layer_bar_dual_axis",title:"Layered Plot with Dual-Axis",style:"background-size: 100% auto; background-position-y: center;"},{name:"area_horizon",title:"Horizon Graph",style:"background-size: auto 70%; background-position-y: center;"},{name:"bar_layered_weather",title:"Weekly Weather Plot",description:"Inspired by <a href='https://vega.github.io/vega-editor/?mode=vega&spec=weather'>this Vega example</a>. Weekly weather data plot representing high/low ranges of record temperatures (light grey), average temperatures (dark grey), and both predicted and observed temperatures (black) for the given week. The first five days have high/low ranges of observed temperatures, and the last five days have ranges of predicted temperatures, where the upper barbell represents the range of high temperature predictions and the lower barbell represents the range of low temperature predictions. Created by @melissatdiamond."}]},"Multi-View Displays":{"Faceting (Trellis Plot / Small Multiples)":[{name:"trellis_bar",title:"Trellis Bar Chart"},{name:"trellis_stacked_bar",title:"Trellis Stacked Bar Chart"},{name:"trellis_scatter",title:"Trellis Scatter Plot"},{name:"trellis_bar_histogram",title:"Trellis Histograms"},{name:"trellis_anscombe",title:"Trellis Scatter Plot showing Anscombe's Quartet"},{name:"trellis_barley",title:"Becker's Barley Trellis Plot"},{name:"trellis_area",title:"Trellis Area"}],"Repeat & Concatenation":[{name:"repeat_layer",title:"Repeat and layer to show different weather measures"},{name:"vconcat_weather",title:"Vertically concatenated charts that show precipitation in Seattle",description:"Two vertically concatenated charts"},{name:"repeat_histogram",title:"Horizontally repeated charts",description:"Horizontally repeated charts that show the histograms of different parameters of cars in different countries"},{name:"interactive_splom",png:!0,title:"Interactive Scatterplot Matrix"},{name:"concat_marginal_histograms",title:"Marginal Histograms",description:"Marginal histograms show the counts along the x and y dimension."},{name:"concat_bar_scales_discretize",title:"Discretizing scales",description:"Horizontally concatenated charts that show different types of discretizing scales"}]},"Maps (Geographic Displays)":{"":[{name:"geo_choropleth",png:!0,title:"Choropleth of unemployment rate per county"},{name:"geo_circle",png:!0,title:"One dot per zipcode in the U.S"},{name:"geo_layer",png:!0,title:"One dot per airport in the US overlayed on geoshape"},{name:"geo_rule",png:!0,title:"Rules (line segments) connecting SEA to every airport reachable via direct flight"},{name:"geo_repeat",png:!0,title:"Three choropleths representing disjoint data from the same table"},{name:"geo_text",png:!0,title:"U.S. state capitals overlayed on a map of the U.S"},{name:"geo_line",png:!0,title:"Line drawn between airports in the U.S. simulating a flight itinerary"},{name:"geo_trellis",png:!0,title:"Income in the U.S. by state, faceted over income brackets"},{name:"geo_layer_line_london",title:"London Tube Lines",description:"This example was created by Jo Wood"}]},Interactive:{"Interactive Charts":[{name:"interactive_bar_select_highlight",title:"Bar chart with highlighting on hover and selection on click"},{name:"point_href",title:"Scatterplot with External Links and Tooltips"},{name:"interactive_brush",title:"Rectangular Brush"},{name:"interactive_area_brush",title:"Area Chart with Rectangular Brush",descripton:"In this example, we apply an `interval` selection to select subset of data in an area chart. The selected data is highlighted in gold by the second layer of an area mark that `filter`s its data by the `brush` selection."},{name:"interactive_paintbrush",title:"Paintbrush Highlight"},{name:"selection_translate_scatterplot_drag",title:"Scatterplot Pan & Zoom"},{name:"interactive_query_widgets",title:"Query Widgets"},{name:"selection_layer_bar_month",title:"Interactive Average",description:"The plot below uses an interval selection, which causes the chart to include an interactive brush (shown in grey). The brush selection parameterizes the red guideline, which visualizes the average value within the selected interval"},{name:"interactive_multi_line_label",title:"Multi Series Line Chart with Labels",description:"The plot displays labels for all stock prices of the hovered time. The example is forked/modified from [@jakevdp's block](https://bl.ocks.org/jakevdp/a414950f61e4b224765f2439dd1f09b9)"},{name:"interactive_multi_line_tooltip",title:"Multi Series Line Chart with Tooltip",description:"This plot requires the data to have different series in different fields.  See [#1274](https://github.com/vega/vega-lite/issues/1274) and [#1552](https://github.com/vega/vega-lite/issues/1552) for relevant future syntax improvements."},{name:"isotype_grid",title:"Isotype Grid",description:"Inspired by this [D3 example by Alan Smith](http://bl.ocks.org/alansmithy/d832fc03f6e6a91e99f4). Drag region to select. This example was created by [@jwoLondon](https://github.com/jwoLondon)"}],"Interactive Multi-View Displays":[{name:"interactive_overview_detail",title:"Overview and Detail"},{name:"interactive_layered_crossfilter",title:"Crossfilter"},{name:"interactive_splom",png:!0,title:"Interactive Scatterplot Matrix"},{name:"interactive_concat_layer",title:"Interactive Dashboard with Cross Highlight"},{name:"interactive_seattle_weather",title:"Seattle Weather Exploration",description:"This graph shows an interactive view of Seattle's weather, including maximum temperature, amount of precipitation, and type of weather. By clicking and dragging on the scatter plot, you can see the proportion of days in that range that have sun, rain, fog, snow, etc. Created by @jakevdp."}]}}},3:function(e,t,n){"use strict";n.r(t),n.d(t,"deepEqual",function(){return d}),n.d(t,"duplicate",function(){return f}),n.d(t,"pick",function(){return h}),n.d(t,"omit",function(){return p}),n.d(t,"stringify",function(){return g}),n.d(t,"hash",function(){return m}),n.d(t,"contains",function(){return y}),n.d(t,"without",function(){return b}),n.d(t,"union",function(){return v}),n.d(t,"some",function(){return _}),n.d(t,"every",function(){return x}),n.d(t,"flatten",function(){return w}),n.d(t,"fill",function(){return k}),n.d(t,"mergeDeep",function(){return D}),n.d(t,"unique",function(){return O}),n.d(t,"isEqual",function(){return C}),n.d(t,"setEqual",function(){return T}),n.d(t,"hasIntersection",function(){return S}),n.d(t,"prefixGenerator",function(){return F}),n.d(t,"fieldIntersection",function(){return j}),n.d(t,"isNumeric",function(){return E}),n.d(t,"differArray",function(){return $}),n.d(t,"keys",function(){return M}),n.d(t,"vals",function(){return z}),n.d(t,"entries",function(){return N}),n.d(t,"flagKeys",function(){return B}),n.d(t,"isBoolean",function(){return P}),n.d(t,"varName",function(){return I}),n.d(t,"logicalExpr",function(){return L}),n.d(t,"deleteNestedProperty",function(){return q}),n.d(t,"titlecase",function(){return R}),n.d(t,"accessPathWithDatum",function(){return U}),n.d(t,"flatAccessWithDatum",function(){return W}),n.d(t,"replacePathInField",function(){return V}),n.d(t,"removePathFromField",function(){return H}),n.d(t,"accessPathDepth",function(){return Y}),n.d(t,"getFirstDefined",function(){return G}),n.d(t,"uniqueId",function(){return X}),n.d(t,"resetIdCounter",function(){return Q}),n.d(t,"internalField",function(){return K}),n.d(t,"isInternalField",function(){return Z});var i=n(255),r=n.n(i),o=n(256),a=n.n(o),s=n(218),l=n.n(s),u=n(14),c=n(152);const d=a.a,f=r.a;function h(e,t){const n={};for(const i of t)e.hasOwnProperty(i)&&(n[i]=e[i]);return n}function p(e,t){const n=Object.assign({},e);for(const e of t)delete n[e];return n}Set.prototype.toJSON=function(){return`Set(${[...this].map(l.a).join(",")})`};const g=l.a;function m(e){if(Object(u.h)(e))return e;const t=Object(u.j)(e)?e:l()(e);if(t.length<250)return t;let n=0;for(let e=0;e<t.length;e++){n=(n<<5)-n+t.charCodeAt(e),n&=n}return n}function y(e,t){return e.indexOf(t)>-1}function b(e,t){return e.filter(e=>!y(t,e))}function v(e,t){return e.concat(b(t,e))}function _(e,t){let n=0;for(let i=0;i<e.length;i++)if(t(e[i],i,n++))return!0;return!1}function x(e,t){let n=0;for(let i=0;i<e.length;i++)if(!t(e[i],i,n++))return!1;return!0}function w(e){return[].concat(...e)}function k(e,t){const n=new Array(t);for(let i=0;i<t;++i)n[i]=e;return n}function D(e,...t){for(const n of t)e=A(e,n);return e}function A(e,t){if("object"!=typeof t||null===t)return e;for(const n in t)t.hasOwnProperty(n)&&void 0!==t[n]&&("object"!=typeof t[n]||Object(u.e)(t[n])||null===t[n]?e[n]=t[n]:"object"!=typeof e[n]||null===e[n]?e[n]=D(Object(u.e)(t[n].constructor)?[]:{},t[n]):D(e[n],t[n]));return e}function O(e,t){const n=[],i={};let r;for(const o of e)(r=t(o))in i||(i[r]=1,n.push(o));return n}function C(e,t){const n=M(e),i=M(t);if(n.length!==i.length)return!1;for(const i of n)if(e[i]!==t[i])return!1;return!0}function T(e,t){if(e.size!==t.size)return!1;for(const n of e)if(!t.has(n))return!1;return!0}function S(e,t){for(const n of e)if(t.has(n))return!0;return!1}function F(e){const t=new Set;for(const n of e){const e=Object(u.l)(n).map((e,t)=>0===t?e:`[${e}]`);e.map((t,n)=>e.slice(0,n+1).join("")).forEach(e=>t.add(e))}return t}function j(e,t){return S(F(e),F(t))}function E(e){return!isNaN(e)}function $(e,t){if(e.length!==t.length)return!0;e.sort(),t.sort();for(let n=0;n<e.length;n++)if(t[n]!==e[n])return!0;return!1}const M=Object.keys;function z(e){const t=[];for(const n in e)e.hasOwnProperty(n)&&t.push(e[n]);return t}function N(e){const t=[];for(const n in e)e.hasOwnProperty(n)&&t.push({key:n,value:e[n]});return t}function B(e){return M(e)}function P(e){return!0===e||!1===e}function I(e){const t=e.replace(/\W/g,"_");return(e.match(/^\d+/)?"_":"")+t}function L(e,t){return Object(c.c)(e)?"!("+L(e.not,t)+")":Object(c.b)(e)?"("+e.and.map(e=>L(e,t)).join(") && (")+")":Object(c.d)(e)?"("+e.or.map(e=>L(e,t)).join(") || (")+")":t(e)}function q(e,t){if(0===t.length)return!0;const n=t.shift();return q(e[n],t)&&delete e[n],0===M(e).length}function R(e){return e.charAt(0).toUpperCase()+e.substr(1)}function U(e,t="datum"){const n=Object(u.l)(e),i=[];for(let e=1;e<=n.length;e++){const r=`[${n.slice(0,e).map(u.m).join("][")}]`;i.push(`${t}${r}`)}return i.join(" && ")}function W(e,t="datum"){return`${t}[${Object(u.m)(Object(u.l)(e).join("."))}]`}function V(e){return`${Object(u.l)(e).map(e=>e.replace(".","\\.")).join("\\.")}`}function H(e){return`${Object(u.l)(e).join(".")}`}function Y(e){return e?Object(u.l)(e).length:0}function G(...e){for(const t of e)if(void 0!==t)return t}let J=42;function X(e){const t=++J;return e?String(e)+t:t}function Q(){J=42}function K(e){return Z(e)?e:`__${e}`}function Z(e){return 0===e.indexOf("__")}},33:function(e,t,n){"use strict";var i=new Date,r=new Date;function o(e,t,n,a){function s(t){return e(t=new Date(+t)),t}return s.floor=s,s.ceil=function(n){return e(n=new Date(n-1)),t(n,1),e(n),n},s.round=function(e){var t=s(e),n=s.ceil(e);return e-t<n-e?t:n},s.offset=function(e,n){return t(e=new Date(+e),null==n?1:Math.floor(n)),e},s.range=function(n,i,r){var o,a=[];if(n=s.ceil(n),r=null==r?1:Math.floor(r),!(n<i&&r>0))return a;do{a.push(o=new Date(+n)),t(n,r),e(n)}while(o<n&&n<i);return a},s.filter=function(n){return o(function(t){if(t>=t)for(;e(t),!n(t);)t.setTime(t-1)},function(e,i){if(e>=e)if(i<0)for(;++i<=0;)for(;t(e,-1),!n(e););else for(;--i>=0;)for(;t(e,1),!n(e););})},n&&(s.count=function(t,o){return i.setTime(+t),r.setTime(+o),e(i),e(r),Math.floor(n(i,r))},s.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?s.filter(a?function(t){return a(t)%e==0}:function(t){return s.count(0,t)%e==0}):s:null}),s}var a=o(function(){},function(e,t){e.setTime(+e+t)},function(e,t){return t-e});a.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?o(function(t){t.setTime(Math.floor(t/e)*e)},function(t,n){t.setTime(+t+n*e)},function(t,n){return(n-t)/e}):a:null};var s=a,l=(a.range,6e4),u=6048e5,c=o(function(e){e.setTime(e-e.getMilliseconds())},function(e,t){e.setTime(+e+1e3*t)},function(e,t){return(t-e)/1e3},function(e){return e.getUTCSeconds()}),d=c,f=(c.range,o(function(e){e.setTime(e-e.getMilliseconds()-1e3*e.getSeconds())},function(e,t){e.setTime(+e+t*l)},function(e,t){return(t-e)/l},function(e){return e.getMinutes()})),h=f,p=(f.range,o(function(e){e.setTime(e-e.getMilliseconds()-1e3*e.getSeconds()-e.getMinutes()*l)},function(e,t){e.setTime(+e+36e5*t)},function(e,t){return(t-e)/36e5},function(e){return e.getHours()})),g=p,m=(p.range,o(function(e){e.setHours(0,0,0,0)},function(e,t){e.setDate(e.getDate()+t)},function(e,t){return(t-e-(t.getTimezoneOffset()-e.getTimezoneOffset())*l)/864e5},function(e){return e.getDate()-1})),y=m;m.range;function b(e){return o(function(t){t.setDate(t.getDate()-(t.getDay()+7-e)%7),t.setHours(0,0,0,0)},function(e,t){e.setDate(e.getDate()+7*t)},function(e,t){return(t-e-(t.getTimezoneOffset()-e.getTimezoneOffset())*l)/u})}var v=b(0),_=b(1),x=b(2),w=b(3),k=b(4),D=b(5),A=b(6),O=(v.range,_.range,x.range,w.range,k.range,D.range,A.range,o(function(e){e.setDate(1),e.setHours(0,0,0,0)},function(e,t){e.setMonth(e.getMonth()+t)},function(e,t){return t.getMonth()-e.getMonth()+12*(t.getFullYear()-e.getFullYear())},function(e){return e.getMonth()})),C=O,T=(O.range,o(function(e){e.setMonth(0,1),e.setHours(0,0,0,0)},function(e,t){e.setFullYear(e.getFullYear()+t)},function(e,t){return t.getFullYear()-e.getFullYear()},function(e){return e.getFullYear()}));T.every=function(e){return isFinite(e=Math.floor(e))&&e>0?o(function(t){t.setFullYear(Math.floor(t.getFullYear()/e)*e),t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n*e)}):null};var S=T,F=(T.range,o(function(e){e.setUTCSeconds(0,0)},function(e,t){e.setTime(+e+t*l)},function(e,t){return(t-e)/l},function(e){return e.getUTCMinutes()})),j=F,E=(F.range,o(function(e){e.setUTCMinutes(0,0,0)},function(e,t){e.setTime(+e+36e5*t)},function(e,t){return(t-e)/36e5},function(e){return e.getUTCHours()})),$=E,M=(E.range,o(function(e){e.setUTCHours(0,0,0,0)},function(e,t){e.setUTCDate(e.getUTCDate()+t)},function(e,t){return(t-e)/864e5},function(e){return e.getUTCDate()-1})),z=M;M.range;function N(e){return o(function(t){t.setUTCDate(t.getUTCDate()-(t.getUTCDay()+7-e)%7),t.setUTCHours(0,0,0,0)},function(e,t){e.setUTCDate(e.getUTCDate()+7*t)},function(e,t){return(t-e)/u})}var B=N(0),P=N(1),I=N(2),L=N(3),q=N(4),R=N(5),U=N(6),W=(B.range,P.range,I.range,L.range,q.range,R.range,U.range,o(function(e){e.setUTCDate(1),e.setUTCHours(0,0,0,0)},function(e,t){e.setUTCMonth(e.getUTCMonth()+t)},function(e,t){return t.getUTCMonth()-e.getUTCMonth()+12*(t.getUTCFullYear()-e.getUTCFullYear())},function(e){return e.getUTCMonth()})),V=W,H=(W.range,o(function(e){e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0)},function(e,t){e.setUTCFullYear(e.getUTCFullYear()+t)},function(e,t){return t.getUTCFullYear()-e.getUTCFullYear()},function(e){return e.getUTCFullYear()}));H.every=function(e){return isFinite(e=Math.floor(e))&&e>0?o(function(t){t.setUTCFullYear(Math.floor(t.getUTCFullYear()/e)*e),t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n*e)}):null};var Y=H;H.range;n.d(t,"c",function(){return s}),n.d(t,"n",function(){return s}),n.d(t,"g",function(){return d}),n.d(t,"r",function(){return d}),n.d(t,"d",function(){return h}),n.d(t,"b",function(){return g}),n.d(t,"a",function(){return y}),n.d(t,"j",function(){return v}),n.d(t,"h",function(){return v}),n.d(t,"e",function(){return _}),n.d(t,"i",function(){return k}),n.d(t,"f",function(){return C}),n.d(t,"k",function(){return S}),n.d(t,"o",function(){return j}),n.d(t,"m",function(){return $}),n.d(t,"l",function(){return z}),n.d(t,"u",function(){return B}),n.d(t,"s",function(){return B}),n.d(t,"p",function(){return P}),n.d(t,"t",function(){return q}),n.d(t,"q",function(){return V}),n.d(t,"v",function(){return Y})},61:function(e,t,n){"use strict";var i=function(e,t){return e<t?-1:e>t?1:e>=t?0:NaN},r=function(e){var t;return 1===e.length&&(t=e,e=function(e,n){return i(t(e),n)}),{left:function(t,n,i,r){for(null==i&&(i=0),null==r&&(r=t.length);i<r;){var o=i+r>>>1;e(t[o],n)<0?i=o+1:r=o}return i},right:function(t,n,i,r){for(null==i&&(i=0),null==r&&(r=t.length);i<r;){var o=i+r>>>1;e(t[o],n)>0?r=o:i=o+1}return i}}};var o=r(i),a=o.right,s=o.left,l=a;function u(e,t){let n,i=0,r=0,o=0;if(void 0===t)for(let t of e)null!=t&&(t=+t)>=t&&(o+=(n=t-r)*(t-(r+=n/++i)));else{let a=-1;for(let s of e)null!=(s=t(s,++a,e))&&(s=+s)>=s&&(o+=(n=s-r)*(s-(r+=n/++i)))}if(i>1)return o/(i-1)}var c=function(e,t){let n,i;if(void 0===t)for(let t of e)null!=t&&t>=t&&(void 0===n?n=i=t:(n>t&&(n=t),i<t&&(i=t)));else{let r=-1;for(let o of e)null!=(o=t(o,++r,e))&&o>=o&&(void 0===n?n=i=o:(n>o&&(n=o),i<o&&(i=o)))}return[n,i]};var d=Array.prototype,f=(d.slice,d.map,function(e,t,n){e=+e,t=+t,n=(r=arguments.length)<2?(t=e,e=0,1):r<3?1:+n;for(var i=-1,r=0|Math.max(0,Math.ceil((t-e)/n)),o=new Array(r);++i<r;)o[i]=e+i*n;return o}),h=Math.sqrt(50),p=Math.sqrt(10),g=Math.sqrt(2);function m(e,t,n){var i=Math.abs(t-e)/Math.max(0,n),r=Math.pow(10,Math.floor(Math.log(i)/Math.LN10)),o=i/r;return o>=h?r*=10:o>=p?r*=5:o>=g&&(r*=2),t<e?-r:r}var y=function(e){return null===e?NaN:+e};function b(e,t,n=y){if(i=e.length){if((t=+t)<=0||i<2)return+n(e[0],0,e);if(t>=1)return+n(e[i-1],i-1,e);var i,r=(i-1)*t,o=Math.floor(r),a=+n(e[o],o,e);return a+(+n(e[o+1],o+1,e)-a)*(r-o)}}function v(e,t){let n;if(void 0===t)for(let t of e)null!=t&&t>=t&&(void 0===n||n<t)&&(n=t);else{let i=-1;for(let r of e)null!=(r=t(r,++i,e))&&r>=r&&(void 0===n||n<r)&&(n=r)}return n}function _(e,t){let n=0,i=0;if(void 0===t)for(let t of e)null!=t&&(t=+t)>=t&&(++n,i+=t);else{let r=-1;for(let o of e)null!=(o=t(o,++r,e))&&(o=+o)>=o&&(++n,i+=o)}if(n)return i/n}function x(e,t,n=0,r=e.length-1,o=i){for(;r>n;){if(r-n>600){const i=r-n+1,a=t-n+1,s=Math.log(i),l=.5*Math.exp(2*s/3),u=.5*Math.sqrt(s*l*(i-l)/i)*(a-i/2<0?-1:1);x(e,t,Math.max(n,Math.floor(t-a*l/i+u)),Math.min(r,Math.floor(t+(i-a)*l/i+u)),o)}const i=e[t];let a=n,s=r;for(w(e,n,t),o(e[r],i)>0&&w(e,n,r);a<s;){for(w(e,a,s),++a,--s;o(e[a],i)<0;)++a;for(;o(e[s],i)>0;)--s}0===o(e[n],i)?w(e,n,s):w(e,++s,r),s<=t&&(n=s+1),t<=s&&(r=s-1)}return e}function w(e,t,n){const i=e[t];e[t]=e[n],e[n]=i}var k=function(e,t){if(!(e=Float64Array.from(function*(e,t){if(void 0===t)for(let t of e)null!=t&&(t=+t)>=t&&(yield t);else{let n=-1;for(let i of e)null!=(i=t(i,++n,e))&&(i=+i)>=i&&(yield i)}}(e,t))).length)return;const n=e.length,i=n>>1;return x(e,i-1,0),0==(1&n)&&x(e,i,i),b(e,.5)};function D(e,t){let n;if(void 0===t)for(let t of e)null!=t&&t>=t&&(void 0===n||n>t)&&(n=t);else{let i=-1;for(let r of e)null!=(r=t(r,++i,e))&&r>=r&&(void 0===n||n>r)&&(n=r)}return n}var A=function(e,t){for(var n=t.length,i=new Array(n);n--;)i[n]=e[t[n]];return i};function O(e,t){let n=0;if(void 0===t)for(let t of e)(t=+t)&&(n+=t);else{let i=-1;for(let r of e)(r=+t(r,++i,e))&&(n+=r)}return n}n.d(t,"b",function(){return l}),n.d(t,"d",function(){return a}),n.d(t,"c",function(){return s}),n.d(t,"a",function(){return i}),n.d(t,"e",function(){return r}),n.d(t,"f",function(){return c}),n.d(t,"g",function(){return v}),n.d(t,"h",function(){return _}),n.d(t,"i",function(){return k}),n.d(t,"j",function(){return D}),n.d(t,"k",function(){return A}),n.d(t,"l",function(){return b}),n.d(t,"m",function(){return f}),n.d(t,"n",function(){return O}),n.d(t,"o",function(){return m}),n.d(t,"p",function(){return u})},69:function(e,t,n){"use strict";var i=function(e,t){return e<t?-1:e>t?1:e>=t?0:NaN},r=function(e){var t;return 1===e.length&&(t=e,e=function(e,n){return i(t(e),n)}),{left:function(t,n,i,r){for(null==i&&(i=0),null==r&&(r=t.length);i<r;){var o=i+r>>>1;e(t[o],n)<0?i=o+1:r=o}return i},right:function(t,n,i,r){for(null==i&&(i=0),null==r&&(r=t.length);i<r;){var o=i+r>>>1;e(t[o],n)>0?r=o:i=o+1}return i}}};var o=r(i),a=o.right,s=(o.left,a);var l=function(e){return null===e?NaN:+e},u=Array.prototype,c=(u.slice,u.map,Math.sqrt(50)),d=Math.sqrt(10),f=Math.sqrt(2),h=function(e,t,n){var i,r,o,a,s=-1;if(n=+n,(e=+e)===(t=+t)&&n>0)return[e];if((i=t<e)&&(r=e,e=t,t=r),0===(a=p(e,t,n))||!isFinite(a))return[];if(a>0)for(e=Math.ceil(e/a),t=Math.floor(t/a),o=new Array(r=Math.ceil(t-e+1));++s<r;)o[s]=(e+s)*a;else for(e=Math.floor(e*a),t=Math.ceil(t*a),o=new Array(r=Math.ceil(e-t+1));++s<r;)o[s]=(e-s)/a;return i&&o.reverse(),o};function p(e,t,n){var i=(t-e)/Math.max(0,n),r=Math.floor(Math.log(i)/Math.LN10),o=i/Math.pow(10,r);return r>=0?(o>=c?10:o>=d?5:o>=f?2:1)*Math.pow(10,r):-Math.pow(10,-r)/(o>=c?10:o>=d?5:o>=f?2:1)}function g(e,t,n){var i=Math.abs(t-e)/Math.max(0,n),r=Math.pow(10,Math.floor(Math.log(i)/Math.LN10)),o=i/r;return o>=c?r*=10:o>=d?r*=5:o>=f&&(r*=2),t<e?-r:r}var m=function(e,t,n){if(null==n&&(n=l),i=e.length){if((t=+t)<=0||i<2)return+n(e[0],0,e);if(t>=1)return+n(e[i-1],i-1,e);var i,r=(i-1)*t,o=Math.floor(r),a=+n(e[o],o,e);return a+(+n(e[o+1],o+1,e)-a)*(r-o)}};function y(e,t){switch(arguments.length){case 0:break;case 1:this.range(e);break;default:this.range(t).domain(e)}return this}function b(e,t){switch(arguments.length){case 0:break;case 1:this.interpolator(e);break;default:this.interpolator(t).domain(e)}return this}function v(){}function _(e,t){var n=new v;if(e instanceof v)e.each(function(e,t){n.set(t,e)});else if(Array.isArray(e)){var i,r=-1,o=e.length;if(null==t)for(;++r<o;)n.set(r,e[r]);else for(;++r<o;)n.set(t(i=e[r],r,e),i)}else if(e)for(var a in e)n.set(a,e[a]);return n}v.prototype=_.prototype={constructor:v,has:function(e){return"$"+e in this},get:function(e){return this["$"+e]},set:function(e,t){return this["$"+e]=t,this},remove:function(e){var t="$"+e;return t in this&&delete this[t]},clear:function(){for(var e in this)"$"===e[0]&&delete this[e]},keys:function(){var e=[];for(var t in this)"$"===t[0]&&e.push(t.slice(1));return e},values:function(){var e=[];for(var t in this)"$"===t[0]&&e.push(this[t]);return e},entries:function(){var e=[];for(var t in this)"$"===t[0]&&e.push({key:t.slice(1),value:this[t]});return e},size:function(){var e=0;for(var t in this)"$"===t[0]&&++e;return e},empty:function(){for(var e in this)if("$"===e[0])return!1;return!0},each:function(e){for(var t in this)"$"===t[0]&&e(this[t],t.slice(1),this)}};var x=_;function w(){}var k=x.prototype;function D(e,t){var n=new w;if(e instanceof w)e.each(function(e){n.add(e)});else if(e){var i=-1,r=e.length;if(null==t)for(;++i<r;)n.add(e[i]);else for(;++i<r;)n.add(t(e[i],i,e))}return n}w.prototype=D.prototype={constructor:w,has:k.has,add:function(e){return this["$"+(e+="")]=e,this},remove:k.remove,clear:k.clear,values:k.keys,size:k.size,empty:k.empty,each:k.each};var A=Array.prototype,O=A.map,C=A.slice,T={name:"implicit"};function S(){var e=x(),t=[],n=[],i=T;function r(r){var o=r+"",a=e.get(o);if(!a){if(i!==T)return i;e.set(o,a=t.push(r))}return n[(a-1)%n.length]}return r.domain=function(n){if(!arguments.length)return t.slice();t=[],e=x();for(var i,o,a=-1,s=n.length;++a<s;)e.has(o=(i=n[a])+"")||e.set(o,t.push(i));return r},r.range=function(e){return arguments.length?(n=C.call(e),r):n.slice()},r.unknown=function(e){return arguments.length?(i=e,r):i},r.copy=function(){return S(t,n).unknown(i)},y.apply(r,arguments),r}var F=n(143),j=function(e){return function(){return e}},E=function(e){return+e},$=[0,1];function M(e){return e}function z(e,t){return(t-=e=+e)?function(n){return(n-e)/t}:j(isNaN(t)?NaN:.5)}function N(e){var t,n=e[0],i=e[e.length-1];return n>i&&(t=n,n=i,i=t),function(e){return Math.max(n,Math.min(i,e))}}function B(e,t,n){var i=e[0],r=e[1],o=t[0],a=t[1];return r<i?(i=z(r,i),o=n(a,o)):(i=z(i,r),o=n(o,a)),function(e){return o(i(e))}}function P(e,t,n){var i=Math.min(e.length,t.length)-1,r=new Array(i),o=new Array(i),a=-1;for(e[i]<e[0]&&(e=e.slice().reverse(),t=t.slice().reverse());++a<i;)r[a]=z(e[a],e[a+1]),o[a]=n(t[a],t[a+1]);return function(t){var n=s(e,t,1,i)-1;return o[n](r[n](t))}}function I(e,t){return t.domain(e.domain()).range(e.range()).interpolate(e.interpolate()).clamp(e.clamp()).unknown(e.unknown())}function L(){var e,t,n,i,r,o,a=$,s=$,l=F.interpolate,u=M;function c(){return i=Math.min(a.length,s.length)>2?P:B,r=o=null,d}function d(t){return isNaN(t=+t)?n:(r||(r=i(a.map(e),s,l)))(e(u(t)))}return d.invert=function(n){return u(t((o||(o=i(s,a.map(e),F.interpolateNumber)))(n)))},d.domain=function(e){return arguments.length?(a=O.call(e,E),u===M||(u=N(a)),c()):a.slice()},d.range=function(e){return arguments.length?(s=C.call(e),c()):s.slice()},d.rangeRound=function(e){return s=C.call(e),l=F.interpolateRound,c()},d.clamp=function(e){return arguments.length?(u=e?N(a):M,d):u!==M},d.interpolate=function(e){return arguments.length?(l=e,c()):l},d.unknown=function(e){return arguments.length?(n=e,d):n},function(n,i){return e=n,t=i,c()}}function q(e,t){return L()(e,t)}var R=n(90),U=function(e,t,n,i){var r,o=g(e,t,n);switch((i=Object(R.c)(null==i?",f":i)).type){case"s":var a=Math.max(Math.abs(e),Math.abs(t));return null!=i.precision||isNaN(r=Object(R.e)(o,a))||(i.precision=r),Object(R.b)(i,a);case"":case"e":case"g":case"p":case"r":null!=i.precision||isNaN(r=Object(R.f)(o,Math.max(Math.abs(e),Math.abs(t))))||(i.precision=r-("e"===i.type));break;case"f":case"%":null!=i.precision||isNaN(r=Object(R.d)(o))||(i.precision=r-2*("%"===i.type))}return Object(R.a)(i)};function W(e){var t=e.domain;return e.ticks=function(e){var n=t();return h(n[0],n[n.length-1],null==e?10:e)},e.tickFormat=function(e,n){var i=t();return U(i[0],i[i.length-1],null==e?10:e,n)},e.nice=function(n){null==n&&(n=10);var i,r=t(),o=0,a=r.length-1,s=r[o],l=r[a];return l<s&&(i=s,s=l,l=i,i=o,o=a,a=i),(i=p(s,l,n))>0?i=p(s=Math.floor(s/i)*i,l=Math.ceil(l/i)*i,n):i<0&&(i=p(s=Math.ceil(s*i)/i,l=Math.floor(l*i)/i,n)),i>0?(r[o]=Math.floor(s/i)*i,r[a]=Math.ceil(l/i)*i,t(r)):i<0&&(r[o]=Math.ceil(s*i)/i,r[a]=Math.floor(l*i)/i,t(r)),e},e}function V(){var e=q(M,M);return e.copy=function(){return I(e,V())},y.apply(e,arguments),W(e)}function H(e){var t;function n(e){return isNaN(e=+e)?t:e}return n.invert=n,n.domain=n.range=function(t){return arguments.length?(e=O.call(t,E),n):e.slice()},n.unknown=function(e){return arguments.length?(t=e,n):t},n.copy=function(){return H(e).unknown(t)},e=arguments.length?O.call(e,E):[0,1],W(n)}var Y=function(e,t){var n,i=0,r=(e=e.slice()).length-1,o=e[i],a=e[r];return a<o&&(n=i,i=r,r=n,n=o,o=a,a=n),e[i]=t.floor(o),e[r]=t.ceil(a),e};function G(e){return Math.log(e)}function J(e){return Math.exp(e)}function X(e){return-Math.log(-e)}function Q(e){return-Math.exp(-e)}function K(e){return isFinite(e)?+("1e"+e):e<0?0:e}function Z(e){return function(t){return-e(-t)}}function ee(e){var t,n,i=e(G,J),r=i.domain,o=10;function a(){return t=function(e){return e===Math.E?Math.log:10===e&&Math.log10||2===e&&Math.log2||(e=Math.log(e),function(t){return Math.log(t)/e})}(o),n=function(e){return 10===e?K:e===Math.E?Math.exp:function(t){return Math.pow(e,t)}}(o),r()[0]<0?(t=Z(t),n=Z(n),e(X,Q)):e(G,J),i}return i.base=function(e){return arguments.length?(o=+e,a()):o},i.domain=function(e){return arguments.length?(r(e),a()):r()},i.ticks=function(e){var i,a=r(),s=a[0],l=a[a.length-1];(i=l<s)&&(f=s,s=l,l=f);var u,c,d,f=t(s),p=t(l),g=null==e?10:+e,m=[];if(!(o%1)&&p-f<g){if(f=Math.round(f)-1,p=Math.round(p)+1,s>0){for(;f<p;++f)for(c=1,u=n(f);c<o;++c)if(!((d=u*c)<s)){if(d>l)break;m.push(d)}}else for(;f<p;++f)for(c=o-1,u=n(f);c>=1;--c)if(!((d=u*c)<s)){if(d>l)break;m.push(d)}}else m=h(f,p,Math.min(p-f,g)).map(n);return i?m.reverse():m},i.tickFormat=function(e,r){if(null==r&&(r=10===o?".0e":","),"function"!=typeof r&&(r=Object(R.a)(r)),e===1/0)return r;null==e&&(e=10);var a=Math.max(1,o*e/i.ticks().length);return function(e){var i=e/n(Math.round(t(e)));return i*o<o-.5&&(i*=o),i<=a?r(e):""}},i.nice=function(){return r(Y(r(),{floor:function(e){return n(Math.floor(t(e)))},ceil:function(e){return n(Math.ceil(t(e)))}}))},i}function te(){var e=ee(L()).domain([1,10]);return e.copy=function(){return I(e,te()).base(e.base())},y.apply(e,arguments),e}function ne(e){return function(t){return Math.sign(t)*Math.log1p(Math.abs(t/e))}}function ie(e){return function(t){return Math.sign(t)*Math.expm1(Math.abs(t))*e}}function re(e){var t=1,n=e(ne(t),ie(t));return n.constant=function(n){return arguments.length?e(ne(t=+n),ie(t)):t},W(n)}function oe(){var e=re(L());return e.copy=function(){return I(e,oe()).constant(e.constant())},y.apply(e,arguments)}function ae(e){return function(t){return t<0?-Math.pow(-t,e):Math.pow(t,e)}}function se(e){return e<0?-Math.sqrt(-e):Math.sqrt(e)}function le(e){return e<0?-e*e:e*e}function ue(e){var t=e(M,M),n=1;return t.exponent=function(t){return arguments.length?1===(n=+t)?e(M,M):.5===n?e(se,le):e(ae(n),ae(1/n)):n},W(t)}function ce(){var e=ue(L());return e.copy=function(){return I(e,ce()).exponent(e.exponent())},y.apply(e,arguments),e}function de(){return ce.apply(null,arguments).exponent(.5)}function fe(){var e,t=[],n=[],r=[];function o(){var e=0,i=Math.max(1,n.length);for(r=new Array(i-1);++e<i;)r[e-1]=m(t,e/i);return a}function a(t){return isNaN(t=+t)?e:n[s(r,t)]}return a.invertExtent=function(e){var i=n.indexOf(e);return i<0?[NaN,NaN]:[i>0?r[i-1]:t[0],i<r.length?r[i]:t[t.length-1]]},a.domain=function(e){if(!arguments.length)return t.slice();t=[];for(var n,r=0,a=e.length;r<a;++r)null==(n=e[r])||isNaN(n=+n)||t.push(n);return t.sort(i),o()},a.range=function(e){return arguments.length?(n=C.call(e),o()):n.slice()},a.unknown=function(t){return arguments.length?(e=t,a):e},a.quantiles=function(){return r.slice()},a.copy=function(){return fe().domain(t).range(n).unknown(e)},y.apply(a,arguments)}function he(){var e,t=0,n=1,i=1,r=[.5],o=[0,1];function a(t){return t<=t?o[s(r,t,0,i)]:e}function l(){var e=-1;for(r=new Array(i);++e<i;)r[e]=((e+1)*n-(e-i)*t)/(i+1);return a}return a.domain=function(e){return arguments.length?(t=+e[0],n=+e[1],l()):[t,n]},a.range=function(e){return arguments.length?(i=(o=C.call(e)).length-1,l()):o.slice()},a.invertExtent=function(e){var a=o.indexOf(e);return a<0?[NaN,NaN]:a<1?[t,r[0]]:a>=i?[r[i-1],n]:[r[a-1],r[a]]},a.unknown=function(t){return arguments.length?(e=t,a):a},a.thresholds=function(){return r.slice()},a.copy=function(){return he().domain([t,n]).range(o).unknown(e)},y.apply(W(a),arguments)}function pe(){var e,t=[.5],n=[0,1],i=1;function r(r){return r<=r?n[s(t,r,0,i)]:e}return r.domain=function(e){return arguments.length?(t=C.call(e),i=Math.min(t.length,n.length-1),r):t.slice()},r.range=function(e){return arguments.length?(n=C.call(e),i=Math.min(t.length,n.length-1),r):n.slice()},r.invertExtent=function(e){var i=n.indexOf(e);return[t[i-1],t[i]]},r.unknown=function(t){return arguments.length?(e=t,r):e},r.copy=function(){return pe().domain(t).range(n).unknown(e)},y.apply(r,arguments)}var ge=n(33),me=n(122),ye=1e3,be=60*ye,ve=60*be,_e=24*ve,xe=7*_e,we=30*_e,ke=365*_e;function De(e){return new Date(e)}function Ae(e){return e instanceof Date?+e:+new Date(+e)}function Oe(e,t,n,i,o,a,s,l,u){var c=q(M,M),d=c.invert,f=c.domain,h=u(".%L"),p=u(":%S"),m=u("%I:%M"),y=u("%I %p"),b=u("%a %d"),v=u("%b %d"),_=u("%B"),x=u("%Y"),w=[[s,1,ye],[s,5,5*ye],[s,15,15*ye],[s,30,30*ye],[a,1,be],[a,5,5*be],[a,15,15*be],[a,30,30*be],[o,1,ve],[o,3,3*ve],[o,6,6*ve],[o,12,12*ve],[i,1,_e],[i,2,2*_e],[n,1,xe],[t,1,we],[t,3,3*we],[e,1,ke]];function k(r){return(s(r)<r?h:a(r)<r?p:o(r)<r?m:i(r)<r?y:t(r)<r?n(r)<r?b:v:e(r)<r?_:x)(r)}function D(t,n,i,o){if(null==t&&(t=10),"number"==typeof t){var a=Math.abs(i-n)/t,s=r(function(e){return e[2]}).right(w,a);s===w.length?(o=g(n/ke,i/ke,t),t=e):s?(o=(s=w[a/w[s-1][2]<w[s][2]/a?s-1:s])[1],t=s[0]):(o=Math.max(g(n,i,t),1),t=l)}return null==o?t:t.every(o)}return c.invert=function(e){return new Date(d(e))},c.domain=function(e){return arguments.length?f(O.call(e,Ae)):f().map(De)},c.ticks=function(e,t){var n,i=f(),r=i[0],o=i[i.length-1],a=o<r;return a&&(n=r,r=o,o=n),n=(n=D(e,r,o,t))?n.range(r,o+1):[],a?n.reverse():n},c.tickFormat=function(e,t){return null==t?k:u(t)},c.nice=function(e,t){var n=f();return(e=D(e,n[0],n[n.length-1],t))?f(Y(n,e)):c},c.copy=function(){return I(c,Oe(e,t,n,i,o,a,s,l,u))},c}var Ce=function(){return y.apply(Oe(ge.k,ge.f,ge.j,ge.a,ge.b,ge.d,ge.g,ge.c,me.a).domain([new Date(2e3,0,1),new Date(2e3,0,2)]),arguments)},Te=function(){return y.apply(Oe(ge.v,ge.q,ge.u,ge.l,ge.m,ge.o,ge.r,ge.n,me.c).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)]),arguments)};function Se(){var e,t,n,i,r,o=0,a=1,s=M,l=!1;function u(t){return isNaN(t=+t)?r:s(0===n?.5:(t=(i(t)-e)*n,l?Math.max(0,Math.min(1,t)):t))}return u.domain=function(r){return arguments.length?(e=i(o=+r[0]),t=i(a=+r[1]),n=e===t?0:1/(t-e),u):[o,a]},u.clamp=function(e){return arguments.length?(l=!!e,u):l},u.interpolator=function(e){return arguments.length?(s=e,u):s},u.unknown=function(e){return arguments.length?(r=e,u):r},function(r){return i=r,e=r(o),t=r(a),n=e===t?0:1/(t-e),u}}function Fe(e,t){return t.domain(e.domain()).interpolator(e.interpolator()).clamp(e.clamp()).unknown(e.unknown())}function je(){var e=W(Se()(M));return e.copy=function(){return Fe(e,je())},b.apply(e,arguments)}function Ee(){var e=ee(Se()).domain([1,10]);return e.copy=function(){return Fe(e,Ee()).base(e.base())},b.apply(e,arguments)}function $e(){var e=re(Se());return e.copy=function(){return Fe(e,$e()).constant(e.constant())},b.apply(e,arguments)}function Me(){var e=ue(Se());return e.copy=function(){return Fe(e,Me()).exponent(e.exponent())},b.apply(e,arguments)}function ze(){return Me.apply(null,arguments).exponent(.5)}function Ne(){var e,t,n,i,r,o,a,s=0,l=.5,u=1,c=M,d=!1;function f(e){return isNaN(e=+e)?a:(e=.5+((e=+o(e))-t)*(e<t?i:r),c(d?Math.max(0,Math.min(1,e)):e))}return f.domain=function(a){return arguments.length?(e=o(s=+a[0]),t=o(l=+a[1]),n=o(u=+a[2]),i=e===t?0:.5/(t-e),r=t===n?0:.5/(n-t),f):[s,l,u]},f.clamp=function(e){return arguments.length?(d=!!e,f):d},f.interpolator=function(e){return arguments.length?(c=e,f):c},f.unknown=function(e){return arguments.length?(a=e,f):a},function(a){return o=a,e=a(s),t=a(l),n=a(u),i=e===t?0:.5/(t-e),r=t===n?0:.5/(n-t),f}}function Be(){var e=W(Ne()(M));return e.copy=function(){return Fe(e,Be())},b.apply(e,arguments)}function Pe(){var e=ee(Ne()).domain([.1,1,10]);return e.copy=function(){return Fe(e,Pe()).base(e.base())},b.apply(e,arguments)}function Ie(){var e=re(Ne());return e.copy=function(){return Fe(e,Ie()).constant(e.constant())},b.apply(e,arguments)}function Le(){var e=ue(Ne());return e.copy=function(){return Fe(e,Le()).exponent(e.exponent())},b.apply(e,arguments)}function qe(){return Le.apply(null,arguments).exponent(.5)}n.d(t,"f",function(){return H}),n.d(t,"h",function(){return V}),n.d(t,"i",function(){return te}),n.d(t,"t",function(){return oe}),n.d(t,"j",function(){return S}),n.d(t,"g",function(){return T}),n.d(t,"k",function(){return ce}),n.d(t,"s",function(){return de}),n.d(t,"l",function(){return fe}),n.d(t,"m",function(){return he}),n.d(t,"u",function(){return pe}),n.d(t,"v",function(){return Ce}),n.d(t,"w",function(){return Te}),n.d(t,"n",function(){return je}),n.d(t,"o",function(){return Ee}),n.d(t,"p",function(){return Me}),n.d(t,"q",function(){return ze}),n.d(t,"r",function(){return $e}),n.d(t,"a",function(){return Be}),n.d(t,"b",function(){return Pe}),n.d(t,"c",function(){return Le}),n.d(t,"d",function(){return qe}),n.d(t,"e",function(){return Ie}),n.d(t,"x",function(){return U})},74:function(e,t,n){"use strict";var i=function(e,t,n){e.prototype=t.prototype=n,n.constructor=e};function r(e,t){var n=Object.create(e.prototype);for(var i in t)n[i]=t[i];return n}function o(){}var a="\\s*([+-]?\\d+)\\s*",s="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",l="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",u=/^#([0-9a-f]{3})$/,c=/^#([0-9a-f]{6})$/,d=new RegExp("^rgb\\("+[a,a,a]+"\\)$"),f=new RegExp("^rgb\\("+[l,l,l]+"\\)$"),h=new RegExp("^rgba\\("+[a,a,a,s]+"\\)$"),p=new RegExp("^rgba\\("+[l,l,l,s]+"\\)$"),g=new RegExp("^hsl\\("+[s,l,l]+"\\)$"),m=new RegExp("^hsla\\("+[s,l,l,s]+"\\)$"),y={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function b(e){var t;return e=(e+"").trim().toLowerCase(),(t=u.exec(e))?new k((t=parseInt(t[1],16))>>8&15|t>>4&240,t>>4&15|240&t,(15&t)<<4|15&t,1):(t=c.exec(e))?v(parseInt(t[1],16)):(t=d.exec(e))?new k(t[1],t[2],t[3],1):(t=f.exec(e))?new k(255*t[1]/100,255*t[2]/100,255*t[3]/100,1):(t=h.exec(e))?_(t[1],t[2],t[3],t[4]):(t=p.exec(e))?_(255*t[1]/100,255*t[2]/100,255*t[3]/100,t[4]):(t=g.exec(e))?A(t[1],t[2]/100,t[3]/100,1):(t=m.exec(e))?A(t[1],t[2]/100,t[3]/100,t[4]):y.hasOwnProperty(e)?v(y[e]):"transparent"===e?new k(NaN,NaN,NaN,0):null}function v(e){return new k(e>>16&255,e>>8&255,255&e,1)}function _(e,t,n,i){return i<=0&&(e=t=n=NaN),new k(e,t,n,i)}function x(e){return e instanceof o||(e=b(e)),e?new k((e=e.rgb()).r,e.g,e.b,e.opacity):new k}function w(e,t,n,i){return 1===arguments.length?x(e):new k(e,t,n,null==i?1:i)}function k(e,t,n,i){this.r=+e,this.g=+t,this.b=+n,this.opacity=+i}function D(e){return((e=Math.max(0,Math.min(255,Math.round(e)||0)))<16?"0":"")+e.toString(16)}function A(e,t,n,i){return i<=0?e=t=n=NaN:n<=0||n>=1?e=t=NaN:t<=0&&(e=NaN),new C(e,t,n,i)}function O(e,t,n,i){return 1===arguments.length?function(e){if(e instanceof C)return new C(e.h,e.s,e.l,e.opacity);if(e instanceof o||(e=b(e)),!e)return new C;if(e instanceof C)return e;var t=(e=e.rgb()).r/255,n=e.g/255,i=e.b/255,r=Math.min(t,n,i),a=Math.max(t,n,i),s=NaN,l=a-r,u=(a+r)/2;return l?(s=t===a?(n-i)/l+6*(n<i):n===a?(i-t)/l+2:(t-n)/l+4,l/=u<.5?a+r:2-a-r,s*=60):l=u>0&&u<1?0:s,new C(s,l,u,e.opacity)}(e):new C(e,t,n,null==i?1:i)}function C(e,t,n,i){this.h=+e,this.s=+t,this.l=+n,this.opacity=+i}function T(e,t,n){return 255*(e<60?t+(n-t)*e/60:e<180?n:e<240?t+(n-t)*(240-e)/60:t)}i(o,b,{displayable:function(){return this.rgb().displayable()},hex:function(){return this.rgb().hex()},toString:function(){return this.rgb()+""}}),i(k,w,r(o,{brighter:function(e){return e=null==e?1/.7:Math.pow(1/.7,e),new k(this.r*e,this.g*e,this.b*e,this.opacity)},darker:function(e){return e=null==e?.7:Math.pow(.7,e),new k(this.r*e,this.g*e,this.b*e,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},hex:function(){return"#"+D(this.r)+D(this.g)+D(this.b)},toString:function(){var e=this.opacity;return(1===(e=isNaN(e)?1:Math.max(0,Math.min(1,e)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===e?")":", "+e+")")}})),i(C,O,r(o,{brighter:function(e){return e=null==e?1/.7:Math.pow(1/.7,e),new C(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?.7:Math.pow(.7,e),new C(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=this.h%360+360*(this.h<0),t=isNaN(e)||isNaN(this.s)?0:this.s,n=this.l,i=n+(n<.5?n:1-n)*t,r=2*n-i;return new k(T(e>=240?e-240:e+120,r,i),T(e,r,i),T(e<120?e+240:e-120,r,i),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var S=Math.PI/180,F=180/Math.PI,j=.96422,E=1,$=.82521,M=4/29,z=6/29,N=3*z*z,B=z*z*z;function P(e){if(e instanceof L)return new L(e.l,e.a,e.b,e.opacity);if(e instanceof Y){if(isNaN(e.h))return new L(e.l,0,0,e.opacity);var t=e.h*S;return new L(e.l,Math.cos(t)*e.c,Math.sin(t)*e.c,e.opacity)}e instanceof k||(e=x(e));var n,i,r=W(e.r),o=W(e.g),a=W(e.b),s=q((.2225045*r+.7168786*o+.0606169*a)/E);return r===o&&o===a?n=i=s:(n=q((.4360747*r+.3850649*o+.1430804*a)/j),i=q((.0139322*r+.0971045*o+.7141733*a)/$)),new L(116*s-16,500*(n-s),200*(s-i),e.opacity)}function I(e,t,n,i){return 1===arguments.length?P(e):new L(e,t,n,null==i?1:i)}function L(e,t,n,i){this.l=+e,this.a=+t,this.b=+n,this.opacity=+i}function q(e){return e>B?Math.pow(e,1/3):e/N+M}function R(e){return e>z?e*e*e:N*(e-M)}function U(e){return 255*(e<=.0031308?12.92*e:1.055*Math.pow(e,1/2.4)-.055)}function W(e){return(e/=255)<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}function V(e){if(e instanceof Y)return new Y(e.h,e.c,e.l,e.opacity);if(e instanceof L||(e=P(e)),0===e.a&&0===e.b)return new Y(NaN,0,e.l,e.opacity);var t=Math.atan2(e.b,e.a)*F;return new Y(t<0?t+360:t,Math.sqrt(e.a*e.a+e.b*e.b),e.l,e.opacity)}function H(e,t,n,i){return 1===arguments.length?V(e):new Y(e,t,n,null==i?1:i)}function Y(e,t,n,i){this.h=+e,this.c=+t,this.l=+n,this.opacity=+i}i(L,I,r(o,{brighter:function(e){return new L(this.l+18*(null==e?1:e),this.a,this.b,this.opacity)},darker:function(e){return new L(this.l-18*(null==e?1:e),this.a,this.b,this.opacity)},rgb:function(){var e=(this.l+16)/116,t=isNaN(this.a)?e:e+this.a/500,n=isNaN(this.b)?e:e-this.b/200;return new k(U(3.1338561*(t=j*R(t))-1.6168667*(e=E*R(e))-.4906146*(n=$*R(n))),U(-.9787684*t+1.9161415*e+.033454*n),U(.0719453*t-.2289914*e+1.4052427*n),this.opacity)}})),i(Y,H,r(o,{brighter:function(e){return new Y(this.h,this.c,this.l+18*(null==e?1:e),this.opacity)},darker:function(e){return new Y(this.h,this.c,this.l-18*(null==e?1:e),this.opacity)},rgb:function(){return P(this).rgb()}}));var G=-.14861,J=1.78277,X=-.29227,Q=-.90649,K=1.97294,Z=K*Q,ee=K*J,te=J*X-Q*G;function ne(e,t,n,i){return 1===arguments.length?function(e){if(e instanceof ie)return new ie(e.h,e.s,e.l,e.opacity);e instanceof k||(e=x(e));var t=e.r/255,n=e.g/255,i=e.b/255,r=(te*i+Z*t-ee*n)/(te+Z-ee),o=i-r,a=(K*(n-r)-X*o)/Q,s=Math.sqrt(a*a+o*o)/(K*r*(1-r)),l=s?Math.atan2(a,o)*F-120:NaN;return new ie(l<0?l+360:l,s,r,e.opacity)}(e):new ie(e,t,n,null==i?1:i)}function ie(e,t,n,i){this.h=+e,this.s=+t,this.l=+n,this.opacity=+i}i(ie,ne,r(o,{brighter:function(e){return e=null==e?1/.7:Math.pow(1/.7,e),new ie(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?.7:Math.pow(.7,e),new ie(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=isNaN(this.h)?0:(this.h+120)*S,t=+this.l,n=isNaN(this.s)?0:this.s*t*(1-t),i=Math.cos(e),r=Math.sin(e);return new k(255*(t+n*(G*i+J*r)),255*(t+n*(X*i+Q*r)),255*(t+n*(K*i)),this.opacity)}})),n.d(t,"a",function(){return b}),n.d(t,"f",function(){return w}),n.d(t,"d",function(){return O}),n.d(t,"e",function(){return I}),n.d(t,"c",function(){return H}),n.d(t,"b",function(){return ne})},77:function(e,t,n){"use strict";var i=n(119),r=function(e){return function(){return e}},o=Math.abs,a=Math.atan2,s=Math.cos,l=Math.max,u=Math.min,c=Math.sin,d=Math.sqrt,f=1e-12,h=Math.PI,p=h/2,g=2*h;function m(e){return e>=1?p:e<=-1?-p:Math.asin(e)}function y(e){return e.innerRadius}function b(e){return e.outerRadius}function v(e){return e.startAngle}function _(e){return e.endAngle}function x(e){return e&&e.padAngle}function w(e,t,n,i,r,o,a){var s=e-n,u=t-i,c=(a?o:-o)/d(s*s+u*u),f=c*u,h=-c*s,p=e+f,g=t+h,m=n+f,y=i+h,b=(p+m)/2,v=(g+y)/2,_=m-p,x=y-g,w=_*_+x*x,k=r-o,D=p*y-m*g,A=(x<0?-1:1)*d(l(0,k*k*w-D*D)),O=(D*x-_*A)/w,C=(-D*_-x*A)/w,T=(D*x+_*A)/w,S=(-D*_+x*A)/w,F=O-b,j=C-v,E=T-b,$=S-v;return F*F+j*j>E*E+$*$&&(O=T,C=S),{cx:O,cy:C,x01:-f,y01:-h,x11:O*(r/k-1),y11:C*(r/k-1)}}var k=function(){var e=y,t=b,n=r(0),l=null,k=v,D=_,A=x,O=null;function C(){var r,y,b,v=+e.apply(this,arguments),_=+t.apply(this,arguments),x=k.apply(this,arguments)-p,C=D.apply(this,arguments)-p,T=o(C-x),S=C>x;if(O||(O=r=Object(i.a)()),_<v&&(y=_,_=v,v=y),_>f)if(T>g-f)O.moveTo(_*s(x),_*c(x)),O.arc(0,0,_,x,C,!S),v>f&&(O.moveTo(v*s(C),v*c(C)),O.arc(0,0,v,C,x,S));else{var F,j,E=x,$=C,M=x,z=C,N=T,B=T,P=A.apply(this,arguments)/2,I=P>f&&(l?+l.apply(this,arguments):d(v*v+_*_)),L=u(o(_-v)/2,+n.apply(this,arguments)),q=L,R=L;if(I>f){var U=m(I/v*c(P)),W=m(I/_*c(P));(N-=2*U)>f?(M+=U*=S?1:-1,z-=U):(N=0,M=z=(x+C)/2),(B-=2*W)>f?(E+=W*=S?1:-1,$-=W):(B=0,E=$=(x+C)/2)}var V=_*s(E),H=_*c(E),Y=v*s(z),G=v*c(z);if(L>f){var J,X=_*s($),Q=_*c($),K=v*s(M),Z=v*c(M);if(T<h&&(J=function(e,t,n,i,r,o,a,s){var l=n-e,u=i-t,c=a-r,d=s-o,h=d*l-c*u;if(!(h*h<f))return[e+(h=(c*(t-o)-d*(e-r))/h)*l,t+h*u]}(V,H,K,Z,X,Q,Y,G))){var ee=V-J[0],te=H-J[1],ne=X-J[0],ie=Q-J[1],re=1/c(((b=(ee*ne+te*ie)/(d(ee*ee+te*te)*d(ne*ne+ie*ie)))>1?0:b<-1?h:Math.acos(b))/2),oe=d(J[0]*J[0]+J[1]*J[1]);q=u(L,(v-oe)/(re-1)),R=u(L,(_-oe)/(re+1))}}B>f?R>f?(F=w(K,Z,V,H,_,R,S),j=w(X,Q,Y,G,_,R,S),O.moveTo(F.cx+F.x01,F.cy+F.y01),R<L?O.arc(F.cx,F.cy,R,a(F.y01,F.x01),a(j.y01,j.x01),!S):(O.arc(F.cx,F.cy,R,a(F.y01,F.x01),a(F.y11,F.x11),!S),O.arc(0,0,_,a(F.cy+F.y11,F.cx+F.x11),a(j.cy+j.y11,j.cx+j.x11),!S),O.arc(j.cx,j.cy,R,a(j.y11,j.x11),a(j.y01,j.x01),!S))):(O.moveTo(V,H),O.arc(0,0,_,E,$,!S)):O.moveTo(V,H),v>f&&N>f?q>f?(F=w(Y,G,X,Q,v,-q,S),j=w(V,H,K,Z,v,-q,S),O.lineTo(F.cx+F.x01,F.cy+F.y01),q<L?O.arc(F.cx,F.cy,q,a(F.y01,F.x01),a(j.y01,j.x01),!S):(O.arc(F.cx,F.cy,q,a(F.y01,F.x01),a(F.y11,F.x11),!S),O.arc(0,0,v,a(F.cy+F.y11,F.cx+F.x11),a(j.cy+j.y11,j.cx+j.x11),S),O.arc(j.cx,j.cy,q,a(j.y11,j.x11),a(j.y01,j.x01),!S))):O.arc(0,0,v,z,M,S):O.lineTo(Y,G)}else O.moveTo(0,0);if(O.closePath(),r)return O=null,r+""||null}return C.centroid=function(){var n=(+e.apply(this,arguments)+ +t.apply(this,arguments))/2,i=(+k.apply(this,arguments)+ +D.apply(this,arguments))/2-h/2;return[s(i)*n,c(i)*n]},C.innerRadius=function(t){return arguments.length?(e="function"==typeof t?t:r(+t),C):e},C.outerRadius=function(e){return arguments.length?(t="function"==typeof e?e:r(+e),C):t},C.cornerRadius=function(e){return arguments.length?(n="function"==typeof e?e:r(+e),C):n},C.padRadius=function(e){return arguments.length?(l=null==e?null:"function"==typeof e?e:r(+e),C):l},C.startAngle=function(e){return arguments.length?(k="function"==typeof e?e:r(+e),C):k},C.endAngle=function(e){return arguments.length?(D="function"==typeof e?e:r(+e),C):D},C.padAngle=function(e){return arguments.length?(A="function"==typeof e?e:r(+e),C):A},C.context=function(e){return arguments.length?(O=null==e?null:e,C):O},C};function D(e){this._context=e}D.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;default:this._context.lineTo(e,t)}}};var A=function(e){return new D(e)};function O(e){return e[0]}function C(e){return e[1]}var T=function(){var e=O,t=C,n=r(!0),o=null,a=A,s=null;function l(r){var l,u,c,d=r.length,f=!1;for(null==o&&(s=a(c=Object(i.a)())),l=0;l<=d;++l)!(l<d&&n(u=r[l],l,r))===f&&((f=!f)?s.lineStart():s.lineEnd()),f&&s.point(+e(u,l,r),+t(u,l,r));if(c)return s=null,c+""||null}return l.x=function(t){return arguments.length?(e="function"==typeof t?t:r(+t),l):e},l.y=function(e){return arguments.length?(t="function"==typeof e?e:r(+e),l):t},l.defined=function(e){return arguments.length?(n="function"==typeof e?e:r(!!e),l):n},l.curve=function(e){return arguments.length?(a=e,null!=o&&(s=a(o)),l):a},l.context=function(e){return arguments.length?(null==e?o=s=null:s=a(o=e),l):o},l},S=function(){var e=O,t=null,n=r(0),o=C,a=r(!0),s=null,l=A,u=null;function c(r){var c,d,f,h,p,g=r.length,m=!1,y=new Array(g),b=new Array(g);for(null==s&&(u=l(p=Object(i.a)())),c=0;c<=g;++c){if(!(c<g&&a(h=r[c],c,r))===m)if(m=!m)d=c,u.areaStart(),u.lineStart();else{for(u.lineEnd(),u.lineStart(),f=c-1;f>=d;--f)u.point(y[f],b[f]);u.lineEnd(),u.areaEnd()}m&&(y[c]=+e(h,c,r),b[c]=+n(h,c,r),u.point(t?+t(h,c,r):y[c],o?+o(h,c,r):b[c]))}if(p)return u=null,p+""||null}function d(){return T().defined(a).curve(l).context(s)}return c.x=function(n){return arguments.length?(e="function"==typeof n?n:r(+n),t=null,c):e},c.x0=function(t){return arguments.length?(e="function"==typeof t?t:r(+t),c):e},c.x1=function(e){return arguments.length?(t=null==e?null:"function"==typeof e?e:r(+e),c):t},c.y=function(e){return arguments.length?(n="function"==typeof e?e:r(+e),o=null,c):n},c.y0=function(e){return arguments.length?(n="function"==typeof e?e:r(+e),c):n},c.y1=function(e){return arguments.length?(o=null==e?null:"function"==typeof e?e:r(+e),c):o},c.lineX0=c.lineY0=function(){return d().x(e).y(n)},c.lineY1=function(){return d().x(e).y(o)},c.lineX1=function(){return d().x(t).y(n)},c.defined=function(e){return arguments.length?(a="function"==typeof e?e:r(!!e),c):a},c.curve=function(e){return arguments.length?(l=e,null!=s&&(u=l(s)),c):l},c.context=function(e){return arguments.length?(null==e?s=u=null:u=l(s=e),c):s},c};j(A);function F(e){this._curve=e}function j(e){function t(t){return new F(e(t))}return t._curve=e,t}F.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(e,t){this._curve.point(t*Math.sin(e),t*-Math.cos(e))}};Array.prototype.slice;var E={draw:function(e,t){var n=Math.sqrt(t/h);e.moveTo(n,0),e.arc(0,0,n,0,g)}},$=(Math.sqrt(1/3),Math.sin(h/10)/Math.sin(7*h/10)),M=(Math.sin(g/10),Math.cos(g/10),Math.sqrt(3),Math.sqrt(3),Math.sqrt(12),function(){var e=r(E),t=r(64),n=null;function o(){var r;if(n||(n=r=Object(i.a)()),e.apply(this,arguments).draw(n,+t.apply(this,arguments)),r)return n=null,r+""||null}return o.type=function(t){return arguments.length?(e="function"==typeof t?t:r(t),o):e},o.size=function(e){return arguments.length?(t="function"==typeof e?e:r(+e),o):t},o.context=function(e){return arguments.length?(n=null==e?null:e,o):n},o}),z=function(){};function N(e,t,n){e._context.bezierCurveTo((2*e._x0+e._x1)/3,(2*e._y0+e._y1)/3,(e._x0+2*e._x1)/3,(e._y0+2*e._y1)/3,(e._x0+4*e._x1+t)/6,(e._y0+4*e._y1+n)/6)}function B(e){this._context=e}B.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:N(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:N(this,e,t)}this._x0=this._x1,this._x1=e,this._y0=this._y1,this._y1=t}};var P=function(e){return new B(e)};function I(e){this._context=e}I.prototype={areaStart:z,areaEnd:z,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._x2=e,this._y2=t;break;case 1:this._point=2,this._x3=e,this._y3=t;break;case 2:this._point=3,this._x4=e,this._y4=t,this._context.moveTo((this._x0+4*this._x1+e)/6,(this._y0+4*this._y1+t)/6);break;default:N(this,e,t)}this._x0=this._x1,this._x1=e,this._y0=this._y1,this._y1=t}};var L=function(e){return new I(e)};function q(e){this._context=e}q.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var n=(this._x0+4*this._x1+e)/6,i=(this._y0+4*this._y1+t)/6;this._line?this._context.lineTo(n,i):this._context.moveTo(n,i);break;case 3:this._point=4;default:N(this,e,t)}this._x0=this._x1,this._x1=e,this._y0=this._y1,this._y1=t}};var R=function(e){return new q(e)};function U(e,t){this._basis=new B(e),this._beta=t}U.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var e=this._x,t=this._y,n=e.length-1;if(n>0)for(var i,r=e[0],o=t[0],a=e[n]-r,s=t[n]-o,l=-1;++l<=n;)i=l/n,this._basis.point(this._beta*e[l]+(1-this._beta)*(r+i*a),this._beta*t[l]+(1-this._beta)*(o+i*s));this._x=this._y=null,this._basis.lineEnd()},point:function(e,t){this._x.push(+e),this._y.push(+t)}};var W=function e(t){function n(e){return 1===t?new B(e):new U(e,t)}return n.beta=function(t){return e(+t)},n}(.85);function V(e,t,n){e._context.bezierCurveTo(e._x1+e._k*(e._x2-e._x0),e._y1+e._k*(e._y2-e._y0),e._x2+e._k*(e._x1-t),e._y2+e._k*(e._y1-n),e._x2,e._y2)}function H(e,t){this._context=e,this._k=(1-t)/6}H.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:V(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2,this._x1=e,this._y1=t;break;case 2:this._point=3;default:V(this,e,t)}this._x0=this._x1,this._x1=this._x2,this._x2=e,this._y0=this._y1,this._y1=this._y2,this._y2=t}};var Y=function e(t){function n(e){return new H(e,t)}return n.tension=function(t){return e(+t)},n}(0);function G(e,t){this._context=e,this._k=(1-t)/6}G.prototype={areaStart:z,areaEnd:z,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._x3=e,this._y3=t;break;case 1:this._point=2,this._context.moveTo(this._x4=e,this._y4=t);break;case 2:this._point=3,this._x5=e,this._y5=t;break;default:V(this,e,t)}this._x0=this._x1,this._x1=this._x2,this._x2=e,this._y0=this._y1,this._y1=this._y2,this._y2=t}};var J=function e(t){function n(e){return new G(e,t)}return n.tension=function(t){return e(+t)},n}(0);function X(e,t){this._context=e,this._k=(1-t)/6}X.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:V(this,e,t)}this._x0=this._x1,this._x1=this._x2,this._x2=e,this._y0=this._y1,this._y1=this._y2,this._y2=t}};var Q=function e(t){function n(e){return new X(e,t)}return n.tension=function(t){return e(+t)},n}(0);function K(e,t,n){var i=e._x1,r=e._y1,o=e._x2,a=e._y2;if(e._l01_a>f){var s=2*e._l01_2a+3*e._l01_a*e._l12_a+e._l12_2a,l=3*e._l01_a*(e._l01_a+e._l12_a);i=(i*s-e._x0*e._l12_2a+e._x2*e._l01_2a)/l,r=(r*s-e._y0*e._l12_2a+e._y2*e._l01_2a)/l}if(e._l23_a>f){var u=2*e._l23_2a+3*e._l23_a*e._l12_a+e._l12_2a,c=3*e._l23_a*(e._l23_a+e._l12_a);o=(o*u+e._x1*e._l23_2a-t*e._l12_2a)/c,a=(a*u+e._y1*e._l23_2a-n*e._l12_2a)/c}e._context.bezierCurveTo(i,r,o,a,e._x2,e._y2)}function Z(e,t){this._context=e,this._alpha=t}Z.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){if(e=+e,t=+t,this._point){var n=this._x2-e,i=this._y2-t;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+i*i,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;break;case 2:this._point=3;default:K(this,e,t)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=e,this._y0=this._y1,this._y1=this._y2,this._y2=t}};var ee=function e(t){function n(e){return t?new Z(e,t):new H(e,0)}return n.alpha=function(t){return e(+t)},n}(.5);function te(e,t){this._context=e,this._alpha=t}te.prototype={areaStart:z,areaEnd:z,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(e,t){if(e=+e,t=+t,this._point){var n=this._x2-e,i=this._y2-t;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+i*i,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=e,this._y3=t;break;case 1:this._point=2,this._context.moveTo(this._x4=e,this._y4=t);break;case 2:this._point=3,this._x5=e,this._y5=t;break;default:K(this,e,t)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=e,this._y0=this._y1,this._y1=this._y2,this._y2=t}};var ne=function e(t){function n(e){return t?new te(e,t):new G(e,0)}return n.alpha=function(t){return e(+t)},n}(.5);function ie(e,t){this._context=e,this._alpha=t}ie.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){if(e=+e,t=+t,this._point){var n=this._x2-e,i=this._y2-t;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+i*i,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:K(this,e,t)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=e,this._y0=this._y1,this._y1=this._y2,this._y2=t}};var re=function e(t){function n(e){return t?new ie(e,t):new X(e,0)}return n.alpha=function(t){return e(+t)},n}(.5);function oe(e){this._context=e}oe.prototype={areaStart:z,areaEnd:z,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(e,t){e=+e,t=+t,this._point?this._context.lineTo(e,t):(this._point=1,this._context.moveTo(e,t))}};var ae=function(e){return new oe(e)};function se(e){return e<0?-1:1}function le(e,t,n){var i=e._x1-e._x0,r=t-e._x1,o=(e._y1-e._y0)/(i||r<0&&-0),a=(n-e._y1)/(r||i<0&&-0),s=(o*r+a*i)/(i+r);return(se(o)+se(a))*Math.min(Math.abs(o),Math.abs(a),.5*Math.abs(s))||0}function ue(e,t){var n=e._x1-e._x0;return n?(3*(e._y1-e._y0)/n-t)/2:t}function ce(e,t,n){var i=e._x0,r=e._y0,o=e._x1,a=e._y1,s=(o-i)/3;e._context.bezierCurveTo(i+s,r+s*t,o-s,a-s*n,o,a)}function de(e){this._context=e}function fe(e){this._context=new he(e)}function he(e){this._context=e}function pe(e){return new de(e)}function ge(e){return new fe(e)}function me(e){this._context=e}function ye(e){var t,n,i=e.length-1,r=new Array(i),o=new Array(i),a=new Array(i);for(r[0]=0,o[0]=2,a[0]=e[0]+2*e[1],t=1;t<i-1;++t)r[t]=1,o[t]=4,a[t]=4*e[t]+2*e[t+1];for(r[i-1]=2,o[i-1]=7,a[i-1]=8*e[i-1]+e[i],t=1;t<i;++t)n=r[t]/o[t-1],o[t]-=n,a[t]-=n*a[t-1];for(r[i-1]=a[i-1]/o[i-1],t=i-2;t>=0;--t)r[t]=(a[t]-r[t+1])/o[t];for(o[i-1]=(e[i]+r[i-1])/2,t=0;t<i-1;++t)o[t]=2*e[t+1]-r[t+1];return[r,o]}de.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:ce(this,this._t0,ue(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){var n=NaN;if(t=+t,(e=+e)!==this._x1||t!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;break;case 2:this._point=3,ce(this,ue(this,n=le(this,e,t)),n);break;default:ce(this,this._t0,n=le(this,e,t))}this._x0=this._x1,this._x1=e,this._y0=this._y1,this._y1=t,this._t0=n}}},(fe.prototype=Object.create(de.prototype)).point=function(e,t){de.prototype.point.call(this,t,e)},he.prototype={moveTo:function(e,t){this._context.moveTo(t,e)},closePath:function(){this._context.closePath()},lineTo:function(e,t){this._context.lineTo(t,e)},bezierCurveTo:function(e,t,n,i,r,o){this._context.bezierCurveTo(t,e,i,n,o,r)}},me.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var e=this._x,t=this._y,n=e.length;if(n)if(this._line?this._context.lineTo(e[0],t[0]):this._context.moveTo(e[0],t[0]),2===n)this._context.lineTo(e[1],t[1]);else for(var i=ye(e),r=ye(t),o=0,a=1;a<n;++o,++a)this._context.bezierCurveTo(i[0][o],r[0][o],i[1][o],r[1][o],e[a],t[a]);(this._line||0!==this._line&&1===n)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(e,t){this._x.push(+e),this._y.push(+t)}};var be=function(e){return new me(e)};function ve(e,t){this._context=e,this._t=t}ve.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,t),this._context.lineTo(e,t);else{var n=this._x*(1-this._t)+e*this._t;this._context.lineTo(n,this._y),this._context.lineTo(n,t)}}this._x=e,this._y=t}};var _e=function(e){return new ve(e,.5)};function xe(e){return new ve(e,0)}function we(e){return new ve(e,1)}n.d(t,"a",function(){return k}),n.d(t,"b",function(){return S}),n.d(t,"u",function(){return T}),n.d(t,"v",function(){return M}),n.d(t,"d",function(){return L}),n.d(t,"e",function(){return R}),n.d(t,"c",function(){return P}),n.d(t,"f",function(){return W}),n.d(t,"h",function(){return J}),n.d(t,"i",function(){return Q}),n.d(t,"g",function(){return Y}),n.d(t,"k",function(){return ne}),n.d(t,"l",function(){return re}),n.d(t,"j",function(){return ee}),n.d(t,"n",function(){return ae}),n.d(t,"m",function(){return A}),n.d(t,"o",function(){return pe}),n.d(t,"p",function(){return ge}),n.d(t,"q",function(){return be}),n.d(t,"r",function(){return _e}),n.d(t,"s",function(){return we}),n.d(t,"t",function(){return xe})},82:function(e,t,n){"use strict";var i=function(){return new r};function r(){this.reset()}r.prototype={constructor:r,reset:function(){this.s=this.t=0},add:function(e){a(o,e,this.t),a(this,o.s,this.s),this.s?this.t+=o.t:this.s=o.t},valueOf:function(){return this.s}};var o=new r;function a(e,t,n){var i=e.s=t+n,r=i-t,o=i-r;e.t=t-o+(n-r)}var s=1e-6,l=Math.PI,u=l/2,c=l/4,d=2*l,f=180/l,h=l/180,p=Math.abs,g=Math.atan,m=Math.atan2,y=Math.cos,b=Math.ceil,v=Math.exp,_=(Math.floor,Math.log),x=Math.pow,w=Math.sin,k=Math.sign||function(e){return e>0?1:e<0?-1:0},D=Math.sqrt,A=Math.tan;function O(e){return e>1?0:e<-1?l:Math.acos(e)}function C(e){return e>1?u:e<-1?-u:Math.asin(e)}function T(){}function S(e,t){e&&j.hasOwnProperty(e.type)&&j[e.type](e,t)}var F={Feature:function(e,t){S(e.geometry,t)},FeatureCollection:function(e,t){for(var n=e.features,i=-1,r=n.length;++i<r;)S(n[i].geometry,t)}},j={Sphere:function(e,t){t.sphere()},Point:function(e,t){e=e.coordinates,t.point(e[0],e[1],e[2])},MultiPoint:function(e,t){for(var n=e.coordinates,i=-1,r=n.length;++i<r;)e=n[i],t.point(e[0],e[1],e[2])},LineString:function(e,t){E(e.coordinates,t,0)},MultiLineString:function(e,t){for(var n=e.coordinates,i=-1,r=n.length;++i<r;)E(n[i],t,0)},Polygon:function(e,t){$(e.coordinates,t)},MultiPolygon:function(e,t){for(var n=e.coordinates,i=-1,r=n.length;++i<r;)$(n[i],t)},GeometryCollection:function(e,t){for(var n=e.geometries,i=-1,r=n.length;++i<r;)S(n[i],t)}};function E(e,t,n){var i,r=-1,o=e.length-n;for(t.lineStart();++r<o;)i=e[r],t.point(i[0],i[1],i[2]);t.lineEnd()}function $(e,t){var n=-1,i=e.length;for(t.polygonStart();++n<i;)E(e[n],t,1);t.polygonEnd()}var M,z,N,B,P,I=function(e,t){e&&F.hasOwnProperty(e.type)?F[e.type](e,t):S(e,t)},L=i(),q=i(),R={point:T,lineStart:T,lineEnd:T,polygonStart:function(){L.reset(),R.lineStart=U,R.lineEnd=W},polygonEnd:function(){var e=+L;q.add(e<0?d+e:e),this.lineStart=this.lineEnd=this.point=T},sphere:function(){q.add(d)}};function U(){R.point=V}function W(){H(M,z)}function V(e,t){R.point=H,M=e,z=t,N=e*=h,B=y(t=(t*=h)/2+c),P=w(t)}function H(e,t){var n=(e*=h)-N,i=n>=0?1:-1,r=i*n,o=y(t=(t*=h)/2+c),a=w(t),s=P*a,l=B*o+s*y(r),u=s*i*w(r);L.add(m(u,l)),N=e,B=o,P=a}var Y=function(e){return q.reset(),I(e,R),2*q};function G(e){return[m(e[1],e[0]),C(e[2])]}function J(e){var t=e[0],n=e[1],i=y(n);return[i*y(t),i*w(t),w(n)]}function X(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function Q(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]}function K(e,t){e[0]+=t[0],e[1]+=t[1],e[2]+=t[2]}function Z(e,t){return[e[0]*t,e[1]*t,e[2]*t]}function ee(e){var t=D(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);e[0]/=t,e[1]/=t,e[2]/=t}var te,ne,ie,re,oe,ae,se,le,ue,ce,de=i(),fe={point:he,lineStart:ge,lineEnd:me,polygonStart:function(){fe.point=ye,fe.lineStart=be,fe.lineEnd=ve,de.reset(),R.polygonStart()},polygonEnd:function(){R.polygonEnd(),fe.point=he,fe.lineStart=ge,fe.lineEnd=me,L<0?(te=-(ie=180),ne=-(re=90)):de>s?re=90:de<-s&&(ne=-90),ce[0]=te,ce[1]=ie}};function he(e,t){ue.push(ce=[te=e,ie=e]),t<ne&&(ne=t),t>re&&(re=t)}function pe(e,t){var n=J([e*h,t*h]);if(le){var i=Q(le,n),r=Q([i[1],-i[0],0],i);ee(r),r=G(r);var o,a=e-oe,s=a>0?1:-1,l=r[0]*f*s,u=p(a)>180;u^(s*oe<l&&l<s*e)?(o=r[1]*f)>re&&(re=o):u^(s*oe<(l=(l+360)%360-180)&&l<s*e)?(o=-r[1]*f)<ne&&(ne=o):(t<ne&&(ne=t),t>re&&(re=t)),u?e<oe?_e(te,e)>_e(te,ie)&&(ie=e):_e(e,ie)>_e(te,ie)&&(te=e):ie>=te?(e<te&&(te=e),e>ie&&(ie=e)):e>oe?_e(te,e)>_e(te,ie)&&(ie=e):_e(e,ie)>_e(te,ie)&&(te=e)}else ue.push(ce=[te=e,ie=e]);t<ne&&(ne=t),t>re&&(re=t),le=n,oe=e}function ge(){fe.point=pe}function me(){ce[0]=te,ce[1]=ie,fe.point=he,le=null}function ye(e,t){if(le){var n=e-oe;de.add(p(n)>180?n+(n>0?360:-360):n)}else ae=e,se=t;R.point(e,t),pe(e,t)}function be(){R.lineStart()}function ve(){ye(ae,se),R.lineEnd(),p(de)>s&&(te=-(ie=180)),ce[0]=te,ce[1]=ie,le=null}function _e(e,t){return(t-=e)<0?t+360:t}function xe(e,t){return e[0]-t[0]}function we(e,t){return e[0]<=e[1]?e[0]<=t&&t<=e[1]:t<e[0]||e[1]<t}var ke,De,Ae,Oe,Ce,Te,Se,Fe,je,Ee,$e,Me,ze,Ne,Be,Pe,Ie=function(e){var t,n,i,r,o,a,s;if(re=ie=-(te=ne=1/0),ue=[],I(e,fe),n=ue.length){for(ue.sort(xe),t=1,o=[i=ue[0]];t<n;++t)we(i,(r=ue[t])[0])||we(i,r[1])?(_e(i[0],r[1])>_e(i[0],i[1])&&(i[1]=r[1]),_e(r[0],i[1])>_e(i[0],i[1])&&(i[0]=r[0])):o.push(i=r);for(a=-1/0,t=0,i=o[n=o.length-1];t<=n;i=r,++t)r=o[t],(s=_e(i[1],r[0]))>a&&(a=s,te=r[0],ie=i[1])}return ue=ce=null,te===1/0||ne===1/0?[[NaN,NaN],[NaN,NaN]]:[[te,ne],[ie,re]]},Le={sphere:T,point:qe,lineStart:Ue,lineEnd:He,polygonStart:function(){Le.lineStart=Ye,Le.lineEnd=Ge},polygonEnd:function(){Le.lineStart=Ue,Le.lineEnd=He}};function qe(e,t){e*=h;var n=y(t*=h);Re(n*y(e),n*w(e),w(t))}function Re(e,t,n){Ae+=(e-Ae)/++ke,Oe+=(t-Oe)/ke,Ce+=(n-Ce)/ke}function Ue(){Le.point=We}function We(e,t){e*=h;var n=y(t*=h);Ne=n*y(e),Be=n*w(e),Pe=w(t),Le.point=Ve,Re(Ne,Be,Pe)}function Ve(e,t){e*=h;var n=y(t*=h),i=n*y(e),r=n*w(e),o=w(t),a=m(D((a=Be*o-Pe*r)*a+(a=Pe*i-Ne*o)*a+(a=Ne*r-Be*i)*a),Ne*i+Be*r+Pe*o);De+=a,Te+=a*(Ne+(Ne=i)),Se+=a*(Be+(Be=r)),Fe+=a*(Pe+(Pe=o)),Re(Ne,Be,Pe)}function He(){Le.point=qe}function Ye(){Le.point=Je}function Ge(){Xe(Me,ze),Le.point=qe}function Je(e,t){Me=e,ze=t,e*=h,t*=h,Le.point=Xe;var n=y(t);Ne=n*y(e),Be=n*w(e),Pe=w(t),Re(Ne,Be,Pe)}function Xe(e,t){e*=h;var n=y(t*=h),i=n*y(e),r=n*w(e),o=w(t),a=Be*o-Pe*r,s=Pe*i-Ne*o,l=Ne*r-Be*i,u=D(a*a+s*s+l*l),c=C(u),d=u&&-c/u;je+=d*a,Ee+=d*s,$e+=d*l,De+=c,Te+=c*(Ne+(Ne=i)),Se+=c*(Be+(Be=r)),Fe+=c*(Pe+(Pe=o)),Re(Ne,Be,Pe)}var Qe=function(e){ke=De=Ae=Oe=Ce=Te=Se=Fe=je=Ee=$e=0,I(e,Le);var t=je,n=Ee,i=$e,r=t*t+n*n+i*i;return r<1e-12&&(t=Te,n=Se,i=Fe,De<s&&(t=Ae,n=Oe,i=Ce),(r=t*t+n*n+i*i)<1e-12)?[NaN,NaN]:[m(n,t)*f,C(i/D(r))*f]},Ke=function(e,t){function n(n,i){return n=e(n,i),t(n[0],n[1])}return e.invert&&t.invert&&(n.invert=function(n,i){return(n=t.invert(n,i))&&e.invert(n[0],n[1])}),n};function Ze(e,t){return[p(e)>l?e+Math.round(-e/d)*d:e,t]}function et(e,t,n){return(e%=d)?t||n?Ke(nt(e),it(t,n)):nt(e):t||n?it(t,n):Ze}function tt(e){return function(t,n){return[(t+=e)>l?t-d:t<-l?t+d:t,n]}}function nt(e){var t=tt(e);return t.invert=tt(-e),t}function it(e,t){var n=y(e),i=w(e),r=y(t),o=w(t);function a(e,t){var a=y(t),s=y(e)*a,l=w(e)*a,u=w(t),c=u*n+s*i;return[m(l*r-c*o,s*n-u*i),C(c*r+l*o)]}return a.invert=function(e,t){var a=y(t),s=y(e)*a,l=w(e)*a,u=w(t),c=u*r-l*o;return[m(l*r+u*o,s*n+c*i),C(c*n-s*i)]},a}Ze.invert=Ze;var rt=function(e){function t(t){return(t=e(t[0]*h,t[1]*h))[0]*=f,t[1]*=f,t}return e=et(e[0]*h,e[1]*h,e.length>2?e[2]*h:0),t.invert=function(t){return(t=e.invert(t[0]*h,t[1]*h))[0]*=f,t[1]*=f,t},t};function ot(e,t,n,i,r,o){if(n){var a=y(t),s=w(t),l=i*n;null==r?(r=t+i*d,o=t-l/2):(r=at(a,r),o=at(a,o),(i>0?r<o:r>o)&&(r+=i*d));for(var u,c=r;i>0?c>o:c<o;c-=l)u=G([a,-s*y(c),-s*w(c)]),e.point(u[0],u[1])}}function at(e,t){(t=J(t))[0]-=e,ee(t);var n=O(-t[1]);return((-t[2]<0?-n:n)+d-s)%d}var st=function(){var e,t=[];return{point:function(t,n){e.push([t,n])},lineStart:function(){t.push(e=[])},lineEnd:T,rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))},result:function(){var n=t;return t=[],e=null,n}}},lt=function(e,t){return p(e[0]-t[0])<s&&p(e[1]-t[1])<s};function ut(e,t,n,i){this.x=e,this.z=t,this.o=n,this.e=i,this.v=!1,this.n=this.p=null}var ct=function(e,t,n,i,r){var o,a,s=[],l=[];if(e.forEach(function(e){if(!((t=e.length-1)<=0)){var t,n,i=e[0],a=e[t];if(lt(i,a)){for(r.lineStart(),o=0;o<t;++o)r.point((i=e[o])[0],i[1]);r.lineEnd()}else s.push(n=new ut(i,e,null,!0)),l.push(n.o=new ut(i,null,n,!1)),s.push(n=new ut(a,e,null,!1)),l.push(n.o=new ut(a,null,n,!0))}}),s.length){for(l.sort(t),dt(s),dt(l),o=0,a=l.length;o<a;++o)l[o].e=n=!n;for(var u,c,d=s[0];;){for(var f=d,h=!0;f.v;)if((f=f.n)===d)return;u=f.z,r.lineStart();do{if(f.v=f.o.v=!0,f.e){if(h)for(o=0,a=u.length;o<a;++o)r.point((c=u[o])[0],c[1]);else i(f.x,f.n.x,1,r);f=f.n}else{if(h)for(u=f.p.z,o=u.length-1;o>=0;--o)r.point((c=u[o])[0],c[1]);else i(f.x,f.p.x,-1,r);f=f.p}u=(f=f.o).z,h=!h}while(!f.v);r.lineEnd()}}};function dt(e){if(t=e.length){for(var t,n,i=0,r=e[0];++i<t;)r.n=n=e[i],n.p=r,r=n;r.n=n=e[0],n.p=r}}var ft=i(),ht=function(e,t){var n=t[0],i=t[1],r=w(i),o=[w(n),-y(n),0],a=0,f=0;ft.reset(),1===r?i=u+s:-1===r&&(i=-u-s);for(var h=0,p=e.length;h<p;++h)if(b=(g=e[h]).length)for(var g,b,v=g[b-1],_=v[0],x=v[1]/2+c,k=w(x),D=y(x),A=0;A<b;++A,_=T,k=F,D=j,v=O){var O=g[A],T=O[0],S=O[1]/2+c,F=w(S),j=y(S),E=T-_,$=E>=0?1:-1,M=$*E,z=M>l,N=k*F;if(ft.add(m(N*$*w(M),D*j+N*y(M))),a+=z?E+$*d:E,z^_>=n^T>=n){var B=Q(J(v),J(O));ee(B);var P=Q(o,B);ee(P);var I=(z^E>=0?-1:1)*C(P[2]);(i>I||i===I&&(B[0]||B[1]))&&(f+=z^E>=0?1:-1)}}return(a<-s||a<s&&ft<-s)^1&f},pt=function(e,t){return e<t?-1:e>t?1:e>=t?0:NaN};var gt,mt;1===(gt=pt).length&&(mt=gt,gt=function(e,t){return pt(mt(e),t)});var yt=Array.prototype,bt=(yt.slice,yt.map,function(e,t,n){e=+e,t=+t,n=(r=arguments.length)<2?(t=e,e=0,1):r<3?1:+n;for(var i=-1,r=0|Math.max(0,Math.ceil((t-e)/n)),o=new Array(r);++i<r;)o[i]=e+i*n;return o});Math.sqrt(50),Math.sqrt(10),Math.sqrt(2);var vt=function(e){for(var t,n,i,r=e.length,o=-1,a=0;++o<r;)a+=e[o].length;for(n=new Array(a);--r>=0;)for(t=(i=e[r]).length;--t>=0;)n[--a]=i[t];return n};var _t=function(e,t,n,i){return function(r){var o,a,s,l=t(r),u=st(),c=t(u),d=!1,f={point:h,lineStart:g,lineEnd:m,polygonStart:function(){f.point=y,f.lineStart=b,f.lineEnd=v,a=[],o=[]},polygonEnd:function(){f.point=h,f.lineStart=g,f.lineEnd=m,a=vt(a);var e=ht(o,i);a.length?(d||(r.polygonStart(),d=!0),ct(a,wt,e,n,r)):e&&(d||(r.polygonStart(),d=!0),r.lineStart(),n(null,null,1,r),r.lineEnd()),d&&(r.polygonEnd(),d=!1),a=o=null},sphere:function(){r.polygonStart(),r.lineStart(),n(null,null,1,r),r.lineEnd(),r.polygonEnd()}};function h(t,n){e(t,n)&&r.point(t,n)}function p(e,t){l.point(e,t)}function g(){f.point=p,l.lineStart()}function m(){f.point=h,l.lineEnd()}function y(e,t){s.push([e,t]),c.point(e,t)}function b(){c.lineStart(),s=[]}function v(){y(s[0][0],s[0][1]),c.lineEnd();var e,t,n,i,l=c.clean(),f=u.result(),h=f.length;if(s.pop(),o.push(s),s=null,h)if(1&l){if((t=(n=f[0]).length-1)>0){for(d||(r.polygonStart(),d=!0),r.lineStart(),e=0;e<t;++e)r.point((i=n[e])[0],i[1]);r.lineEnd()}}else h>1&&2&l&&f.push(f.pop().concat(f.shift())),a.push(f.filter(xt))}return f}};function xt(e){return e.length>1}function wt(e,t){return((e=e.x)[0]<0?e[1]-u-s:u-e[1])-((t=t.x)[0]<0?t[1]-u-s:u-t[1])}var kt=_t(function(){return!0},function(e){var t,n=NaN,i=NaN,r=NaN;return{lineStart:function(){e.lineStart(),t=1},point:function(o,a){var c=o>0?l:-l,d=p(o-n);p(d-l)<s?(e.point(n,i=(i+a)/2>0?u:-u),e.point(r,i),e.lineEnd(),e.lineStart(),e.point(c,i),e.point(o,i),t=0):r!==c&&d>=l&&(p(n-r)<s&&(n-=r*s),p(o-c)<s&&(o-=c*s),i=function(e,t,n,i){var r,o,a=w(e-n);return p(a)>s?g((w(t)*(o=y(i))*w(n)-w(i)*(r=y(t))*w(e))/(r*o*a)):(t+i)/2}(n,i,o,a),e.point(r,i),e.lineEnd(),e.lineStart(),e.point(c,i),t=0),e.point(n=o,i=a),r=c},lineEnd:function(){e.lineEnd(),n=i=NaN},clean:function(){return 2-t}}},function(e,t,n,i){var r;if(null==e)r=n*u,i.point(-l,r),i.point(0,r),i.point(l,r),i.point(l,0),i.point(l,-r),i.point(0,-r),i.point(-l,-r),i.point(-l,0),i.point(-l,r);else if(p(e[0]-t[0])>s){var o=e[0]<t[0]?l:-l;r=n*o/2,i.point(-o,r),i.point(0,r),i.point(o,r)}else i.point(t[0],t[1])},[-l,-u]);var Dt=function(e){var t=y(e),n=6*h,i=t>0,r=p(t)>s;function o(e,n){return y(e)*y(n)>t}function a(e,n,i){var r=[1,0,0],o=Q(J(e),J(n)),a=X(o,o),u=o[0],c=a-u*u;if(!c)return!i&&e;var d=t*a/c,f=-t*u/c,h=Q(r,o),g=Z(r,d);K(g,Z(o,f));var m=h,y=X(g,m),b=X(m,m),v=y*y-b*(X(g,g)-1);if(!(v<0)){var _=D(v),x=Z(m,(-y-_)/b);if(K(x,g),x=G(x),!i)return x;var w,k=e[0],A=n[0],O=e[1],C=n[1];A<k&&(w=k,k=A,A=w);var T=A-k,S=p(T-l)<s;if(!S&&C<O&&(w=O,O=C,C=w),S||T<s?S?O+C>0^x[1]<(p(x[0]-k)<s?O:C):O<=x[1]&&x[1]<=C:T>l^(k<=x[0]&&x[0]<=A)){var F=Z(m,(-y+_)/b);return K(F,g),[x,G(F)]}}}function u(t,n){var r=i?e:l-e,o=0;return t<-r?o|=1:t>r&&(o|=2),n<-r?o|=4:n>r&&(o|=8),o}return _t(o,function(e){var t,n,c,d,f;return{lineStart:function(){d=c=!1,f=1},point:function(h,p){var g,m=[h,p],y=o(h,p),b=i?y?0:u(h,p):y?u(h+(h<0?l:-l),p):0;if(!t&&(d=c=y)&&e.lineStart(),y!==c&&(!(g=a(t,m))||lt(t,g)||lt(m,g))&&(m[0]+=s,m[1]+=s,y=o(m[0],m[1])),y!==c)f=0,y?(e.lineStart(),g=a(m,t),e.point(g[0],g[1])):(g=a(t,m),e.point(g[0],g[1]),e.lineEnd()),t=g;else if(r&&t&&i^y){var v;b&n||!(v=a(m,t,!0))||(f=0,i?(e.lineStart(),e.point(v[0][0],v[0][1]),e.point(v[1][0],v[1][1]),e.lineEnd()):(e.point(v[1][0],v[1][1]),e.lineEnd(),e.lineStart(),e.point(v[0][0],v[0][1])))}!y||t&&lt(t,m)||e.point(m[0],m[1]),t=m,c=y,n=b},lineEnd:function(){c&&e.lineEnd(),t=null},clean:function(){return f|(d&&c)<<1}}},function(t,i,r,o){ot(o,e,n,r,t,i)},i?[0,-e]:[-l,e-l])},At=function(e,t,n,i,r,o){var a,s=e[0],l=e[1],u=0,c=1,d=t[0]-s,f=t[1]-l;if(a=n-s,d||!(a>0)){if(a/=d,d<0){if(a<u)return;a<c&&(c=a)}else if(d>0){if(a>c)return;a>u&&(u=a)}if(a=r-s,d||!(a<0)){if(a/=d,d<0){if(a>c)return;a>u&&(u=a)}else if(d>0){if(a<u)return;a<c&&(c=a)}if(a=i-l,f||!(a>0)){if(a/=f,f<0){if(a<u)return;a<c&&(c=a)}else if(f>0){if(a>c)return;a>u&&(u=a)}if(a=o-l,f||!(a<0)){if(a/=f,f<0){if(a>c)return;a>u&&(u=a)}else if(f>0){if(a<u)return;a<c&&(c=a)}return u>0&&(e[0]=s+u*d,e[1]=l+u*f),c<1&&(t[0]=s+c*d,t[1]=l+c*f),!0}}}}},Ot=1e9,Ct=-Ot;function Tt(e,t,n,i){function r(r,o){return e<=r&&r<=n&&t<=o&&o<=i}function o(r,o,s,l){var c=0,d=0;if(null==r||(c=a(r,s))!==(d=a(o,s))||u(r,o)<0^s>0)do{l.point(0===c||3===c?e:n,c>1?i:t)}while((c=(c+s+4)%4)!==d);else l.point(o[0],o[1])}function a(i,r){return p(i[0]-e)<s?r>0?0:3:p(i[0]-n)<s?r>0?2:1:p(i[1]-t)<s?r>0?1:0:r>0?3:2}function l(e,t){return u(e.x,t.x)}function u(e,t){var n=a(e,1),i=a(t,1);return n!==i?n-i:0===n?t[1]-e[1]:1===n?e[0]-t[0]:2===n?e[1]-t[1]:t[0]-e[0]}return function(a){var s,u,c,d,f,h,p,g,m,y,b,v=a,_=st(),x={point:w,lineStart:function(){x.point=k,u&&u.push(c=[]);y=!0,m=!1,p=g=NaN},lineEnd:function(){s&&(k(d,f),h&&m&&_.rejoin(),s.push(_.result()));x.point=w,m&&v.lineEnd()},polygonStart:function(){v=_,s=[],u=[],b=!0},polygonEnd:function(){var t=function(){for(var t=0,n=0,r=u.length;n<r;++n)for(var o,a,s=u[n],l=1,c=s.length,d=s[0],f=d[0],h=d[1];l<c;++l)o=f,a=h,d=s[l],f=d[0],h=d[1],a<=i?h>i&&(f-o)*(i-a)>(h-a)*(e-o)&&++t:h<=i&&(f-o)*(i-a)<(h-a)*(e-o)&&--t;return t}(),n=b&&t,r=(s=vt(s)).length;(n||r)&&(a.polygonStart(),n&&(a.lineStart(),o(null,null,1,a),a.lineEnd()),r&&ct(s,l,t,o,a),a.polygonEnd());v=a,s=u=c=null}};function w(e,t){r(e,t)&&v.point(e,t)}function k(o,a){var s=r(o,a);if(u&&c.push([o,a]),y)d=o,f=a,h=s,y=!1,s&&(v.lineStart(),v.point(o,a));else if(s&&m)v.point(o,a);else{var l=[p=Math.max(Ct,Math.min(Ot,p)),g=Math.max(Ct,Math.min(Ot,g))],_=[o=Math.max(Ct,Math.min(Ot,o)),a=Math.max(Ct,Math.min(Ot,a))];At(l,_,e,t,n,i)?(m||(v.lineStart(),v.point(l[0],l[1])),v.point(_[0],_[1]),s||v.lineEnd(),b=!1):s&&(v.lineStart(),v.point(o,a),b=!1)}p=o,g=a,m=s}return x}}i();function St(e,t,n){var i=bt(e,t-s,n).concat(t);return function(e){return i.map(function(t){return[e,t]})}}function Ft(e,t,n){var i=bt(e,t-s,n).concat(t);return function(e){return i.map(function(t){return[t,e]})}}function jt(){var e,t,n,i,r,o,a,l,u,c,d,f,h=10,g=h,m=90,y=360,v=2.5;function _(){return{type:"MultiLineString",coordinates:x()}}function x(){return bt(b(i/m)*m,n,m).map(d).concat(bt(b(l/y)*y,a,y).map(f)).concat(bt(b(t/h)*h,e,h).filter(function(e){return p(e%m)>s}).map(u)).concat(bt(b(o/g)*g,r,g).filter(function(e){return p(e%y)>s}).map(c))}return _.lines=function(){return x().map(function(e){return{type:"LineString",coordinates:e}})},_.outline=function(){return{type:"Polygon",coordinates:[d(i).concat(f(a).slice(1),d(n).reverse().slice(1),f(l).reverse().slice(1))]}},_.extent=function(e){return arguments.length?_.extentMajor(e).extentMinor(e):_.extentMinor()},_.extentMajor=function(e){return arguments.length?(i=+e[0][0],n=+e[1][0],l=+e[0][1],a=+e[1][1],i>n&&(e=i,i=n,n=e),l>a&&(e=l,l=a,a=e),_.precision(v)):[[i,l],[n,a]]},_.extentMinor=function(n){return arguments.length?(t=+n[0][0],e=+n[1][0],o=+n[0][1],r=+n[1][1],t>e&&(n=t,t=e,e=n),o>r&&(n=o,o=r,r=n),_.precision(v)):[[t,o],[e,r]]},_.step=function(e){return arguments.length?_.stepMajor(e).stepMinor(e):_.stepMinor()},_.stepMajor=function(e){return arguments.length?(m=+e[0],y=+e[1],_):[m,y]},_.stepMinor=function(e){return arguments.length?(h=+e[0],g=+e[1],_):[h,g]},_.precision=function(s){return arguments.length?(v=+s,u=St(o,r,90),c=Ft(t,e,v),d=St(l,a,90),f=Ft(i,n,v),_):v},_.extentMajor([[-180,-90+s],[180,90-s]]).extentMinor([[-180,-80-s],[180,80+s]])}var Et,$t,Mt,zt,Nt=function(e){return e},Bt=i(),Pt=i(),It={point:T,lineStart:T,lineEnd:T,polygonStart:function(){It.lineStart=Lt,It.lineEnd=Ut},polygonEnd:function(){It.lineStart=It.lineEnd=It.point=T,Bt.add(p(Pt)),Pt.reset()},result:function(){var e=Bt/2;return Bt.reset(),e}};function Lt(){It.point=qt}function qt(e,t){It.point=Rt,Et=Mt=e,$t=zt=t}function Rt(e,t){Pt.add(zt*e-Mt*t),Mt=e,zt=t}function Ut(){Rt(Et,$t)}var Wt=It,Vt=1/0,Ht=Vt,Yt=-Vt,Gt=Yt;var Jt,Xt,Qt,Kt,Zt={point:function(e,t){e<Vt&&(Vt=e);e>Yt&&(Yt=e);t<Ht&&(Ht=t);t>Gt&&(Gt=t)},lineStart:T,lineEnd:T,polygonStart:T,polygonEnd:T,result:function(){var e=[[Vt,Ht],[Yt,Gt]];return Yt=Gt=-(Ht=Vt=1/0),e}},en=0,tn=0,nn=0,rn=0,on=0,an=0,sn=0,ln=0,un=0,cn={point:dn,lineStart:fn,lineEnd:gn,polygonStart:function(){cn.lineStart=mn,cn.lineEnd=yn},polygonEnd:function(){cn.point=dn,cn.lineStart=fn,cn.lineEnd=gn},result:function(){var e=un?[sn/un,ln/un]:an?[rn/an,on/an]:nn?[en/nn,tn/nn]:[NaN,NaN];return en=tn=nn=rn=on=an=sn=ln=un=0,e}};function dn(e,t){en+=e,tn+=t,++nn}function fn(){cn.point=hn}function hn(e,t){cn.point=pn,dn(Qt=e,Kt=t)}function pn(e,t){var n=e-Qt,i=t-Kt,r=D(n*n+i*i);rn+=r*(Qt+e)/2,on+=r*(Kt+t)/2,an+=r,dn(Qt=e,Kt=t)}function gn(){cn.point=dn}function mn(){cn.point=bn}function yn(){vn(Jt,Xt)}function bn(e,t){cn.point=vn,dn(Jt=Qt=e,Xt=Kt=t)}function vn(e,t){var n=e-Qt,i=t-Kt,r=D(n*n+i*i);rn+=r*(Qt+e)/2,on+=r*(Kt+t)/2,an+=r,sn+=(r=Kt*e-Qt*t)*(Qt+e),ln+=r*(Kt+t),un+=3*r,dn(Qt=e,Kt=t)}var _n=cn;function xn(e){this._context=e}xn.prototype={_radius:4.5,pointRadius:function(e){return this._radius=e,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(e,t){switch(this._point){case 0:this._context.moveTo(e,t),this._point=1;break;case 1:this._context.lineTo(e,t);break;default:this._context.moveTo(e+this._radius,t),this._context.arc(e,t,this._radius,0,d)}},result:T};var wn,kn,Dn,An,On,Cn=i(),Tn={point:T,lineStart:function(){Tn.point=Sn},lineEnd:function(){wn&&Fn(kn,Dn),Tn.point=T},polygonStart:function(){wn=!0},polygonEnd:function(){wn=null},result:function(){var e=+Cn;return Cn.reset(),e}};function Sn(e,t){Tn.point=Fn,kn=An=e,Dn=On=t}function Fn(e,t){An-=e,On-=t,Cn.add(D(An*An+On*On)),An=e,On=t}var jn=Tn;function En(){this._string=[]}function $n(e){return"m0,"+e+"a"+e+","+e+" 0 1,1 0,"+-2*e+"a"+e+","+e+" 0 1,1 0,"+2*e+"z"}En.prototype={_radius:4.5,_circle:$n(4.5),pointRadius:function(e){return(e=+e)!==this._radius&&(this._radius=e,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(e,t){switch(this._point){case 0:this._string.push("M",e,",",t),this._point=1;break;case 1:this._string.push("L",e,",",t);break;default:null==this._circle&&(this._circle=$n(this._radius)),this._string.push("M",e,",",t,this._circle)}},result:function(){if(this._string.length){var e=this._string.join("");return this._string=[],e}return null}};var Mn=function(e,t){var n,i,r=4.5;function o(e){return e&&("function"==typeof r&&i.pointRadius(+r.apply(this,arguments)),I(e,n(i))),i.result()}return o.area=function(e){return I(e,n(Wt)),Wt.result()},o.measure=function(e){return I(e,n(jn)),jn.result()},o.bounds=function(e){return I(e,n(Zt)),Zt.result()},o.centroid=function(e){return I(e,n(_n)),_n.result()},o.projection=function(t){return arguments.length?(n=null==t?(e=null,Nt):(e=t).stream,o):e},o.context=function(e){return arguments.length?(i=null==e?(t=null,new En):new xn(t=e),"function"!=typeof r&&i.pointRadius(r),o):t},o.pointRadius=function(e){return arguments.length?(r="function"==typeof e?e:(i.pointRadius(+e),+e),o):r},o.projection(e).context(t)};function zn(e){return function(t){var n=new Nn;for(var i in e)n[i]=e[i];return n.stream=t,n}}function Nn(){}function Bn(e,t,n){var i=e.clipExtent&&e.clipExtent();return e.scale(150).translate([0,0]),null!=i&&e.clipExtent(null),I(n,e.stream(Zt)),t(Zt.result()),null!=i&&e.clipExtent(i),e}function Pn(e,t,n){return Bn(e,function(n){var i=t[1][0]-t[0][0],r=t[1][1]-t[0][1],o=Math.min(i/(n[1][0]-n[0][0]),r/(n[1][1]-n[0][1])),a=+t[0][0]+(i-o*(n[1][0]+n[0][0]))/2,s=+t[0][1]+(r-o*(n[1][1]+n[0][1]))/2;e.scale(150*o).translate([a,s])},n)}function In(e,t,n){return Pn(e,[[0,0],t],n)}function Ln(e,t,n){return Bn(e,function(n){var i=+t,r=i/(n[1][0]-n[0][0]),o=(i-r*(n[1][0]+n[0][0]))/2,a=-r*n[0][1];e.scale(150*r).translate([o,a])},n)}function qn(e,t,n){return Bn(e,function(n){var i=+t,r=i/(n[1][1]-n[0][1]),o=-r*n[0][0],a=(i-r*(n[1][1]+n[0][1]))/2;e.scale(150*r).translate([o,a])},n)}Nn.prototype={constructor:Nn,point:function(e,t){this.stream.point(e,t)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var Rn=16,Un=y(30*h),Wn=function(e,t){return+t?function(e,t){function n(i,r,o,a,l,u,c,d,f,h,g,y,b,v){var _=c-i,x=d-r,w=_*_+x*x;if(w>4*t&&b--){var k=a+h,A=l+g,O=u+y,T=D(k*k+A*A+O*O),S=C(O/=T),F=p(p(O)-1)<s||p(o-f)<s?(o+f)/2:m(A,k),j=e(F,S),E=j[0],$=j[1],M=E-i,z=$-r,N=x*M-_*z;(N*N/w>t||p((_*M+x*z)/w-.5)>.3||a*h+l*g+u*y<Un)&&(n(i,r,o,a,l,u,E,$,F,k/=T,A/=T,O,b,v),v.point(E,$),n(E,$,F,k,A,O,c,d,f,h,g,y,b,v))}}return function(t){var i,r,o,a,s,l,u,c,d,f,h,p,g={point:m,lineStart:y,lineEnd:v,polygonStart:function(){t.polygonStart(),g.lineStart=_},polygonEnd:function(){t.polygonEnd(),g.lineStart=y}};function m(n,i){n=e(n,i),t.point(n[0],n[1])}function y(){c=NaN,g.point=b,t.lineStart()}function b(i,r){var o=J([i,r]),a=e(i,r);n(c,d,u,f,h,p,c=a[0],d=a[1],u=i,f=o[0],h=o[1],p=o[2],Rn,t),t.point(c,d)}function v(){g.point=m,t.lineEnd()}function _(){y(),g.point=x,g.lineEnd=w}function x(e,t){b(i=e,t),r=c,o=d,a=f,s=h,l=p,g.point=b}function w(){n(c,d,u,f,h,p,r,o,i,a,s,l,Rn,t),g.lineEnd=v,v()}return g}}(e,t):function(e){return zn({point:function(t,n){t=e(t,n),this.stream.point(t[0],t[1])}})}(e)};var Vn=zn({point:function(e,t){this.stream.point(e*h,t*h)}});function Hn(e,t,n,i){var r=y(i),o=w(i),a=r*e,s=o*e,l=r/e,u=o/e,c=(o*n-r*t)/e,d=(o*t+r*n)/e;function f(e,i){return[a*e-s*i+t,n-s*e-a*i]}return f.invert=function(e,t){return[l*e-u*t+c,d-u*e-l*t]},f}function Yn(e){return Gn(function(){return e})()}function Gn(e){var t,n,i,r,o,a,s,l,u,c,d=150,p=480,g=250,m=0,y=0,b=0,v=0,_=0,x=0,w=null,k=kt,A=null,O=Nt,C=.5;function T(e){return l(e[0]*h,e[1]*h)}function S(e){return(e=l.invert(e[0],e[1]))&&[e[0]*f,e[1]*f]}function F(){var e=Hn(d,0,0,x).apply(null,t(m,y)),i=(x?Hn:function(e,t,n){function i(i,r){return[t+e*i,n-e*r]}return i.invert=function(i,r){return[(i-t)/e,(n-r)/e]},i})(d,p-e[0],g-e[1],x);return n=et(b,v,_),s=Ke(t,i),l=Ke(n,s),a=Wn(s,C),j()}function j(){return u=c=null,T}return T.stream=function(e){return u&&c===e?u:u=Vn(function(e){return zn({point:function(t,n){var i=e(t,n);return this.stream.point(i[0],i[1])}})}(n)(k(a(O(c=e)))))},T.preclip=function(e){return arguments.length?(k=e,w=void 0,j()):k},T.postclip=function(e){return arguments.length?(O=e,A=i=r=o=null,j()):O},T.clipAngle=function(e){return arguments.length?(k=+e?Dt(w=e*h):(w=null,kt),j()):w*f},T.clipExtent=function(e){return arguments.length?(O=null==e?(A=i=r=o=null,Nt):Tt(A=+e[0][0],i=+e[0][1],r=+e[1][0],o=+e[1][1]),j()):null==A?null:[[A,i],[r,o]]},T.scale=function(e){return arguments.length?(d=+e,F()):d},T.translate=function(e){return arguments.length?(p=+e[0],g=+e[1],F()):[p,g]},T.center=function(e){return arguments.length?(m=e[0]%360*h,y=e[1]%360*h,F()):[m*f,y*f]},T.rotate=function(e){return arguments.length?(b=e[0]%360*h,v=e[1]%360*h,_=e.length>2?e[2]%360*h:0,F()):[b*f,v*f,_*f]},T.angle=function(e){return arguments.length?(x=e%360*h,F()):x*f},T.precision=function(e){return arguments.length?(a=Wn(s,C=e*e),j()):D(C)},T.fitExtent=function(e,t){return Pn(T,e,t)},T.fitSize=function(e,t){return In(T,e,t)},T.fitWidth=function(e,t){return Ln(T,e,t)},T.fitHeight=function(e,t){return qn(T,e,t)},function(){return t=e.apply(this,arguments),T.invert=t.invert&&S,F()}}function Jn(e){var t=0,n=l/3,i=Gn(e),r=i(t,n);return r.parallels=function(e){return arguments.length?i(t=e[0]*h,n=e[1]*h):[t*f,n*f]},r}function Xn(e,t){var n=w(e),i=(n+w(t))/2;if(p(i)<s)return function(e){var t=y(e);function n(e,n){return[e*t,w(n)/t]}return n.invert=function(e,n){return[e/t,C(n*t)]},n}(e);var r=1+n*(2*i-n),o=D(r)/i;function a(e,t){var n=D(r-2*i*w(t))/i;return[n*w(e*=i),o-n*y(e)]}return a.invert=function(e,t){var n=o-t;return[m(e,p(n))/i*k(n),C((r-(e*e+n*n)*i*i)/(2*i))]},a}var Qn=function(){return Jn(Xn).scale(155.424).center([0,33.6442])},Kn=function(){return Qn().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])};var Zn=function(){var e,t,n,i,r,o,a=Kn(),l=Qn().rotate([154,0]).center([-2,58.5]).parallels([55,65]),u=Qn().rotate([157,0]).center([-3,19.9]).parallels([8,18]),c={point:function(e,t){o=[e,t]}};function d(e){var t=e[0],a=e[1];return o=null,n.point(t,a),o||(i.point(t,a),o)||(r.point(t,a),o)}function f(){return e=t=null,d}return d.invert=function(e){var t=a.scale(),n=a.translate(),i=(e[0]-n[0])/t,r=(e[1]-n[1])/t;return(r>=.12&&r<.234&&i>=-.425&&i<-.214?l:r>=.166&&r<.234&&i>=-.214&&i<-.115?u:a).invert(e)},d.stream=function(n){return e&&t===n?e:(i=[a.stream(t=n),l.stream(n),u.stream(n)],r=i.length,e={point:function(e,t){for(var n=-1;++n<r;)i[n].point(e,t)},sphere:function(){for(var e=-1;++e<r;)i[e].sphere()},lineStart:function(){for(var e=-1;++e<r;)i[e].lineStart()},lineEnd:function(){for(var e=-1;++e<r;)i[e].lineEnd()},polygonStart:function(){for(var e=-1;++e<r;)i[e].polygonStart()},polygonEnd:function(){for(var e=-1;++e<r;)i[e].polygonEnd()}});var i,r},d.precision=function(e){return arguments.length?(a.precision(e),l.precision(e),u.precision(e),f()):a.precision()},d.scale=function(e){return arguments.length?(a.scale(e),l.scale(.35*e),u.scale(e),d.translate(a.translate())):a.scale()},d.translate=function(e){if(!arguments.length)return a.translate();var t=a.scale(),o=+e[0],d=+e[1];return n=a.translate(e).clipExtent([[o-.455*t,d-.238*t],[o+.455*t,d+.238*t]]).stream(c),i=l.translate([o-.307*t,d+.201*t]).clipExtent([[o-.425*t+s,d+.12*t+s],[o-.214*t-s,d+.234*t-s]]).stream(c),r=u.translate([o-.205*t,d+.212*t]).clipExtent([[o-.214*t+s,d+.166*t+s],[o-.115*t-s,d+.234*t-s]]).stream(c),f()},d.fitExtent=function(e,t){return Pn(d,e,t)},d.fitSize=function(e,t){return In(d,e,t)},d.fitWidth=function(e,t){return Ln(d,e,t)},d.fitHeight=function(e,t){return qn(d,e,t)},d.scale(1070)};function ei(e){return function(t,n){var i=y(t),r=y(n),o=e(i*r);return[o*r*w(t),o*w(n)]}}function ti(e){return function(t,n){var i=D(t*t+n*n),r=e(i),o=w(r),a=y(r);return[m(t*o,i*a),C(i&&n*o/i)]}}var ni=ei(function(e){return D(2/(1+e))});ni.invert=ti(function(e){return 2*C(e/2)});var ii=function(){return Yn(ni).scale(124.75).clipAngle(179.999)},ri=ei(function(e){return(e=O(e))&&e/w(e)});ri.invert=ti(function(e){return e});var oi=function(){return Yn(ri).scale(79.4188).clipAngle(179.999)};function ai(e,t){return[e,_(A((u+t)/2))]}ai.invert=function(e,t){return[e,2*g(v(t))-u]};var si=function(){return li(ai).scale(961/d)};function li(e){var t,n,i,r=Yn(e),o=r.center,a=r.scale,s=r.translate,u=r.clipExtent,c=null;function d(){var o=l*a(),s=r(rt(r.rotate()).invert([0,0]));return u(null==c?[[s[0]-o,s[1]-o],[s[0]+o,s[1]+o]]:e===ai?[[Math.max(s[0]-o,c),t],[Math.min(s[0]+o,n),i]]:[[c,Math.max(s[1]-o,t)],[n,Math.min(s[1]+o,i)]])}return r.scale=function(e){return arguments.length?(a(e),d()):a()},r.translate=function(e){return arguments.length?(s(e),d()):s()},r.center=function(e){return arguments.length?(o(e),d()):o()},r.clipExtent=function(e){return arguments.length?(null==e?c=t=n=i=null:(c=+e[0][0],t=+e[0][1],n=+e[1][0],i=+e[1][1]),d()):null==c?null:[[c,t],[n,i]]},d()}function ui(e){return A((u+e)/2)}function ci(e,t){var n=y(e),i=e===t?w(e):_(n/y(t))/_(ui(t)/ui(e)),r=n*x(ui(e),i)/i;if(!i)return ai;function o(e,t){r>0?t<-u+s&&(t=-u+s):t>u-s&&(t=u-s);var n=r/x(ui(t),i);return[n*w(i*e),r-n*y(i*e)]}return o.invert=function(e,t){var n=r-t,o=k(i)*D(e*e+n*n);return[m(e,p(n))/i*k(n),2*g(x(r/o,1/i))-u]},o}var di=function(){return Jn(ci).scale(109.5).parallels([30,30])};function fi(e,t){return[e,t]}fi.invert=fi;var hi=function(){return Yn(fi).scale(152.63)};function pi(e,t){var n=y(e),i=e===t?w(e):(n-y(t))/(t-e),r=n/i+e;if(p(i)<s)return fi;function o(e,t){var n=r-t,o=i*e;return[n*w(o),r-n*y(o)]}return o.invert=function(e,t){var n=r-t;return[m(e,p(n))/i*k(n),r-k(i)*D(e*e+n*n)]},o}var gi=function(){return Jn(pi).scale(131.154).center([0,13.9389])},mi=1.340264,yi=-.081106,bi=893e-6,vi=.003796,_i=D(3)/2;function xi(e,t){var n=C(_i*w(t)),i=n*n,r=i*i*i;return[e*y(n)/(_i*(mi+3*yi*i+r*(7*bi+9*vi*i))),n*(mi+yi*i+r*(bi+vi*i))]}xi.invert=function(e,t){for(var n,i=t,r=i*i,o=r*r*r,a=0;a<12&&(o=(r=(i-=n=(i*(mi+yi*r+o*(bi+vi*r))-t)/(mi+3*yi*r+o*(7*bi+9*vi*r)))*i)*r*r,!(p(n)<1e-12));++a);return[_i*e*(mi+3*yi*r+o*(7*bi+9*vi*r))/y(i),C(w(i)/_i)]};function wi(e,t){var n=y(t),i=y(e)*n;return[n*w(e)/i,w(t)/i]}wi.invert=ti(g);var ki=function(){return Yn(wi).scale(144.049).clipAngle(60)};function Di(e,t,n,i){return 1===e&&1===t&&0===n&&0===i?Nt:zn({point:function(r,o){this.stream.point(r*e+n,o*t+i)}})}var Ai=function(){var e,t,n,i,r,o,a=1,s=0,l=0,u=1,c=1,d=Nt,f=null,h=Nt;function p(){return i=r=null,o}return o={stream:function(e){return i&&r===e?i:i=d(h(r=e))},postclip:function(i){return arguments.length?(h=i,f=e=t=n=null,p()):h},clipExtent:function(i){return arguments.length?(h=null==i?(f=e=t=n=null,Nt):Tt(f=+i[0][0],e=+i[0][1],t=+i[1][0],n=+i[1][1]),p()):null==f?null:[[f,e],[t,n]]},scale:function(e){return arguments.length?(d=Di((a=+e)*u,a*c,s,l),p()):a},translate:function(e){return arguments.length?(d=Di(a*u,a*c,s=+e[0],l=+e[1]),p()):[s,l]},reflectX:function(e){return arguments.length?(d=Di(a*(u=e?-1:1),a*c,s,l),p()):u<0},reflectY:function(e){return arguments.length?(d=Di(a*u,a*(c=e?-1:1),s,l),p()):c<0},fitExtent:function(e,t){return Pn(o,e,t)},fitSize:function(e,t){return In(o,e,t)},fitWidth:function(e,t){return Ln(o,e,t)},fitHeight:function(e,t){return qn(o,e,t)}}};function Oi(e,t){var n=t*t,i=n*n;return[e*(.8707-.131979*n+i*(i*(.003971*n-.001529*i)-.013791)),t*(1.007226+n*(.015085+i*(.028874*n-.044475-.005916*i)))]}Oi.invert=function(e,t){var n,i=t,r=25;do{var o=i*i,a=o*o;i-=n=(i*(1.007226+o*(.015085+a*(.028874*o-.044475-.005916*a)))-t)/(1.007226+o*(.045255+a*(.259866*o-.311325-.005916*11*a)))}while(p(n)>s&&--r>0);return[e/(.8707+(o=i*i)*(o*(o*o*o*(.003971-.001529*o)-.013791)-.131979)),i]};var Ci=function(){return Yn(Oi).scale(175.295)};function Ti(e,t){return[y(t)*w(e),w(t)]}Ti.invert=ti(C);var Si=function(){return Yn(Ti).scale(249.5).clipAngle(90+s)};function Fi(e,t){var n=y(t),i=1+y(e)*n;return[n*w(e)/i,w(t)/i]}Fi.invert=ti(function(e){return 2*g(e)});var ji=function(){return Yn(Fi).scale(250).clipAngle(142)};function Ei(e,t){return[_(A((u+t)/2)),-e]}Ei.invert=function(e,t){return[-t,2*g(v(e))-u]};var $i=function(){var e=li(Ei),t=e.center,n=e.rotate;return e.center=function(e){return arguments.length?t([-e[1],e[0]]):[(e=t())[1],-e[0]]},e.rotate=function(e){return arguments.length?n([e[0],e[1],e.length>2?e[2]+90:90]):[(e=n())[0],e[1],e[2]-90]},n([0,0,90]).scale(159.155)};n.d(t,"c",function(){return Y}),n.d(t,"f",function(){return Ie}),n.d(t,"g",function(){return Qe}),n.d(t,"m",function(){return jt}),n.d(t,"r",function(){return Mn}),n.d(t,"a",function(){return Kn}),n.d(t,"b",function(){return Zn}),n.d(t,"d",function(){return ii}),n.d(t,"e",function(){return oi}),n.d(t,"h",function(){return di}),n.d(t,"i",function(){return Qn}),n.d(t,"j",function(){return gi}),n.d(t,"k",function(){return hi}),n.d(t,"l",function(){return ki}),n.d(t,"n",function(){return Ai}),n.d(t,"o",function(){return si}),n.d(t,"p",function(){return Ci}),n.d(t,"q",function(){return Si}),n.d(t,"s",function(){return ji}),n.d(t,"t",function(){return $i})},90:function(e,t,n){"use strict";var i=function(e,t){if((n=(e=t?e.toExponential(t-1):e.toExponential()).indexOf("e"))<0)return null;var n,i=e.slice(0,n);return[i.length>1?i[0]+i.slice(2):i,+e.slice(n+1)]},r=function(e){return(e=i(Math.abs(e)))?e[1]:NaN},o=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function a(e){return new s(e)}function s(e){if(!(t=o.exec(e)))throw new Error("invalid format: "+e);var t;this.fill=t[1]||" ",this.align=t[2]||">",this.sign=t[3]||"-",this.symbol=t[4]||"",this.zero=!!t[5],this.width=t[6]&&+t[6],this.comma=!!t[7],this.precision=t[8]&&+t[8].slice(1),this.trim=!!t[9],this.type=t[10]||""}a.prototype=s.prototype,s.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var l,u,c,d,f=function(e){e:for(var t,n=e.length,i=1,r=-1;i<n;++i)switch(e[i]){case".":r=t=i;break;case"0":0===r&&(r=i),t=i;break;default:if(r>0){if(!+e[i])break e;r=0}}return r>0?e.slice(0,r)+e.slice(t+1):e},h=function(e,t){var n=i(e,t);if(!n)return e+"";var r=n[0],o=n[1];return o<0?"0."+new Array(-o).join("0")+r:r.length>o+1?r.slice(0,o+1)+"."+r.slice(o+1):r+new Array(o-r.length+2).join("0")},p={"%":function(e,t){return(100*e).toFixed(t)},b:function(e){return Math.round(e).toString(2)},c:function(e){return e+""},d:function(e){return Math.round(e).toString(10)},e:function(e,t){return e.toExponential(t)},f:function(e,t){return e.toFixed(t)},g:function(e,t){return e.toPrecision(t)},o:function(e){return Math.round(e).toString(8)},p:function(e,t){return h(100*e,t)},r:h,s:function(e,t){var n=i(e,t);if(!n)return e+"";var r=n[0],o=n[1],a=o-(l=3*Math.max(-8,Math.min(8,Math.floor(o/3))))+1,s=r.length;return a===s?r:a>s?r+new Array(a-s+1).join("0"):a>0?r.slice(0,a)+"."+r.slice(a):"0."+new Array(1-a).join("0")+i(e,Math.max(0,t+a-1))[0]},X:function(e){return Math.round(e).toString(16).toUpperCase()},x:function(e){return Math.round(e).toString(16)}},g=function(e){return e},m=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];u=function(e){var t,n,i=e.grouping&&e.thousands?(t=e.grouping,n=e.thousands,function(e,i){for(var r=e.length,o=[],a=0,s=t[0],l=0;r>0&&s>0&&(l+s+1>i&&(s=Math.max(1,i-l)),o.push(e.substring(r-=s,r+s)),!((l+=s+1)>i));)s=t[a=(a+1)%t.length];return o.reverse().join(n)}):g,o=e.currency,s=e.decimal,u=e.numerals?function(e){return function(t){return t.replace(/[0-9]/g,function(t){return e[+t]})}}(e.numerals):g,c=e.percent||"%";function d(e){var t=(e=a(e)).fill,n=e.align,r=e.sign,d=e.symbol,h=e.zero,g=e.width,y=e.comma,b=e.precision,v=e.trim,_=e.type;"n"===_?(y=!0,_="g"):p[_]||(null==b&&(b=12),v=!0,_="g"),(h||"0"===t&&"="===n)&&(h=!0,t="0",n="=");var x="$"===d?o[0]:"#"===d&&/[boxX]/.test(_)?"0"+_.toLowerCase():"",w="$"===d?o[1]:/[%p]/.test(_)?c:"",k=p[_],D=/[defgprs%]/.test(_);function A(e){var o,a,c,d=x,p=w;if("c"===_)p=k(e)+p,e="";else{var A=(e=+e)<0;if(e=k(Math.abs(e),b),v&&(e=f(e)),A&&0==+e&&(A=!1),d=(A?"("===r?r:"-":"-"===r||"("===r?"":r)+d,p=("s"===_?m[8+l/3]:"")+p+(A&&"("===r?")":""),D)for(o=-1,a=e.length;++o<a;)if(48>(c=e.charCodeAt(o))||c>57){p=(46===c?s+e.slice(o+1):e.slice(o))+p,e=e.slice(0,o);break}}y&&!h&&(e=i(e,1/0));var O=d.length+e.length+p.length,C=O<g?new Array(g-O+1).join(t):"";switch(y&&h&&(e=i(C+e,C.length?g-p.length:1/0),C=""),n){case"<":e=d+e+p+C;break;case"=":e=d+C+e+p;break;case"^":e=C.slice(0,O=C.length>>1)+d+e+p+C.slice(O);break;default:e=C+d+e+p}return u(e)}return b=null==b?6:/[gprs]/.test(_)?Math.max(1,Math.min(21,b)):Math.max(0,Math.min(20,b)),A.toString=function(){return e+""},A}return{format:d,formatPrefix:function(e,t){var n=d(((e=a(e)).type="f",e)),i=3*Math.max(-8,Math.min(8,Math.floor(r(t)/3))),o=Math.pow(10,-i),s=m[8+i/3];return function(e){return n(o*e)+s}}}}({decimal:".",thousands:",",grouping:[3],currency:["$",""]}),c=u.format,d=u.formatPrefix;var y=function(e){return Math.max(0,-r(Math.abs(e)))},b=function(e,t){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(r(t)/3)))-r(Math.abs(e)))},v=function(e,t){return e=Math.abs(e),t=Math.abs(t)-e,Math.max(0,r(t)-r(e))+1};n.d(t,"a",function(){return c}),n.d(t,"b",function(){return d}),n.d(t,"c",function(){return a}),n.d(t,"d",function(){return y}),n.d(t,"e",function(){return b}),n.d(t,"f",function(){return v})}}]);
//# sourceMappingURL=vega-lite.js.map